make[1]: Entering directory '/home/yso0488/projects/BenchmarksBitcodes/build/SPEC2017/benchmarks/nab_s'
ln -s /home/yso0488/projects/noelle/install/../src/runtime/Parallelizer_utils.cpp
mkdir -p include ; cd include ; ../download.sh "https://github.com/scampanoni/virgil.git" "threadpool" ;
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
clang++ "-DDEBUG" -Iinclude/threadpool/include -std=c++14 -emit-llvm -O3 -c Parallelizer_utils.cpp -o Parallelizer_utils.bc
llvm-link nab_s.bc Parallelizer_utils.bc -o baseline.bc
noelle-norm baseline.bc -o baseline.bc
opt -load /home/yso0488/projects/noelle/install/lib/libSvf.so -load /home/yso0488/projects/noelle/install/lib/libCudd.so -basicaa -mem2reg -simplifycfg -instcombine -tailcallelim -loop-simplify -lcssa -loop-unswitch -instcombine -loop-simplify -lcssa -indvars -loop-deletion -instcombine -indvars -break-constgeps -mergereturn baseline.bc -o baseline.bc
Bitcode is modified by SVF
llvm-dis baseline.bc
./inject_hotprofiler.sh baseline.bc baseline_prof.bc
clang++ -fprofile-instr-generate baseline_prof.bc -lm -lstdc++ -lpthread -o baseline_prof
cd test ; ./../baseline_prof `tail -n 1 ../run_test.sh | awk -Fnab_s '{print $2}'`; mv default.profraw ../ ;
nabmd hkrdenq 1930344093

Reading .pdb file (hkrdenq/hkrdenq.pdb)
Reading .prm file (hkrdenq/hkrdenq.prm)
title:
                                                                                
      iter    Total
ff:     0   -680.86
Initial energy is -680.8606420
Starting molecular dynamics with Born solvation energy...

      iter    Total
ff:     0   -680.86
ff:  1000   -647.23

...Done, md returns 0
      iter    Total
ff:     0   -198.97
Initial energy is -198.9739930
Starting molecular dynamics with in vaccuo non-bonded energy...

      iter    Total
ff:     0   -198.97
ff:  1000   -471.99

...Done, md returns 0
llvm-profdata merge default.profraw -output=output.prof
noelle-load -pgo-test-profile-file=output.prof -block-freq -pgo-instr-use -HotProfiler baseline.bc -o baseline_hotprofiled.bc
HotProfiler: Start
HotProfiler:   Total instructions = 6430207291
HotProfiler: Exit
llvm-dis baseline_hotprofiled.bc
noelle-meta-pdg-embed baseline_hotprofiled.bc -o baseline_with_metadata.bc
noelle-meta-clean baseline_hotprofiled.bc -o baseline_hotprofiled.bc
noelle-load -load /home/yso0488/projects/noelle/install/lib/CleanMetadata.so -CleanMetadata -clean-pdg-metadata=true baseline_hotprofiled.bc -o baseline_hotprofiled.bc
Clean PDG Metadata
noelle-load -PDGAnalysis -noelle-pdg-verbose=3 baseline_hotprofiled.bc -o baseline_with_metadata.bc
Start at WPAPass
Bitcode is not modified by SVF
End at WPAPass
start get PDG through getPDG()
Check if PDG has been embeded as metadata
Construct PDG from Analysis
Embed PDG as Metadata
end get PDG through getPDG()
llvm-dis baseline_with_metadata.bc
noelle-load -parallelization -heuristics -parallelizer -noelle-verbose=3 -dswp-force -noelle-disable-helix baseline_with_metadata.bc -o baseline_parallelized.bc
Start at WPAPass
Bitcode is not modified by SVF
End at WPAPass
HotProfiler: Start
HotProfiler:   Total instructions = 6438087985
HotProfiler: Exit
Parallelization at "runOnModule"
Start at WPAPass
End at WPAPass
HotProfiler: Start
HotProfiler:   Total instructions = 6438087985
HotProfiler: Exit
Parallelizer: Analyzing the module baseline_with_metadata.bc
Parallelizer: Filter out cold code
get PDG through getFunctionPDG(): NAB_mnext
start get PDG through getPDG()
Check if PDG has been embeded as metadata
Construct PDG from Metadata
end get PDG through getPDG()
Parallelizer:  Loop hotness = 3.914206e-08
Parallelizer:  Loop hotness = 7.766281e-10
Parallelizer:  Loop hotness = 7.766281e-10
get PDG through getFunctionPDG(): addresidue
Parallelizer:  Loop hotness = 6.523676e-09
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): addstrand
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): aexpr2rexpr
Parallelizer:  Loop hotness = 1.366865e-08
get PDG through getFunctionPDG(): buildkdtree
Parallelizer:  Loop hotness = 1.823152e-03
Parallelizer:  Loop hotness = 1.753906e-05
Parallelizer:  Loop hotness = 3.746895e-04
Parallelizer:  Loop hotness = 1.633423e-04
Parallelizer:  Loop hotness = 3.746895e-04
Parallelizer:  Loop hotness = 1.633423e-04
Parallelizer:  Loop hotness = 3.746895e-04
Parallelizer:  Loop hotness = 1.633423e-04
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): checkpoint
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): copyextbonds
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): copyresidue
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 1.529957e-07
Parallelizer:  Loop hotness = 2.465328e-06
get PDG through getFunctionPDG(): eangl
Parallelizer:  Loop hotness = 1.328511e-02
get PDG through getFunctionPDG(): ebond
Parallelizer:  Loop hotness = 3.087824e-03
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): ephi
Parallelizer:  Loop hotness = 4.083367e-02
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %490 = fmul fast double %482, %475, !pdg.inst.id !1319
To:	  %545 = phi double [ %531, %522 ], [ %516, %510 ], [ %505, %500 ], [ %496, %492 ], [ %490, %489 ], !pdg.inst.id !1391
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %531 = fmul fast double %530, %482, !pdg.inst.id !1367
To:	  %545 = phi double [ %531, %522 ], [ %516, %510 ], [ %505, %500 ], [ %496, %492 ], [ %490, %489 ], !pdg.inst.id !1391
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %496 = fmul fast double %482, %495, !pdg.inst.id !1356
To:	  %545 = phi double [ %531, %522 ], [ %516, %510 ], [ %505, %500 ], [ %496, %492 ], [ %490, %489 ], !pdg.inst.id !1391
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %505 = fmul fast double %502, %504, !pdg.inst.id !1409
To:	  %545 = phi double [ %531, %522 ], [ %516, %510 ], [ %505, %500 ], [ %496, %492 ], [ %490, %489 ], !pdg.inst.id !1391
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %516 = fmul fast double %482, %515, !pdg.inst.id !1363
To:	  %545 = phi double [ %531, %522 ], [ %516, %510 ], [ %505, %500 ], [ %496, %492 ], [ %490, %489 ], !pdg.inst.id !1391
RAW (must)
get PDG through getFunctionPDG(): gauss
Parallelizer:  Loop hotness = 1.893730e-06
get PDG through getFunctionPDG(): getpdb
Parallelizer:  Loop hotness = 2.795861e-06
Parallelizer:  Loop hotness = 4.073880e-06
Parallelizer:  Loop hotness = 7.496014e-07
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 6.548528e-07
Parallelizer:  Loop hotness = 9.319537e-10
get PDG through getFunctionPDG(): heapsort_pairs
Parallelizer:  Loop hotness = 1.327942e-02
Parallelizer:  Loop hotness = 9.244867e-03
Parallelizer:  Loop hotness = 6.058768e-02
Parallelizer:  Loop hotness = 5.123242e-02
get PDG through getFunctionPDG(): is_pattern
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): lbackref
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): ldissect
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): lslow
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): lstep
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): makebonds
Parallelizer:  Loop hotness = 7.719683e-08
Parallelizer:  Loop hotness = 1.599854e-08
Parallelizer:  Loop hotness = 6.539675e-06
Parallelizer:  Loop hotness = 3.522785e-06
Parallelizer:  Loop hotness = 2.362503e-06
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %120 = load i32, i32* %119, align 8, !tbaa !2194, !pdg.inst.id !368
To:	  %122 = phi i32 [ %120, %110 ], [ %85, %106 ], [ %85, %103 ], [ %85, %._crit_edge ], !pdg.inst.id !297
RAW (must)
get PDG through getFunctionPDG(): match_atom_pat
Parallelizer:  Loop hotness = 7.079742e-07
Parallelizer:  Loop hotness = 7.026931e-07
Parallelizer:  Loop hotness = 6.526783e-07
get PDG through getFunctionPDG(): match_res_pat
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): md
Parallelizer:  Loop hotness = 6.930629e-07
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 3.697992e-06
Parallelizer:  Loop hotness = 3.497933e-07
Parallelizer:  Loop hotness = 1.335800e-08
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 1.892487e-03
Parallelizer:  Loop hotness = 1.910505e-04
Parallelizer:  Loop hotness = 1.584321e-05
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 6.713173e-04
Parallelizer:  Loop hotness = 2.578405e-05
Parallelizer:  Loop hotness = 5.855776e-04
Parallelizer:  Loop hotness = 1.957103e-05
Parallelizer:  Loop hotness = 3.212134e-04
Parallelizer:  Loop hotness = 1.584321e-05
get PDG through getFunctionPDG(): mme34
Parallelizer:  Loop hotness = 1.921270e-01
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %368 = fsub fast double %306, %367, !pdg.inst.id !962
To:	  %373 = phi double [ %368, %363 ], [ %326, %337 ], !pdg.inst.id !1030
RAW (must)
Parallelizer:  Loop hotness = 1.909304e-01
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %368 = fsub fast double %306, %367, !pdg.inst.id !962
To:	  %373 = phi double [ %368, %363 ], [ %326, %337 ], !pdg.inst.id !1030
RAW (must)
Parallelizer:  Loop hotness = 1.749352e-04
Parallelizer:  Loop hotness = 1.964270e-01
Parallelizer:  Loop hotness = 1.324309e-03
Parallelizer:  Loop hotness = 1.926256e-01
Parallelizer:  Loop hotness = 2.552312e-01
Parallelizer:  Loop hotness = 2.536680e-01
Parallelizer:  Loop hotness = 1.914326e-04
Parallelizer:  Loop hotness = 1.338472e-05
Parallelizer:  Loop hotness = 3.473802e-04
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): mme_init
Parallelizer:  Loop hotness = 2.309692e-07
Parallelizer:  Loop hotness = 6.160214e-07
Parallelizer:  Loop hotness = 2.309692e-07
Parallelizer:  Loop hotness = 6.160214e-07
Parallelizer:  Loop hotness = 2.309692e-07
Parallelizer:  Loop hotness = 6.160214e-07
Parallelizer:  Loop hotness = 2.309692e-07
Parallelizer:  Loop hotness = 2.998716e-06
Parallelizer:  Loop hotness = 1.180164e-06
Parallelizer:  Loop hotness = 2.309692e-07
Parallelizer:  Loop hotness = 4.935316e-06
Parallelizer:  Loop hotness = 2.991882e-06
get PDG through getFunctionPDG(): nblist
Parallelizer:  Loop hotness = 5.710391e-06
Parallelizer:  Loop hotness = 4.486736e-06
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 1.585148e-04
Parallelizer:  Loop hotness = 1.176635e-04
Parallelizer:  Loop hotness = 7.926167e-04
Parallelizer:  Loop hotness = 6.925280e-04
Parallelizer:  Loop hotness = 1.967615e-04
Parallelizer:  Loop hotness = 1.539650e-04
Parallelizer:  Loop hotness = 8.372473e-04
Parallelizer:  Loop hotness = 7.333308e-04
Parallelizer:  Loop hotness = 1.960602e-04
Parallelizer:  Loop hotness = 1.532637e-04
Parallelizer:  Loop hotness = 8.274137e-04
Parallelizer:  Loop hotness = 7.234971e-04
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 6.419267e-03
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %.lcssa40 = phi i32 [ %789, %779 ], !pdg.inst.id !2214
To:	  %793 = phi i32 [ %768, %764 ], [ %.lcssa40, %.loopexit ], !pdg.inst.id !2169
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %794 = load i32, i32* %11, align 4, !tbaa !23624, !pdg.inst.id !249
To:	  %796 = phi i32 [ %761, %760 ], [ %794, %792 ], !pdg.inst.id !2157
RAW (must)
Parallelizer:  Loop hotness = 2.628129e-03
Parallelizer:  Loop hotness = 3.527359e-03
get PDG through getFunctionPDG(): nbond
Parallelizer:  Loop hotness = 5.248055e-04
Parallelizer:  Loop hotness = 1.718038e-01
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %230 = fsub fast double %229, %223, !pdg.inst.id !641
To:	  %254 = phi double [ %230, %213 ], [ %249, %232 ], !pdg.inst.id !654
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %249 = fsub fast double %248, %242, !pdg.inst.id !678
To:	  %254 = phi double [ %230, %213 ], [ %249, %232 ], !pdg.inst.id !654
RAW (must)
Parallelizer:  Loop hotness = 3.786786e-03
Parallelizer:  Loop hotness = 1.625769e-01
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %249 = fsub fast double %248, %242, !pdg.inst.id !678
To:	  %254 = phi double [ %230, %213 ], [ %249, %232 ], !pdg.inst.id !654
RAW (must)
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %230 = fsub fast double %229, %223, !pdg.inst.id !641
To:	  %254 = phi double [ %230, %213 ], [ %249, %232 ], !pdg.inst.id !654
RAW (must)
get PDG through getFunctionPDG(): p_b_symbol
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): p_bracket
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): p_bre
Parallelizer:  Loop hotness = 7.455630e-08
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): p_ere
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): pfind
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): preadln
Parallelizer:  Loop hotness = 1.748904e-05
get PDG through getFunctionPDG(): putxyzw
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): readparm
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.941570e-08
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 3.572489e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.640536e-09
Parallelizer:  Loop hotness = 1.522191e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 5.591722e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 5.591722e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.164942e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.164942e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 5.125745e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 6.492611e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 5.125745e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 4.426780e-08
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.281436e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.281436e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.741200e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.918271e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 4.403481e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.772562e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 8.895498e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 4.858585e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.549373e-06
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 1.941570e-08
Parallelizer:  Loop hotness = 1.941570e-08
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 3.272711e-07
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.889057e-07
Parallelizer:  Loop hotness = 3.106512e-10
Parallelizer:  Loop hotness = 2.598598e-07
Parallelizer:  Loop hotness = 4.970420e-08
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %3267 = fmul fast double %3266, %3262, !pdg.inst.id !6957
To:	  %3269 = phi double [ %3267, %3260 ], [ 0.000000e+00, %3255 ], [ 0.000000e+00, %._crit_edge71 ], !pdg.inst.id !6965
RAW (must)
Parallelizer:  Loop hotness = 2.405994e-07
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 1.731881e-07
Parallelizer:  Loop hotness = 1.332694e-06
Parallelizer:  Loop hotness = 6.411842e-07
Parallelizer:  Loop hotness = 1.086503e-06
Parallelizer:  Loop hotness = 7.628041e-07
Parallelizer:  Loop hotness = 3.850522e-07
get PDG through getFunctionPDG(): regcomp
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 1.269321e-06
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 5.156811e-08
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 1.863907e-08
Parallelizer:  Loop hotness = 3.727815e-09
Parallelizer:  Loop hotness = 3.727815e-09
Parallelizer:  Loop hotness = 2.609470e-08
get PDG through getFunctionPDG(): regexec
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 7.185363e-07
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): repeat
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %393 = add nsw i64 %392, %367, !pdg.inst.id !1055
To:	  %396 = phi i64 [ %30, %366 ], [ %393, %384 ], !pdg.inst.id !379
RAW (must)
get PDG through getFunctionPDG(): sbackref
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): sdissect
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): searchkdtree
Parallelizer:  Loop hotness = 3.403104e-02
get PDG through getFunctionPDG(): select_atoms
Parallelizer:  Loop hotness = 3.330181e-07
Parallelizer:  Loop hotness = 3.274264e-07
Parallelizer:  Loop hotness = 2.239795e-07
Parallelizer:  Loop hotness = 3.945271e-08
Parallelizer:  Loop hotness = 3.330181e-07
Parallelizer:  Loop hotness = 3.274264e-07
Parallelizer:  Loop hotness = 2.239795e-07
Parallelizer:  Loop hotness = 3.945271e-08
Parallelizer:  Loop hotness = 8.455927e-07
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 3.417164e-09
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 3.137577e-08
Parallelizer:  Loop hotness = 1.025149e-08
Parallelizer:  Loop hotness = 1.180475e-08
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 4.504443e-07
Parallelizer:  Loop hotness = 4.442313e-07
Parallelizer:  Loop hotness = 3.768200e-07
Parallelizer:  Loop hotness = 3.330181e-07
Parallelizer:  Loop hotness = 3.274264e-07
Parallelizer:  Loop hotness = 2.239795e-07
Parallelizer:  Loop hotness = 3.945271e-08
Parallelizer:  Loop hotness = 4.504443e-07
Parallelizer:  Loop hotness = 4.442313e-07
Parallelizer:  Loop hotness = 3.768200e-07
Parallelizer:  Loop hotness = 4.995272e-07
Parallelizer:  Loop hotness = 4.911396e-07
Parallelizer:  Loop hotness = 3.359693e-07
Parallelizer:  Loop hotness = 5.917906e-08
get PDG through getFunctionPDG(): set_belly_mask
Parallelizer:  Loop hotness = 7.558145e-07
Parallelizer:  Loop hotness = 7.499121e-07
Parallelizer:  Loop hotness = 6.933736e-07
Parallelizer:  Loop hotness = 5.865095e-07
Parallelizer:  Loop hotness = 6.461546e-07
Parallelizer:  Loop hotness = 1.593641e-06
Parallelizer:  Loop hotness = 1.003403e-06
Parallelizer:  Loop hotness = 3.463761e-07
Parallelizer:  Loop hotness = 5.140657e-06
Parallelizer:  Loop hotness = 2.634322e-06
Parallelizer:  Loop hotness = 2.145357e-06
Parallelizer:  Loop hotness = 1.331141e-06
get PDG through getFunctionPDG(): set_cons_mask
Parallelizer:  Loop hotness = 7.558145e-07
Parallelizer:  Loop hotness = 7.499121e-07
Parallelizer:  Loop hotness = 6.933736e-07
get PDG through getFunctionPDG(): setxyz_from_mol
Parallelizer:  Loop hotness = 6.385436e-07
Parallelizer:  Loop hotness = 6.359031e-07
Parallelizer:  Loop hotness = 6.163321e-07
get PDG through getFunctionPDG(): spec_genrand_int32
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 2.326622e-06
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %37 = load i64, i64* %36, align 8, !tbaa !577, !pdg.inst.id !123
To:	  %31 = phi i64 [ %26, %24 ], [ %37, %._crit_edge ], !pdg.inst.id !98
RAW (must)
Parallelizer:  Loop hotness = 4.059124e-06
SCCDAGNormalizer:  Unknown SCC with external loop carried dependence edge!
From:	  %57 = load i64, i64* %56, align 8, !tbaa !577, !pdg.inst.id !168
To:	  %51 = phi i64 [ %29, %27 ], [ %57, %._crit_edge1 ], !pdg.inst.id !103
RAW (must)
get PDG through getFunctionPDG(): spec_srand
Parallelizer:  Loop hotness = 1.016296e-06
get PDG through getFunctionPDG(): sslow
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
get PDG through getFunctionPDG(): sstep
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  Loop hotness = 0.000000e+00
Parallelizer:  There are 369 loops to parallelize
Parallelizer:    Function: "NAB_mnext"
Parallelizer:    Loop: "  %49 = icmp slt i64 %48, %46, !pdg.inst.id !142"
Parallelizer:      Hotness = 3.914206e-06 %
Parallelizer:    Function: "NAB_mnext"
Parallelizer:    Loop: "  %70 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %69, i64 0, i32 4, !pdg.inst.id !180"
Parallelizer:      Hotness = 7.766281e-08 %
Parallelizer:    Function: "NAB_mnext"
Parallelizer:    Loop: "  %10 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %9, i64 0, i32 5, !pdg.inst.id !59"
Parallelizer:      Hotness = 7.766281e-08 %
Parallelizer:    Function: "addresidue"
Parallelizer:    Loop: "  %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60"
Parallelizer:      Hotness = 6.523676e-07 %
Parallelizer:    Function: "addresidue"
Parallelizer:    Loop: "  %56 = load %struct.residue_t**, %struct.residue_t*** %38, align 8, !tbaa !1704, !pdg.inst.id !158"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "addresidue"
Parallelizer:    Loop: "  %92 = load %struct.residue_t**, %struct.residue_t*** %38, align 8, !tbaa !1704, !pdg.inst.id !156"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "addstrand"
Parallelizer:    Loop: "  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "addstrand"
Parallelizer:    Loop: "  %61 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %60, i64 0, i32 4, !pdg.inst.id !173"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "aexpr2rexpr"
Parallelizer:    Loop: "  %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49"
Parallelizer:      Hotness = 1.366865e-06 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %33 = srem i32 %26, %14, !pdg.inst.id !183"
Parallelizer:      Hotness = 1.823152e-01 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %120 = add nsw i64 %119, -1, !pdg.inst.id !542"
Parallelizer:      Hotness = 1.753906e-03 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %201 = getelementptr inbounds i32, i32* %1, i64 %198, !pdg.inst.id !61"
Parallelizer:      Hotness = 3.746895e-02 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %153 = getelementptr inbounds i32, i32* %1, i64 %150, !pdg.inst.id !59"
Parallelizer:      Hotness = 1.633423e-02 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %254 = getelementptr inbounds i32, i32* %2, i64 %251, !pdg.inst.id !73"
Parallelizer:      Hotness = 3.746895e-02 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %179 = getelementptr inbounds i32, i32* %2, i64 %176, !pdg.inst.id !71"
Parallelizer:      Hotness = 1.633423e-02 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %281 = getelementptr inbounds i32, i32* %31, i64 %278, !pdg.inst.id !297"
Parallelizer:      Hotness = 3.746895e-02 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %232 = getelementptr inbounds i32, i32* %31, i64 %229, !pdg.inst.id !299"
Parallelizer:      Hotness = 1.633423e-02 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %337 = getelementptr inbounds i32, i32* %30, i64 %334, !pdg.inst.id !285"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "buildkdtree"
Parallelizer:    Loop: "  %315 = getelementptr inbounds i32, i32* %30, i64 %312, !pdg.inst.id !287"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "checkpoint"
Parallelizer:    Loop: "  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "checkpoint"
Parallelizer:    Loop: "  %28 = icmp eq i8 %26, 37, !pdg.inst.id !137"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyextbonds"
Parallelizer:    Loop: "  %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %187 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %183, i64 %185, i32 0, i64 0, !pdg.inst.id !554"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %255 = getelementptr inbounds i32, i32* %224, i64 %253, !pdg.inst.id !653"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %392 = getelementptr inbounds i32, i32* %224, i64 %391, !pdg.inst.id !659"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %344 = getelementptr inbounds i32, i32* %228, i64 %341, !pdg.inst.id !682"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %399 = getelementptr inbounds i32, i32* %228, i64 %398, !pdg.inst.id !686"
Parallelizer:      Hotness = 1.529957e-05 %
Parallelizer:    Function: "copyresidue"
Parallelizer:    Loop: "  %413 = load %struct.atom_t*, %struct.atom_t** %410, align 8, !tbaa !25657, !pdg.inst.id !1101"
Parallelizer:      Hotness = 2.465328e-04 %
Parallelizer:    Function: "eangl"
Parallelizer:    Loop: "  %20 = getelementptr inbounds i32, i32* %1, i64 %16, !pdg.inst.id !51"
Parallelizer:      Hotness = 1.328511e+00 %
Parallelizer:    Function: "ebond"
Parallelizer:    Loop: "  %119 = getelementptr inbounds i32, i32* %1, i64 %117, !pdg.inst.id !52"
Parallelizer:      Hotness = 3.087824e-01 %
Parallelizer:    Function: "ebond"
Parallelizer:    Loop: "  %18 = getelementptr inbounds i32, i32* %1, i64 %15, !pdg.inst.id !50"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ephi"
Parallelizer:    Loop: "  %31 = getelementptr inbounds i32, i32* %1, i64 %22, !pdg.inst.id !53"
Parallelizer:      Hotness = 4.083367e+00 %
Parallelizer:    Function: "gauss"
Parallelizer:    Loop: "  %4 = tail call fast double @spec_rand() #48, !pdg.inst.id !43"
Parallelizer:      Hotness = 1.893730e-04 %
Parallelizer:    Function: "getpdb"
Parallelizer:    Loop: "  %69 = call noalias i8* @malloc(i64 8) #49, !pdg.inst.id !702"
Parallelizer:      Hotness = 2.795861e-04 %
Parallelizer:    Function: "getpdb"
Parallelizer:    Loop: "  %118 = call i64 @strlen(i8* nonnull %47) #48, !pdg.inst.id !154"
Parallelizer:      Hotness = 4.073880e-04 %
Parallelizer:    Function: "getpdb"
Parallelizer:    Loop: "  %140 = load i8, i8* %139, align 1, !tbaa !45280, !pdg.inst.id !394"
Parallelizer:      Hotness = 7.496014e-05 %
Parallelizer:    Function: "getpdb"
Parallelizer:    Loop: "  %156 = add nuw nsw i64 %155, 1, !pdg.inst.id !422"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "getpdb"
Parallelizer:    Loop: "  %183 = load i8, i8* %182, align 1, !tbaa !45280, !pdg.inst.id !476"
Parallelizer:      Hotness = 6.548528e-05 %
Parallelizer:    Function: "getpdb"
Parallelizer:    Loop: "  %276 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %275, i64 0, i32 0, !pdg.inst.id !780"
Parallelizer:      Hotness = 9.319537e-08 %
Parallelizer:    Function: "heapsort_pairs"
Parallelizer:    Loop: "  %12 = add nsw i64 %11, -1, !pdg.inst.id !95"
Parallelizer:      Hotness = 1.327942e+00 %
Parallelizer:    Function: "heapsort_pairs"
Parallelizer:    Loop: "  %20 = shl nsw i32 %19, 1, !pdg.inst.id !115"
Parallelizer:      Hotness = 9.244867e-01 %
Parallelizer:    Function: "heapsort_pairs"
Parallelizer:    Loop: "  %51 = load i32, i32* %0, align 4, !tbaa !590, !pdg.inst.id !66"
Parallelizer:      Hotness = 6.058768e+00 %
Parallelizer:    Function: "heapsort_pairs"
Parallelizer:    Loop: "  %61 = shl nsw i32 %60, 1, !pdg.inst.id !206"
Parallelizer:      Hotness = 5.123242e+00 %
Parallelizer:    Function: "is_pattern"
Parallelizer:    Loop: "  %20 = sext i8 %17 to i32, !pdg.inst.id !98"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "is_pattern"
Parallelizer:    Loop: "  %52 = sext i8 %49 to i32, !pdg.inst.id !167"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "is_pattern"
Parallelizer:    Loop: "  %81 = sext i8 %78 to i32, !pdg.inst.id !227"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lbackref"
Parallelizer:    Loop: "  br label %19, !pdg.inst.id !2830"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lbackref"
Parallelizer:    Loop: "  %22 = load %struct.re_guts*, %struct.re_guts** %7, align 8, !tbaa !3460, !pdg.inst.id !110"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lbackref"
Parallelizer:    Loop: "  %30 = getelementptr inbounds i64, i64* %24, i64 %28, !pdg.inst.id !194"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lbackref"
Parallelizer:    Loop: "  %193 = and i64 %192, 67108863, !pdg.inst.id !522"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lbackref"
Parallelizer:    Loop: "  %245 = getelementptr inbounds i64, i64* %212, i64 %244, !pdg.inst.id !603"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lbackref"
Parallelizer:    Loop: "  %292 = load %struct.re_guts*, %struct.re_guts** %7, align 8, !tbaa !3460, !pdg.inst.id !106"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %15 = load %struct.re_guts*, %struct.re_guts** %8, align 8, !tbaa !1723, !pdg.inst.id !109"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %27 = and i64 %25, 67108863, !pdg.inst.id !192"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %44 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %13, i8* %43, i64 %14, i64 %35), !pdg.inst.id !70"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %56 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %13, i8* %55, i64 %14, i64 %35), !pdg.inst.id !62"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %65 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %63, i8* %.lcssa28, i64 %61, i64 %34), !pdg.inst.id !58"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %75 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %13, i8* %74, i64 %14, i64 %35), !pdg.inst.id !56"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "ldissect"
Parallelizer:    Loop: "  %93 = add nsw i64 %92, 1, !pdg.inst.id !344"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lslow"
Parallelizer:    Loop: "  %34 = load i8*, i8** %28, align 8, !tbaa !1418, !pdg.inst.id !149"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lslow"
Parallelizer:    Loop: "  %85 = load %struct.re_guts*, %struct.re_guts** %21, align 8, !tbaa !1413, !pdg.inst.id !123"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lstep"
Parallelizer:    Loop: "  %24 = load i64*, i64** %10, align 8, !tbaa !3125, !pdg.inst.id !154"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "lstep"
Parallelizer:    Loop: "  %214 = and i64 %212, 67108863, !pdg.inst.id !584"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "makebonds"
Parallelizer:    Loop: "  %33 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %6, i64 %31, i32 3, !pdg.inst.id !61"
Parallelizer:      Hotness = 7.719683e-06 %
Parallelizer:    Function: "makebonds"
Parallelizer:    Loop: "  %19 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %6, i64 %17, i32 3, !pdg.inst.id !59"
Parallelizer:      Hotness = 1.599854e-06 %
Parallelizer:    Function: "makebonds"
Parallelizer:    Loop: "  %53 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %51, i32 0, !pdg.inst.id !140"
Parallelizer:      Hotness = 6.539675e-04 %
Parallelizer:    Function: "makebonds"
Parallelizer:    Loop: "  %129 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %128, i32 0, !pdg.inst.id !142"
Parallelizer:      Hotness = 3.522785e-04 %
Parallelizer:    Function: "makebonds"
Parallelizer:    Loop: "  %88 = getelementptr %struct.atom_t, %struct.atom_t* %28, i64 %87, i32 17, i64 0, !pdg.inst.id !144"
Parallelizer:      Hotness = 2.362503e-04 %
Parallelizer:    Function: "match_atom_pat"
Parallelizer:    Loop: "  %10 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %9, i64 0, i32 2, !pdg.inst.id !55"
Parallelizer:      Hotness = 7.079742e-05 %
Parallelizer:    Function: "match_atom_pat"
Parallelizer:    Loop: "  %23 = load %struct.residue_t**, %struct.residue_t*** %19, align 8, !tbaa !431, !pdg.inst.id !81"
Parallelizer:      Hotness = 7.026931e-05 %
Parallelizer:    Function: "match_atom_pat"
Parallelizer:    Loop: "  %38 = load %struct.atom_t*, %struct.atom_t** %35, align 8, !tbaa !437, !pdg.inst.id !115"
Parallelizer:      Hotness = 6.526783e-05 %
Parallelizer:    Function: "match_res_pat"
Parallelizer:    Loop: "  %8 = load i8, i8* %6, align 1, !tbaa !559, !pdg.inst.id !51"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "match_res_pat"
Parallelizer:    Loop: "  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 2, !pdg.inst.id !97"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "match_res_pat"
Parallelizer:    Loop: "  %40 = load %struct.residue_t**, %struct.residue_t*** %37, align 8, !tbaa !569, !pdg.inst.id !121"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %196 = getelementptr inbounds double, double* %163, i64 %195, !pdg.inst.id !914"
Parallelizer:      Hotness = 6.930629e-05 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %173 = getelementptr inbounds double, double* %163, i64 %171, !pdg.inst.id !912"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %96 = getelementptr inbounds double, double* %79, i64 %94, !pdg.inst.id !676"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %140 = getelementptr inbounds double, double* %79, i64 %138, !pdg.inst.id !674"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %209 = getelementptr inbounds double, double* %79, i64 %208, !pdg.inst.id !678"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %233 = load i32*, i32** @frozen, align 8, !tbaa !35595, !pdg.inst.id !1057"
Parallelizer:      Hotness = 3.697992e-04 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %284 = getelementptr inbounds double, double* %3, i64 %283, !pdg.inst.id !455"
Parallelizer:      Hotness = 3.497933e-05 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %348 = getelementptr inbounds double, double* %3, i64 %347, !pdg.inst.id !465"
Parallelizer:      Hotness = 1.335800e-06 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %835 = call fast double %5(double* %2, double* %3, i32* nonnull %9) #48, !pdg.inst.id !432"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %411 = fmul fast double %410, 5.000000e-01, !pdg.inst.id !1486"
Parallelizer:      Hotness = 1.892487e-01 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %562 = getelementptr inbounds double, double* %2, i64 %560, !pdg.inst.id !418"
Parallelizer:      Hotness = 1.910505e-02 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %542 = getelementptr inbounds double, double* %2, i64 %540, !pdg.inst.id !402"
Parallelizer:      Hotness = 1.584321e-03 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %483 = getelementptr inbounds double, double* %2, i64 %482, !pdg.inst.id !406"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %651 = getelementptr inbounds double, double* %4, i64 %650, !pdg.inst.id !477"
Parallelizer:      Hotness = 6.713173e-02 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %465 = getelementptr inbounds double, double* %4, i64 %464, !pdg.inst.id !487"
Parallelizer:      Hotness = 2.578405e-03 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %741 = getelementptr inbounds double, double* %3, i64 %740, !pdg.inst.id !130"
Parallelizer:      Hotness = 5.855776e-02 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %438 = getelementptr inbounds double, double* %3, i64 %437, !pdg.inst.id !461"
Parallelizer:      Hotness = 1.957103e-03 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %787 = getelementptr inbounds double, double* %4, i64 %782, !pdg.inst.id !227"
Parallelizer:      Hotness = 3.212134e-02 %
Parallelizer:    Function: "md"
Parallelizer:    Loop: "  %427 = getelementptr inbounds double, double* %4, i64 %425, !pdg.inst.id !491"
Parallelizer:      Hotness = 1.584321e-03 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %286 = select i1 %282, i32 4, i32 3, !prof !74457, !pdg.inst.id !898"
Parallelizer:      Hotness = 1.921270e+01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %328 = icmp eq i32* %324, null, !pdg.inst.id !1023"
Parallelizer:      Hotness = 1.909304e+01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %553 = getelementptr inbounds i32, i32* %544, i64 %552, !pdg.inst.id !1497"
Parallelizer:      Hotness = 1.749352e-02 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %570 = getelementptr inbounds double, double* %561, i64 %562, !pdg.inst.id !1547"
Parallelizer:      Hotness = 1.964270e+01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %636 = getelementptr inbounds i32, i32* %633, i64 %635, !pdg.inst.id !1756"
Parallelizer:      Hotness = 1.324309e-01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %667 = icmp eq i32* %656, null, !pdg.inst.id !1800"
Parallelizer:      Hotness = 1.926256e+01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %881 = getelementptr inbounds i32, i32* %227, i64 %878, !pdg.inst.id !715"
Parallelizer:      Hotness = 2.552312e+01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %965 = icmp eq i32* %958, null, !pdg.inst.id !2506"
Parallelizer:      Hotness = 2.536680e+01 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %1242 = getelementptr inbounds double, double* %1219, i64 %1240, !pdg.inst.id !3112"
Parallelizer:      Hotness = 1.914326e-02 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %1342 = getelementptr inbounds double, double* %1219, i64 %1341, !pdg.inst.id !3116"
Parallelizer:      Hotness = 1.338472e-03 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %1371 = getelementptr inbounds i32, i32* %1315, i64 %1370, !pdg.inst.id !3335"
Parallelizer:      Hotness = 3.473802e-02 %
Parallelizer:    Function: "mme34"
Parallelizer:    Loop: "  %1319 = getelementptr inbounds i32, i32* %1315, i64 %1318, !pdg.inst.id !3333"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %60 = getelementptr inbounds i32*, i32** %59, i64 %indvars.iv55, !pdg.inst.id !224"
Parallelizer:      Hotness = 2.309692e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %109 = sext i32 %108 to i64, !pdg.inst.id !337"
Parallelizer:      Hotness = 6.160214e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %127 = getelementptr inbounds i32*, i32** %126, i64 %indvars.iv53, !pdg.inst.id !379"
Parallelizer:      Hotness = 2.309692e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %177 = sext i32 %176 to i64, !pdg.inst.id !493"
Parallelizer:      Hotness = 6.160214e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %195 = getelementptr inbounds i32*, i32** %194, i64 %indvars.iv51, !pdg.inst.id !535"
Parallelizer:      Hotness = 2.309692e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %245 = sext i32 %244 to i64, !pdg.inst.id !647"
Parallelizer:      Hotness = 6.160214e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %270 = getelementptr inbounds i32*, i32** %269, i64 %indvars.iv49, !pdg.inst.id !697"
Parallelizer:      Hotness = 2.309692e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %305 = sext i32 %304 to i64, !pdg.inst.id !788"
Parallelizer:      Hotness = 2.998716e-04 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %336 = getelementptr inbounds i32*, i32** %314, i64 %334, !pdg.inst.id !815"
Parallelizer:      Hotness = 1.180164e-04 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %371 = getelementptr inbounds i32*, i32** %370, i64 %indvars.iv, !pdg.inst.id !941"
Parallelizer:      Hotness = 2.309692e-05 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %407 = sext i32 %406 to i64, !pdg.inst.id !1031"
Parallelizer:      Hotness = 4.935316e-04 %
Parallelizer:    Function: "mme_init"
Parallelizer:    Loop: "  %438 = getelementptr inbounds i32*, i32** %416, i64 %436, !pdg.inst.id !1061"
Parallelizer:      Hotness = 2.991882e-04 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %105 = getelementptr inbounds i32, i32* %30, i64 %102, !pdg.inst.id !482"
Parallelizer:      Hotness = 5.710391e-04 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %190 = getelementptr inbounds i32, i32* %30, i64 %189, !pdg.inst.id !513"
Parallelizer:      Hotness = 4.486736e-04 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %172 = getelementptr inbounds i32, i32* %30, i64 %170, !pdg.inst.id !486"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %222 = add nsw i64 %221, -1, !pdg.inst.id !1086"
Parallelizer:      Hotness = 1.585148e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %234 = shl nsw i32 %233, 1, !pdg.inst.id !1112"
Parallelizer:      Hotness = 1.176635e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %277 = load i32, i32* %28, align 4, !tbaa !23624, !pdg.inst.id !394"
Parallelizer:      Hotness = 7.926167e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %292 = shl nsw i32 %291, 1, !pdg.inst.id !1226"
Parallelizer:      Hotness = 6.925280e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %335 = add nsw i64 %334, -1, !pdg.inst.id !1307"
Parallelizer:      Hotness = 1.967615e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %348 = shl nsw i32 %347, 1, !pdg.inst.id !1335"
Parallelizer:      Hotness = 1.539650e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %394 = load i32, i32* %29, align 4, !tbaa !23624, !pdg.inst.id !452"
Parallelizer:      Hotness = 8.372473e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %410 = shl nsw i32 %409, 1, !pdg.inst.id !1457"
Parallelizer:      Hotness = 7.333308e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %456 = add nsw i64 %455, -1, !pdg.inst.id !1544"
Parallelizer:      Hotness = 1.960602e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %469 = shl nsw i32 %468, 1, !pdg.inst.id !1572"
Parallelizer:      Hotness = 1.532637e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %515 = load i32, i32* %30, align 4, !tbaa !23624, !pdg.inst.id !511"
Parallelizer:      Hotness = 8.274137e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %531 = shl nsw i32 %530, 1, !pdg.inst.id !1694"
Parallelizer:      Hotness = 7.234971e-02 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %585 = add nsw i64 %584, -1, !pdg.inst.id !1794"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %598 = shl nsw i32 %597, 1, !pdg.inst.id !1823"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %644 = load i32, i32* %36, align 4, !tbaa !23624, !pdg.inst.id !548"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %660 = shl nsw i32 %659, 1, !pdg.inst.id !1949"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  store i32 0, i32* %12, align 4, !tbaa !23624, !pdg.inst.id !282"
Parallelizer:      Hotness = 6.419267e-01 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %772 = getelementptr inbounds i32, i32* %710, i64 %771, !pdg.inst.id !2045"
Parallelizer:      Hotness = 2.628129e-01 %
Parallelizer:    Function: "nblist"
Parallelizer:    Loop: "  %781 = load i32, i32* %11, align 4, !tbaa !23624, !pdg.inst.id !251"
Parallelizer:      Hotness = 3.527359e-01 %
Parallelizer:    Function: "nbond"
Parallelizer:    Loop: "  %27 = getelementptr inbounds i32, i32* %15, i64 %26, !pdg.inst.id !109"
Parallelizer:      Hotness = 5.248055e-02 %
Parallelizer:    Function: "nbond"
Parallelizer:    Loop: "  %40 = getelementptr inbounds i32, i32* %1, i64 %33, !pdg.inst.id !50"
Parallelizer:      Hotness = 1.718038e+01 %
Parallelizer:    Function: "nbond"
Parallelizer:    Loop: "  %90 = getelementptr inbounds i32, i32* %87, i64 %89, !pdg.inst.id !323"
Parallelizer:      Hotness = 3.786786e-01 %
Parallelizer:    Function: "nbond"
Parallelizer:    Loop: "  %123 = icmp eq i32* %114, null, !pdg.inst.id !367"
Parallelizer:      Hotness = 1.625769e+01 %
Parallelizer:    Function: "p_b_symbol"
Parallelizer:    Loop: "  %33 = load i8, i8* %32, align 1, !tbaa !982, !pdg.inst.id !151"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_b_symbol"
Parallelizer:    Loop: "  %62 = tail call i32 @strncmp(i8* nonnull %60, i8* nonnull %25, i64 %56) #48, !pdg.inst.id !131"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %57 = lshr i64 %55, 3, !pdg.inst.id !331"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %260 = load i8, i8* %259, align 1, !tbaa !74053, !pdg.inst.id !986"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %528 = icmp eq i8 %525, 61, !pdg.inst.id !1513"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %556 = tail call i32 @strncmp(i8* nonnull %554, i8* %512, i64 %550) #49, !pdg.inst.id !1487"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %315 = getelementptr inbounds i8, i8* %314, i64 1, !pdg.inst.id !1085"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %354 = getelementptr inbounds i8, i8* %353, i64 1, !pdg.inst.id !1224"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %372 = load i64, i64* %117, align 8, !tbaa !74059, !pdg.inst.id !558"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %654 = load i8, i8* %115, align 8, !tbaa !74045, !pdg.inst.id !501"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %718 = add nsw i64 %716, -1, !pdg.inst.id !1856"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %802 = add nsw i32 %801, -1, !pdg.inst.id !2022"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %876 = and i32 %871, 224, !pdg.inst.id !2205"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %926 = and i32 %925, 255, !pdg.inst.id !2326"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %942 = and i32 %941, 255, !pdg.inst.id !2358"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %1062 = load i8, i8* %115, align 8, !tbaa !74045, !pdg.inst.id !489"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %1096 = getelementptr inbounds %struct.cset, %struct.cset* %1095, i64 0, i32 2, !pdg.inst.id !2668"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %1103 = zext i32 %1102 to i64, !pdg.inst.id !2687"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %1142 = getelementptr inbounds %struct.cset, %struct.cset* %1141, i64 0, i32 2, !pdg.inst.id !2762"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bracket"
Parallelizer:    Loop: "  %1154 = load i8, i8* %115, align 8, !tbaa !74045, !pdg.inst.id !487"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bre"
Parallelizer:    Loop: "  %111 = getelementptr inbounds i8, i8* %108, i64 1, !pdg.inst.id !670"
Parallelizer:      Hotness = 7.455630e-06 %
Parallelizer:    Function: "p_bre"
Parallelizer:    Loop: "  %506 = load i16*, i16** %501, align 8, !tbaa !37264, !pdg.inst.id !1345"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bre"
Parallelizer:    Loop: "  %560 = mul nsw i32 %558, 10, !pdg.inst.id !1472"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_bre"
Parallelizer:    Loop: "  %617 = load i8, i8* %616, align 1, !tbaa !37260, !pdg.inst.id !1591"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_ere"
Parallelizer:    Loop: "  br label %57, !pdg.inst.id !63113"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_ere"
Parallelizer:    Loop: "  %60 = ptrtoint i8* %58 to i64, !pdg.inst.id !729"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_ere"
Parallelizer:    Loop: "  %581 = load i16*, i16** %576, align 8, !tbaa !64473, !pdg.inst.id !1624"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_ere"
Parallelizer:    Loop: "  %635 = mul nsw i32 %633, 10, !pdg.inst.id !1751"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "p_ere"
Parallelizer:    Loop: "  %687 = getelementptr inbounds i8, i8* %686, i64 1, !pdg.inst.id !1849"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "pfind"
Parallelizer:    Loop: "  call fastcc void @preadln(%struct._IO_FILE* %0, i8* %2, i8* nonnull %5), !pdg.inst.id !47"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "preadln"
Parallelizer:    Loop: "  %9 = tail call i32 @getc(%struct._IO_FILE* %0), !pdg.inst.id !38"
Parallelizer:      Hotness = 1.748904e-03 %
Parallelizer:    Function: "putxyzw"
Parallelizer:    Loop: "  %46 = getelementptr inbounds double, double* %2, i64 %45, !pdg.inst.id !59"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "putxyzw"
Parallelizer:    Loop: "  %29 = getelementptr inbounds double, double* %2, i64 %28, !pdg.inst.id !57"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %117 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !281"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %1833 = load i8*, i8** %165, align 8, !tbaa !1534868, !pdg.inst.id !1155"
Parallelizer:      Hotness = 1.941570e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %1855, label %1856, label %._crit_edge39, !prof !1534936, !pdg.inst.id !4556"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %1871 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !279"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %1886, label %1887, label %._crit_edge40, !prof !1534936, !pdg.inst.id !4607"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %1902 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !277"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %1917, label %1918, label %._crit_edge41, !prof !1534936, !pdg.inst.id !4658"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %1933 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !275"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %1948, label %1949, label %._crit_edge42, !prof !1534936, !pdg.inst.id !4709"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %1964 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !273"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %1979, label %1981, label %._crit_edge43, !prof !1534938, !pdg.inst.id !4762"
Parallelizer:      Hotness = 3.572489e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2010 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !271"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2028 = load i8*, i8** %338, align 8, !tbaa !1534875, !pdg.inst.id !1487"
Parallelizer:      Hotness = 2.640536e-07 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2048 = tail call i32 @get_mytaskid() #48, !pdg.inst.id !4883"
Parallelizer:      Hotness = 1.522191e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2070 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !269"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2085, label %2086, label %._crit_edge44, !prof !1534942, !pdg.inst.id !4946"
Parallelizer:      Hotness = 5.591722e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2101 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !267"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2116, label %2117, label %._crit_edge45, !prof !1534942, !pdg.inst.id !4997"
Parallelizer:      Hotness = 5.591722e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2132 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !265"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2147, label %2148, label %._crit_edge46, !prof !1534944, !pdg.inst.id !2086"
Parallelizer:      Hotness = 1.164942e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2163 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !263"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2178, label %2179, label %._crit_edge47, !prof !1534944, !pdg.inst.id !2137"
Parallelizer:      Hotness = 1.164942e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2194 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !261"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2209, label %2210, label %._crit_edge48, !prof !1534946, !pdg.inst.id !5048"
Parallelizer:      Hotness = 5.125745e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2225 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !259"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2240, label %2241, label %._crit_edge64, !prof !1534946, !pdg.inst.id !5103"
Parallelizer:      Hotness = 6.492611e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2265 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !257"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2280, label %2281, label %._crit_edge49, !prof !1534946, !pdg.inst.id !5169"
Parallelizer:      Hotness = 5.125745e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2296 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !239"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2311, label %2312, label %._crit_edge50, !prof !1534950, !pdg.inst.id !5220"
Parallelizer:      Hotness = 4.426780e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2327 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !241"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2342, label %2343, label %._crit_edge51, !prof !1534952, !pdg.inst.id !5271"
Parallelizer:      Hotness = 1.281436e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2358 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !255"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2373, label %2374, label %._crit_edge52, !prof !1534952, !pdg.inst.id !5322"
Parallelizer:      Hotness = 1.281436e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2389 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !229"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2404, label %2405, label %._crit_edge53, !prof !1534954, !pdg.inst.id !5377"
Parallelizer:      Hotness = 1.741200e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2424 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !253"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2439, label %2440, label %._crit_edge54, !prof !1534956, !pdg.inst.id !5436"
Parallelizer:      Hotness = 1.918271e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2459 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !251"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2474, label %2475, label %._crit_edge55, !prof !1534958, !pdg.inst.id !5497"
Parallelizer:      Hotness = 4.403481e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2496 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !249"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2511, label %2512, label %._crit_edge56, !prof !1534960, !pdg.inst.id !5560"
Parallelizer:      Hotness = 2.772562e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2533 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !247"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2548, label %2549, label %._crit_edge57, !prof !1534962, !pdg.inst.id !5625"
Parallelizer:      Hotness = 8.895498e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2572 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !245"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2587, label %2588, label %._crit_edge58, !prof !1534964, !pdg.inst.id !5693"
Parallelizer:      Hotness = 4.858585e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2611 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !243"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2626, label %2627, label %._crit_edge59, !prof !1534966, !pdg.inst.id !5753"
Parallelizer:      Hotness = 1.549373e-04 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2642 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !237"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2657, label %2658, label %._crit_edge60, !pdg.inst.id !5804"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2673 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !235"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2688, label %2689, label %._crit_edge61, !pdg.inst.id !5855"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2704 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !233"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2739 = tail call i32 @get_mytaskid() #48, !pdg.inst.id !5940"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2757 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !231"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2775 = load i8*, i8** %1539, align 8, !tbaa !1534926, !pdg.inst.id !3888"
Parallelizer:      Hotness = 1.941570e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2800 = load i8*, i8** %1561, align 8, !tbaa !1534927, !pdg.inst.id !3928"
Parallelizer:      Hotness = 1.941570e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2822, label %2823, label %._crit_edge62, !prof !1534936, !pdg.inst.id !6089"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2838 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !227"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2853, label %2854, label %._crit_edge63, !prof !1534936, !pdg.inst.id !6140"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2869 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !225"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2885 = add nuw nsw i64 %2883, 1, !pdg.inst.id !6185"
Parallelizer:      Hotness = 3.272711e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3074 = shl i64 %3073, 2, !pdg.inst.id !6551"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2966, label %2967, label %._crit_edge72, !prof !1534936, !pdg.inst.id !6324"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %2982 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !223"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  br i1 %2997, label %2998, label %._crit_edge73, !prof !1534936, !pdg.inst.id !6375"
Parallelizer:      Hotness = 2.889057e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3013 = call i32 @getc(%struct._IO_FILE* %32) #48, !pdg.inst.id !221"
Parallelizer:      Hotness = 3.106512e-08 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3037 = getelementptr inbounds double, double* %3026, i64 %3035, !pdg.inst.id !6430"
Parallelizer:      Hotness = 2.598598e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3244 = trunc i64 %3243 to i32, !pdg.inst.id !6915"
Parallelizer:      Hotness = 4.970420e-06 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3275 = getelementptr inbounds i32, i32* %3234, i64 %3273, !pdg.inst.id !6884"
Parallelizer:      Hotness = 2.405994e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3323 = getelementptr inbounds i32, i32* %3234, i64 %3321, !pdg.inst.id !6882"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3349 = getelementptr inbounds i32, i32* %3339, i64 %3348, !pdg.inst.id !7103"
Parallelizer:      Hotness = 1.731881e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3366 = getelementptr inbounds i32, i32* %3344, i64 %3365, !pdg.inst.id !7111"
Parallelizer:      Hotness = 1.332694e-04 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3400 = getelementptr inbounds i32, i32* %3360, i64 %3399, !pdg.inst.id !7143"
Parallelizer:      Hotness = 6.411842e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3439 = getelementptr inbounds i32, i32* %3435, i64 %3438, !pdg.inst.id !7303"
Parallelizer:      Hotness = 1.086503e-04 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3448 = add nuw nsw i64 %3447, %3445, !pdg.inst.id !7325"
Parallelizer:      Hotness = 7.628041e-05 %
Parallelizer:    Function: "readparm"
Parallelizer:    Loop: "  %3475 = load double*, double** %284, align 8, !tbaa !1534869, !pdg.inst.id !1375"
Parallelizer:      Hotness = 3.850522e-05 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %117 = getelementptr inbounds i8, i8* %116, i64 1, !pdg.inst.id !453"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %169 = getelementptr inbounds i8, i8* %164, i64 %167, !pdg.inst.id !536"
Parallelizer:      Hotness = 1.269321e-04 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %183 = getelementptr inbounds i8, i8* %181, i64 %176, !pdg.inst.id !571"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %199 = getelementptr inbounds i8, i8* %164, i64 %198, !pdg.inst.id !534"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %213 = getelementptr inbounds i8, i8* %211, i64 %176, !pdg.inst.id !569"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %264 = getelementptr inbounds i64, i64* %260, i64 1, !pdg.inst.id !724"
Parallelizer:      Hotness = 5.156811e-06 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %277 = and i64 %276, 67108863, !pdg.inst.id !768"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %315 = getelementptr inbounds i64, i64* %314, i64 1, !pdg.inst.id !865"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  br label %334, !pdg.inst.id !8221"
Parallelizer:      Hotness = 1.863907e-06 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %336 = getelementptr inbounds i64, i64* %335, i64 1, !pdg.inst.id !907"
Parallelizer:      Hotness = 3.727815e-07 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %399 = getelementptr inbounds i64, i64* %398, i64 1, !pdg.inst.id !1025"
Parallelizer:      Hotness = 3.727815e-07 %
Parallelizer:    Function: "regcomp"
Parallelizer:    Loop: "  %352 = getelementptr inbounds i64, i64* %349, i64 1, !pdg.inst.id !936"
Parallelizer:      Hotness = 2.609470e-06 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %417 = load i8, i8* %416, align 1, !tbaa !27946, !pdg.inst.id !1158"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %472 = icmp eq i8* %467, %471, !pdg.inst.id !1335"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %493 = load i8*, i8** %441, align 8, !tbaa !27977, !pdg.inst.id !1240"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %546 = load %struct.re_guts*, %struct.re_guts** %435, align 8, !tbaa !27970, !pdg.inst.id !1186"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %646 = load i8*, i8** %459, align 8, !tbaa !27984, !pdg.inst.id !1301"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %682 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %672, i64 %680, i32 0, !pdg.inst.id !1741"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %722 = load i8*, i8** %459, align 8, !tbaa !27984, !pdg.inst.id !1307"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %757 = load i64, i64* %753, align 8, !tbaa !27966, !pdg.inst.id !1878"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %66 = load i8, i8* %65, align 1, !tbaa !27946, !pdg.inst.id !381"
Parallelizer:      Hotness = 7.185363e-05 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %107 = icmp eq i8* %105, %106, !pdg.inst.id !482"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %130 = icmp eq i8* %127, %116, !pdg.inst.id !525"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %165 = call fastcc i32 @sstep(%struct.re_guts* %114, i64 %31, i64 %33, i32 %164, i32 %159, i32 %164) #48, !pdg.inst.id !265"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %255 = getelementptr inbounds i8, i8* %254, i64 1, !pdg.inst.id !800"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %285 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %277, i64 %283, i32 0, !pdg.inst.id !855"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %322 = load i8*, i8** %96, align 8, !tbaa !27964, !pdg.inst.id !455"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "regexec"
Parallelizer:    Loop: "  %352 = load i64, i64* %348, align 8, !tbaa !27966, !pdg.inst.id !981"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "repeat"
Parallelizer:    Loop: "  %25 = icmp slt i32 %23, 2, !pdg.inst.id !365"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "repeat"
Parallelizer:    Loop: "  %34 = icmp slt i32 %33, 2, !pdg.inst.id !421"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sbackref"
Parallelizer:    Loop: "  br label %19, !pdg.inst.id !2826"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sbackref"
Parallelizer:    Loop: "  %22 = load %struct.re_guts*, %struct.re_guts** %7, align 8, !tbaa !3460, !pdg.inst.id !110"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sbackref"
Parallelizer:    Loop: "  %30 = getelementptr inbounds i64, i64* %24, i64 %28, !pdg.inst.id !194"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sbackref"
Parallelizer:    Loop: "  %193 = and i64 %192, 67108863, !pdg.inst.id !522"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sbackref"
Parallelizer:    Loop: "  %245 = getelementptr inbounds i64, i64* %212, i64 %244, !pdg.inst.id !603"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sbackref"
Parallelizer:    Loop: "  %292 = load %struct.re_guts*, %struct.re_guts** %7, align 8, !tbaa !3460, !pdg.inst.id !106"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %15 = load %struct.re_guts*, %struct.re_guts** %8, align 8, !tbaa !1005, !pdg.inst.id !105"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %27 = and i64 %25, 67108863, !pdg.inst.id !192"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %44 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %13, i8* %43, i64 %14, i64 %35), !pdg.inst.id !70"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %56 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %13, i8* %55, i64 %14, i64 %35), !pdg.inst.id !62"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %65 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %63, i8* %.lcssa28, i64 %61, i64 %34), !pdg.inst.id !58"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %75 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %13, i8* %74, i64 %14, i64 %35), !pdg.inst.id !56"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sdissect"
Parallelizer:    Loop: "  %88 = add nsw i64 %87, 1, !pdg.inst.id !329"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "searchkdtree"
Parallelizer:    Loop: "  %32 = srem i32 %31, %14, !pdg.inst.id !149"
Parallelizer:      Hotness = 3.403104e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %84 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 2, !pdg.inst.id !882"
Parallelizer:      Hotness = 3.330181e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %96 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %92, i64 %95, !pdg.inst.id !901"
Parallelizer:      Hotness = 3.274264e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %116 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %106, i64 %114, i32 2, !pdg.inst.id !942"
Parallelizer:      Hotness = 2.239795e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %140 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %106, i64 %138, i32 2, !pdg.inst.id !940"
Parallelizer:      Hotness = 3.945271e-06 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %155 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %154, i64 0, i32 2, !pdg.inst.id !1053"
Parallelizer:      Hotness = 3.330181e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %167 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %163, i64 %166, !pdg.inst.id !1072"
Parallelizer:      Hotness = 3.274264e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %187 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %177, i64 %185, i32 2, !pdg.inst.id !1113"
Parallelizer:      Hotness = 2.239795e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %211 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %177, i64 %209, i32 2, !pdg.inst.id !1111"
Parallelizer:      Hotness = 3.945271e-06 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %232 = icmp eq i8* %230, null, !pdg.inst.id !1232"
Parallelizer:      Hotness = 8.455927e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %295 = load i8, i8* %293, align 1, !tbaa !69260, !pdg.inst.id !1356"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %314 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %313, i64 0, i32 0, !pdg.inst.id !1404"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %341 = load %struct.strand_t*, %struct.strand_t** %338, align 8, !tbaa !69223, !pdg.inst.id !1459"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %375 = call fastcc i32 @is_pattern(i8* nonnull %374, i32* nonnull %3, i32* nonnull %4) #50, !pdg.inst.id !101"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %383 = load i8, i8* %381, align 1, !tbaa !69260, !pdg.inst.id !115"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %402 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %401, i64 0, i32 0, !pdg.inst.id !164"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %429 = load %struct.strand_t*, %struct.strand_t** %426, align 8, !tbaa !69223, !pdg.inst.id !228"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %473 = load %struct.strand_t*, %struct.strand_t** %471, align 8, !tbaa !69223, !pdg.inst.id !325"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %501 = load %struct.strand_t*, %struct.strand_t** %499, align 8, !tbaa !69223, !pdg.inst.id !393"
Parallelizer:      Hotness = 3.417164e-07 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %580 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %579, i64 0, i32 2, !pdg.inst.id !582"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %598 = or i64 %596, 1, !pdg.inst.id !1480"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %531 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %530, i64 0, i32 2, !pdg.inst.id !476"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %542 = or i64 %540, 1, !pdg.inst.id !497"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %639 = call fastcc i32 @is_pattern(i8* nonnull %638, i32* nonnull %3, i32* nonnull %4) #50, !pdg.inst.id !649"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %705 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %704, i64 0, i32 2, !pdg.inst.id !1716"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %723 = or i64 %721, 1, !pdg.inst.id !1754"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %656 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %655, i64 0, i32 2, !pdg.inst.id !1610"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %667 = or i64 %665, 1, !pdg.inst.id !1631"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %767 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %766, i64 0, i32 2, !pdg.inst.id !1847"
Parallelizer:      Hotness = 3.137577e-06 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %778 = or i64 %776, 1, !pdg.inst.id !1870"
Parallelizer:      Hotness = 1.025149e-06 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %810 = add nuw nsw i64 %808, 1, !pdg.inst.id !1946"
Parallelizer:      Hotness = 1.180475e-06 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %850 = call fastcc i32 @is_pattern(i8* nonnull %849, i32* nonnull %3, i32* nonnull %4) #50, !pdg.inst.id !645"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %868 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %867, i64 0, i32 2, !pdg.inst.id !2064"
Parallelizer:      Hotness = 4.504443e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %882 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %878, i64 %881, !pdg.inst.id !2088"
Parallelizer:      Hotness = 4.442313e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %903 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %894, i64 %901, i32 2, !pdg.inst.id !2132"
Parallelizer:      Hotness = 3.768200e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %941 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %940, i64 0, i32 2, !pdg.inst.id !2227"
Parallelizer:      Hotness = 3.330181e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %953 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %949, i64 %952, !pdg.inst.id !2246"
Parallelizer:      Hotness = 3.274264e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %973 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %963, i64 %971, i32 2, !pdg.inst.id !2287"
Parallelizer:      Hotness = 2.239795e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %997 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %963, i64 %995, i32 2, !pdg.inst.id !2285"
Parallelizer:      Hotness = 3.945271e-06 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %1015 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %1014, i64 0, i32 2, !pdg.inst.id !2404"
Parallelizer:      Hotness = 4.504443e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %1029 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %1025, i64 %1028, !pdg.inst.id !2428"
Parallelizer:      Hotness = 4.442313e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %1050 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %1041, i64 %1048, i32 2, !pdg.inst.id !2472"
Parallelizer:      Hotness = 3.768200e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 2, !pdg.inst.id !711"
Parallelizer:      Hotness = 4.995272e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %24 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %20, i64 %23, !pdg.inst.id !730"
Parallelizer:      Hotness = 4.911396e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %44 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %34, i64 %42, i32 2, !pdg.inst.id !771"
Parallelizer:      Hotness = 3.359693e-05 %
Parallelizer:    Function: "select_atoms"
Parallelizer:    Loop: "  %68 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %34, i64 %66, i32 2, !pdg.inst.id !769"
Parallelizer:      Hotness = 5.917906e-06 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %9, i64 0, i32 5, !pdg.inst.id !93"
Parallelizer:      Hotness = 7.558145e-05 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %23 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %17, i64 %20, !pdg.inst.id !121"
Parallelizer:      Hotness = 7.499121e-05 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %36 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %30, i64 %33, i32 2, !pdg.inst.id !153"
Parallelizer:      Hotness = 6.933736e-05 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %86 = getelementptr inbounds i32, i32* %78, i64 %84, !pdg.inst.id !334"
Parallelizer:      Hotness = 5.865095e-05 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %134 = getelementptr inbounds i32, i32* %126, i64 %132, !pdg.inst.id !441"
Parallelizer:      Hotness = 6.461546e-05 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %185 = getelementptr inbounds i32, i32* %175, i64 %183, !pdg.inst.id !551"
Parallelizer:      Hotness = 1.593641e-04 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %245 = getelementptr inbounds i32, i32* %235, i64 %243, !pdg.inst.id !684"
Parallelizer:      Hotness = 1.003403e-04 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %298 = getelementptr inbounds i32, i32* %295, i64 %297, !pdg.inst.id !817"
Parallelizer:      Hotness = 3.463761e-05 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %338 = getelementptr inbounds i32, i32* %326, i64 %336, !pdg.inst.id !887"
Parallelizer:      Hotness = 5.140657e-04 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %432 = getelementptr inbounds i32, i32* %420, i64 %430, !pdg.inst.id !1104"
Parallelizer:      Hotness = 2.634322e-04 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %520 = getelementptr inbounds i32, i32* %514, i64 %518, !pdg.inst.id !1318"
Parallelizer:      Hotness = 2.145357e-04 %
Parallelizer:    Function: "set_belly_mask"
Parallelizer:    Loop: "  %531 = add nuw nsw i64 %529, %527, !pdg.inst.id !1349"
Parallelizer:      Hotness = 1.331141e-04 %
Parallelizer:    Function: "set_cons_mask"
Parallelizer:    Loop: "  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %9, i64 0, i32 5, !pdg.inst.id !55"
Parallelizer:      Hotness = 7.558145e-05 %
Parallelizer:    Function: "set_cons_mask"
Parallelizer:    Loop: "  %23 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %17, i64 %20, !pdg.inst.id !83"
Parallelizer:      Hotness = 7.499121e-05 %
Parallelizer:    Function: "set_cons_mask"
Parallelizer:    Loop: "  %36 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %30, i64 %34, i32 2, !pdg.inst.id !115"
Parallelizer:      Hotness = 6.933736e-05 %
Parallelizer:    Function: "setxyz_from_mol"
Parallelizer:    Loop: "  %18 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %16, i64 0, i32 5, !pdg.inst.id !71"
Parallelizer:      Hotness = 6.385436e-05 %
Parallelizer:    Function: "setxyz_from_mol"
Parallelizer:    Loop: "  %28 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %23, i64 %26, !pdg.inst.id !92"
Parallelizer:      Hotness = 6.359031e-05 %
Parallelizer:    Function: "setxyz_from_mol"
Parallelizer:    Loop: "  %40 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %35, i64 %38, i32 2, !pdg.inst.id !126"
Parallelizer:      Hotness = 6.163321e-05 %
Parallelizer:    Function: "spec_genrand_int32"
Parallelizer:    Loop: "  %15 = lshr i64 %13, 30, !pdg.inst.id !63"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "spec_genrand_int32"
Parallelizer:    Loop: "  %33 = getelementptr inbounds [624 x i64], [624 x i64]* @mt, i64 0, i64 %32, !pdg.inst.id !110"
Parallelizer:      Hotness = 2.326622e-04 %
Parallelizer:    Function: "spec_genrand_int32"
Parallelizer:    Loop: "  %53 = getelementptr inbounds [624 x i64], [624 x i64]* @mt, i64 0, i64 %52, !pdg.inst.id !155"
Parallelizer:      Hotness = 4.059124e-04 %
Parallelizer:    Function: "spec_srand"
Parallelizer:    Loop: "  %7 = lshr i64 %5, 30, !pdg.inst.id !48"
Parallelizer:      Hotness = 1.016296e-04 %
Parallelizer:    Function: "sslow"
Parallelizer:    Loop: "  %35 = icmp eq i8* %31, %23, !pdg.inst.id !113"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sslow"
Parallelizer:    Loop: "  %74 = tail call fastcc i32 @sstep(%struct.re_guts* %20, i64 %3, i64 %4, i32 %73, i32 %68, i32 %73), !pdg.inst.id !64"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sstep"
Parallelizer:    Loop: "  %27 = getelementptr inbounds i64, i64* %12, i64 %26, !pdg.inst.id !102"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:    Function: "sstep"
Parallelizer:    Loop: "  %148 = and i64 %146, 67108863, !pdg.inst.id !397"
Parallelizer:      Hotness = 0.000000e+00 %
Parallelizer:  Parallelize all 369 loops, one at a time
Parallelizer: Start
Parallelizer:  Function = "NAB_mnext"
Parallelizer:  Loop 0 = "  %49 = icmp slt i64 %48, %46, !pdg.inst.id !142"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %52 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %51, i64 %48, !pdg.inst.id !145
DSWP:       %53 = load %struct.residue_t*, %struct.residue_t** %52, align 8, !tbaa !328, !pdg.inst.id !153
DSWP:       %51 = load %struct.residue_t**, %struct.residue_t*** %45, align 8, !tbaa !336, !pdg.inst.id !140
DSWP:       %54 = icmp eq %struct.residue_t* %53, %25, !pdg.inst.id !90
DSWP:       %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:       br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:       %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:       %49 = icmp slt i64 %48, %46, !pdg.inst.id !142
DSWP:       br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %52 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %51, i64 %48, !pdg.inst.id !145
DSWP:       %53 = load %struct.residue_t*, %struct.residue_t** %52, align 8, !tbaa !328, !pdg.inst.id !153
DSWP:       %51 = load %struct.residue_t**, %struct.residue_t*** %45, align 8, !tbaa !336, !pdg.inst.id !140
DSWP:       %54 = icmp eq %struct.residue_t* %53, %25, !pdg.inst.id !90
DSWP:       %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:       br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:       %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:       %49 = icmp slt i64 %48, %46, !pdg.inst.id !142
DSWP:       br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 9
DSWP:     	  %52 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %51, i64 %48, !pdg.inst.id !145
DSWP:     	  %53 = load %struct.residue_t*, %struct.residue_t** %52, align 8, !tbaa !328, !pdg.inst.id !153
DSWP:     	  %51 = load %struct.residue_t**, %struct.residue_t*** %45, align 8, !tbaa !336, !pdg.inst.id !140
DSWP:     	  %54 = icmp eq %struct.residue_t* %53, %25, !pdg.inst.id !90
DSWP:     	  %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:     	  br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:     	  %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:     	  %49 = icmp slt i64 %48, %46, !pdg.inst.id !142
DSWP:     	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     External nodes: 0
DSWP:     Edges: 18
DSWP:     	From:	  %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:     	To:	  %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:     	RAW (must)
DSWP:     	From:	  %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:     	To:	  %52 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %51, i64 %48, !pdg.inst.id !145
DSWP:     	RAW (must)
DSWP:     	From:	  %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:     	To:	  %49 = icmp slt i64 %48, %46, !pdg.inst.id !142
DSWP:     	RAW (must)
DSWP:     	From:	  %49 = icmp slt i64 %48, %46, !pdg.inst.id !142
DSWP:     	To:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	To:	  %51 = load %struct.residue_t**, %struct.residue_t*** %45, align 8, !tbaa !336, !pdg.inst.id !140
DSWP:     	CTRL
DSWP:     	From:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	To:	  %52 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %51, i64 %48, !pdg.inst.id !145
DSWP:     	CTRL
DSWP:     	From:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	To:	  %53 = load %struct.residue_t*, %struct.residue_t** %52, align 8, !tbaa !328, !pdg.inst.id !153
DSWP:     	CTRL
DSWP:     	From:	  br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:     	To:	  %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:     	CTRL
DSWP:     	From:	  br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:     	To:	  %49 = icmp slt i64 %48, %46, !pdg.inst.id !142
DSWP:     	CTRL
DSWP:     	From:	  br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:     	To:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	CTRL
DSWP:     	From:	  %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:     	To:	  %48 = phi i64 [ %55, %50 ], [ 0, %40 ], !pdg.inst.id !144
DSWP:     	RAW (must)
DSWP:     	From:	  %54 = icmp eq %struct.residue_t* %53, %25, !pdg.inst.id !90
DSWP:     	To:	  br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	To:	  %54 = icmp eq %struct.residue_t* %53, %25, !pdg.inst.id !90
DSWP:     	CTRL
DSWP:     	From:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	To:	  %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:     	CTRL
DSWP:     	From:	  br i1 %49, label %50, label %.loopexit2, !prof !345, !pdg.inst.id !150
DSWP:     	To:	  br i1 %54, label %56, label %47, !prof !346, !pdg.inst.id !156
DSWP:     	CTRL
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %45 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %42, i64 0, i32 7, !pdg.inst.id !128
DSWP:    Pre loop env 2, producer:	  %46 = sext i32 %44 to i64, !pdg.inst.id !136
DSWP:    Pre loop env 3, producer:	  %25 = load %struct.residue_t*, %struct.residue_t** %24, align 8, !tbaa !339, !pdg.inst.id !88
DSWP:    Post loop env 4, producer:	  %55 = add nuw nsw i64 %48, 1, !pdg.inst.id !148
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @0(i8*, i8*) {
  %3 = bitcast i8* %0 to [40 x i64]*
  %4 = bitcast i8* %1 to [0 x i8*]*
  %5 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.residue_t****
  %7 = load %struct.residue_t***, %struct.residue_t**** %6
  %8 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 8
  %9 = load i64, i64* %8
  %10 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 16
  %11 = bitcast i64* %10 to %struct.residue_t**
  %12 = load %struct.residue_t*, %struct.residue_t** %11
  %13 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 24
  %14 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 32
  %15 = bitcast i64* %14 to i32*
  br label %19

16:                                               ; preds = %18, %17
  ret void

17:                                               ; preds = %19
  store i32 0, i32* %15
  br label %16

18:                                               ; preds = %22
  store i32 1, i32* %15
  br label %16

19:                                               ; preds = %2, %22
  %20 = phi i64 [ %27, %22 ], [ 0, %2 ], !pdg.inst.id !30
  %21 = icmp slt i64 %20, %9, !pdg.inst.id !31
  br i1 %21, label %22, label %17, !prof !32, !pdg.inst.id !33

22:                                               ; preds = %19
  %23 = load %struct.residue_t**, %struct.residue_t*** %7, align 8, !tbaa !34, !pdg.inst.id !40
  %24 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %23, i64 %20, !pdg.inst.id !41
  %25 = load %struct.residue_t*, %struct.residue_t** %24, align 8, !tbaa !42, !pdg.inst.id !43
  %26 = icmp eq %struct.residue_t* %25, %12, !pdg.inst.id !44
  %27 = add nuw nsw i64 %20, 1, !pdg.inst.id !45
  store i64 %27, i64* %13
  br i1 %26, label %18, label %19, !prof !46, !pdg.inst.id !47
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold norecurse nounwind readonly uwtable
define dso_local %struct.atom_t* @NAB_mnext(%struct.molecule_t* nocapture readonly, %struct.atom_t*) local_unnamed_addr #15 !prof !30 !pdg.args.id !31 !pdg.edges !34 {
  %3 = alloca [40 x i64]
  %4 = bitcast [40 x i64]* %3 to i8*
  %5 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.residue_t****
  %7 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 8
  %8 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 16
  %9 = bitcast i64* %8 to %struct.residue_t**
  %10 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 24
  %11 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 32
  %12 = bitcast i64* %11 to i32*
  %13 = icmp eq %struct.atom_t* %1, null, !pdg.inst.id !45
  br i1 %13, label %14, label %33, !prof !327, !pdg.inst.id !47

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !36
  %16 = load %struct.strand_t*, %struct.strand_t** %15, align 8, !tbaa !328, !pdg.inst.id !49
  %17 = icmp eq %struct.strand_t* %16, null, !pdg.inst.id !53
  br i1 %17, label %95, label %.preheader, !prof !332, !pdg.inst.id !55

.preheader:                                       ; preds = %14
  br label %18, !pdg.inst.id !223

18:                                               ; preds = %.preheader, %23
  %19 = phi %struct.strand_t* [ %25, %23 ], [ %16, %.preheader ], !pdg.inst.id !51
  %20 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %19, i64 0, i32 5, !pdg.inst.id !59
  %21 = load i32, i32* %20, align 8, !tbaa !333, !pdg.inst.id !63
  %22 = icmp eq i32 %21, 0, !pdg.inst.id !65
  br i1 %22, label %23, label %27, !prof !332, !pdg.inst.id !67

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %19, i64 0, i32 4, !pdg.inst.id !61
  %25 = load %struct.strand_t*, %struct.strand_t** %24, align 8, !tbaa !328, !pdg.inst.id !69
  %26 = icmp eq %struct.strand_t* %25, null, !pdg.inst.id !72
  br i1 %26, label %.loopexit, label %18, !pdg.inst.id !74

27:                                               ; preds = %18
  %.lcssa = phi %struct.strand_t* [ %19, %18 ], !pdg.inst.id !57
  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa, i64 0, i32 7, !pdg.inst.id !76
  %29 = load %struct.residue_t**, %struct.residue_t*** %28, align 8, !tbaa !336, !pdg.inst.id !78
  %30 = load %struct.residue_t*, %struct.residue_t** %29, align 8, !tbaa !328, !pdg.inst.id !80
  %31 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %30, i64 0, i32 17, !pdg.inst.id !82
  %32 = load %struct.atom_t*, %struct.atom_t** %31, align 8, !tbaa !337, !pdg.inst.id !84
  br label %95, !pdg.inst.id !239

33:                                               ; preds = %2
  %34 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %1, i64 0, i32 5, !pdg.inst.id !41
  %35 = load %struct.residue_t*, %struct.residue_t** %34, align 8, !tbaa !339, !pdg.inst.id !88
  %36 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %35, i64 0, i32 17, !pdg.inst.id !96
  %37 = load %struct.atom_t*, %struct.atom_t** %36, align 8, !tbaa !337, !pdg.inst.id !98
  %38 = ptrtoint %struct.atom_t* %1 to i64, !pdg.inst.id !43
  %39 = ptrtoint %struct.atom_t* %37 to i64, !pdg.inst.id !102
  %40 = sub i64 %38, %39, !pdg.inst.id !104
  %41 = sdiv exact i64 %40, 176, !pdg.inst.id !107
  %42 = trunc i64 %41 to i32, !pdg.inst.id !109
  %43 = add i32 %42, 1, !pdg.inst.id !111
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %35, i64 0, i32 15, !pdg.inst.id !94
  %45 = load i32, i32* %44, align 8, !tbaa !342, !pdg.inst.id !117
  %46 = icmp slt i32 %43, %45, !pdg.inst.id !113
  br i1 %46, label %47, label %50, !prof !343, !pdg.inst.id !120

47:                                               ; preds = %33
  %48 = sext i32 %43 to i64, !pdg.inst.id !115
  %49 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %37, i64 %48, !pdg.inst.id !100
  br label %95, !pdg.inst.id !257

50:                                               ; preds = %33
  %51 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %35, i64 0, i32 9, !pdg.inst.id !92
  %52 = load %struct.strand_t*, %struct.strand_t** %51, align 8, !tbaa !344, !pdg.inst.id !124
  %53 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %52, i64 0, i32 5, !pdg.inst.id !130
  %54 = load i32, i32* %53, align 8, !tbaa !333, !pdg.inst.id !132
  %55 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %52, i64 0, i32 7, !pdg.inst.id !128
  %56 = sext i32 %54 to i64, !pdg.inst.id !136
  %57 = load i32, i32* @0
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %97, label %59

59:                                               ; preds = %50, %62
  %60 = phi i64 [ %67, %62 ], [ 0, %50 ], !pdg.inst.id !144
  %61 = icmp slt i64 %60, %56, !pdg.inst.id !142
  br i1 %61, label %62, label %.loopexit2, !prof !345, !pdg.inst.id !150

62:                                               ; preds = %59
  %63 = load %struct.residue_t**, %struct.residue_t*** %55, align 8, !tbaa !336, !pdg.inst.id !140
  %64 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %63, i64 %60, !pdg.inst.id !145
  %65 = load %struct.residue_t*, %struct.residue_t** %64, align 8, !tbaa !328, !pdg.inst.id !153
  %66 = icmp eq %struct.residue_t* %65, %35, !pdg.inst.id !90
  %67 = add nuw nsw i64 %60, 1, !pdg.inst.id !148
  br i1 %66, label %68, label %59, !prof !346, !pdg.inst.id !156

68:                                               ; preds = %105, %62
  %.lcssa14 = phi i64 [ %67, %62 ], [ %104, %105 ], !pdg.inst.id !158
  %69 = trunc i64 %.lcssa14 to i32, !pdg.inst.id !161
  %70 = icmp sgt i32 %54, %69, !pdg.inst.id !134
  br i1 %70, label %72, label %71, !prof !347, !pdg.inst.id !166

.loopexit2:                                       ; preds = %105, %59
  br label %71, !pdg.inst.id !283

71:                                               ; preds = %.loopexit2, %68
  br label %80, !pdg.inst.id !285

72:                                               ; preds = %68
  %73 = load %struct.residue_t**, %struct.residue_t*** %55, align 8, !tbaa !336, !pdg.inst.id !138
  %74 = shl i64 %.lcssa14, 32, !pdg.inst.id !163
  %75 = ashr exact i64 %74, 32, !pdg.inst.id !170
  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %73, i64 %75, !pdg.inst.id !168
  %77 = load %struct.residue_t*, %struct.residue_t** %76, align 8, !tbaa !328, !pdg.inst.id !173
  %78 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %77, i64 0, i32 17, !pdg.inst.id !175
  %79 = load %struct.atom_t*, %struct.atom_t** %78, align 8, !tbaa !337, !pdg.inst.id !177
  br label %95, !pdg.inst.id !295

80:                                               ; preds = %71, %85
  %81 = phi %struct.strand_t* [ %83, %85 ], [ %52, %71 ], !pdg.inst.id !126
  %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180
  %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
  %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 5, !pdg.inst.id !189
  %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
  %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
  br i1 %88, label %80, label %89, !pdg.inst.id !197

89:                                               ; preds = %85
  %.lcssa13 = phi %struct.strand_t* [ %83, %85 ], !pdg.inst.id !184
  %90 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa13, i64 0, i32 7, !pdg.inst.id !199
  %91 = load %struct.residue_t**, %struct.residue_t*** %90, align 8, !tbaa !336, !pdg.inst.id !201
  %92 = load %struct.residue_t*, %struct.residue_t** %91, align 8, !tbaa !328, !pdg.inst.id !203
  %93 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %92, i64 0, i32 17, !pdg.inst.id !205
  %94 = load %struct.atom_t*, %struct.atom_t** %93, align 8, !tbaa !337, !pdg.inst.id !207
  br label %95, !pdg.inst.id !322

.loopexit:                                        ; preds = %23
  br label %95, !pdg.inst.id !324

.loopexit1:                                       ; preds = %80
  br label %95, !pdg.inst.id !326

95:                                               ; preds = %.loopexit1, %.loopexit, %14, %89, %72, %47, %27
  %96 = phi %struct.atom_t* [ %49, %47 ], [ %79, %72 ], [ %94, %89 ], [ %32, %27 ], [ null, %14 ], [ null, %.loopexit ], [ null, %.loopexit1 ], !pdg.inst.id !86
  ret %struct.atom_t* %96, !pdg.inst.id !210

97:                                               ; preds = %50
  store i32 1, i32* @0
  store %struct.residue_t*** %55, %struct.residue_t**** %6
  store i64 %56, i64* %7
  store %struct.residue_t* %35, %struct.residue_t** %9
  %98 = alloca [1 x i8*]
  %99 = getelementptr inbounds [1 x i8*], [1 x i8*]* %98, i64 0, i64 0
  %100 = bitcast i8** %99 to void (i8*, i8*)**
  store void (i8*, i8*)* @1, void (i8*, i8*)** %100
  %101 = bitcast [1 x i8*]* %98 to i8*
  %102 = alloca [0 x i64]
  %103 = bitcast [0 x i64]* %102 to i64*
  call void @stageDispatcher(i8* %4, i64* %103, i8* %101, i64 1, i64 0)
  %104 = load i64, i64* %10
  br label %105

105:                                              ; preds = %97
  %106 = getelementptr inbounds [40 x i64], [40 x i64]* %3, i64 0, i64 32
  %107 = load i64, i64* %106
  %108 = trunc i64 %107 to i32
  store i32 0, i32* @0
  switch i32 %108, label %.loopexit2 [
    i32 1, label %68
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "NAB_mnext"
Parallelizer:  Loop 1 = "  %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
DSWP:       br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:       %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
DSWP:       %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
DSWP:       %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180
DSWP:       %81 = phi %struct.strand_t* [ %83, %85 ], [ %52, %71 ], !pdg.inst.id !126
DSWP:       %86 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 5, !pdg.inst.id !189
DSWP:       br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:       %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
DSWP:       br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:       %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
DSWP:       %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
DSWP:       %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180
DSWP:       %81 = phi %struct.strand_t* [ %83, %85 ], [ %52, %71 ], !pdg.inst.id !126
DSWP:       %86 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 5, !pdg.inst.id !189
DSWP:       br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:       %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 9
DSWP:     	  %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
DSWP:     	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	  %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
DSWP:     	  %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
DSWP:     	  %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180
DSWP:     	  %81 = phi %struct.strand_t* [ %83, %85 ], [ %52, %71 ], !pdg.inst.id !126
DSWP:     	  %86 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 5, !pdg.inst.id !189
DSWP:     	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	  %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
DSWP:     External nodes: 0
DSWP:     Edges: 18
DSWP:     	From:	  %81 = phi %struct.strand_t* [ %83, %85 ], [ %52, %71 ], !pdg.inst.id !126
DSWP:     	To:	  %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180
DSWP:     	RAW (must)
DSWP:     	From:	  %86 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 5, !pdg.inst.id !189
DSWP:     	To:	  %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
DSWP:     	RAW (must)
DSWP:     	From:	  %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
DSWP:     	To:	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	To:	  %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
DSWP:     	CTRL
DSWP:     	From:	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	To:	  %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
DSWP:     	CTRL
DSWP:     	From:	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	To:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	CTRL
DSWP:     	From:	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	To:	  %86 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i64 0, i32 5, !pdg.inst.id !189
DSWP:     	CTRL
DSWP:     	From:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	To:	  %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
DSWP:     	CTRL
DSWP:     	From:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	To:	  br i1 %84, label %.loopexit1, label %85, !prof !349, !pdg.inst.id !191
DSWP:     	CTRL
DSWP:     	From:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	To:	  %82 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %81, i64 0, i32 4, !pdg.inst.id !180
DSWP:     	CTRL
DSWP:     	From:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	To:	  %81 = phi %struct.strand_t* [ %83, %85 ], [ %52, %71 ], !pdg.inst.id !126
DSWP:     	CTRL
DSWP:     	From:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	To:	  %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
DSWP:     	CTRL
DSWP:     	From:	  %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
DSWP:     	To:	  br i1 %88, label %80, label %89, !pdg.inst.id !197
DSWP:     	RAW (must)
DSWP:     	From:	  %87 = load i32, i32* %86, align 8, !tbaa !333, !pdg.inst.id !193
DSWP:     	To:	  %88 = icmp eq i32 %87, 0, !pdg.inst.id !195
DSWP:     	RAW (must)
DSWP:     	From:	  %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
DSWP:     	To:	  %84 = icmp eq %struct.strand_t* %83, null, !pdg.inst.id !187
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %52 = load %struct.strand_t*, %struct.strand_t** %51, align 8, !tbaa !344, !pdg.inst.id !124
DSWP:    Post loop env 2, producer:	  %83 = load %struct.strand_t*, %struct.strand_t** %82, align 8, !tbaa !348, !pdg.inst.id !182
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @2(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [0 x i8*]*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = load %struct.strand_t*, %struct.strand_t** %6
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to %struct.strand_t**
  %10 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %11 = bitcast i64* %10 to i32*
  br label %15

12:                                               ; preds = %14, %13
  ret void

13:                                               ; preds = %15
  store %struct.strand_t* %18, %struct.strand_t** %9
  store i32 0, i32* %11
  br label %12

14:                                               ; preds = %20
  store %struct.strand_t* %18, %struct.strand_t** %9
  store i32 1, i32* %11
  br label %12

15:                                               ; preds = %2, %20
  %16 = phi %struct.strand_t* [ %18, %20 ], [ %7, %2 ], !pdg.inst.id !30
  %17 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %16, i64 0, i32 4, !pdg.inst.id !31
  %18 = load %struct.strand_t*, %struct.strand_t** %17, align 8, !tbaa !32, !pdg.inst.id !38
  %19 = icmp eq %struct.strand_t* %18, null, !pdg.inst.id !39
  br i1 %19, label %13, label %20, !prof !40, !pdg.inst.id !41

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %18, i64 0, i32 5, !pdg.inst.id !42
  %22 = load i32, i32* %21, align 8, !tbaa !43, !pdg.inst.id !44
  %23 = icmp eq i32 %22, 0, !pdg.inst.id !45
  br i1 %23, label %15, label %14, !pdg.inst.id !46
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold norecurse nounwind readonly uwtable
define dso_local %struct.atom_t* @NAB_mnext(%struct.molecule_t* nocapture readonly, %struct.atom_t*) local_unnamed_addr #15 !prof !30 !pdg.args.id !31 !pdg.edges !34 {
  %3 = alloca [24 x i64]
  %4 = bitcast [24 x i64]* %3 to i8*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %8 = bitcast i64* %7 to %struct.strand_t**
  %9 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %10 = bitcast i64* %9 to i32*
  %11 = alloca [40 x i64]
  %12 = bitcast [40 x i64]* %11 to i8*
  %13 = getelementptr inbounds [40 x i64], [40 x i64]* %11, i64 0, i64 0
  %14 = bitcast i64* %13 to %struct.residue_t****
  %15 = getelementptr inbounds [40 x i64], [40 x i64]* %11, i64 0, i64 8
  %16 = getelementptr inbounds [40 x i64], [40 x i64]* %11, i64 0, i64 16
  %17 = bitcast i64* %16 to %struct.residue_t**
  %18 = getelementptr inbounds [40 x i64], [40 x i64]* %11, i64 0, i64 24
  %19 = getelementptr inbounds [40 x i64], [40 x i64]* %11, i64 0, i64 32
  %20 = bitcast i64* %19 to i32*
  %21 = icmp eq %struct.atom_t* %1, null, !pdg.inst.id !45
  br i1 %21, label %22, label %41, !prof !327, !pdg.inst.id !47

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !36
  %24 = load %struct.strand_t*, %struct.strand_t** %23, align 8, !tbaa !328, !pdg.inst.id !49
  %25 = icmp eq %struct.strand_t* %24, null, !pdg.inst.id !53
  br i1 %25, label %105, label %.preheader, !prof !332, !pdg.inst.id !55

.preheader:                                       ; preds = %22
  br label %26, !pdg.inst.id !223

26:                                               ; preds = %.preheader, %31
  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59
  %29 = load i32, i32* %28, align 8, !tbaa !333, !pdg.inst.id !63
  %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
  %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
  br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74

35:                                               ; preds = %26
  %.lcssa = phi %struct.strand_t* [ %27, %26 ], !pdg.inst.id !57
  %36 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa, i64 0, i32 7, !pdg.inst.id !76
  %37 = load %struct.residue_t**, %struct.residue_t*** %36, align 8, !tbaa !336, !pdg.inst.id !78
  %38 = load %struct.residue_t*, %struct.residue_t** %37, align 8, !tbaa !328, !pdg.inst.id !80
  %39 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %38, i64 0, i32 17, !pdg.inst.id !82
  %40 = load %struct.atom_t*, %struct.atom_t** %39, align 8, !tbaa !337, !pdg.inst.id !84
  br label %105, !pdg.inst.id !239

41:                                               ; preds = %2
  %42 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %1, i64 0, i32 5, !pdg.inst.id !41
  %43 = load %struct.residue_t*, %struct.residue_t** %42, align 8, !tbaa !339, !pdg.inst.id !88
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i64 0, i32 17, !pdg.inst.id !96
  %45 = load %struct.atom_t*, %struct.atom_t** %44, align 8, !tbaa !337, !pdg.inst.id !98
  %46 = ptrtoint %struct.atom_t* %1 to i64, !pdg.inst.id !43
  %47 = ptrtoint %struct.atom_t* %45 to i64, !pdg.inst.id !102
  %48 = sub i64 %46, %47, !pdg.inst.id !104
  %49 = sdiv exact i64 %48, 176, !pdg.inst.id !107
  %50 = trunc i64 %49 to i32, !pdg.inst.id !109
  %51 = add i32 %50, 1, !pdg.inst.id !111
  %52 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i64 0, i32 15, !pdg.inst.id !94
  %53 = load i32, i32* %52, align 8, !tbaa !342, !pdg.inst.id !117
  %54 = icmp slt i32 %51, %53, !pdg.inst.id !113
  br i1 %54, label %55, label %58, !prof !343, !pdg.inst.id !120

55:                                               ; preds = %41
  %56 = sext i32 %51 to i64, !pdg.inst.id !115
  %57 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %45, i64 %56, !pdg.inst.id !100
  br label %105, !pdg.inst.id !257

58:                                               ; preds = %41
  %59 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i64 0, i32 9, !pdg.inst.id !92
  %60 = load %struct.strand_t*, %struct.strand_t** %59, align 8, !tbaa !344, !pdg.inst.id !124
  %61 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %60, i64 0, i32 5, !pdg.inst.id !130
  %62 = load i32, i32* %61, align 8, !tbaa !333, !pdg.inst.id !132
  %63 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %60, i64 0, i32 7, !pdg.inst.id !128
  %64 = sext i32 %62 to i64, !pdg.inst.id !136
  %65 = load i32, i32* @0
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %107, label %67

67:                                               ; preds = %58, %70
  %68 = phi i64 [ %75, %70 ], [ 0, %58 ], !pdg.inst.id !144
  %69 = icmp slt i64 %68, %64, !pdg.inst.id !142
  br i1 %69, label %70, label %.loopexit2, !prof !345, !pdg.inst.id !150

70:                                               ; preds = %67
  %71 = load %struct.residue_t**, %struct.residue_t*** %63, align 8, !tbaa !336, !pdg.inst.id !140
  %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %71, i64 %68, !pdg.inst.id !145
  %73 = load %struct.residue_t*, %struct.residue_t** %72, align 8, !tbaa !328, !pdg.inst.id !153
  %74 = icmp eq %struct.residue_t* %73, %43, !pdg.inst.id !90
  %75 = add nuw nsw i64 %68, 1, !pdg.inst.id !148
  br i1 %74, label %76, label %67, !prof !346, !pdg.inst.id !156

76:                                               ; preds = %115, %70
  %.lcssa14 = phi i64 [ %75, %70 ], [ %114, %115 ], !pdg.inst.id !158
  %77 = trunc i64 %.lcssa14 to i32, !pdg.inst.id !161
  %78 = icmp sgt i32 %62, %77, !pdg.inst.id !134
  br i1 %78, label %82, label %79, !prof !347, !pdg.inst.id !166

.loopexit2:                                       ; preds = %115, %67
  br label %79, !pdg.inst.id !283

79:                                               ; preds = %.loopexit2, %76
  %80 = load i32, i32* @1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %119, label %90

82:                                               ; preds = %76
  %83 = load %struct.residue_t**, %struct.residue_t*** %63, align 8, !tbaa !336, !pdg.inst.id !138
  %84 = shl i64 %.lcssa14, 32, !pdg.inst.id !163
  %85 = ashr exact i64 %84, 32, !pdg.inst.id !170
  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %83, i64 %85, !pdg.inst.id !168
  %87 = load %struct.residue_t*, %struct.residue_t** %86, align 8, !tbaa !328, !pdg.inst.id !173
  %88 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %87, i64 0, i32 17, !pdg.inst.id !175
  %89 = load %struct.atom_t*, %struct.atom_t** %88, align 8, !tbaa !337, !pdg.inst.id !177
  br label %105, !pdg.inst.id !295

90:                                               ; preds = %79, %95
  %91 = phi %struct.strand_t* [ %93, %95 ], [ %60, %79 ], !pdg.inst.id !126
  %92 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %91, i64 0, i32 4, !pdg.inst.id !180
  %93 = load %struct.strand_t*, %struct.strand_t** %92, align 8, !tbaa !348, !pdg.inst.id !182
  %94 = icmp eq %struct.strand_t* %93, null, !pdg.inst.id !187
  br i1 %94, label %.loopexit1, label %95, !prof !349, !pdg.inst.id !191

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %93, i64 0, i32 5, !pdg.inst.id !189
  %97 = load i32, i32* %96, align 8, !tbaa !333, !pdg.inst.id !193
  %98 = icmp eq i32 %97, 0, !pdg.inst.id !195
  br i1 %98, label %90, label %99, !pdg.inst.id !197

99:                                               ; preds = %127, %95
  %.lcssa13 = phi %struct.strand_t* [ %93, %95 ], [ %126, %127 ], !pdg.inst.id !184
  %100 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa13, i64 0, i32 7, !pdg.inst.id !199
  %101 = load %struct.residue_t**, %struct.residue_t*** %100, align 8, !tbaa !336, !pdg.inst.id !201
  %102 = load %struct.residue_t*, %struct.residue_t** %101, align 8, !tbaa !328, !pdg.inst.id !203
  %103 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %102, i64 0, i32 17, !pdg.inst.id !205
  %104 = load %struct.atom_t*, %struct.atom_t** %103, align 8, !tbaa !337, !pdg.inst.id !207
  br label %105, !pdg.inst.id !322

.loopexit:                                        ; preds = %31
  br label %105, !pdg.inst.id !324

.loopexit1:                                       ; preds = %127, %90
  br label %105, !pdg.inst.id !326

105:                                              ; preds = %.loopexit1, %.loopexit, %22, %99, %82, %55, %35
  %106 = phi %struct.atom_t* [ %57, %55 ], [ %89, %82 ], [ %104, %99 ], [ %40, %35 ], [ null, %22 ], [ null, %.loopexit ], [ null, %.loopexit1 ], !pdg.inst.id !86
  ret %struct.atom_t* %106, !pdg.inst.id !210

107:                                              ; preds = %58
  store i32 1, i32* @0
  store %struct.residue_t*** %63, %struct.residue_t**** %14
  store i64 %64, i64* %15
  store %struct.residue_t* %43, %struct.residue_t** %17
  %108 = alloca [1 x i8*]
  %109 = getelementptr inbounds [1 x i8*], [1 x i8*]* %108, i64 0, i64 0
  %110 = bitcast i8** %109 to void (i8*, i8*)**
  store void (i8*, i8*)* @2, void (i8*, i8*)** %110
  %111 = bitcast [1 x i8*]* %108 to i8*
  %112 = alloca [0 x i64]
  %113 = bitcast [0 x i64]* %112 to i64*
  call void @stageDispatcher(i8* %12, i64* %113, i8* %111, i64 1, i64 0)
  %114 = load i64, i64* %18
  br label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds [40 x i64], [40 x i64]* %11, i64 0, i64 32
  %117 = load i64, i64* %116
  %118 = trunc i64 %117 to i32
  store i32 0, i32* @0
  switch i32 %118, label %.loopexit2 [
    i32 1, label %76
  ]

119:                                              ; preds = %79
  store i32 1, i32* @1
  store %struct.strand_t* %60, %struct.strand_t** %6
  %120 = alloca [1 x i8*]
  %121 = getelementptr inbounds [1 x i8*], [1 x i8*]* %120, i64 0, i64 0
  %122 = bitcast i8** %121 to void (i8*, i8*)**
  store void (i8*, i8*)* @3, void (i8*, i8*)** %122
  %123 = bitcast [1 x i8*]* %120 to i8*
  %124 = alloca [0 x i64]
  %125 = bitcast [0 x i64]* %124 to i64*
  call void @stageDispatcher(i8* %4, i64* %125, i8* %123, i64 1, i64 0)
  %126 = load %struct.strand_t*, %struct.strand_t** %8
  br label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %129 = load i64, i64* %128
  %130 = trunc i64 %129 to i32
  store i32 0, i32* @1
  switch i32 %130, label %.loopexit1 [
    i32 1, label %99
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "NAB_mnext"
Parallelizer:  Loop 2 = "  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:       %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
DSWP:       %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
DSWP:       %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
DSWP:       br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:       %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:       %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59
DSWP:       %29 = load i32, i32* %28, align 8, !tbaa !333, !pdg.inst.id !63
DSWP:       %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:       %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
DSWP:       %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
DSWP:       %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
DSWP:       br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:       %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:       %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59
DSWP:       %29 = load i32, i32* %28, align 8, !tbaa !333, !pdg.inst.id !63
DSWP:       %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 9
DSWP:     	  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:     	  %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
DSWP:     	  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
DSWP:     	  %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
DSWP:     	  br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:     	  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:     	  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59
DSWP:     	  %29 = load i32, i32* %28, align 8, !tbaa !333, !pdg.inst.id !63
DSWP:     	  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:     External nodes: 0
DSWP:     Edges: 18
DSWP:     	From:	  br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:     	To:	  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:     	CTRL
DSWP:     	From:	  %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
DSWP:     	To:	  br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:     	RAW (must)
DSWP:     	From:	  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:     	To:	  %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
DSWP:     	RAW (must)
DSWP:     	From:	  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:     	To:	  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:     	RAW (must)
DSWP:     	From:	  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59
DSWP:     	To:	  %29 = load i32, i32* %28, align 8, !tbaa !333, !pdg.inst.id !63
DSWP:     	RAW (must)
DSWP:     	From:	  %29 = load i32, i32* %28, align 8, !tbaa !333, !pdg.inst.id !63
DSWP:     	To:	  %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
DSWP:     	RAW (must)
DSWP:     	From:	  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:     	To:	  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
DSWP:     	RAW (must)
DSWP:     	From:	  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:     	To:	  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 5, !pdg.inst.id !59
DSWP:     	RAW (must)
DSWP:     	From:	  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
DSWP:     	To:	  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:     	RAW (must)
DSWP:     	From:	  %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
DSWP:     	To:	  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:     	To:	  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !61
DSWP:     	CTRL
DSWP:     	From:	  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:     	To:	  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !tbaa !328, !pdg.inst.id !69
DSWP:     	CTRL
DSWP:     	From:	  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:     	To:	  %34 = icmp eq %struct.strand_t* %33, null, !pdg.inst.id !72
DSWP:     	CTRL
DSWP:     	From:	  br i1 %30, label %31, label %35, !prof !332, !pdg.inst.id !67
DSWP:     	To:	  br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:     	CTRL
DSWP:     	From:	  br i1 %34, label %.loopexit, label %26, !pdg.inst.id !74
DSWP:     	To:	  %30 = icmp eq i32 %29, 0, !pdg.inst.id !65
DSWP:     	CTRL
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %24 = load %struct.strand_t*, %struct.strand_t** %23, align 8, !tbaa !328, !pdg.inst.id !49
DSWP:    Post loop env 2, producer:	  %27 = phi %struct.strand_t* [ %33, %31 ], [ %24, %.preheader ], !pdg.inst.id !51
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @4(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [0 x i8*]*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = load %struct.strand_t*, %struct.strand_t** %6
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to %struct.strand_t**
  %10 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %11 = bitcast i64* %10 to i32*
  br label %15

12:                                               ; preds = %14, %13
  ret void

13:                                               ; preds = %15
  store %struct.strand_t* %16, %struct.strand_t** %9
  store i32 0, i32* %11
  br label %12

14:                                               ; preds = %20
  store %struct.strand_t* %16, %struct.strand_t** %9
  store i32 1, i32* %11
  br label %12

15:                                               ; preds = %2, %20
  %16 = phi %struct.strand_t* [ %22, %20 ], [ %7, %2 ], !pdg.inst.id !30
  %17 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %16, i64 0, i32 5, !pdg.inst.id !31
  %18 = load i32, i32* %17, align 8, !tbaa !32, !pdg.inst.id !38
  %19 = icmp eq i32 %18, 0, !pdg.inst.id !39
  br i1 %19, label %20, label %13, !prof !40, !pdg.inst.id !41

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %16, i64 0, i32 4, !pdg.inst.id !42
  %22 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !tbaa !43, !pdg.inst.id !44
  %23 = icmp eq %struct.strand_t* %22, null, !pdg.inst.id !45
  br i1 %23, label %14, label %15, !pdg.inst.id !46
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold norecurse nounwind readonly uwtable
define dso_local %struct.atom_t* @NAB_mnext(%struct.molecule_t* nocapture readonly, %struct.atom_t*) local_unnamed_addr #15 !prof !30 !pdg.args.id !31 !pdg.edges !34 {
  %3 = alloca [24 x i64]
  %4 = bitcast [24 x i64]* %3 to i8*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %8 = bitcast i64* %7 to %struct.strand_t**
  %9 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %10 = bitcast i64* %9 to i32*
  %11 = alloca [24 x i64]
  %12 = bitcast [24 x i64]* %11 to i8*
  %13 = getelementptr inbounds [24 x i64], [24 x i64]* %11, i64 0, i64 0
  %14 = bitcast i64* %13 to %struct.strand_t**
  %15 = getelementptr inbounds [24 x i64], [24 x i64]* %11, i64 0, i64 8
  %16 = bitcast i64* %15 to %struct.strand_t**
  %17 = getelementptr inbounds [24 x i64], [24 x i64]* %11, i64 0, i64 16
  %18 = bitcast i64* %17 to i32*
  %19 = alloca [40 x i64]
  %20 = bitcast [40 x i64]* %19 to i8*
  %21 = getelementptr inbounds [40 x i64], [40 x i64]* %19, i64 0, i64 0
  %22 = bitcast i64* %21 to %struct.residue_t****
  %23 = getelementptr inbounds [40 x i64], [40 x i64]* %19, i64 0, i64 8
  %24 = getelementptr inbounds [40 x i64], [40 x i64]* %19, i64 0, i64 16
  %25 = bitcast i64* %24 to %struct.residue_t**
  %26 = getelementptr inbounds [40 x i64], [40 x i64]* %19, i64 0, i64 24
  %27 = getelementptr inbounds [40 x i64], [40 x i64]* %19, i64 0, i64 32
  %28 = bitcast i64* %27 to i32*
  %29 = icmp eq %struct.atom_t* %1, null, !pdg.inst.id !45
  br i1 %29, label %30, label %51, !prof !327, !pdg.inst.id !47

30:                                               ; preds = %2
  %31 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !36
  %32 = load %struct.strand_t*, %struct.strand_t** %31, align 8, !tbaa !328, !pdg.inst.id !49
  %33 = icmp eq %struct.strand_t* %32, null, !pdg.inst.id !53
  br i1 %33, label %115, label %.preheader, !prof !332, !pdg.inst.id !55

.preheader:                                       ; preds = %30
  %34 = load i32, i32* @2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %141, label %36

36:                                               ; preds = %.preheader, %41
  %37 = phi %struct.strand_t* [ %43, %41 ], [ %32, %.preheader ], !pdg.inst.id !51
  %38 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %37, i64 0, i32 5, !pdg.inst.id !59
  %39 = load i32, i32* %38, align 8, !tbaa !333, !pdg.inst.id !63
  %40 = icmp eq i32 %39, 0, !pdg.inst.id !65
  br i1 %40, label %41, label %45, !prof !332, !pdg.inst.id !67

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %37, i64 0, i32 4, !pdg.inst.id !61
  %43 = load %struct.strand_t*, %struct.strand_t** %42, align 8, !tbaa !328, !pdg.inst.id !69
  %44 = icmp eq %struct.strand_t* %43, null, !pdg.inst.id !72
  br i1 %44, label %.loopexit, label %36, !pdg.inst.id !74

45:                                               ; preds = %149, %36
  %.lcssa = phi %struct.strand_t* [ %37, %36 ], [ %148, %149 ], !pdg.inst.id !57
  %46 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa, i64 0, i32 7, !pdg.inst.id !76
  %47 = load %struct.residue_t**, %struct.residue_t*** %46, align 8, !tbaa !336, !pdg.inst.id !78
  %48 = load %struct.residue_t*, %struct.residue_t** %47, align 8, !tbaa !328, !pdg.inst.id !80
  %49 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %48, i64 0, i32 17, !pdg.inst.id !82
  %50 = load %struct.atom_t*, %struct.atom_t** %49, align 8, !tbaa !337, !pdg.inst.id !84
  br label %115, !pdg.inst.id !239

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %1, i64 0, i32 5, !pdg.inst.id !41
  %53 = load %struct.residue_t*, %struct.residue_t** %52, align 8, !tbaa !339, !pdg.inst.id !88
  %54 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i64 0, i32 17, !pdg.inst.id !96
  %55 = load %struct.atom_t*, %struct.atom_t** %54, align 8, !tbaa !337, !pdg.inst.id !98
  %56 = ptrtoint %struct.atom_t* %1 to i64, !pdg.inst.id !43
  %57 = ptrtoint %struct.atom_t* %55 to i64, !pdg.inst.id !102
  %58 = sub i64 %56, %57, !pdg.inst.id !104
  %59 = sdiv exact i64 %58, 176, !pdg.inst.id !107
  %60 = trunc i64 %59 to i32, !pdg.inst.id !109
  %61 = add i32 %60, 1, !pdg.inst.id !111
  %62 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i64 0, i32 15, !pdg.inst.id !94
  %63 = load i32, i32* %62, align 8, !tbaa !342, !pdg.inst.id !117
  %64 = icmp slt i32 %61, %63, !pdg.inst.id !113
  br i1 %64, label %65, label %68, !prof !343, !pdg.inst.id !120

65:                                               ; preds = %51
  %66 = sext i32 %61 to i64, !pdg.inst.id !115
  %67 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i64 %66, !pdg.inst.id !100
  br label %115, !pdg.inst.id !257

68:                                               ; preds = %51
  %69 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i64 0, i32 9, !pdg.inst.id !92
  %70 = load %struct.strand_t*, %struct.strand_t** %69, align 8, !tbaa !344, !pdg.inst.id !124
  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 5, !pdg.inst.id !130
  %72 = load i32, i32* %71, align 8, !tbaa !333, !pdg.inst.id !132
  %73 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 7, !pdg.inst.id !128
  %74 = sext i32 %72 to i64, !pdg.inst.id !136
  %75 = load i32, i32* @0
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %117, label %77

77:                                               ; preds = %68, %80
  %78 = phi i64 [ %85, %80 ], [ 0, %68 ], !pdg.inst.id !144
  %79 = icmp slt i64 %78, %74, !pdg.inst.id !142
  br i1 %79, label %80, label %.loopexit2, !prof !345, !pdg.inst.id !150

80:                                               ; preds = %77
  %81 = load %struct.residue_t**, %struct.residue_t*** %73, align 8, !tbaa !336, !pdg.inst.id !140
  %82 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %81, i64 %78, !pdg.inst.id !145
  %83 = load %struct.residue_t*, %struct.residue_t** %82, align 8, !tbaa !328, !pdg.inst.id !153
  %84 = icmp eq %struct.residue_t* %83, %53, !pdg.inst.id !90
  %85 = add nuw nsw i64 %78, 1, !pdg.inst.id !148
  br i1 %84, label %86, label %77, !prof !346, !pdg.inst.id !156

86:                                               ; preds = %125, %80
  %.lcssa14 = phi i64 [ %85, %80 ], [ %124, %125 ], !pdg.inst.id !158
  %87 = trunc i64 %.lcssa14 to i32, !pdg.inst.id !161
  %88 = icmp sgt i32 %72, %87, !pdg.inst.id !134
  br i1 %88, label %92, label %89, !prof !347, !pdg.inst.id !166

.loopexit2:                                       ; preds = %125, %77
  br label %89, !pdg.inst.id !283

89:                                               ; preds = %.loopexit2, %86
  %90 = load i32, i32* @1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %129, label %100

92:                                               ; preds = %86
  %93 = load %struct.residue_t**, %struct.residue_t*** %73, align 8, !tbaa !336, !pdg.inst.id !138
  %94 = shl i64 %.lcssa14, 32, !pdg.inst.id !163
  %95 = ashr exact i64 %94, 32, !pdg.inst.id !170
  %96 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %95, !pdg.inst.id !168
  %97 = load %struct.residue_t*, %struct.residue_t** %96, align 8, !tbaa !328, !pdg.inst.id !173
  %98 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %97, i64 0, i32 17, !pdg.inst.id !175
  %99 = load %struct.atom_t*, %struct.atom_t** %98, align 8, !tbaa !337, !pdg.inst.id !177
  br label %115, !pdg.inst.id !295

100:                                              ; preds = %89, %105
  %101 = phi %struct.strand_t* [ %103, %105 ], [ %70, %89 ], !pdg.inst.id !126
  %102 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %101, i64 0, i32 4, !pdg.inst.id !180
  %103 = load %struct.strand_t*, %struct.strand_t** %102, align 8, !tbaa !348, !pdg.inst.id !182
  %104 = icmp eq %struct.strand_t* %103, null, !pdg.inst.id !187
  br i1 %104, label %.loopexit1, label %105, !prof !349, !pdg.inst.id !191

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %103, i64 0, i32 5, !pdg.inst.id !189
  %107 = load i32, i32* %106, align 8, !tbaa !333, !pdg.inst.id !193
  %108 = icmp eq i32 %107, 0, !pdg.inst.id !195
  br i1 %108, label %100, label %109, !pdg.inst.id !197

109:                                              ; preds = %137, %105
  %.lcssa13 = phi %struct.strand_t* [ %103, %105 ], [ %136, %137 ], !pdg.inst.id !184
  %110 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa13, i64 0, i32 7, !pdg.inst.id !199
  %111 = load %struct.residue_t**, %struct.residue_t*** %110, align 8, !tbaa !336, !pdg.inst.id !201
  %112 = load %struct.residue_t*, %struct.residue_t** %111, align 8, !tbaa !328, !pdg.inst.id !203
  %113 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %112, i64 0, i32 17, !pdg.inst.id !205
  %114 = load %struct.atom_t*, %struct.atom_t** %113, align 8, !tbaa !337, !pdg.inst.id !207
  br label %115, !pdg.inst.id !322

.loopexit:                                        ; preds = %149, %41
  br label %115, !pdg.inst.id !324

.loopexit1:                                       ; preds = %137, %100
  br label %115, !pdg.inst.id !326

115:                                              ; preds = %.loopexit1, %.loopexit, %30, %109, %92, %65, %45
  %116 = phi %struct.atom_t* [ %67, %65 ], [ %99, %92 ], [ %114, %109 ], [ %50, %45 ], [ null, %30 ], [ null, %.loopexit ], [ null, %.loopexit1 ], !pdg.inst.id !86
  ret %struct.atom_t* %116, !pdg.inst.id !210

117:                                              ; preds = %68
  store i32 1, i32* @0
  store %struct.residue_t*** %73, %struct.residue_t**** %22
  store i64 %74, i64* %23
  store %struct.residue_t* %53, %struct.residue_t** %25
  %118 = alloca [1 x i8*]
  %119 = getelementptr inbounds [1 x i8*], [1 x i8*]* %118, i64 0, i64 0
  %120 = bitcast i8** %119 to void (i8*, i8*)**
  store void (i8*, i8*)* @3, void (i8*, i8*)** %120
  %121 = bitcast [1 x i8*]* %118 to i8*
  %122 = alloca [0 x i64]
  %123 = bitcast [0 x i64]* %122 to i64*
  call void @stageDispatcher(i8* %20, i64* %123, i8* %121, i64 1, i64 0)
  %124 = load i64, i64* %26
  br label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds [40 x i64], [40 x i64]* %19, i64 0, i64 32
  %127 = load i64, i64* %126
  %128 = trunc i64 %127 to i32
  store i32 0, i32* @0
  switch i32 %128, label %.loopexit2 [
    i32 1, label %86
  ]

129:                                              ; preds = %89
  store i32 1, i32* @1
  store %struct.strand_t* %70, %struct.strand_t** %14
  %130 = alloca [1 x i8*]
  %131 = getelementptr inbounds [1 x i8*], [1 x i8*]* %130, i64 0, i64 0
  %132 = bitcast i8** %131 to void (i8*, i8*)**
  store void (i8*, i8*)* @4, void (i8*, i8*)** %132
  %133 = bitcast [1 x i8*]* %130 to i8*
  %134 = alloca [0 x i64]
  %135 = bitcast [0 x i64]* %134 to i64*
  call void @stageDispatcher(i8* %12, i64* %135, i8* %133, i64 1, i64 0)
  %136 = load %struct.strand_t*, %struct.strand_t** %16
  br label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds [24 x i64], [24 x i64]* %11, i64 0, i64 16
  %139 = load i64, i64* %138
  %140 = trunc i64 %139 to i32
  store i32 0, i32* @1
  switch i32 %140, label %.loopexit1 [
    i32 1, label %109
  ]

141:                                              ; preds = %.preheader
  store i32 1, i32* @2
  store %struct.strand_t* %32, %struct.strand_t** %6
  %142 = alloca [1 x i8*]
  %143 = getelementptr inbounds [1 x i8*], [1 x i8*]* %142, i64 0, i64 0
  %144 = bitcast i8** %143 to void (i8*, i8*)**
  store void (i8*, i8*)* @5, void (i8*, i8*)** %144
  %145 = bitcast [1 x i8*]* %142 to i8*
  %146 = alloca [0 x i64]
  %147 = bitcast [0 x i64]* %146 to i64*
  call void @stageDispatcher(i8* %4, i64* %147, i8* %145, i64 1, i64 0)
  %148 = load %struct.strand_t*, %struct.strand_t** %8
  br label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %151 = load i64, i64* %150
  %152 = trunc i64 %151 to i32
  store i32 0, i32* @2
  switch i32 %152, label %45 [
    i32 1, label %.loopexit
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "addresidue"
Parallelizer:  Loop 3 = "  %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       br i1 %12, label %20, label %13, !prof !1701, !pdg.inst.id !69
DSWP:       %11 = tail call i32 @strcmp(i8* %10, i8* %1) #48, !pdg.inst.id !44
DSWP:       %12 = icmp eq i32 %11, 0, !pdg.inst.id !67
DSWP:       %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:       %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !74
DSWP:       br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:       %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !71
DSWP:       %14 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 4, !pdg.inst.id !62
DSWP:       %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60
DSWP:       %10 = load i8*, i8** %9, align 8, !tbaa !1698, !pdg.inst.id !64
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       br i1 %12, label %20, label %13, !prof !1701, !pdg.inst.id !69
DSWP:       %11 = tail call i32 @strcmp(i8* %10, i8* %1) #48, !pdg.inst.id !44
DSWP:       %12 = icmp eq i32 %11, 0, !pdg.inst.id !67
DSWP:       %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:       %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !74
DSWP:       br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:       %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !71
DSWP:       %14 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 4, !pdg.inst.id !62
DSWP:       %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60
DSWP:       %10 = load i8*, i8** %9, align 8, !tbaa !1698, !pdg.inst.id !64
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 10
DSWP:     	  br i1 %12, label %20, label %13, !prof !1701, !pdg.inst.id !69
DSWP:     	  %11 = tail call i32 @strcmp(i8* %10, i8* %1) #48, !pdg.inst.id !44
DSWP:     	  %12 = icmp eq i32 %11, 0, !pdg.inst.id !67
DSWP:     	  %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:     	  %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !74
DSWP:     	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !71
DSWP:     	  %14 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 4, !pdg.inst.id !62
DSWP:     	  %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60
DSWP:     	  %10 = load i8*, i8** %9, align 8, !tbaa !1698, !pdg.inst.id !64
DSWP:     External nodes: 0
DSWP:     Edges: 20
DSWP:     	From:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	To:	  %12 = icmp eq i32 %11, 0, !pdg.inst.id !67
DSWP:     	CTRL
DSWP:     	From:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	To:	  %11 = tail call i32 @strcmp(i8* %10, i8* %1) #48, !pdg.inst.id !44
DSWP:     	CTRL
DSWP:     	From:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	To:	  br i1 %12, label %20, label %13, !prof !1701, !pdg.inst.id !69
DSWP:     	CTRL
DSWP:     	From:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	To:	  %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60
DSWP:     	CTRL
DSWP:     	From:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	To:	  %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:     	CTRL
DSWP:     	From:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	To:	  %10 = load i8*, i8** %9, align 8, !tbaa !1698, !pdg.inst.id !64
DSWP:     	CTRL
DSWP:     	From:	  %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !74
DSWP:     	To:	  br i1 %16, label %.loopexit3, label %7, !pdg.inst.id !76
DSWP:     	RAW (must)
DSWP:     	From:	  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !71
DSWP:     	To:	  %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !74
DSWP:     	RAW (must)
DSWP:     	From:	  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !71
DSWP:     	To:	  %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:     	RAW (must)
DSWP:     	From:	  %14 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 4, !pdg.inst.id !62
DSWP:     	To:	  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !71
DSWP:     	RAW (must)
DSWP:     	From:	  %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60
DSWP:     	To:	  %10 = load i8*, i8** %9, align 8, !tbaa !1698, !pdg.inst.id !64
DSWP:     	RAW (must)
DSWP:     	From:	  %10 = load i8*, i8** %9, align 8, !tbaa !1698, !pdg.inst.id !64
DSWP:     	To:	  %11 = tail call i32 @strcmp(i8* %10, i8* %1) #48, !pdg.inst.id !44
DSWP:     	RAW (must)
DSWP:     	From:	  %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:     	To:	  %9 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 0, !pdg.inst.id !60
DSWP:     	RAW (must)
DSWP:     	From:	  %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:     	To:	  %14 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %8, i64 0, i32 4, !pdg.inst.id !62
DSWP:     	RAW (must)
DSWP:     	From:	  %12 = icmp eq i32 %11, 0, !pdg.inst.id !67
DSWP:     	To:	  br i1 %12, label %20, label %13, !prof !1701, !pdg.inst.id !69
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %5 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !tbaa !1693, !pdg.inst.id !50
DSWP:    Pre loop env 2, producer:	i8* %1
DSWP:    Post loop env 3, producer:	  %8 = phi %struct.strand_t* [ %15, %13 ], [ %5, %.preheader2 ], !pdg.inst.id !52
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @6(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [0 x i8*]*
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = load %struct.strand_t*, %struct.strand_t** %6
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %9 = bitcast i64* %8 to i8**
  %10 = load i8*, i8** %9
  %11 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  %12 = bitcast i64* %11 to %struct.strand_t**
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %14 = bitcast i64* %13 to i32*
  br label %18

15:                                               ; preds = %17, %16
  ret void

16:                                               ; preds = %18
  store %struct.strand_t* %19, %struct.strand_t** %12
  store i32 0, i32* %14
  br label %15

17:                                               ; preds = %24
  store %struct.strand_t* %19, %struct.strand_t** %12
  store i32 1, i32* %14
  br label %15

18:                                               ; preds = %2, %24
  %19 = phi %struct.strand_t* [ %26, %24 ], [ %7, %2 ], !pdg.inst.id !30
  %20 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %19, i64 0, i32 0, !pdg.inst.id !31
  %21 = load i8*, i8** %20, align 8, !tbaa !32, !pdg.inst.id !38
  %22 = tail call i32 @strcmp(i8* %21, i8* %10) #48, !pdg.inst.id !39
  %23 = icmp eq i32 %22, 0, !pdg.inst.id !40
  br i1 %23, label %16, label %24, !prof !41, !pdg.inst.id !42

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %19, i64 0, i32 4, !pdg.inst.id !43
  %26 = load %struct.strand_t*, %struct.strand_t** %25, align 8, !tbaa !44, !pdg.inst.id !45
  %27 = icmp eq %struct.strand_t* %26, null, !pdg.inst.id !46
  br i1 %27, label %17, label %18, !pdg.inst.id !47
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local i32 @addresidue(%struct.molecule_t* nocapture, i8*, %struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !35 {
  %4 = alloca [32 x i64]
  %5 = bitcast [32 x i64]* %4 to i8*
  %6 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 0
  %7 = bitcast i64* %6 to %struct.strand_t**
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 8
  %9 = bitcast i64* %8 to %struct.strand_t**
  %10 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 16
  %11 = bitcast i64* %10 to i8**
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 24
  %13 = bitcast i64* %12 to i32*
  %14 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !37
  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !1693, !pdg.inst.id !50
  %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !54
  br i1 %16, label %29, label %.preheader2, !prof !1697, !pdg.inst.id !56

.preheader2:                                      ; preds = %3
  %17 = load i32, i32* @3
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %135, label %19

19:                                               ; preds = %.preheader2, %25
  %20 = phi %struct.strand_t* [ %27, %25 ], [ %15, %.preheader2 ], !pdg.inst.id !52
  %21 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %20, i64 0, i32 0, !pdg.inst.id !60
  %22 = load i8*, i8** %21, align 8, !tbaa !1698, !pdg.inst.id !64
  %23 = tail call i32 @strcmp(i8* %22, i8* %1) #48, !pdg.inst.id !44
  %24 = icmp eq i32 %23, 0, !pdg.inst.id !67
  br i1 %24, label %32, label %25, !prof !1701, !pdg.inst.id !69

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %20, i64 0, i32 4, !pdg.inst.id !62
  %27 = load %struct.strand_t*, %struct.strand_t** %26, align 8, !tbaa !1693, !pdg.inst.id !71
  %28 = icmp eq %struct.strand_t* %27, null, !pdg.inst.id !74
  br i1 %28, label %.loopexit3, label %19, !pdg.inst.id !76

.loopexit3:                                       ; preds = %143, %25
  br label %29, !pdg.inst.id !1492

29:                                               ; preds = %.loopexit3, %3
  %30 = getelementptr [28 x i8], [28 x i8]* @.str.5.213, i64 0, i64 0, !pdg.inst.id !78
  %31 = tail call i32 @rt_errormsg_s(i32 1, i8* %30, i8* %1) #49, !pdg.inst.id !46
  br label %133, !pdg.inst.id !1496

32:                                               ; preds = %143, %19
  %.lcssa8 = phi %struct.strand_t* [ %20, %19 ], [ %142, %143 ], !pdg.inst.id !58
  %33 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 0, !pdg.inst.id !86
  %34 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 5, !pdg.inst.id !84
  %35 = load i32, i32* %34, align 8, !tbaa !1702, !pdg.inst.id !104
  %36 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 6, !pdg.inst.id !82
  %37 = load i32, i32* %36, align 4, !tbaa !1703, !pdg.inst.id !114
  %38 = icmp eq i32 %35, %37, !pdg.inst.id !108
  br i1 %38, label %39, label %123, !prof !1697, !pdg.inst.id !117

39:                                               ; preds = %32
  %40 = add nsw i32 %35, 10, !pdg.inst.id !106
  %41 = sext i32 %40 to i64, !pdg.inst.id !119
  %42 = shl nsw i64 %41, 3, !pdg.inst.id !122
  %43 = tail call noalias i8* @malloc(i64 %42) #49, !pdg.inst.id !124
  %44 = bitcast i8* %43 to %struct.residue_t**, !pdg.inst.id !130
  %45 = icmp eq i8* %43, null, !pdg.inst.id !128
  br i1 %45, label %57, label %46, !pdg.inst.id !142

46:                                               ; preds = %39
  %47 = load i32, i32* %34, align 8, !tbaa !1702, !pdg.inst.id !98
  %48 = icmp sgt i32 %47, 0, !pdg.inst.id !146
  br i1 %48, label %49, label %113, !pdg.inst.id !148

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !80
  %51 = sext i32 %47 to i64, !pdg.inst.id !144
  %52 = add nsw i64 %51, -1, !pdg.inst.id !164
  %53 = and i64 %51, 3, !pdg.inst.id !162
  %54 = icmp ult i64 %52, 3, !pdg.inst.id !166
  br i1 %54, label %98, label %55, !pdg.inst.id !173

55:                                               ; preds = %49
  %56 = sub nsw i64 %51, %53, !pdg.inst.id !160
  br label %65, !pdg.inst.id !1527

57:                                               ; preds = %39
  %58 = load i8*, i8** %33, align 8, !tbaa !1698, !pdg.inst.id !96
  %59 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !179
  %60 = getelementptr [28 x i8], [28 x i8]* @.str.6.214, i64 0, i64 0, !pdg.inst.id !181
  %61 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %59, i8* %60, i8* %58) #49, !pdg.inst.id !177
  %62 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !183
  %63 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !186
  %64 = tail call i32 @rt_errormsg_s(i32 1, i8* %62, i8* %63) #49, !pdg.inst.id !184
  br label %133, !pdg.inst.id !1540

65:                                               ; preds = %._crit_edge1, %55
  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
  %67 = phi i64 [ %56, %55 ], [ %96, %._crit_edge1 ], !pdg.inst.id !175
  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
  %70 = bitcast %struct.residue_t** %69 to i64*, !pdg.inst.id !203
  %71 = load i64, i64* %70, align 8, !tbaa !1693, !pdg.inst.id !205
  %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
  %73 = bitcast %struct.residue_t** %72 to i64*, !pdg.inst.id !209
  store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
  %74 = or i64 %66, 1, !pdg.inst.id !193
  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
  %77 = bitcast %struct.residue_t** %76 to i64*, !pdg.inst.id !216
  %78 = load i64, i64* %77, align 8, !tbaa !1693, !pdg.inst.id !218
  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
  %80 = bitcast %struct.residue_t** %79 to i64*, !pdg.inst.id !222
  store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
  %81 = or i64 %66, 2, !pdg.inst.id !191
  %82 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !152
  %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
  %84 = bitcast %struct.residue_t** %83 to i64*, !pdg.inst.id !229
  %85 = load i64, i64* %84, align 8, !tbaa !1693, !pdg.inst.id !231
  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
  %87 = bitcast %struct.residue_t** %86 to i64*, !pdg.inst.id !235
  store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
  %88 = or i64 %66, 3, !pdg.inst.id !189
  %89 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !150
  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
  %91 = bitcast %struct.residue_t** %90 to i64*, !pdg.inst.id !242
  %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
  %94 = bitcast %struct.residue_t** %93 to i64*, !pdg.inst.id !248
  store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
  %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
  %96 = add i64 %67, -4, !pdg.inst.id !200
  %97 = icmp eq i64 %96, 0, !pdg.inst.id !254
  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257

._crit_edge1:                                     ; preds = %65
  br label %65, !pdg.inst.id !1616

.loopexit1:                                       ; preds = %65
  %.lcssa = phi i64 [ %95, %65 ], !pdg.inst.id !251
  br label %98, !pdg.inst.id !1619

98:                                               ; preds = %.loopexit1, %49
  %99 = phi i64 [ 0, %49 ], [ %.lcssa, %.loopexit1 ], !pdg.inst.id !259
  %100 = icmp eq i64 %53, 0, !pdg.inst.id !171
  br i1 %100, label %113, label %.preheader, !pdg.inst.id !263

.preheader:                                       ; preds = %98
  br label %101, !pdg.inst.id !1624

101:                                              ; preds = %._crit_edge, %.preheader
  %102 = phi i64 [ %110, %._crit_edge ], [ %99, %.preheader ], !pdg.inst.id !261
  %103 = phi i64 [ %111, %._crit_edge ], [ %53, %.preheader ], !pdg.inst.id !168
  %104 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !156
  %105 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %104, i64 %102, !pdg.inst.id !268
  %106 = bitcast %struct.residue_t** %105 to i64*, !pdg.inst.id !273
  %107 = load i64, i64* %106, align 8, !tbaa !1693, !pdg.inst.id !275
  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %102, !pdg.inst.id !138
  %109 = bitcast %struct.residue_t** %108 to i64*, !pdg.inst.id !279
  store i64 %107, i64* %109, align 8, !tbaa !1693, !pdg.inst.id !277
  %110 = add nuw nsw i64 %102, 1, !pdg.inst.id !265
  %111 = add nsw i64 %103, -1, !pdg.inst.id !270
  %112 = icmp eq i64 %111, 0, !pdg.inst.id !284
  br i1 %112, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286

._crit_edge:                                      ; preds = %101
  br label %101, !pdg.inst.id !1653

.loopexit:                                        ; preds = %101
  br label %113, !pdg.inst.id !1655

113:                                              ; preds = %.loopexit, %98, %46
  %114 = load i32, i32* %36, align 4, !tbaa !1703, !pdg.inst.id !112
  %115 = icmp sgt i32 %114, 0, !pdg.inst.id !288
  br i1 %115, label %116, label %120, !pdg.inst.id !290

116:                                              ; preds = %113
  %117 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !88
  %118 = bitcast %struct.residue_t*** %117 to i8**, !pdg.inst.id !292
  %119 = load i8*, i8** %118, align 8, !tbaa !1704, !pdg.inst.id !294
  tail call void @free(i8* %119) #49, !pdg.inst.id !296
  br label %120, !pdg.inst.id !1662

120:                                              ; preds = %113, %116
  store i32 %40, i32* %36, align 4, !tbaa !1703, !pdg.inst.id !110
  %121 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !90
  %122 = bitcast %struct.residue_t*** %121 to i8**, !pdg.inst.id !298
  store i8* %43, i8** %122, align 8, !tbaa !1704, !pdg.inst.id !126
  br label %123, !pdg.inst.id !1536

123:                                              ; preds = %120, %32
  %124 = tail call %struct.residue_t* @copyresidue(%struct.residue_t* %2) #49, !pdg.inst.id !48
  %125 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !94
  %126 = load %struct.residue_t**, %struct.residue_t*** %125, align 8, !tbaa !1704, !pdg.inst.id !305
  %127 = load i32, i32* %34, align 8, !tbaa !1702, !pdg.inst.id !102
  %128 = sext i32 %127 to i64, !pdg.inst.id !311
  %129 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %126, i64 %128, !pdg.inst.id !307
  store %struct.residue_t* %124, %struct.residue_t** %129, align 8, !tbaa !1693, !pdg.inst.id !303
  %130 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %124, i64 0, i32 9, !pdg.inst.id !301
  store %struct.strand_t* %.lcssa8, %struct.strand_t** %130, align 8, !tbaa !1707, !pdg.inst.id !92
  %131 = add nsw i32 %127, 1, !pdg.inst.id !309
  store i32 %131, i32* %34, align 8, !tbaa !1702, !pdg.inst.id !100
  %132 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 5, !pdg.inst.id !42
  store i32 0, i32* %132, align 8, !tbaa !1709, !pdg.inst.id !317
  br label %133, !pdg.inst.id !1678

133:                                              ; preds = %123, %57, %29
  %134 = phi i32 [ 1, %29 ], [ 0, %57 ], [ 0, %123 ], !pdg.inst.id !319
  ret i32 %134, !pdg.inst.id !320

135:                                              ; preds = %.preheader2
  store i32 1, i32* @3
  store %struct.strand_t* %15, %struct.strand_t** %9
  store i8* %1, i8** %11
  %136 = alloca [1 x i8*]
  %137 = getelementptr inbounds [1 x i8*], [1 x i8*]* %136, i64 0, i64 0
  %138 = bitcast i8** %137 to void (i8*, i8*)**
  store void (i8*, i8*)* @7, void (i8*, i8*)** %138
  %139 = bitcast [1 x i8*]* %136 to i8*
  %140 = alloca [0 x i64]
  %141 = bitcast [0 x i64]* %140 to i64*
  call void @stageDispatcher(i8* %5, i64* %141, i8* %139, i64 1, i64 0)
  %142 = load %struct.strand_t*, %struct.strand_t** %7
  br label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 24
  %145 = load i64, i64* %144
  %146 = trunc i64 %145 to i32
  store i32 0, i32* @3
  switch i32 %146, label %32 [
    i32 1, label %.loopexit3
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "addresidue"
Parallelizer:  Loop 4 = "  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 5
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:       %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:   SCC: 1 Internal nodes:
DSWP:       %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
DSWP:       %73 = bitcast %struct.residue_t** %72 to i64*, !pdg.inst.id !209
DSWP:       %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
DSWP:       %87 = bitcast %struct.residue_t** %86 to i64*, !pdg.inst.id !235
DSWP:       %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
DSWP:       %80 = bitcast %struct.residue_t** %79 to i64*, !pdg.inst.id !222
DSWP:       store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
DSWP:       %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
DSWP:       %89 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !150
DSWP:       store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
DSWP:       %78 = load i64, i64* %77, align 8, !tbaa !1693, !pdg.inst.id !218
DSWP:       %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
DSWP:       %94 = bitcast %struct.residue_t** %93 to i64*, !pdg.inst.id !248
DSWP:       %70 = bitcast %struct.residue_t** %69 to i64*, !pdg.inst.id !203
DSWP:       %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:       %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:       %77 = bitcast %struct.residue_t** %76 to i64*, !pdg.inst.id !216
DSWP:       %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:       %91 = bitcast %struct.residue_t** %90 to i64*, !pdg.inst.id !242
DSWP:       store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
DSWP:       %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
DSWP:       %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:       %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:       %71 = load i64, i64* %70, align 8, !tbaa !1693, !pdg.inst.id !205
DSWP:       store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
DSWP:       %82 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !152
DSWP:       %84 = bitcast %struct.residue_t** %83 to i64*, !pdg.inst.id !229
DSWP:       %85 = load i64, i64* %84, align 8, !tbaa !1693, !pdg.inst.id !231
DSWP:   SCC: 2 Internal nodes:
DSWP:       %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:   SCC: 3 Internal nodes:
DSWP:       %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:   SCC: 4 Internal nodes:
DSWP:       %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:   Set:  0
DSWP:    Children: Set:  3; Set:  1; Set:  4; Set:  2; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  3; Set:  0; Set:  4; Set:  2; 
DSWP:   Set:  2
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:   Set:  3
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:   Set:  4
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
Heuristic:   PCA: Checking: Set:  0 Set:  3 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  1
 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  4 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  2 Is possible
Heuristic:   PCA: Checking: Set:  3 Set:  1 Is possible
Heuristic:   PCA: Checking: Set:  4 Set:  1 Is possible
Heuristic:   PCA: Checking: Set:  2 Set:  1 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 5
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:       %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:   SCC: 1 Internal nodes:
DSWP:       %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
DSWP:       %73 = bitcast %struct.residue_t** %72 to i64*, !pdg.inst.id !209
DSWP:       %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
DSWP:       %87 = bitcast %struct.residue_t** %86 to i64*, !pdg.inst.id !235
DSWP:       %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
DSWP:       %80 = bitcast %struct.residue_t** %79 to i64*, !pdg.inst.id !222
DSWP:       store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
DSWP:       %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
DSWP:       %89 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !150
DSWP:       store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
DSWP:       %78 = load i64, i64* %77, align 8, !tbaa !1693, !pdg.inst.id !218
DSWP:       %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
DSWP:       %94 = bitcast %struct.residue_t** %93 to i64*, !pdg.inst.id !248
DSWP:       %70 = bitcast %struct.residue_t** %69 to i64*, !pdg.inst.id !203
DSWP:       %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:       %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:       %77 = bitcast %struct.residue_t** %76 to i64*, !pdg.inst.id !216
DSWP:       %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:       %91 = bitcast %struct.residue_t** %90 to i64*, !pdg.inst.id !242
DSWP:       store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
DSWP:       %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
DSWP:       %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:       %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:       %71 = load i64, i64* %70, align 8, !tbaa !1693, !pdg.inst.id !205
DSWP:       store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
DSWP:       %82 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !152
DSWP:       %84 = bitcast %struct.residue_t** %83 to i64*, !pdg.inst.id !229
DSWP:       %85 = load i64, i64* %84, align 8, !tbaa !1693, !pdg.inst.id !231
DSWP:   SCC: 2 Internal nodes:
DSWP:       %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:   SCC: 3 Internal nodes:
DSWP:       %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:   SCC: 4 Internal nodes:
DSWP:       %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:   Set:  0
DSWP:    Children: Set:  3; Set:  1; Set:  4; Set:  2; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  3; Set:  0; Set:  4; Set:  2; 
DSWP:   Set:  2
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:   Set:  3
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:   Set:  4
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:  There are 5 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 2
DSWP:     	  %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:     	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     External nodes: 6
DSWP:     	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:     	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	  %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
DSWP:     	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     Edges: 9
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:     	RAW (must)
DSWP:     	From:	  %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:     	To:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	To:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	CTRL
DSWP:     	From:	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	To:	  %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 1
DSWP:     Internal nodes: 1
DSWP:     	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     External nodes: 4
DSWP:     	  %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
DSWP:     	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
DSWP:     	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Edges: 4
DSWP:     	From:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	To:	  %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
DSWP:     	RAW (must)
DSWP:     	From:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	To:	  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	To:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 2
DSWP:     Internal nodes: 1
DSWP:     	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     External nodes: 4
DSWP:     	  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
DSWP:     	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
DSWP:     	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Edges: 4
DSWP:     	From:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	To:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
DSWP:     	RAW (must)
DSWP:     	From:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	To:	  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	To:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 3
DSWP:     Internal nodes: 1
DSWP:     	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     External nodes: 4
DSWP:     	  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:     	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
DSWP:     	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     Edges: 4
DSWP:     	From:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     	To:	  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:     	RAW (must)
DSWP:     	From:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     	To:	  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
DSWP:     	RAW (must)
DSWP:     	From:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	To:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	To:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 4
DSWP:     Internal nodes: 28
DSWP:     	  %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
DSWP:     	  %73 = bitcast %struct.residue_t** %72 to i64*, !pdg.inst.id !209
DSWP:     	  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
DSWP:     	  %87 = bitcast %struct.residue_t** %86 to i64*, !pdg.inst.id !235
DSWP:     	  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
DSWP:     	  %80 = bitcast %struct.residue_t** %79 to i64*, !pdg.inst.id !222
DSWP:     	  store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
DSWP:     	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
DSWP:     	  %89 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !150
DSWP:     	  store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
DSWP:     	  %78 = load i64, i64* %77, align 8, !tbaa !1693, !pdg.inst.id !218
DSWP:     	  %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
DSWP:     	  %94 = bitcast %struct.residue_t** %93 to i64*, !pdg.inst.id !248
DSWP:     	  %70 = bitcast %struct.residue_t** %69 to i64*, !pdg.inst.id !203
DSWP:     	  %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:     	  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:     	  %77 = bitcast %struct.residue_t** %76 to i64*, !pdg.inst.id !216
DSWP:     	  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:     	  %91 = bitcast %struct.residue_t** %90 to i64*, !pdg.inst.id !242
DSWP:     	  store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
DSWP:     	  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
DSWP:     	  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:     	  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:     	  %71 = load i64, i64* %70, align 8, !tbaa !1693, !pdg.inst.id !205
DSWP:     	  store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
DSWP:     	  %82 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !152
DSWP:     	  %84 = bitcast %struct.residue_t** %83 to i64*, !pdg.inst.id !229
DSWP:     	  %85 = load i64, i64* %84, align 8, !tbaa !1693, !pdg.inst.id !231
DSWP:     External nodes: 5
DSWP:     	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     	  br i1 %97, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257
DSWP:     	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     Edges: 124
DSWP:     	From:	  %77 = bitcast %struct.residue_t** %76 to i64*, !pdg.inst.id !216
DSWP:     	To:	  %78 = load i64, i64* %77, align 8, !tbaa !1693, !pdg.inst.id !218
DSWP:     	RAW (must)
DSWP:     	From:	  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:     	To:	  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:     	RAW (must)
DSWP:     	From:	  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:     	To:	  store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:     	To:	  store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:     	To:	  store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %75 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !154
DSWP:     	To:	  store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:     	To:	  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:     	RAW (must)
DSWP:     	From:	  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:     	To:	  store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:     	To:	  store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:     	To:	  store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %68 = load %struct.residue_t**, %struct.residue_t*** %50, align 8, !tbaa !1704, !pdg.inst.id !158
DSWP:     	To:	  store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:     	To:	  store i64 %71, i64* %73, align 8, !tbaa !1693, !pdg.inst.id !207
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:     	To:	  store i64 %92, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !246
DSWP:     	RAW (must)
DSWP:     	From:	  %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:     	To:	  store i64 %78, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !220
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %92 = load i64, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !244
DSWP:     	To:	  store i64 %85, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !233
DSWP:     	WAR (may) from memory 
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 0 1 2 3 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 5 
DSWP:      Pop value queues: 0 
DSWP:    Stage: 2
DSWP:      Push value queues: 6 
DSWP:      Pop value queues: 1 
DSWP:    Stage: 3
DSWP:      Push value queues: 4 
DSWP:      Pop value queues: 2 
DSWP:    Stage: 4
DSWP:      Push value queues: 
DSWP:      Pop value queues: 3 4 5 6 
DSWP:    Queue: 0
DSWP:     Producer:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %66 = phi i64 [ 0, %55 ], [ %95, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %68, i64 %66, !pdg.inst.id !198
DSWP:     Consumer:	  %72 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %66, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %74 = or i64 %66, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !212
DSWP:     Consumer:	  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %74, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %81 = or i64 %66, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %82, i64 %81, !pdg.inst.id !225
DSWP:     Consumer:	  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %81, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %88 = or i64 %66, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %89, i64 %88, !pdg.inst.id !238
DSWP:     Consumer:	  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %44, i64 %88, !pdg.inst.id !132
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %56 = sub nsw i64 %51, %53, !pdg.inst.id !160
DSWP:    Pre loop env 2, producer:	  %44 = bitcast i8* %43 to %struct.residue_t**, !pdg.inst.id !130
DSWP:    Pre loop env 3, producer:	  %50 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !80
DSWP:    Post loop env 4, producer:	  %95 = add nuw nsw i64 %66, 4, !pdg.inst.id !195
DSWP:  Create 5 pipeline stages
Pipeline stage 0:

define void @8(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [7 x i8*]*
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 0
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 1
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 2
  %14 = bitcast i8** %13 to %"class.MARC::ThreadSafeQueue.54"**
  %15 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %14
  %16 = alloca i64
  %17 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 3
  %18 = bitcast i8** %17 to %"class.MARC::ThreadSafeQueue.54"**
  %19 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %18
  %20 = alloca i64
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %22 = load i64, i64* %21
  %23 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  br label %26

24:                                               ; preds = %25
  ret void

25:                                               ; preds = %26
  store i64 %49, i64* %23
  br label %24

26:                                               ; preds = %2, %52
  %27 = phi i64 [ 0, %2 ], [ %49, %52 ], !pdg.inst.id !30
  %28 = phi i64 [ %22, %2 ], [ %50, %52 ], !pdg.inst.id !31
  store i64 %27, i64* %20
  %29 = load i64, i64* %20, align 8, !tbaa !32, !pdg.inst.id !36
  %30 = bitcast %"class.MARC::ThreadSafeQueue.54"* %19 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %31 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %30, align 8, !tbaa !38, !pdg.inst.id !40
  %32 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %31, i64 3, !pdg.inst.id !41
  %33 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %32, align 8, !pdg.inst.id !42
  call void %33(%"class.MARC::ThreadSafeQueue.54"* %19, i64 %29), !pdg.inst.id !43
  store i64 %27, i64* %16
  %34 = load i64, i64* %16, align 8, !tbaa !32, !pdg.inst.id !36
  %35 = bitcast %"class.MARC::ThreadSafeQueue.54"* %15 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %36 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %35, align 8, !tbaa !38, !pdg.inst.id !40
  %37 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %36, i64 3, !pdg.inst.id !41
  %38 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %37, align 8, !pdg.inst.id !42
  call void %38(%"class.MARC::ThreadSafeQueue.54"* %15, i64 %34), !pdg.inst.id !43
  store i64 %27, i64* %12
  %39 = load i64, i64* %12, align 8, !tbaa !32, !pdg.inst.id !36
  %40 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %41 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %40, align 8, !tbaa !38, !pdg.inst.id !40
  %42 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %41, i64 3, !pdg.inst.id !41
  %43 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %42, align 8, !pdg.inst.id !42
  call void %43(%"class.MARC::ThreadSafeQueue.54"* %11, i64 %39), !pdg.inst.id !43
  store i64 %27, i64* %8
  %44 = load i64, i64* %8, align 8, !tbaa !32, !pdg.inst.id !36
  %45 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %46 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %45, align 8, !tbaa !38, !pdg.inst.id !40
  %47 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %46, i64 3, !pdg.inst.id !41
  %48 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %47, align 8, !pdg.inst.id !42
  call void %48(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %44), !pdg.inst.id !43
  %49 = add nuw nsw i64 %27, 4, !pdg.inst.id !44
  %50 = add i64 %28, -4, !pdg.inst.id !45
  %51 = icmp eq i64 %50, 0, !pdg.inst.id !46
  br i1 %51, label %25, label %52, !pdg.inst.id !47

52:                                               ; preds = %26
  br label %26, !pdg.inst.id !48
}

Pipeline stage 1:

define void @9(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [7 x i8*]*
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 5
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 0
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = load i64, i64* %13
  br label %17

15:                                               ; preds = %16
  ret void

16:                                               ; preds = %17
  br label %15

17:                                               ; preds = %2, %33
  %18 = phi i64 [ %14, %2 ], [ %31, %33 ], !pdg.inst.id !30
  %19 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %20 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %19, align 8, !tbaa !32, !pdg.inst.id !35
  %21 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %20, i64 1, !pdg.inst.id !36
  %22 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %21, align 8, !pdg.inst.id !37
  %23 = call zeroext i1 %22(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %24 = load i64, i64* %12
  %25 = or i64 %24, 2, !pdg.inst.id !39
  store i64 %25, i64* %8
  %26 = load i64, i64* %8, align 8, !tbaa !40, !pdg.inst.id !43
  %27 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !44
  %28 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %27, align 8, !tbaa !32, !pdg.inst.id !45
  %29 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %28, i64 3, !pdg.inst.id !46
  %30 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %29, align 8, !pdg.inst.id !47
  call void %30(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %26), !pdg.inst.id !48
  %31 = add i64 %18, -4, !pdg.inst.id !49
  %32 = icmp eq i64 %31, 0, !pdg.inst.id !50
  br i1 %32, label %16, label %33, !pdg.inst.id !51

33:                                               ; preds = %17
  br label %17, !pdg.inst.id !52
}

Pipeline stage 2:

define void @10(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [7 x i8*]*
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 6
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 1
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = load i64, i64* %13
  br label %17

15:                                               ; preds = %16
  ret void

16:                                               ; preds = %17
  br label %15

17:                                               ; preds = %2, %33
  %18 = phi i64 [ %14, %2 ], [ %31, %33 ], !pdg.inst.id !30
  %19 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %20 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %19, align 8, !tbaa !32, !pdg.inst.id !35
  %21 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %20, i64 1, !pdg.inst.id !36
  %22 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %21, align 8, !pdg.inst.id !37
  %23 = call zeroext i1 %22(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %24 = load i64, i64* %12
  %25 = or i64 %24, 3, !pdg.inst.id !39
  store i64 %25, i64* %8
  %26 = load i64, i64* %8, align 8, !tbaa !40, !pdg.inst.id !43
  %27 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !44
  %28 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %27, align 8, !tbaa !32, !pdg.inst.id !45
  %29 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %28, i64 3, !pdg.inst.id !46
  %30 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %29, align 8, !pdg.inst.id !47
  call void %30(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %26), !pdg.inst.id !48
  %31 = add i64 %18, -4, !pdg.inst.id !49
  %32 = icmp eq i64 %31, 0, !pdg.inst.id !50
  br i1 %32, label %16, label %33, !pdg.inst.id !51

33:                                               ; preds = %17
  br label %17, !pdg.inst.id !52
}

Pipeline stage 3:

define void @11(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [7 x i8*]*
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 4
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 2
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = load i64, i64* %13
  br label %17

15:                                               ; preds = %16
  ret void

16:                                               ; preds = %17
  br label %15

17:                                               ; preds = %2, %33
  %18 = phi i64 [ %14, %2 ], [ %31, %33 ], !pdg.inst.id !30
  %19 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %20 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %19, align 8, !tbaa !32, !pdg.inst.id !35
  %21 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %20, i64 1, !pdg.inst.id !36
  %22 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %21, align 8, !pdg.inst.id !37
  %23 = call zeroext i1 %22(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %24 = load i64, i64* %12
  %25 = or i64 %24, 1, !pdg.inst.id !39
  store i64 %25, i64* %8
  %26 = load i64, i64* %8, align 8, !tbaa !40, !pdg.inst.id !43
  %27 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !44
  %28 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %27, align 8, !tbaa !32, !pdg.inst.id !45
  %29 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %28, i64 3, !pdg.inst.id !46
  %30 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %29, align 8, !pdg.inst.id !47
  call void %30(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %26), !pdg.inst.id !48
  %31 = add i64 %18, -4, !pdg.inst.id !49
  %32 = icmp eq i64 %31, 0, !pdg.inst.id !50
  br i1 %32, label %16, label %33, !pdg.inst.id !51

33:                                               ; preds = %17
  br label %17, !pdg.inst.id !52
}

Pipeline stage 4:

define void @12(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [7 x i8*]*
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 3
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 4
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 5
  %14 = bitcast i8** %13 to %"class.MARC::ThreadSafeQueue.54"**
  %15 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %14
  %16 = alloca i64
  %17 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 6
  %18 = bitcast i8** %17 to %"class.MARC::ThreadSafeQueue.54"**
  %19 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %18
  %20 = alloca i64
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %22 = load i64, i64* %21
  %23 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %24 = bitcast i64* %23 to %struct.residue_t***
  %25 = load %struct.residue_t**, %struct.residue_t*** %24
  %26 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %27 = bitcast i64* %26 to %struct.residue_t****
  %28 = load %struct.residue_t***, %struct.residue_t**** %27
  br label %31

29:                                               ; preds = %30
  ret void

30:                                               ; preds = %31
  br label %29

31:                                               ; preds = %2, %83
  %32 = phi i64 [ %22, %2 ], [ %81, %83 ], !pdg.inst.id !30
  %33 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %34 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %33, align 8, !tbaa !32, !pdg.inst.id !35
  %35 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %34, i64 1, !pdg.inst.id !36
  %36 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %35, align 8, !pdg.inst.id !37
  %37 = call zeroext i1 %36(%"class.MARC::ThreadSafeQueue.54"* %7, i64* dereferenceable(8) %8), !pdg.inst.id !38
  %38 = load i64, i64* %8
  %39 = load %struct.residue_t**, %struct.residue_t*** %28, align 8, !tbaa !39, !pdg.inst.id !45
  %40 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %39, i64 %38, !pdg.inst.id !46
  %41 = bitcast %struct.residue_t** %40 to i64*, !pdg.inst.id !47
  %42 = load i64, i64* %41, align 8, !tbaa !48, !pdg.inst.id !49
  %43 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %25, i64 %38, !pdg.inst.id !50
  %44 = bitcast %struct.residue_t** %43 to i64*, !pdg.inst.id !51
  store i64 %42, i64* %44, align 8, !tbaa !48, !pdg.inst.id !52
  %45 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %46 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %45, align 8, !tbaa !32, !pdg.inst.id !35
  %47 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %46, i64 1, !pdg.inst.id !36
  %48 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %47, align 8, !pdg.inst.id !37
  %49 = call zeroext i1 %48(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %50 = load i64, i64* %12
  %51 = load %struct.residue_t**, %struct.residue_t*** %28, align 8, !tbaa !39, !pdg.inst.id !53
  %52 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %51, i64 %50, !pdg.inst.id !54
  %53 = bitcast %struct.residue_t** %52 to i64*, !pdg.inst.id !55
  %54 = load i64, i64* %53, align 8, !tbaa !48, !pdg.inst.id !56
  %55 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %25, i64 %50, !pdg.inst.id !57
  %56 = bitcast %struct.residue_t** %55 to i64*, !pdg.inst.id !58
  store i64 %54, i64* %56, align 8, !tbaa !48, !pdg.inst.id !59
  %57 = bitcast %"class.MARC::ThreadSafeQueue.54"* %15 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %58 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %57, align 8, !tbaa !32, !pdg.inst.id !35
  %59 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %58, i64 1, !pdg.inst.id !36
  %60 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %59, align 8, !pdg.inst.id !37
  %61 = call zeroext i1 %60(%"class.MARC::ThreadSafeQueue.54"* %15, i64* dereferenceable(8) %16), !pdg.inst.id !38
  %62 = load i64, i64* %16
  %63 = load %struct.residue_t**, %struct.residue_t*** %28, align 8, !tbaa !39, !pdg.inst.id !60
  %64 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %63, i64 %62, !pdg.inst.id !61
  %65 = bitcast %struct.residue_t** %64 to i64*, !pdg.inst.id !62
  %66 = load i64, i64* %65, align 8, !tbaa !48, !pdg.inst.id !63
  %67 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %25, i64 %62, !pdg.inst.id !64
  %68 = bitcast %struct.residue_t** %67 to i64*, !pdg.inst.id !65
  store i64 %66, i64* %68, align 8, !tbaa !48, !pdg.inst.id !66
  %69 = bitcast %"class.MARC::ThreadSafeQueue.54"* %19 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %70 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %69, align 8, !tbaa !32, !pdg.inst.id !35
  %71 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %70, i64 1, !pdg.inst.id !36
  %72 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %71, align 8, !pdg.inst.id !37
  %73 = call zeroext i1 %72(%"class.MARC::ThreadSafeQueue.54"* %19, i64* dereferenceable(8) %20), !pdg.inst.id !38
  %74 = load i64, i64* %20
  %75 = load %struct.residue_t**, %struct.residue_t*** %28, align 8, !tbaa !39, !pdg.inst.id !67
  %76 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %74, !pdg.inst.id !68
  %77 = bitcast %struct.residue_t** %76 to i64*, !pdg.inst.id !69
  %78 = load i64, i64* %77, align 8, !tbaa !48, !pdg.inst.id !70
  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %25, i64 %74, !pdg.inst.id !71
  %80 = bitcast %struct.residue_t** %79 to i64*, !pdg.inst.id !72
  store i64 %78, i64* %80, align 8, !tbaa !48, !pdg.inst.id !73
  %81 = add i64 %32, -4, !pdg.inst.id !74
  %82 = icmp eq i64 %81, 0, !pdg.inst.id !75
  br i1 %82, label %30, label %83, !pdg.inst.id !76

83:                                               ; preds = %31
  br label %31, !pdg.inst.id !77
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local i32 @addresidue(%struct.molecule_t* nocapture, i8*, %struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !35 {
  %4 = alloca [32 x i64]
  %5 = bitcast [32 x i64]* %4 to i8*
  %6 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 8
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 16
  %9 = bitcast i64* %8 to %struct.residue_t***
  %10 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 24
  %11 = bitcast i64* %10 to %struct.residue_t****
  %12 = alloca [32 x i64]
  %13 = bitcast [32 x i64]* %12 to i8*
  %14 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 0
  %15 = bitcast i64* %14 to %struct.strand_t**
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 8
  %17 = bitcast i64* %16 to %struct.strand_t**
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 16
  %19 = bitcast i64* %18 to i8**
  %20 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 24
  %21 = bitcast i64* %20 to i32*
  %22 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !37
  %23 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !tbaa !1693, !pdg.inst.id !50
  %24 = icmp eq %struct.strand_t* %23, null, !pdg.inst.id !54
  br i1 %24, label %37, label %.preheader2, !prof !1697, !pdg.inst.id !56

.preheader2:                                      ; preds = %3
  %25 = load i32, i32* @3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %145, label %27

27:                                               ; preds = %.preheader2, %33
  %28 = phi %struct.strand_t* [ %35, %33 ], [ %23, %.preheader2 ], !pdg.inst.id !52
  %29 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %28, i64 0, i32 0, !pdg.inst.id !60
  %30 = load i8*, i8** %29, align 8, !tbaa !1698, !pdg.inst.id !64
  %31 = tail call i32 @strcmp(i8* %30, i8* %1) #48, !pdg.inst.id !44
  %32 = icmp eq i32 %31, 0, !pdg.inst.id !67
  br i1 %32, label %40, label %33, !prof !1701, !pdg.inst.id !69

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %28, i64 0, i32 4, !pdg.inst.id !62
  %35 = load %struct.strand_t*, %struct.strand_t** %34, align 8, !tbaa !1693, !pdg.inst.id !71
  %36 = icmp eq %struct.strand_t* %35, null, !pdg.inst.id !74
  br i1 %36, label %.loopexit3, label %27, !pdg.inst.id !76

.loopexit3:                                       ; preds = %153, %33
  br label %37, !pdg.inst.id !1492

37:                                               ; preds = %.loopexit3, %3
  %38 = getelementptr [28 x i8], [28 x i8]* @.str.5.213, i64 0, i64 0, !pdg.inst.id !78
  %39 = tail call i32 @rt_errormsg_s(i32 1, i8* %38, i8* %1) #49, !pdg.inst.id !46
  br label %143, !pdg.inst.id !1496

40:                                               ; preds = %153, %27
  %.lcssa8 = phi %struct.strand_t* [ %28, %27 ], [ %152, %153 ], !pdg.inst.id !58
  %41 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 0, !pdg.inst.id !86
  %42 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 5, !pdg.inst.id !84
  %43 = load i32, i32* %42, align 8, !tbaa !1702, !pdg.inst.id !104
  %44 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 6, !pdg.inst.id !82
  %45 = load i32, i32* %44, align 4, !tbaa !1703, !pdg.inst.id !114
  %46 = icmp eq i32 %43, %45, !pdg.inst.id !108
  br i1 %46, label %47, label %133, !prof !1697, !pdg.inst.id !117

47:                                               ; preds = %40
  %48 = add nsw i32 %43, 10, !pdg.inst.id !106
  %49 = sext i32 %48 to i64, !pdg.inst.id !119
  %50 = shl nsw i64 %49, 3, !pdg.inst.id !122
  %51 = tail call noalias i8* @malloc(i64 %50) #49, !pdg.inst.id !124
  %52 = bitcast i8* %51 to %struct.residue_t**, !pdg.inst.id !130
  %53 = icmp eq i8* %51, null, !pdg.inst.id !128
  br i1 %53, label %67, label %54, !pdg.inst.id !142

54:                                               ; preds = %47
  %55 = load i32, i32* %42, align 8, !tbaa !1702, !pdg.inst.id !98
  %56 = icmp sgt i32 %55, 0, !pdg.inst.id !146
  br i1 %56, label %57, label %123, !pdg.inst.id !148

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !80
  %59 = sext i32 %55 to i64, !pdg.inst.id !144
  %60 = add nsw i64 %59, -1, !pdg.inst.id !164
  %61 = and i64 %59, 3, !pdg.inst.id !162
  %62 = icmp ult i64 %60, 3, !pdg.inst.id !166
  br i1 %62, label %108, label %63, !pdg.inst.id !173

63:                                               ; preds = %57
  %64 = sub nsw i64 %59, %61, !pdg.inst.id !160
  %65 = load i32, i32* @4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %157, label %75

67:                                               ; preds = %47
  %68 = load i8*, i8** %41, align 8, !tbaa !1698, !pdg.inst.id !96
  %69 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !179
  %70 = getelementptr [28 x i8], [28 x i8]* @.str.6.214, i64 0, i64 0, !pdg.inst.id !181
  %71 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %69, i8* %70, i8* %68) #49, !pdg.inst.id !177
  %72 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !183
  %73 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !186
  %74 = tail call i32 @rt_errormsg_s(i32 1, i8* %72, i8* %73) #49, !pdg.inst.id !184
  br label %143, !pdg.inst.id !1540

75:                                               ; preds = %63, %._crit_edge1
  %76 = phi i64 [ 0, %63 ], [ %105, %._crit_edge1 ], !pdg.inst.id !188
  %77 = phi i64 [ %64, %63 ], [ %106, %._crit_edge1 ], !pdg.inst.id !175
  %78 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !158
  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %78, i64 %76, !pdg.inst.id !198
  %80 = bitcast %struct.residue_t** %79 to i64*, !pdg.inst.id !203
  %81 = load i64, i64* %80, align 8, !tbaa !1693, !pdg.inst.id !205
  %82 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %76, !pdg.inst.id !140
  %83 = bitcast %struct.residue_t** %82 to i64*, !pdg.inst.id !209
  store i64 %81, i64* %83, align 8, !tbaa !1693, !pdg.inst.id !207
  %84 = or i64 %76, 1, !pdg.inst.id !193
  %85 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !154
  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %85, i64 %84, !pdg.inst.id !212
  %87 = bitcast %struct.residue_t** %86 to i64*, !pdg.inst.id !216
  %88 = load i64, i64* %87, align 8, !tbaa !1693, !pdg.inst.id !218
  %89 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %84, !pdg.inst.id !136
  %90 = bitcast %struct.residue_t** %89 to i64*, !pdg.inst.id !222
  store i64 %88, i64* %90, align 8, !tbaa !1693, !pdg.inst.id !220
  %91 = or i64 %76, 2, !pdg.inst.id !191
  %92 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !152
  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %92, i64 %91, !pdg.inst.id !225
  %94 = bitcast %struct.residue_t** %93 to i64*, !pdg.inst.id !229
  %95 = load i64, i64* %94, align 8, !tbaa !1693, !pdg.inst.id !231
  %96 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %91, !pdg.inst.id !134
  %97 = bitcast %struct.residue_t** %96 to i64*, !pdg.inst.id !235
  store i64 %95, i64* %97, align 8, !tbaa !1693, !pdg.inst.id !233
  %98 = or i64 %76, 3, !pdg.inst.id !189
  %99 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !150
  %100 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %99, i64 %98, !pdg.inst.id !238
  %101 = bitcast %struct.residue_t** %100 to i64*, !pdg.inst.id !242
  %102 = load i64, i64* %101, align 8, !tbaa !1693, !pdg.inst.id !244
  %103 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %98, !pdg.inst.id !132
  %104 = bitcast %struct.residue_t** %103 to i64*, !pdg.inst.id !248
  store i64 %102, i64* %104, align 8, !tbaa !1693, !pdg.inst.id !246
  %105 = add nuw nsw i64 %76, 4, !pdg.inst.id !195
  %106 = add i64 %77, -4, !pdg.inst.id !200
  %107 = icmp eq i64 %106, 0, !pdg.inst.id !254
  br i1 %107, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257

._crit_edge1:                                     ; preds = %75
  br label %75, !pdg.inst.id !1616

.loopexit1:                                       ; preds = %180, %75
  %.lcssa = phi i64 [ %105, %75 ], [ %179, %180 ], !pdg.inst.id !251
  br label %108, !pdg.inst.id !1619

108:                                              ; preds = %.loopexit1, %57
  %109 = phi i64 [ 0, %57 ], [ %.lcssa, %.loopexit1 ], !pdg.inst.id !259
  %110 = icmp eq i64 %61, 0, !pdg.inst.id !171
  br i1 %110, label %123, label %.preheader, !pdg.inst.id !263

.preheader:                                       ; preds = %108
  br label %111, !pdg.inst.id !1624

111:                                              ; preds = %._crit_edge, %.preheader
  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
  %113 = phi i64 [ %121, %._crit_edge ], [ %61, %.preheader ], !pdg.inst.id !168
  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
  %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
  %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
  %119 = bitcast %struct.residue_t** %118 to i64*, !pdg.inst.id !279
  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
  %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
  %121 = add nsw i64 %113, -1, !pdg.inst.id !270
  %122 = icmp eq i64 %121, 0, !pdg.inst.id !284
  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286

._crit_edge:                                      ; preds = %111
  br label %111, !pdg.inst.id !1653

.loopexit:                                        ; preds = %111
  br label %123, !pdg.inst.id !1655

123:                                              ; preds = %.loopexit, %108, %54
  %124 = load i32, i32* %44, align 4, !tbaa !1703, !pdg.inst.id !112
  %125 = icmp sgt i32 %124, 0, !pdg.inst.id !288
  br i1 %125, label %126, label %130, !pdg.inst.id !290

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !88
  %128 = bitcast %struct.residue_t*** %127 to i8**, !pdg.inst.id !292
  %129 = load i8*, i8** %128, align 8, !tbaa !1704, !pdg.inst.id !294
  tail call void @free(i8* %129) #49, !pdg.inst.id !296
  br label %130, !pdg.inst.id !1662

130:                                              ; preds = %123, %126
  store i32 %48, i32* %44, align 4, !tbaa !1703, !pdg.inst.id !110
  %131 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !90
  %132 = bitcast %struct.residue_t*** %131 to i8**, !pdg.inst.id !298
  store i8* %51, i8** %132, align 8, !tbaa !1704, !pdg.inst.id !126
  br label %133, !pdg.inst.id !1536

133:                                              ; preds = %130, %40
  %134 = tail call %struct.residue_t* @copyresidue(%struct.residue_t* %2) #49, !pdg.inst.id !48
  %135 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !94
  %136 = load %struct.residue_t**, %struct.residue_t*** %135, align 8, !tbaa !1704, !pdg.inst.id !305
  %137 = load i32, i32* %42, align 8, !tbaa !1702, !pdg.inst.id !102
  %138 = sext i32 %137 to i64, !pdg.inst.id !311
  %139 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %136, i64 %138, !pdg.inst.id !307
  store %struct.residue_t* %134, %struct.residue_t** %139, align 8, !tbaa !1693, !pdg.inst.id !303
  %140 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %134, i64 0, i32 9, !pdg.inst.id !301
  store %struct.strand_t* %.lcssa8, %struct.strand_t** %140, align 8, !tbaa !1707, !pdg.inst.id !92
  %141 = add nsw i32 %137, 1, !pdg.inst.id !309
  store i32 %141, i32* %42, align 8, !tbaa !1702, !pdg.inst.id !100
  %142 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 5, !pdg.inst.id !42
  store i32 0, i32* %142, align 8, !tbaa !1709, !pdg.inst.id !317
  br label %143, !pdg.inst.id !1678

143:                                              ; preds = %133, %67, %37
  %144 = phi i32 [ 1, %37 ], [ 0, %67 ], [ 0, %133 ], !pdg.inst.id !319
  ret i32 %144, !pdg.inst.id !320

145:                                              ; preds = %.preheader2
  store i32 1, i32* @3
  store %struct.strand_t* %23, %struct.strand_t** %17
  store i8* %1, i8** %19
  %146 = alloca [1 x i8*]
  %147 = getelementptr inbounds [1 x i8*], [1 x i8*]* %146, i64 0, i64 0
  %148 = bitcast i8** %147 to void (i8*, i8*)**
  store void (i8*, i8*)* @8, void (i8*, i8*)** %148
  %149 = bitcast [1 x i8*]* %146 to i8*
  %150 = alloca [0 x i64]
  %151 = bitcast [0 x i64]* %150 to i64*
  call void @stageDispatcher(i8* %13, i64* %151, i8* %149, i64 1, i64 0)
  %152 = load %struct.strand_t*, %struct.strand_t** %15
  br label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 24
  %155 = load i64, i64* %154
  %156 = trunc i64 %155 to i32
  store i32 0, i32* @3
  switch i32 %156, label %40 [
    i32 1, label %.loopexit3
  ]

157:                                              ; preds = %63
  store i32 1, i32* @4
  store i64 %64, i64* %7
  store %struct.residue_t** %52, %struct.residue_t*** %9
  store %struct.residue_t*** %58, %struct.residue_t**** %11
  %158 = alloca [5 x i8*]
  %159 = getelementptr inbounds [5 x i8*], [5 x i8*]* %158, i64 0, i64 0
  %160 = bitcast i8** %159 to void (i8*, i8*)**
  store void (i8*, i8*)* @9, void (i8*, i8*)** %160
  %161 = getelementptr inbounds [5 x i8*], [5 x i8*]* %158, i64 0, i64 1
  %162 = bitcast i8** %161 to void (i8*, i8*)**
  store void (i8*, i8*)* @10, void (i8*, i8*)** %162
  %163 = getelementptr inbounds [5 x i8*], [5 x i8*]* %158, i64 0, i64 2
  %164 = bitcast i8** %163 to void (i8*, i8*)**
  store void (i8*, i8*)* @11, void (i8*, i8*)** %164
  %165 = getelementptr inbounds [5 x i8*], [5 x i8*]* %158, i64 0, i64 3
  %166 = bitcast i8** %165 to void (i8*, i8*)**
  store void (i8*, i8*)* @12, void (i8*, i8*)** %166
  %167 = getelementptr inbounds [5 x i8*], [5 x i8*]* %158, i64 0, i64 4
  %168 = bitcast i8** %167 to void (i8*, i8*)**
  store void (i8*, i8*)* @13, void (i8*, i8*)** %168
  %169 = bitcast [5 x i8*]* %158 to i8*
  %170 = alloca [7 x i64]
  %171 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 0
  store i64 64, i64* %171
  %172 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 1
  store i64 64, i64* %172
  %173 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 2
  store i64 64, i64* %173
  %174 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 3
  store i64 64, i64* %174
  %175 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 4
  store i64 64, i64* %175
  %176 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 5
  store i64 64, i64* %176
  %177 = getelementptr inbounds [7 x i64], [7 x i64]* %170, i64 0, i64 6
  store i64 64, i64* %177
  %178 = bitcast [7 x i64]* %170 to i64*
  call void @stageDispatcher(i8* %5, i64* %178, i8* %169, i64 5, i64 7)
  %179 = load i64, i64* %6
  br label %180

180:                                              ; preds = %157
  store i32 0, i32* @4
  br label %.loopexit1
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "addresidue"
Parallelizer:  Loop 5 = "  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   We found an SCC of type 0 of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 2
DOALL:     	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DOALL:     	  %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DOALL:     External nodes: 3
DOALL:     	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DOALL:     	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DOALL:     	  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DOALL:     Edges: 6
DOALL:     Loop-carried data dependences
DOALL:         %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265 --->   %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261 via variable
DOALL:         br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286 --->   %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261 via variable
DOALL:         br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286 --->   %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265 via variable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:       %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DSWP:   SCC: 1 Internal nodes:
DSWP:       %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:       %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
DSWP:       store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:       %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:       %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:       %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:       %119 = bitcast %struct.residue_t** %118 to i64*, !pdg.inst.id !279
DSWP:   Set:  0
DSWP:    Children: Set:  1; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; 
Heuristic:   PCA: Checking: Set:  0 Set:  1 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 2
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:       %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DSWP:   SCC: 1 Internal nodes:
DSWP:       %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:       %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
DSWP:       store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:       %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:       %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:       %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:       %119 = bitcast %struct.residue_t** %118 to i64*, !pdg.inst.id !279
DSWP:   Set:  0
DSWP:    Children: Set:  1; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; 
DSWP:  There are 2 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 2
DSWP:     	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	  %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DSWP:     External nodes: 3
DSWP:     	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:     Edges: 6
DSWP:     	From:	  %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DSWP:     	To:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	RAW (must)
DSWP:     	From:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	To:	  %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	To:	  %120 = add nuw nsw i64 %112, 1, !pdg.inst.id !265
DSWP:     	CTRL
DSWP:     	From:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	To:	  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:     	RAW (must)
DSWP:     	From:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	To:	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	To:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 1
DSWP:     Internal nodes: 7
DSWP:     	  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:     	  %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
DSWP:     	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	  %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:     	  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:     	  %119 = bitcast %struct.residue_t** %118 to i64*, !pdg.inst.id !279
DSWP:     External nodes: 2
DSWP:     	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     Edges: 19
DSWP:     	From:	  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:     	To:	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	RAW (must)
DSWP:     	From:	  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:     	To:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
DSWP:     	To:	  %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:     	RAW (must)
DSWP:     	From:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	To:	  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	To:	  %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	To:	  %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
DSWP:     	RAW (must)
DSWP:     	From:	  %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:     	To:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	RAW (must)
DSWP:     	From:	  %117 = load i64, i64* %116, align 8, !tbaa !1693, !pdg.inst.id !275
DSWP:     	To:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %119 = bitcast %struct.residue_t** %118 to i64*, !pdg.inst.id !279
DSWP:     	To:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	RAW (must)
DSWP:     	From:	  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:     	To:	  %119 = bitcast %struct.residue_t** %118 to i64*, !pdg.inst.id !279
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	To:	  %114 = load %struct.residue_t**, %struct.residue_t*** %58, align 8, !tbaa !1704, !pdg.inst.id !156
DSWP:     	CTRL
DSWP:     	From:	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	To:	  %116 = bitcast %struct.residue_t** %115 to i64*, !pdg.inst.id !273
DSWP:     	CTRL
DSWP:     	From:	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	To:	  store i64 %117, i64* %119, align 8, !tbaa !1693, !pdg.inst.id !277
DSWP:     	CTRL
DSWP:     	From:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     	To:	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %122, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286
DSWP:     	To:	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     	CTRL
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 7 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 
DSWP:      Pop value queues: 7 
DSWP:    Queue: 0
DSWP:     Producer:	  %76 = phi i64 [ 0, %63 ], [ %105, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %91 = or i64 %76, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %76 = phi i64 [ 0, %63 ], [ %105, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %98 = or i64 %76, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %76 = phi i64 [ 0, %63 ], [ %105, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %84 = or i64 %76, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %76 = phi i64 [ 0, %63 ], [ %105, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %78, i64 %76, !pdg.inst.id !198
DSWP:     Consumer:	  %82 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %76, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %84 = or i64 %76, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %86 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %85, i64 %84, !pdg.inst.id !212
DSWP:     Consumer:	  %89 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %84, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %91 = or i64 %76, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %93 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %92, i64 %91, !pdg.inst.id !225
DSWP:     Consumer:	  %96 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %91, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %98 = or i64 %76, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %100 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %99, i64 %98, !pdg.inst.id !238
DSWP:     Consumer:	  %103 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %98, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %112 = phi i64 [ %120, %._crit_edge ], [ %109, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %115 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %112, !pdg.inst.id !268
DSWP:     Consumer:	  %118 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %52, i64 %112, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %109 = phi i64 [ 0, %57 ], [ %.lcssa, %.loopexit1 ], !pdg.inst.id !259
DSWP:    Pre loop env 2, producer:	  %61 = and i64 %59, 3, !pdg.inst.id !162
DSWP:    Pre loop env 3, producer:	  %52 = bitcast i8* %51 to %struct.residue_t**, !pdg.inst.id !130
DSWP:    Pre loop env 4, producer:	  %58 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !80
DSWP:  Create 2 pipeline stages
Pipeline stage 0:

define void @14(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 7
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  %10 = load i64, i64* %9
  %11 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %12 = load i64, i64* %11
  br label %15

13:                                               ; preds = %14
  ret void

14:                                               ; preds = %15
  br label %13

15:                                               ; preds = %2, %26
  %16 = phi i64 [ %23, %26 ], [ %10, %2 ], !pdg.inst.id !30
  %17 = phi i64 [ %24, %26 ], [ %12, %2 ], !pdg.inst.id !31
  store i64 %16, i64* %8
  %18 = load i64, i64* %8, align 8, !tbaa !32, !pdg.inst.id !36
  %19 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %20 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %19, align 8, !tbaa !38, !pdg.inst.id !40
  %21 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %20, i64 3, !pdg.inst.id !41
  %22 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %21, align 8, !pdg.inst.id !42
  call void %22(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %18), !pdg.inst.id !43
  %23 = add nuw nsw i64 %16, 1, !pdg.inst.id !44
  %24 = add nsw i64 %17, -1, !pdg.inst.id !45
  %25 = icmp eq i64 %24, 0, !pdg.inst.id !46
  br i1 %25, label %14, label %26, !llvm.loop !47, !pdg.inst.id !49

26:                                               ; preds = %15
  br label %15, !pdg.inst.id !50
}

Pipeline stage 1:

define void @15(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 7
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %10 = load i64, i64* %9
  %11 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to %struct.residue_t***
  %13 = load %struct.residue_t**, %struct.residue_t*** %12
  %14 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to %struct.residue_t****
  %16 = load %struct.residue_t***, %struct.residue_t**** %15
  br label %19

17:                                               ; preds = %18
  ret void

18:                                               ; preds = %19
  br label %17

19:                                               ; preds = %2, %35
  %20 = phi i64 [ %33, %35 ], [ %10, %2 ], !pdg.inst.id !30
  %21 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %22 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %21, align 8, !tbaa !32, !pdg.inst.id !35
  %23 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %22, i64 1, !pdg.inst.id !36
  %24 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %23, align 8, !pdg.inst.id !37
  %25 = call zeroext i1 %24(%"class.MARC::ThreadSafeQueue.54"* %7, i64* dereferenceable(8) %8), !pdg.inst.id !38
  %26 = load i64, i64* %8
  %27 = load %struct.residue_t**, %struct.residue_t*** %16, align 8, !tbaa !39, !pdg.inst.id !45
  %28 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %27, i64 %26, !pdg.inst.id !46
  %29 = bitcast %struct.residue_t** %28 to i64*, !pdg.inst.id !47
  %30 = load i64, i64* %29, align 8, !tbaa !48, !pdg.inst.id !49
  %31 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %13, i64 %26, !pdg.inst.id !50
  %32 = bitcast %struct.residue_t** %31 to i64*, !pdg.inst.id !51
  store i64 %30, i64* %32, align 8, !tbaa !48, !pdg.inst.id !52
  %33 = add nsw i64 %20, -1, !pdg.inst.id !53
  %34 = icmp eq i64 %33, 0, !pdg.inst.id !54
  br i1 %34, label %18, label %35, !llvm.loop !55, !pdg.inst.id !57

35:                                               ; preds = %19
  br label %19, !pdg.inst.id !58
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local i32 @addresidue(%struct.molecule_t* nocapture, i8*, %struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !35 {
  %4 = alloca [32 x i64]
  %5 = bitcast [32 x i64]* %4 to i8*
  %6 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 8
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 16
  %9 = bitcast i64* %8 to %struct.residue_t***
  %10 = getelementptr inbounds [32 x i64], [32 x i64]* %4, i64 0, i64 24
  %11 = bitcast i64* %10 to %struct.residue_t****
  %12 = alloca [32 x i64]
  %13 = bitcast [32 x i64]* %12 to i8*
  %14 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 0
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 8
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 16
  %17 = bitcast i64* %16 to %struct.residue_t***
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %12, i64 0, i64 24
  %19 = bitcast i64* %18 to %struct.residue_t****
  %20 = alloca [32 x i64]
  %21 = bitcast [32 x i64]* %20 to i8*
  %22 = getelementptr inbounds [32 x i64], [32 x i64]* %20, i64 0, i64 0
  %23 = bitcast i64* %22 to %struct.strand_t**
  %24 = getelementptr inbounds [32 x i64], [32 x i64]* %20, i64 0, i64 8
  %25 = bitcast i64* %24 to %struct.strand_t**
  %26 = getelementptr inbounds [32 x i64], [32 x i64]* %20, i64 0, i64 16
  %27 = bitcast i64* %26 to i8**
  %28 = getelementptr inbounds [32 x i64], [32 x i64]* %20, i64 0, i64 24
  %29 = bitcast i64* %28 to i32*
  %30 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !37
  %31 = load %struct.strand_t*, %struct.strand_t** %30, align 8, !tbaa !1693, !pdg.inst.id !50
  %32 = icmp eq %struct.strand_t* %31, null, !pdg.inst.id !54
  br i1 %32, label %45, label %.preheader2, !prof !1697, !pdg.inst.id !56

.preheader2:                                      ; preds = %3
  %33 = load i32, i32* @3
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %155, label %35

35:                                               ; preds = %.preheader2, %41
  %36 = phi %struct.strand_t* [ %43, %41 ], [ %31, %.preheader2 ], !pdg.inst.id !52
  %37 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %36, i64 0, i32 0, !pdg.inst.id !60
  %38 = load i8*, i8** %37, align 8, !tbaa !1698, !pdg.inst.id !64
  %39 = tail call i32 @strcmp(i8* %38, i8* %1) #48, !pdg.inst.id !44
  %40 = icmp eq i32 %39, 0, !pdg.inst.id !67
  br i1 %40, label %48, label %41, !prof !1701, !pdg.inst.id !69

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %36, i64 0, i32 4, !pdg.inst.id !62
  %43 = load %struct.strand_t*, %struct.strand_t** %42, align 8, !tbaa !1693, !pdg.inst.id !71
  %44 = icmp eq %struct.strand_t* %43, null, !pdg.inst.id !74
  br i1 %44, label %.loopexit3, label %35, !pdg.inst.id !76

.loopexit3:                                       ; preds = %163, %41
  br label %45, !pdg.inst.id !1492

45:                                               ; preds = %.loopexit3, %3
  %46 = getelementptr [28 x i8], [28 x i8]* @.str.5.213, i64 0, i64 0, !pdg.inst.id !78
  %47 = tail call i32 @rt_errormsg_s(i32 1, i8* %46, i8* %1) #49, !pdg.inst.id !46
  br label %153, !pdg.inst.id !1496

48:                                               ; preds = %163, %35
  %.lcssa8 = phi %struct.strand_t* [ %36, %35 ], [ %162, %163 ], !pdg.inst.id !58
  %49 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 0, !pdg.inst.id !86
  %50 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 5, !pdg.inst.id !84
  %51 = load i32, i32* %50, align 8, !tbaa !1702, !pdg.inst.id !104
  %52 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 6, !pdg.inst.id !82
  %53 = load i32, i32* %52, align 4, !tbaa !1703, !pdg.inst.id !114
  %54 = icmp eq i32 %51, %53, !pdg.inst.id !108
  br i1 %54, label %55, label %143, !prof !1697, !pdg.inst.id !117

55:                                               ; preds = %48
  %56 = add nsw i32 %51, 10, !pdg.inst.id !106
  %57 = sext i32 %56 to i64, !pdg.inst.id !119
  %58 = shl nsw i64 %57, 3, !pdg.inst.id !122
  %59 = tail call noalias i8* @malloc(i64 %58) #49, !pdg.inst.id !124
  %60 = bitcast i8* %59 to %struct.residue_t**, !pdg.inst.id !130
  %61 = icmp eq i8* %59, null, !pdg.inst.id !128
  br i1 %61, label %75, label %62, !pdg.inst.id !142

62:                                               ; preds = %55
  %63 = load i32, i32* %50, align 8, !tbaa !1702, !pdg.inst.id !98
  %64 = icmp sgt i32 %63, 0, !pdg.inst.id !146
  br i1 %64, label %65, label %133, !pdg.inst.id !148

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !80
  %67 = sext i32 %63 to i64, !pdg.inst.id !144
  %68 = add nsw i64 %67, -1, !pdg.inst.id !164
  %69 = and i64 %67, 3, !pdg.inst.id !162
  %70 = icmp ult i64 %68, 3, !pdg.inst.id !166
  br i1 %70, label %116, label %71, !pdg.inst.id !173

71:                                               ; preds = %65
  %72 = sub nsw i64 %67, %69, !pdg.inst.id !160
  %73 = load i32, i32* @4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %167, label %83

75:                                               ; preds = %55
  %76 = load i8*, i8** %49, align 8, !tbaa !1698, !pdg.inst.id !96
  %77 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !179
  %78 = getelementptr [28 x i8], [28 x i8]* @.str.6.214, i64 0, i64 0, !pdg.inst.id !181
  %79 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %77, i8* %78, i8* %76) #49, !pdg.inst.id !177
  %80 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !183
  %81 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !186
  %82 = tail call i32 @rt_errormsg_s(i32 1, i8* %80, i8* %81) #49, !pdg.inst.id !184
  br label %153, !pdg.inst.id !1540

83:                                               ; preds = %71, %._crit_edge1
  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
  %85 = phi i64 [ %72, %71 ], [ %114, %._crit_edge1 ], !pdg.inst.id !175
  %86 = load %struct.residue_t**, %struct.residue_t*** %66, align 8, !tbaa !1704, !pdg.inst.id !158
  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
  %88 = bitcast %struct.residue_t** %87 to i64*, !pdg.inst.id !203
  %89 = load i64, i64* %88, align 8, !tbaa !1693, !pdg.inst.id !205
  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
  %91 = bitcast %struct.residue_t** %90 to i64*, !pdg.inst.id !209
  store i64 %89, i64* %91, align 8, !tbaa !1693, !pdg.inst.id !207
  %92 = or i64 %84, 1, !pdg.inst.id !193
  %93 = load %struct.residue_t**, %struct.residue_t*** %66, align 8, !tbaa !1704, !pdg.inst.id !154
  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
  %95 = bitcast %struct.residue_t** %94 to i64*, !pdg.inst.id !216
  %96 = load i64, i64* %95, align 8, !tbaa !1693, !pdg.inst.id !218
  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
  %98 = bitcast %struct.residue_t** %97 to i64*, !pdg.inst.id !222
  store i64 %96, i64* %98, align 8, !tbaa !1693, !pdg.inst.id !220
  %99 = or i64 %84, 2, !pdg.inst.id !191
  %100 = load %struct.residue_t**, %struct.residue_t*** %66, align 8, !tbaa !1704, !pdg.inst.id !152
  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
  %102 = bitcast %struct.residue_t** %101 to i64*, !pdg.inst.id !229
  %103 = load i64, i64* %102, align 8, !tbaa !1693, !pdg.inst.id !231
  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
  %105 = bitcast %struct.residue_t** %104 to i64*, !pdg.inst.id !235
  store i64 %103, i64* %105, align 8, !tbaa !1693, !pdg.inst.id !233
  %106 = or i64 %84, 3, !pdg.inst.id !189
  %107 = load %struct.residue_t**, %struct.residue_t*** %66, align 8, !tbaa !1704, !pdg.inst.id !150
  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
  %109 = bitcast %struct.residue_t** %108 to i64*, !pdg.inst.id !242
  %110 = load i64, i64* %109, align 8, !tbaa !1693, !pdg.inst.id !244
  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
  %112 = bitcast %struct.residue_t** %111 to i64*, !pdg.inst.id !248
  store i64 %110, i64* %112, align 8, !tbaa !1693, !pdg.inst.id !246
  %113 = add nuw nsw i64 %84, 4, !pdg.inst.id !195
  %114 = add i64 %85, -4, !pdg.inst.id !200
  %115 = icmp eq i64 %114, 0, !pdg.inst.id !254
  br i1 %115, label %.loopexit1, label %._crit_edge1, !pdg.inst.id !257

._crit_edge1:                                     ; preds = %83
  br label %83, !pdg.inst.id !1616

.loopexit1:                                       ; preds = %190, %83
  %.lcssa = phi i64 [ %113, %83 ], [ %189, %190 ], !pdg.inst.id !251
  br label %116, !pdg.inst.id !1619

116:                                              ; preds = %.loopexit1, %65
  %117 = phi i64 [ 0, %65 ], [ %.lcssa, %.loopexit1 ], !pdg.inst.id !259
  %118 = icmp eq i64 %69, 0, !pdg.inst.id !171
  br i1 %118, label %133, label %.preheader, !pdg.inst.id !263

.preheader:                                       ; preds = %116
  %119 = load i32, i32* @5
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %191, label %121

121:                                              ; preds = %.preheader, %._crit_edge
  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
  %123 = phi i64 [ %131, %._crit_edge ], [ %69, %.preheader ], !pdg.inst.id !168
  %124 = load %struct.residue_t**, %struct.residue_t*** %66, align 8, !tbaa !1704, !pdg.inst.id !156
  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
  %126 = bitcast %struct.residue_t** %125 to i64*, !pdg.inst.id !273
  %127 = load i64, i64* %126, align 8, !tbaa !1693, !pdg.inst.id !275
  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
  %129 = bitcast %struct.residue_t** %128 to i64*, !pdg.inst.id !279
  store i64 %127, i64* %129, align 8, !tbaa !1693, !pdg.inst.id !277
  %130 = add nuw nsw i64 %122, 1, !pdg.inst.id !265
  %131 = add nsw i64 %123, -1, !pdg.inst.id !270
  %132 = icmp eq i64 %131, 0, !pdg.inst.id !284
  br i1 %132, label %.loopexit, label %._crit_edge, !llvm.loop !1705, !pdg.inst.id !286

._crit_edge:                                      ; preds = %121
  br label %121, !pdg.inst.id !1653

.loopexit:                                        ; preds = %208, %121
  br label %133, !pdg.inst.id !1655

133:                                              ; preds = %.loopexit, %116, %62
  %134 = load i32, i32* %52, align 4, !tbaa !1703, !pdg.inst.id !112
  %135 = icmp sgt i32 %134, 0, !pdg.inst.id !288
  br i1 %135, label %136, label %140, !pdg.inst.id !290

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !88
  %138 = bitcast %struct.residue_t*** %137 to i8**, !pdg.inst.id !292
  %139 = load i8*, i8** %138, align 8, !tbaa !1704, !pdg.inst.id !294
  tail call void @free(i8* %139) #49, !pdg.inst.id !296
  br label %140, !pdg.inst.id !1662

140:                                              ; preds = %133, %136
  store i32 %56, i32* %52, align 4, !tbaa !1703, !pdg.inst.id !110
  %141 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !90
  %142 = bitcast %struct.residue_t*** %141 to i8**, !pdg.inst.id !298
  store i8* %59, i8** %142, align 8, !tbaa !1704, !pdg.inst.id !126
  br label %143, !pdg.inst.id !1536

143:                                              ; preds = %140, %48
  %144 = tail call %struct.residue_t* @copyresidue(%struct.residue_t* %2) #49, !pdg.inst.id !48
  %145 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa8, i64 0, i32 7, !pdg.inst.id !94
  %146 = load %struct.residue_t**, %struct.residue_t*** %145, align 8, !tbaa !1704, !pdg.inst.id !305
  %147 = load i32, i32* %50, align 8, !tbaa !1702, !pdg.inst.id !102
  %148 = sext i32 %147 to i64, !pdg.inst.id !311
  %149 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %146, i64 %148, !pdg.inst.id !307
  store %struct.residue_t* %144, %struct.residue_t** %149, align 8, !tbaa !1693, !pdg.inst.id !303
  %150 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %144, i64 0, i32 9, !pdg.inst.id !301
  store %struct.strand_t* %.lcssa8, %struct.strand_t** %150, align 8, !tbaa !1707, !pdg.inst.id !92
  %151 = add nsw i32 %147, 1, !pdg.inst.id !309
  store i32 %151, i32* %50, align 8, !tbaa !1702, !pdg.inst.id !100
  %152 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 5, !pdg.inst.id !42
  store i32 0, i32* %152, align 8, !tbaa !1709, !pdg.inst.id !317
  br label %153, !pdg.inst.id !1678

153:                                              ; preds = %143, %75, %45
  %154 = phi i32 [ 1, %45 ], [ 0, %75 ], [ 0, %143 ], !pdg.inst.id !319
  ret i32 %154, !pdg.inst.id !320

155:                                              ; preds = %.preheader2
  store i32 1, i32* @3
  store %struct.strand_t* %31, %struct.strand_t** %25
  store i8* %1, i8** %27
  %156 = alloca [1 x i8*]
  %157 = getelementptr inbounds [1 x i8*], [1 x i8*]* %156, i64 0, i64 0
  %158 = bitcast i8** %157 to void (i8*, i8*)**
  store void (i8*, i8*)* @9, void (i8*, i8*)** %158
  %159 = bitcast [1 x i8*]* %156 to i8*
  %160 = alloca [0 x i64]
  %161 = bitcast [0 x i64]* %160 to i64*
  call void @stageDispatcher(i8* %21, i64* %161, i8* %159, i64 1, i64 0)
  %162 = load %struct.strand_t*, %struct.strand_t** %23
  br label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds [32 x i64], [32 x i64]* %20, i64 0, i64 24
  %165 = load i64, i64* %164
  %166 = trunc i64 %165 to i32
  store i32 0, i32* @3
  switch i32 %166, label %48 [
    i32 1, label %.loopexit3
  ]

167:                                              ; preds = %71
  store i32 1, i32* @4
  store i64 %72, i64* %15
  store %struct.residue_t** %60, %struct.residue_t*** %17
  store %struct.residue_t*** %66, %struct.residue_t**** %19
  %168 = alloca [5 x i8*]
  %169 = getelementptr inbounds [5 x i8*], [5 x i8*]* %168, i64 0, i64 0
  %170 = bitcast i8** %169 to void (i8*, i8*)**
  store void (i8*, i8*)* @10, void (i8*, i8*)** %170
  %171 = getelementptr inbounds [5 x i8*], [5 x i8*]* %168, i64 0, i64 1
  %172 = bitcast i8** %171 to void (i8*, i8*)**
  store void (i8*, i8*)* @11, void (i8*, i8*)** %172
  %173 = getelementptr inbounds [5 x i8*], [5 x i8*]* %168, i64 0, i64 2
  %174 = bitcast i8** %173 to void (i8*, i8*)**
  store void (i8*, i8*)* @12, void (i8*, i8*)** %174
  %175 = getelementptr inbounds [5 x i8*], [5 x i8*]* %168, i64 0, i64 3
  %176 = bitcast i8** %175 to void (i8*, i8*)**
  store void (i8*, i8*)* @13, void (i8*, i8*)** %176
  %177 = getelementptr inbounds [5 x i8*], [5 x i8*]* %168, i64 0, i64 4
  %178 = bitcast i8** %177 to void (i8*, i8*)**
  store void (i8*, i8*)* @14, void (i8*, i8*)** %178
  %179 = bitcast [5 x i8*]* %168 to i8*
  %180 = alloca [7 x i64]
  %181 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 0
  store i64 64, i64* %181
  %182 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 1
  store i64 64, i64* %182
  %183 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 2
  store i64 64, i64* %183
  %184 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 3
  store i64 64, i64* %184
  %185 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 4
  store i64 64, i64* %185
  %186 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 5
  store i64 64, i64* %186
  %187 = getelementptr inbounds [7 x i64], [7 x i64]* %180, i64 0, i64 6
  store i64 64, i64* %187
  %188 = bitcast [7 x i64]* %180 to i64*
  call void @stageDispatcher(i8* %13, i64* %188, i8* %179, i64 5, i64 7)
  %189 = load i64, i64* %14
  br label %190

190:                                              ; preds = %167
  store i32 0, i32* @4
  br label %.loopexit1

191:                                              ; preds = %.preheader
  store i32 1, i32* @5
  store i64 %117, i64* %6
  store i64 %69, i64* %7
  store %struct.residue_t** %60, %struct.residue_t*** %9
  store %struct.residue_t*** %66, %struct.residue_t**** %11
  %192 = alloca [2 x i8*]
  %193 = getelementptr inbounds [2 x i8*], [2 x i8*]* %192, i64 0, i64 0
  %194 = bitcast i8** %193 to void (i8*, i8*)**
  store void (i8*, i8*)* @15, void (i8*, i8*)** %194
  %195 = getelementptr inbounds [2 x i8*], [2 x i8*]* %192, i64 0, i64 1
  %196 = bitcast i8** %195 to void (i8*, i8*)**
  store void (i8*, i8*)* @16, void (i8*, i8*)** %196
  %197 = bitcast [2 x i8*]* %192 to i8*
  %198 = alloca [8 x i64]
  %199 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 0
  store i64 64, i64* %199
  %200 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 1
  store i64 64, i64* %200
  %201 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 2
  store i64 64, i64* %201
  %202 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 3
  store i64 64, i64* %202
  %203 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 4
  store i64 64, i64* %203
  %204 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 5
  store i64 64, i64* %204
  %205 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 6
  store i64 64, i64* %205
  %206 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 7
  store i64 64, i64* %206
  %207 = bitcast [8 x i64]* %198 to i64*
  call void @stageDispatcher(i8* %5, i64* %207, i8* %197, i64 2, i64 8)
  br label %208

208:                                              ; preds = %191
  store i32 0, i32* @5
  br label %.loopexit
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "addstrand"
Parallelizer:  Loop 6 = "  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       br i1 %15, label %16, label %6, !pdg.inst.id !87
DSWP:       %14 = tail call i32 @strcmp(i8* %13, i8* %1) #48, !pdg.inst.id !47
DSWP:       %15 = icmp eq i32 %14, 0, !pdg.inst.id !85
DSWP:       %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:       %9 = icmp eq %struct.strand_t* %8, null, !pdg.inst.id !75
DSWP:       br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:       %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79
DSWP:       %13 = load i8*, i8** %12, align 8, !tbaa !983, !pdg.inst.id !82
DSWP:       %8 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !tbaa !978, !pdg.inst.id !72
DSWP:       %7 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 4, !pdg.inst.id !71
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       br i1 %15, label %16, label %6, !pdg.inst.id !87
DSWP:       %14 = tail call i32 @strcmp(i8* %13, i8* %1) #48, !pdg.inst.id !47
DSWP:       %15 = icmp eq i32 %14, 0, !pdg.inst.id !85
DSWP:       %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:       %9 = icmp eq %struct.strand_t* %8, null, !pdg.inst.id !75
DSWP:       br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:       %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79
DSWP:       %13 = load i8*, i8** %12, align 8, !tbaa !983, !pdg.inst.id !82
DSWP:       %8 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !tbaa !978, !pdg.inst.id !72
DSWP:       %7 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 4, !pdg.inst.id !71
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 10
DSWP:     	  br i1 %15, label %16, label %6, !pdg.inst.id !87
DSWP:     	  %14 = tail call i32 @strcmp(i8* %13, i8* %1) #48, !pdg.inst.id !47
DSWP:     	  %15 = icmp eq i32 %14, 0, !pdg.inst.id !85
DSWP:     	  %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:     	  %9 = icmp eq %struct.strand_t* %8, null, !pdg.inst.id !75
DSWP:     	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79
DSWP:     	  %13 = load i8*, i8** %12, align 8, !tbaa !983, !pdg.inst.id !82
DSWP:     	  %8 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !tbaa !978, !pdg.inst.id !72
DSWP:     	  %7 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 4, !pdg.inst.id !71
DSWP:     External nodes: 0
DSWP:     Edges: 20
DSWP:     	From:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	To:	  %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:     	CTRL
DSWP:     	From:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	To:	  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79
DSWP:     	CTRL
DSWP:     	From:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	To:	  %13 = load i8*, i8** %12, align 8, !tbaa !983, !pdg.inst.id !82
DSWP:     	CTRL
DSWP:     	From:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	To:	  %14 = tail call i32 @strcmp(i8* %13, i8* %1) #48, !pdg.inst.id !47
DSWP:     	CTRL
DSWP:     	From:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	To:	  %15 = icmp eq i32 %14, 0, !pdg.inst.id !85
DSWP:     	CTRL
DSWP:     	From:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	To:	  br i1 %15, label %16, label %6, !pdg.inst.id !87
DSWP:     	CTRL
DSWP:     	From:	  %9 = icmp eq %struct.strand_t* %8, null, !pdg.inst.id !75
DSWP:     	To:	  br i1 %9, label %.loopexit, label %10, !pdg.inst.id !77
DSWP:     	RAW (must)
DSWP:     	From:	  %8 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !tbaa !978, !pdg.inst.id !72
DSWP:     	To:	  %9 = icmp eq %struct.strand_t* %8, null, !pdg.inst.id !75
DSWP:     	RAW (must)
DSWP:     	From:	  %8 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !tbaa !978, !pdg.inst.id !72
DSWP:     	To:	  %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:     	RAW (must)
DSWP:     	From:	  %7 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 4, !pdg.inst.id !71
DSWP:     	To:	  %8 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !tbaa !978, !pdg.inst.id !72
DSWP:     	RAW (must)
DSWP:     	From:	  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79
DSWP:     	To:	  %13 = load i8*, i8** %12, align 8, !tbaa !983, !pdg.inst.id !82
DSWP:     	RAW (must)
DSWP:     	From:	  %13 = load i8*, i8** %12, align 8, !tbaa !983, !pdg.inst.id !82
DSWP:     	To:	  %14 = tail call i32 @strcmp(i8* %13, i8* %1) #48, !pdg.inst.id !47
DSWP:     	RAW (must)
DSWP:     	From:	  %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:     	To:	  %12 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 0, !pdg.inst.id !79
DSWP:     	RAW (must)
DSWP:     	From:	  %11 = phi %struct.strand_t* [ %8, %6 ], [ %4, %.preheader ], !pdg.inst.id !65
DSWP:     	To:	  %7 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %11, i64 0, i32 4, !pdg.inst.id !71
DSWP:     	RAW (must)
DSWP:     	From:	  %15 = icmp eq i32 %14, 0, !pdg.inst.id !85
DSWP:     	To:	  br i1 %15, label %16, label %6, !pdg.inst.id !87
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	i8* %1
DSWP:    Pre loop env 2, producer:	  %4 = load %struct.strand_t*, %struct.strand_t** %3, align 8, !tbaa !978, !pdg.inst.id !61
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @17(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i8**
  %7 = load i8*, i8** %6
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to %struct.strand_t**
  %10 = load %struct.strand_t*, %struct.strand_t** %9
  %11 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32*
  br label %20

13:                                               ; preds = %15, %14
  ret void

14:                                               ; preds = %20
  store i32 0, i32* %12
  br label %13

15:                                               ; preds = %16
  store i32 1, i32* %12
  br label %13

16:                                               ; preds = %20
  %17 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i64 0, i32 4, !pdg.inst.id !30
  %18 = load %struct.strand_t*, %struct.strand_t** %17, align 8, !tbaa !31, !pdg.inst.id !35
  %19 = icmp eq %struct.strand_t* %18, null, !pdg.inst.id !36
  br i1 %19, label %15, label %20, !pdg.inst.id !37

20:                                               ; preds = %2, %16
  %21 = phi %struct.strand_t* [ %18, %16 ], [ %10, %2 ], !pdg.inst.id !38
  %22 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i64 0, i32 0, !pdg.inst.id !39
  %23 = load i8*, i8** %22, align 8, !tbaa !40, !pdg.inst.id !43
  %24 = tail call i32 @strcmp(i8* %23, i8* %7) #48, !pdg.inst.id !44
  %25 = icmp eq i32 %24, 0, !pdg.inst.id !45
  br i1 %25, label %14, label %16, !pdg.inst.id !46
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local i32 @addstrand(%struct.molecule_t*, i8*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !34 {
  %3 = alloca [24 x i64]
  %4 = bitcast [24 x i64]* %3 to i8*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i8**
  %7 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %8 = bitcast i64* %7 to %struct.strand_t**
  %9 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %10 = bitcast i64* %9 to i32*
  %11 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !36
  %12 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !tbaa !978, !pdg.inst.id !61
  %13 = icmp eq %struct.strand_t* %12, null, !pdg.inst.id !67
  br i1 %13, label %30, label %.preheader, !prof !982, !pdg.inst.id !69

.preheader:                                       ; preds = %2
  %14 = load i32, i32* @6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %83, label %20

16:                                               ; preds = %20
  %17 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i64 0, i32 4, !pdg.inst.id !71
  %18 = load %struct.strand_t*, %struct.strand_t** %17, align 8, !tbaa !978, !pdg.inst.id !72
  %19 = icmp eq %struct.strand_t* %18, null, !pdg.inst.id !75
  br i1 %19, label %.loopexit, label %20, !pdg.inst.id !77

20:                                               ; preds = %.preheader, %16
  %21 = phi %struct.strand_t* [ %18, %16 ], [ %12, %.preheader ], !pdg.inst.id !65
  %22 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i64 0, i32 0, !pdg.inst.id !79
  %23 = load i8*, i8** %22, align 8, !tbaa !983, !pdg.inst.id !82
  %24 = tail call i32 @strcmp(i8* %23, i8* %1) #48, !pdg.inst.id !47
  %25 = icmp eq i32 %24, 0, !pdg.inst.id !85
  br i1 %25, label %26, label %16, !pdg.inst.id !87

26:                                               ; preds = %98, %20
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !978, !pdg.inst.id !89
  %28 = getelementptr [37 x i8], [37 x i8]* @.str.2.207, i64 0, i64 0, !pdg.inst.id !91
  %29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* %28, i8* %1) #49, !pdg.inst.id !49
  br label %81, !pdg.inst.id !901

.loopexit:                                        ; preds = %98, %16
  br label %30, !pdg.inst.id !903

30:                                               ; preds = %.loopexit, %2
  %31 = tail call noalias i8* @malloc(i64 48) #50, !pdg.inst.id !93
  %32 = icmp eq i8* %31, null, !pdg.inst.id !106
  br i1 %32, label %33, label %40, !prof !986, !pdg.inst.id !111

33:                                               ; preds = %30
  %34 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !113
  %35 = getelementptr [14 x i8], [14 x i8]* @.str.3.209, i64 0, i64 0, !pdg.inst.id !115
  %36 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %34, i8* %35, i8* %1) #50, !pdg.inst.id !53
  %37 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !117
  %38 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !120
  %39 = tail call i32 @rt_errormsg_s(i32 1, i8* %37, i8* %38) #50, !pdg.inst.id !118
  br label %81, !pdg.inst.id !918

40:                                               ; preds = %30
  %41 = tail call i64 @strlen(i8* %1) #48, !pdg.inst.id !51
  %42 = shl i64 %41, 32, !pdg.inst.id !122
  %43 = add i64 %42, 4294967296, !pdg.inst.id !124
  %44 = ashr exact i64 %43, 32, !pdg.inst.id !126
  %45 = tail call noalias i8* @malloc(i64 %44) #50, !pdg.inst.id !128
  %46 = icmp eq i8* %45, null, !pdg.inst.id !133
  br i1 %46, label %47, label %54, !prof !986, !pdg.inst.id !135

47:                                               ; preds = %40
  %48 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !137
  %49 = getelementptr [23 x i8], [23 x i8]* @.str.4.210, i64 0, i64 0, !pdg.inst.id !139
  %50 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %48, i8* %49, i8* %1) #50, !pdg.inst.id !55
  %51 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !141
  %52 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !143
  %53 = tail call i32 @rt_errormsg_s(i32 1, i8* %51, i8* %52) #50, !pdg.inst.id !108
  br label %81, !pdg.inst.id !932

54:                                               ; preds = %40
  %55 = bitcast i8* %31 to i8**, !pdg.inst.id !104
  store i8* %45, i8** %55, align 8, !tbaa !983, !pdg.inst.id !130
  %56 = tail call i8* @strcpy(i8* nonnull %45, i8* %1) #50, !pdg.inst.id !57
  %57 = getelementptr inbounds i8, i8* %31, i64 8, !pdg.inst.id !102
  %58 = bitcast i8* %57 to i32*, !pdg.inst.id !146
  store i32 0, i32* %58, align 8, !tbaa !987, !pdg.inst.id !148
  %59 = getelementptr inbounds i8, i8* %31, i64 12, !pdg.inst.id !100
  %60 = bitcast i8* %59 to i32*, !pdg.inst.id !150
  store i32 0, i32* %60, align 4, !tbaa !988, !pdg.inst.id !152
  %61 = getelementptr inbounds i8, i8* %31, i64 16, !pdg.inst.id !98
  %62 = bitcast i8* %61 to %struct.molecule_t**, !pdg.inst.id !154
  store %struct.molecule_t* %0, %struct.molecule_t** %62, align 8, !tbaa !989, !pdg.inst.id !41
  %63 = getelementptr inbounds i8, i8* %31, i64 24, !pdg.inst.id !96
  %64 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 1, !pdg.inst.id !43
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false), !pdg.inst.id !157
  %65 = load i32, i32* %64, align 8, !tbaa !990, !pdg.inst.id !161
  %66 = icmp eq i32 %65, 0, !pdg.inst.id !165
  br i1 %66, label %76, label %67, !prof !982, !pdg.inst.id !167

67:                                               ; preds = %54
  %68 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !tbaa !992, !pdg.inst.id !63
  br label %69, !pdg.inst.id !952

69:                                               ; preds = %._crit_edge, %67
  %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
  %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
  %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180

._crit_edge:                                      ; preds = %69
  br label %69, !pdg.inst.id !964

74:                                               ; preds = %69
  %.lcssa = phi %struct.strand_t* [ %70, %69 ], !pdg.inst.id !171
  %75 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa, i64 0, i32 4, !pdg.inst.id !182
  br label %76, !pdg.inst.id !968

76:                                               ; preds = %54, %74
  %77 = phi %struct.strand_t** [ %75, %74 ], [ %11, %54 ], !pdg.inst.id !59
  %78 = bitcast %struct.strand_t** %77 to i8**, !pdg.inst.id !185
  store i8* %31, i8** %78, align 8, !tbaa !978, !pdg.inst.id !94
  %79 = add nsw i32 %65, 1, !pdg.inst.id !163
  store i32 %79, i32* %64, align 8, !tbaa !990, !pdg.inst.id !159
  %80 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 5, !pdg.inst.id !45
  store i32 0, i32* %80, align 8, !tbaa !994, !pdg.inst.id !189
  br label %81, !pdg.inst.id !977

81:                                               ; preds = %76, %47, %33, %26
  %82 = phi i32 [ 1, %26 ], [ 1, %33 ], [ 1, %47 ], [ 0, %76 ], !pdg.inst.id !191
  ret i32 %82, !pdg.inst.id !192

83:                                               ; preds = %.preheader
  store i32 1, i32* @6
  store i8* %1, i8** %6
  store %struct.strand_t* %12, %struct.strand_t** %8
  %84 = alloca [1 x i8*]
  %85 = getelementptr inbounds [1 x i8*], [1 x i8*]* %84, i64 0, i64 0
  %86 = bitcast i8** %85 to void (i8*, i8*)**
  store void (i8*, i8*)* @18, void (i8*, i8*)** %86
  %87 = bitcast [1 x i8*]* %84 to i8*
  %88 = alloca [8 x i64]
  %89 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 0
  store i64 64, i64* %89
  %90 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 1
  store i64 64, i64* %90
  %91 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 2
  store i64 64, i64* %91
  %92 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 3
  store i64 64, i64* %92
  %93 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 4
  store i64 64, i64* %93
  %94 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 5
  store i64 64, i64* %94
  %95 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 6
  store i64 64, i64* %95
  %96 = getelementptr inbounds [8 x i64], [8 x i64]* %88, i64 0, i64 7
  store i64 64, i64* %96
  %97 = bitcast [8 x i64]* %88 to i64*
  call void @stageDispatcher(i8* %4, i64* %97, i8* %87, i64 1, i64 8)
  br label %98

98:                                               ; preds = %83
  %99 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %100 = load i64, i64* %99
  %101 = trunc i64 %100 to i32
  store i32 0, i32* @6
  switch i32 %101, label %26 [
    i32 1, label %.loopexit
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "addstrand"
Parallelizer:  Loop 7 = "  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
DSWP:       %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:       %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:       %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
DSWP:       br label %69, !pdg.inst.id !964
DSWP:       br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
DSWP:       %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:       %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:       %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
DSWP:       br label %69, !pdg.inst.id !964
DSWP:       br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 6
DSWP:     	  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
DSWP:     	  %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:     	  %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:     	  %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
DSWP:     	  br label %69, !pdg.inst.id !964
DSWP:     	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     External nodes: 0
DSWP:     Edges: 11
DSWP:     	From:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	To:	  %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:     	CTRL
DSWP:     	From:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	To:	  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
DSWP:     	CTRL
DSWP:     	From:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	To:	  %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:     	CTRL
DSWP:     	From:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	To:	  %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
DSWP:     	CTRL
DSWP:     	From:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	To:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	CTRL
DSWP:     	From:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	To:	  br label %69, !pdg.inst.id !964
DSWP:     	CTRL
DSWP:     	From:	  %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
DSWP:     	To:	  br i1 %73, label %74, label %._crit_edge, !pdg.inst.id !180
DSWP:     	RAW (must)
DSWP:     	From:	  %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:     	To:	  %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:     	RAW (must)
DSWP:     	From:	  %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:     	To:	  %73 = icmp eq %struct.strand_t* %72, null, !pdg.inst.id !178
DSWP:     	RAW (must)
DSWP:     	From:	  %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:     	To:	  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
DSWP:     	RAW (must)
DSWP:     	From:	  %71 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %70, i64 0, i32 4, !pdg.inst.id !173
DSWP:     	To:	  %72 = load %struct.strand_t*, %struct.strand_t** %71, align 8, !tbaa !993, !pdg.inst.id !175
DSWP:     	RAW (must)
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %68 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !tbaa !992, !pdg.inst.id !63
DSWP:    Post loop env 2, producer:	  %70 = phi %struct.strand_t* [ %68, %67 ], [ %72, %._crit_edge ], !pdg.inst.id !169
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @19(i8*, i8*) {
  %3 = bitcast i8* %0 to [16 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = load %struct.strand_t*, %struct.strand_t** %6
  %8 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to %struct.strand_t**
  br label %12

10:                                               ; preds = %11
  ret void

11:                                               ; preds = %12
  store %struct.strand_t* %13, %struct.strand_t** %9
  br label %10

12:                                               ; preds = %2, %17
  %13 = phi %struct.strand_t* [ %7, %2 ], [ %15, %17 ], !pdg.inst.id !30
  %14 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %13, i64 0, i32 4, !pdg.inst.id !31
  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !tbaa !32, !pdg.inst.id !38
  %16 = icmp eq %struct.strand_t* %15, null, !pdg.inst.id !39
  br i1 %16, label %11, label %17, !pdg.inst.id !40

17:                                               ; preds = %12
  br label %12, !pdg.inst.id !41
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local i32 @addstrand(%struct.molecule_t*, i8*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !34 {
  %3 = alloca [16 x i64]
  %4 = bitcast [16 x i64]* %3 to i8*
  %5 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to %struct.strand_t**
  %7 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 8
  %8 = bitcast i64* %7 to %struct.strand_t**
  %9 = alloca [24 x i64]
  %10 = bitcast [24 x i64]* %9 to i8*
  %11 = getelementptr inbounds [24 x i64], [24 x i64]* %9, i64 0, i64 0
  %12 = bitcast i64* %11 to i8**
  %13 = getelementptr inbounds [24 x i64], [24 x i64]* %9, i64 0, i64 8
  %14 = bitcast i64* %13 to %struct.strand_t**
  %15 = getelementptr inbounds [24 x i64], [24 x i64]* %9, i64 0, i64 16
  %16 = bitcast i64* %15 to i32*
  %17 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 2, !pdg.inst.id !36
  %18 = load %struct.strand_t*, %struct.strand_t** %17, align 8, !tbaa !978, !pdg.inst.id !61
  %19 = icmp eq %struct.strand_t* %18, null, !pdg.inst.id !67
  br i1 %19, label %36, label %.preheader, !prof !982, !pdg.inst.id !69

.preheader:                                       ; preds = %2
  %20 = load i32, i32* @6
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %91, label %26

22:                                               ; preds = %26
  %23 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 4, !pdg.inst.id !71
  %24 = load %struct.strand_t*, %struct.strand_t** %23, align 8, !tbaa !978, !pdg.inst.id !72
  %25 = icmp eq %struct.strand_t* %24, null, !pdg.inst.id !75
  br i1 %25, label %.loopexit, label %26, !pdg.inst.id !77

26:                                               ; preds = %.preheader, %22
  %27 = phi %struct.strand_t* [ %24, %22 ], [ %18, %.preheader ], !pdg.inst.id !65
  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i64 0, i32 0, !pdg.inst.id !79
  %29 = load i8*, i8** %28, align 8, !tbaa !983, !pdg.inst.id !82
  %30 = tail call i32 @strcmp(i8* %29, i8* %1) #48, !pdg.inst.id !47
  %31 = icmp eq i32 %30, 0, !pdg.inst.id !85
  br i1 %31, label %32, label %22, !pdg.inst.id !87

32:                                               ; preds = %106, %26
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !978, !pdg.inst.id !89
  %34 = getelementptr [37 x i8], [37 x i8]* @.str.2.207, i64 0, i64 0, !pdg.inst.id !91
  %35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* %34, i8* %1) #49, !pdg.inst.id !49
  br label %89, !pdg.inst.id !901

.loopexit:                                        ; preds = %106, %22
  br label %36, !pdg.inst.id !903

36:                                               ; preds = %.loopexit, %2
  %37 = tail call noalias i8* @malloc(i64 48) #50, !pdg.inst.id !93
  %38 = icmp eq i8* %37, null, !pdg.inst.id !106
  br i1 %38, label %39, label %46, !prof !986, !pdg.inst.id !111

39:                                               ; preds = %36
  %40 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !113
  %41 = getelementptr [14 x i8], [14 x i8]* @.str.3.209, i64 0, i64 0, !pdg.inst.id !115
  %42 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %40, i8* %41, i8* %1) #50, !pdg.inst.id !53
  %43 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !117
  %44 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !120
  %45 = tail call i32 @rt_errormsg_s(i32 1, i8* %43, i8* %44) #50, !pdg.inst.id !118
  br label %89, !pdg.inst.id !918

46:                                               ; preds = %36
  %47 = tail call i64 @strlen(i8* %1) #48, !pdg.inst.id !51
  %48 = shl i64 %47, 32, !pdg.inst.id !122
  %49 = add i64 %48, 4294967296, !pdg.inst.id !124
  %50 = ashr exact i64 %49, 32, !pdg.inst.id !126
  %51 = tail call noalias i8* @malloc(i64 %50) #50, !pdg.inst.id !128
  %52 = icmp eq i8* %51, null, !pdg.inst.id !133
  br i1 %52, label %53, label %60, !prof !986, !pdg.inst.id !135

53:                                               ; preds = %46
  %54 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !137
  %55 = getelementptr [23 x i8], [23 x i8]* @.str.4.210, i64 0, i64 0, !pdg.inst.id !139
  %56 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %54, i8* %55, i8* %1) #50, !pdg.inst.id !55
  %57 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !141
  %58 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !143
  %59 = tail call i32 @rt_errormsg_s(i32 1, i8* %57, i8* %58) #50, !pdg.inst.id !108
  br label %89, !pdg.inst.id !932

60:                                               ; preds = %46
  %61 = bitcast i8* %37 to i8**, !pdg.inst.id !104
  store i8* %51, i8** %61, align 8, !tbaa !983, !pdg.inst.id !130
  %62 = tail call i8* @strcpy(i8* nonnull %51, i8* %1) #50, !pdg.inst.id !57
  %63 = getelementptr inbounds i8, i8* %37, i64 8, !pdg.inst.id !102
  %64 = bitcast i8* %63 to i32*, !pdg.inst.id !146
  store i32 0, i32* %64, align 8, !tbaa !987, !pdg.inst.id !148
  %65 = getelementptr inbounds i8, i8* %37, i64 12, !pdg.inst.id !100
  %66 = bitcast i8* %65 to i32*, !pdg.inst.id !150
  store i32 0, i32* %66, align 4, !tbaa !988, !pdg.inst.id !152
  %67 = getelementptr inbounds i8, i8* %37, i64 16, !pdg.inst.id !98
  %68 = bitcast i8* %67 to %struct.molecule_t**, !pdg.inst.id !154
  store %struct.molecule_t* %0, %struct.molecule_t** %68, align 8, !tbaa !989, !pdg.inst.id !41
  %69 = getelementptr inbounds i8, i8* %37, i64 24, !pdg.inst.id !96
  %70 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 1, !pdg.inst.id !43
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false), !pdg.inst.id !157
  %71 = load i32, i32* %70, align 8, !tbaa !990, !pdg.inst.id !161
  %72 = icmp eq i32 %71, 0, !pdg.inst.id !165
  br i1 %72, label %84, label %73, !prof !982, !pdg.inst.id !167

73:                                               ; preds = %60
  %74 = load %struct.strand_t*, %struct.strand_t** %17, align 8, !tbaa !992, !pdg.inst.id !63
  %75 = load i32, i32* @7
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %110, label %77

77:                                               ; preds = %73, %._crit_edge
  %78 = phi %struct.strand_t* [ %74, %73 ], [ %80, %._crit_edge ], !pdg.inst.id !169
  %79 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %78, i64 0, i32 4, !pdg.inst.id !173
  %80 = load %struct.strand_t*, %struct.strand_t** %79, align 8, !tbaa !993, !pdg.inst.id !175
  %81 = icmp eq %struct.strand_t* %80, null, !pdg.inst.id !178
  br i1 %81, label %82, label %._crit_edge, !pdg.inst.id !180

._crit_edge:                                      ; preds = %77
  br label %77, !pdg.inst.id !964

82:                                               ; preds = %126, %77
  %.lcssa = phi %struct.strand_t* [ %78, %77 ], [ %125, %126 ], !pdg.inst.id !171
  %83 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %.lcssa, i64 0, i32 4, !pdg.inst.id !182
  br label %84, !pdg.inst.id !968

84:                                               ; preds = %60, %82
  %85 = phi %struct.strand_t** [ %83, %82 ], [ %17, %60 ], !pdg.inst.id !59
  %86 = bitcast %struct.strand_t** %85 to i8**, !pdg.inst.id !185
  store i8* %37, i8** %86, align 8, !tbaa !978, !pdg.inst.id !94
  %87 = add nsw i32 %71, 1, !pdg.inst.id !163
  store i32 %87, i32* %70, align 8, !tbaa !990, !pdg.inst.id !159
  %88 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %0, i64 0, i32 5, !pdg.inst.id !45
  store i32 0, i32* %88, align 8, !tbaa !994, !pdg.inst.id !189
  br label %89, !pdg.inst.id !977

89:                                               ; preds = %84, %53, %39, %32
  %90 = phi i32 [ 1, %32 ], [ 1, %39 ], [ 1, %53 ], [ 0, %84 ], !pdg.inst.id !191
  ret i32 %90, !pdg.inst.id !192

91:                                               ; preds = %.preheader
  store i32 1, i32* @6
  store i8* %1, i8** %12
  store %struct.strand_t* %18, %struct.strand_t** %14
  %92 = alloca [1 x i8*]
  %93 = getelementptr inbounds [1 x i8*], [1 x i8*]* %92, i64 0, i64 0
  %94 = bitcast i8** %93 to void (i8*, i8*)**
  store void (i8*, i8*)* @19, void (i8*, i8*)** %94
  %95 = bitcast [1 x i8*]* %92 to i8*
  %96 = alloca [8 x i64]
  %97 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 0
  store i64 64, i64* %97
  %98 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 1
  store i64 64, i64* %98
  %99 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 2
  store i64 64, i64* %99
  %100 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 3
  store i64 64, i64* %100
  %101 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 4
  store i64 64, i64* %101
  %102 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 5
  store i64 64, i64* %102
  %103 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 6
  store i64 64, i64* %103
  %104 = getelementptr inbounds [8 x i64], [8 x i64]* %96, i64 0, i64 7
  store i64 64, i64* %104
  %105 = bitcast [8 x i64]* %96 to i64*
  call void @stageDispatcher(i8* %10, i64* %105, i8* %95, i64 1, i64 8)
  br label %106

106:                                              ; preds = %91
  %107 = getelementptr inbounds [24 x i64], [24 x i64]* %9, i64 0, i64 16
  %108 = load i64, i64* %107
  %109 = trunc i64 %108 to i32
  store i32 0, i32* @6
  switch i32 %109, label %32 [
    i32 1, label %.loopexit
  ]

110:                                              ; preds = %73
  store i32 1, i32* @7
  store %struct.strand_t* %74, %struct.strand_t** %6
  %111 = alloca [1 x i8*]
  %112 = getelementptr inbounds [1 x i8*], [1 x i8*]* %111, i64 0, i64 0
  %113 = bitcast i8** %112 to void (i8*, i8*)**
  store void (i8*, i8*)* @20, void (i8*, i8*)** %113
  %114 = bitcast [1 x i8*]* %111 to i8*
  %115 = alloca [8 x i64]
  %116 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 0
  store i64 64, i64* %116
  %117 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 1
  store i64 64, i64* %117
  %118 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 2
  store i64 64, i64* %118
  %119 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 3
  store i64 64, i64* %119
  %120 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 4
  store i64 64, i64* %120
  %121 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 5
  store i64 64, i64* %121
  %122 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 6
  store i64 64, i64* %122
  %123 = getelementptr inbounds [8 x i64], [8 x i64]* %115, i64 0, i64 7
  store i64 64, i64* %123
  %124 = bitcast [8 x i64]* %115 to i64*
  call void @stageDispatcher(i8* %4, i64* %124, i8* %114, i64 1, i64 8)
  %125 = load %struct.strand_t*, %struct.strand_t** %8
  br label %126

126:                                              ; preds = %110
  store i32 0, i32* @7
  br label %82
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "aexpr2rexpr"
Parallelizer:  Loop 8 = "  %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %14 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !57
DSWP:       %12 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !61
DSWP:       %17 = getelementptr inbounds i8, i8* %5, i64 1, !pdg.inst.id !47
DSWP:       br label %15, !pdg.inst.id !145
DSWP:       br label %15, !pdg.inst.id !139
DSWP:       switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:       store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:       %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49
DSWP:       %9 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !65
DSWP:       store i8 %7, i8* %6, align 1, !tbaa !148, !pdg.inst.id !55
DSWP:       br label %15, !pdg.inst.id !141
DSWP:       %5 = phi i8* [ %0, %1 ], [ %17, %15 ], !pdg.inst.id !36
DSWP:       %10 = getelementptr inbounds i8, i8* %6, i64 2, !pdg.inst.id !53
DSWP:       %6 = phi i8* [ %3, %1 ], [ %16, %15 ], !pdg.inst.id !45
DSWP:       store i8 42, i8* %9, align 1, !tbaa !148, !pdg.inst.id !70
DSWP:       %16 = phi i8* [ %10, %8 ], [ %12, %11 ], [ %14, %13 ], !pdg.inst.id !72
DSWP:       br label %4, !pdg.inst.id !136
DSWP:       store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !63
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %14 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !57
DSWP:       %12 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !61
DSWP:       %17 = getelementptr inbounds i8, i8* %5, i64 1, !pdg.inst.id !47
DSWP:       br label %15, !pdg.inst.id !145
DSWP:       br label %15, !pdg.inst.id !139
DSWP:       switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:       store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:       %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49
DSWP:       %9 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !65
DSWP:       store i8 %7, i8* %6, align 1, !tbaa !148, !pdg.inst.id !55
DSWP:       br label %15, !pdg.inst.id !141
DSWP:       %5 = phi i8* [ %0, %1 ], [ %17, %15 ], !pdg.inst.id !36
DSWP:       %10 = getelementptr inbounds i8, i8* %6, i64 2, !pdg.inst.id !53
DSWP:       %6 = phi i8* [ %3, %1 ], [ %16, %15 ], !pdg.inst.id !45
DSWP:       store i8 42, i8* %9, align 1, !tbaa !148, !pdg.inst.id !70
DSWP:       %16 = phi i8* [ %10, %8 ], [ %12, %11 ], [ %14, %13 ], !pdg.inst.id !72
DSWP:       br label %4, !pdg.inst.id !136
DSWP:       store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !63
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 18
DSWP:     	  %14 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !57
DSWP:     	  %12 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !61
DSWP:     	  %17 = getelementptr inbounds i8, i8* %5, i64 1, !pdg.inst.id !47
DSWP:     	  br label %15, !pdg.inst.id !145
DSWP:     	  br label %15, !pdg.inst.id !139
DSWP:     	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:     	  %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49
DSWP:     	  %9 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !65
DSWP:     	  store i8 %7, i8* %6, align 1, !tbaa !148, !pdg.inst.id !55
DSWP:     	  br label %15, !pdg.inst.id !141
DSWP:     	  %5 = phi i8* [ %0, %1 ], [ %17, %15 ], !pdg.inst.id !36
DSWP:     	  %10 = getelementptr inbounds i8, i8* %6, i64 2, !pdg.inst.id !53
DSWP:     	  %6 = phi i8* [ %3, %1 ], [ %16, %15 ], !pdg.inst.id !45
DSWP:     	  store i8 42, i8* %9, align 1, !tbaa !148, !pdg.inst.id !70
DSWP:     	  %16 = phi i8* [ %10, %8 ], [ %12, %11 ], [ %14, %13 ], !pdg.inst.id !72
DSWP:     	  br label %4, !pdg.inst.id !136
DSWP:     	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !63
DSWP:     External nodes: 0
DSWP:     Edges: 69
DSWP:     	From:	  %17 = getelementptr inbounds i8, i8* %5, i64 1, !pdg.inst.id !47
DSWP:     	To:	  %5 = phi i8* [ %0, %1 ], [ %17, %15 ], !pdg.inst.id !36
DSWP:     	RAW (must)
DSWP:     	From:	  %12 = getelementptr inbounds i8, i8* %6, i64 1, !pdg.inst.id !61
DSWP:     	To:	  %16 = phi i8* [ %10, %8 ], [ %12, %11 ], [ %14, %13 ], !pdg.inst.id !72
DSWP:     	RAW (must)
DSWP:     	From:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:     	To:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !63
DSWP:     	WAW (must) from memory 
DSWP:     	From:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:     	To:	  %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:     	To:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !63
DSWP:     	WAW (must) from memory 
DSWP:     	From:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:     	To:	  store i8 %7, i8* %6, align 1, !tbaa !148, !pdg.inst.id !55
DSWP:     	WAW (must) from memory 
DSWP:     	From:	  store i8 46, i8* %6, align 1, !tbaa !148, !pdg.inst.id !59
DSWP:     	To:	  store i8 %7, i8* %6, align 1, !tbaa !148, !pdg.inst.id !55
DSWP:     	WAW (must) from memory 
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  %5 = phi i8* [ %0, %1 ], [ %17, %15 ], !pdg.inst.id !36
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  %6 = phi i8* [ %3, %1 ], [ %16, %15 ], !pdg.inst.id !45
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  %5 = phi i8* [ %0, %1 ], [ %17, %15 ], !pdg.inst.id !36
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  %6 = phi i8* [ %3, %1 ], [ %16, %15 ], !pdg.inst.id !45
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  %7 = load i8, i8* %5, align 1, !tbaa !148, !pdg.inst.id !49
DSWP:     	CTRL
DSWP:     	From:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	To:	  switch i8 %7, label %13 [
    i8 0, label %18
    i8 42, label %8
    i8 63, label %11
  ], !prof !152, !pdg.inst.id !67
DSWP:     	CTRL
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	i8* %0
DSWP:    Pre loop env 2, producer:	  %3 = getelementptr [1000 x i8], [1000 x i8]* @rexpr, i64 0, i64 1, !pdg.inst.id !44
DSWP:    Post loop env 3, producer:	  %6 = phi i8* [ %3, %1 ], [ %16, %15 ], !pdg.inst.id !45
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @21(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %6 = bitcast i64* %5 to i8**
  %7 = load i8*, i8** %6
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %9 = bitcast i64* %8 to i8**
  %10 = load i8*, i8** %9
  %11 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %12 = bitcast i64* %11 to i8**
  br label %15

13:                                               ; preds = %14
  ret void

14:                                               ; preds = %15
  store i8* %17, i8** %12
  br label %13

15:                                               ; preds = %2, %26
  %16 = phi i8* [ %7, %2 ], [ %28, %26 ], !pdg.inst.id !30
  %17 = phi i8* [ %10, %2 ], [ %27, %26 ], !pdg.inst.id !31
  %18 = load i8, i8* %16, align 1, !tbaa !32, !pdg.inst.id !35
  switch i8 %18, label %24 [
    i8 0, label %14
    i8 42, label %19
    i8 63, label %22
  ], !prof !36, !pdg.inst.id !37

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %17, i64 1, !pdg.inst.id !38
  store i8 46, i8* %17, align 1, !tbaa !32, !pdg.inst.id !39
  %21 = getelementptr inbounds i8, i8* %17, i64 2, !pdg.inst.id !40
  store i8 42, i8* %20, align 1, !tbaa !32, !pdg.inst.id !41
  br label %26, !pdg.inst.id !42

22:                                               ; preds = %15
  %23 = getelementptr inbounds i8, i8* %17, i64 1, !pdg.inst.id !43
  store i8 46, i8* %17, align 1, !tbaa !32, !pdg.inst.id !44
  br label %26, !pdg.inst.id !45

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %17, i64 1, !pdg.inst.id !46
  store i8 %18, i8* %17, align 1, !tbaa !32, !pdg.inst.id !47
  br label %26, !pdg.inst.id !48

26:                                               ; preds = %24, %22, %19
  %27 = phi i8* [ %21, %19 ], [ %23, %22 ], [ %25, %24 ], !pdg.inst.id !49
  %28 = getelementptr inbounds i8, i8* %16, i64 1, !pdg.inst.id !50
  br label %15, !pdg.inst.id !51
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nofree norecurse nounwind uwtable
define internal fastcc void @aexpr2rexpr(i8* nocapture readonly) unnamed_addr #20 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !34 {
  %2 = alloca [24 x i64]
  %3 = bitcast [24 x i64]* %2 to i8*
  %4 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 0
  %5 = bitcast i64* %4 to i8**
  %6 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 8
  %7 = bitcast i64* %6 to i8**
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 16
  %9 = bitcast i64* %8 to i8**
  %10 = getelementptr [1000 x i8], [1000 x i8]* @rexpr, i64 0, i64 0, !pdg.inst.id !41
  store i8 94, i8* %10, align 16, !tbaa !148, !pdg.inst.id !42
  %11 = getelementptr [1000 x i8], [1000 x i8]* @rexpr, i64 0, i64 1, !pdg.inst.id !44
  %12 = load i32, i32* @8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %1, %25
  %15 = phi i8* [ %0, %1 ], [ %27, %25 ], !pdg.inst.id !36
  %16 = phi i8* [ %11, %1 ], [ %26, %25 ], !pdg.inst.id !45
  %17 = load i8, i8* %15, align 1, !tbaa !148, !pdg.inst.id !49
  switch i8 %17, label %23 [
    i8 0, label %28
    i8 42, label %18
    i8 63, label %21
  ], !prof !151, !pdg.inst.id !67

18:                                               ; preds = %14
  %19 = getelementptr inbounds i8, i8* %16, i64 1, !pdg.inst.id !65
  store i8 46, i8* %16, align 1, !tbaa !148, !pdg.inst.id !63
  %20 = getelementptr inbounds i8, i8* %16, i64 2, !pdg.inst.id !53
  store i8 42, i8* %19, align 1, !tbaa !148, !pdg.inst.id !70
  br label %25, !pdg.inst.id !139

21:                                               ; preds = %14
  %22 = getelementptr inbounds i8, i8* %16, i64 1, !pdg.inst.id !61
  store i8 46, i8* %16, align 1, !tbaa !148, !pdg.inst.id !59
  br label %25, !pdg.inst.id !141

23:                                               ; preds = %14
  %24 = getelementptr inbounds i8, i8* %16, i64 1, !pdg.inst.id !57
  store i8 %17, i8* %16, align 1, !tbaa !148, !pdg.inst.id !55
  br label %25, !pdg.inst.id !145

25:                                               ; preds = %18, %23, %21
  %26 = phi i8* [ %20, %18 ], [ %22, %21 ], [ %24, %23 ], !pdg.inst.id !72
  %27 = getelementptr inbounds i8, i8* %15, i64 1, !pdg.inst.id !47
  br label %14, !pdg.inst.id !136

28:                                               ; preds = %46, %14
  %.lcssa = phi i8* [ %16, %14 ], [ %45, %46 ], !pdg.inst.id !51
  %29 = getelementptr inbounds i8, i8* %.lcssa, i64 1, !pdg.inst.id !78
  store i8 36, i8* %.lcssa, align 1, !tbaa !148, !pdg.inst.id !80
  store i8 0, i8* %29, align 1, !tbaa !148, !pdg.inst.id !82
  ret void, !pdg.inst.id !152

30:                                               ; preds = %1
  store i32 1, i32* @8
  store i8* %0, i8** %7
  store i8* %11, i8** %9
  %31 = alloca [1 x i8*]
  %32 = getelementptr inbounds [1 x i8*], [1 x i8*]* %31, i64 0, i64 0
  %33 = bitcast i8** %32 to void (i8*, i8*)**
  store void (i8*, i8*)* @22, void (i8*, i8*)** %33
  %34 = bitcast [1 x i8*]* %31 to i8*
  %35 = alloca [8 x i64]
  %36 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 0
  store i64 64, i64* %36
  %37 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 1
  store i64 64, i64* %37
  %38 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 2
  store i64 64, i64* %38
  %39 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 3
  store i64 64, i64* %39
  %40 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 4
  store i64 64, i64* %40
  %41 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 5
  store i64 64, i64* %41
  %42 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 6
  store i64 64, i64* %42
  %43 = getelementptr inbounds [8 x i64], [8 x i64]* %35, i64 0, i64 7
  store i64 64, i64* %43
  %44 = bitcast [8 x i64]* %35 to i64*
  call void @stageDispatcher(i8* %3, i64* %44, i8* %34, i64 1, i64 8)
  %45 = load i8*, i8** %5
  br label %46

46:                                               ; preds = %30
  store i32 0, i32* @8
  br label %28
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 9 = "  %33 = srem i32 %26, %14, !pdg.inst.id !183"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %350 = select i1 %347, i32 %349, i32 %348, !pdg.inst.id !1067
DSWP:       store i32 %233, i32* %244, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:       %235 = icmp eq i32 %233, %234, !pdg.inst.id !832
DSWP:       %278 = phi i64 [ %302, %299 ], [ %227, %.preheader5 ], !pdg.inst.id !807
DSWP:       %282 = load i32, i32* %281, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:       br i1 %204, label %._crit_edge, label %205, !prof !7110, !pdg.inst.id !777
DSWP:       %202 = load i32, i32* %201, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:       %213 = add nsw i32 %200, 1, !pdg.inst.id !767
DSWP:       %135 = getelementptr inbounds i32, i32* %32, i64 %134, !pdg.inst.id !303
DSWP:       %329 = phi i32 [ %314, %._crit_edge3 ], [ %324, %319 ], !pdg.inst.id !994
DSWP:       %237 = icmp slt i32 %233, %109, !pdg.inst.id !513
DSWP:       %198 = phi i64 [ %222, %219 ], [ %148, %.preheader13 ], !pdg.inst.id !653
DSWP:       br i1 %332, label %311, label %.loopexit, !pdg.inst.id !1029
DSWP:       %326 = sext i32 %323 to i64, !pdg.inst.id !1016
DSWP:       %127 = sext i32 %126 to i64, !pdg.inst.id !552
DSWP:       br i1 %196, label %175, label %.loopexit8, !prof !7109, !pdg.inst.id !751
DSWP:       %29 = phi i32* [ %389, %377 ], [ %5, %17 ], !pdg.inst.id !81
DSWP:       %164 = sext i32 %161 to i64, !pdg.inst.id !691
DSWP:       %158 = icmp slt i32 %154, %109, !pdg.inst.id !517
DSWP:       %302 = add nsw i64 %278, 1, !pdg.inst.id !914
DSWP:       %168 = phi i32 [ %151, %._crit_edge2 ], [ %163, %157 ], !pdg.inst.id !663
DSWP:       %128 = getelementptr inbounds double, double* %10, i64 %127, !pdg.inst.id !150
DSWP:       %296 = select i1 %291, i32 %279, i32 %292, !prof !7111, !pdg.inst.id !916
DSWP:       %361 = phi i32 [ %305, %304 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
DSWP:       %274 = phi i32 [ %252, %._crit_edge4 ], [ %269, %258 ], !pdg.inst.id !866
DSWP:       %117 = sext i32 %28 to i64, !pdg.inst.id !254
DSWP:       %286 = mul nsw i32 %282, %12, !pdg.inst.id !168
DSWP:       %267 = select i1 %264, i32 %266, i32 %265, !prof !7111, !pdg.inst.id !895
DSWP:       %259 = mul nsw i32 %255, %12, !pdg.inst.id !170
DSWP:       %331 = add nsw i64 %312, 1, !pdg.inst.id !984
DSWP:       %240 = select i1 %237, i32 %238, i32 %239, !prof !7108, !pdg.inst.id !839
DSWP:       %223 = icmp slt i64 %198, %16, !pdg.inst.id !189
DSWP:       br label %166, !pdg.inst.id !6685
DSWP:       br i1 %223, label %197, label %.loopexit14, !prof !7112, !pdg.inst.id !803
DSWP:       br i1 %170, label %149, label %.loopexit12, !prof !7109, !pdg.inst.id !700
DSWP:       %337 = getelementptr inbounds i32, i32* %30, i64 %334, !pdg.inst.id !285
DSWP:       %32 = phi i32* [ %29, %377 ], [ %0, %17 ], !pdg.inst.id !53
DSWP:       br i1 %145, label %304, label %225, !prof !7106, !pdg.inst.id !645
DSWP:       %271 = getelementptr inbounds i32, i32* %1, i64 %270, !pdg.inst.id !55
DSWP:       %151 = phi i32 [ %168, %166 ], [ %140, %.preheader11 ], !pdg.inst.id !580
DSWP:       %112 = add nsw i32 %33, -1, !pdg.inst.id !325
DSWP:       %382 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
DSWP:       br i1 %145, label %304, label %172, !prof !7106, !pdg.inst.id !647
DSWP:       %247 = phi i32 [ %230, %._crit_edge7 ], [ %242, %236 ], !pdg.inst.id !817
DSWP:       %153 = getelementptr inbounds i32, i32* %1, i64 %150, !pdg.inst.id !59
DSWP:       %173 = add i32 %33, -1, !pdg.inst.id !321
DSWP:       %269 = select i1 %264, i32 %252, i32 %265, !prof !7111, !pdg.inst.id !864
DSWP:       %27 = phi %struct.kdnode* [ %382, %377 ], [ %9, %17 ], !pdg.inst.id !142
DSWP:       %154 = load i32, i32* %153, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:       %123 = getelementptr inbounds i32, i32* %32, i64 %120, !pdg.inst.id !309
DSWP:       br i1 %121, label %122, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:       br i1 %156, label %._crit_edge2, label %157, !prof !7107, !pdg.inst.id !681
DSWP:       %336 = phi i32 [ %356, %355 ], [ %144, %.preheader1 ], !pdg.inst.id !637
DSWP:       %281 = getelementptr inbounds i32, i32* %31, i64 %278, !pdg.inst.id !297
DSWP:       %343 = add i32 %309, %342, !pdg.inst.id !976
DSWP:       br label %149, !pdg.inst.id !6652
DSWP:       %323 = select i1 %320, i32 %321, i32 %322, !pdg.inst.id !1010
DSWP:       %141 = phi double [ %116, %131 ], [ 0.000000e+00, %103 ], !pdg.inst.id !531
DSWP:       %342 = shl i32 %338, 2, !pdg.inst.id !1051
DSWP:       %284 = icmp eq i32 %282, %283, !pdg.inst.id !933
DSWP:       %385 = add nsw i32 %140, 1, !pdg.inst.id !596
DSWP:       %206 = mul nsw i32 %202, %12, !pdg.inst.id !172
DSWP:       %187 = select i1 %184, i32 %185, i32 %186, !prof !7108, !pdg.inst.id !736
DSWP:       %292 = add nsw i32 %279, 1, !pdg.inst.id !920
DSWP:       %167 = phi i32 [ %152, %._crit_edge2 ], [ %162, %157 ], !pdg.inst.id !669
DSWP:       %129 = load double, double* %128, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:       %162 = select i1 %158, i32 %159, i32 %152, !prof !7108, !pdg.inst.id !667
DSWP:       store i32 %316, i32* %327, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:       %.lcssa2 = phi i64 [ %119, %118 ], !pdg.inst.id !539
DSWP:       %352 = select i1 %347, i32 %335, i32 %348, !pdg.inst.id !1035
DSWP:       %227 = sext i32 %28 to i64, !pdg.inst.id !248
DSWP:       %208 = sext i32 %207 to i64, !pdg.inst.id !780
DSWP:       store %struct.kdnode* %370, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
DSWP:       %345 = getelementptr inbounds double, double* %10, i64 %344, !pdg.inst.id !158
DSWP:       %217 = sext i32 %214 to i64, !pdg.inst.id !794
DSWP:       %270 = sext i32 %267 to i64, !pdg.inst.id !901
DSWP:       %249 = icmp slt i64 %229, %16, !pdg.inst.id !199
DSWP:       br label %192, !pdg.inst.id !6735
DSWP:       %218 = getelementptr inbounds i32, i32* %29, i64 %217, !pdg.inst.id !269
DSWP:       %251 = phi i64 [ %275, %272 ], [ %174, %.preheader9 ], !pdg.inst.id !704
DSWP:       %180 = load i32, i32* %179, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:       %130 = fcmp fast olt double %129, %116, !pdg.inst.id !533
DSWP:       %222 = add nsw i64 %198, 1, !pdg.inst.id !755
DSWP:       br label %131, !pdg.inst.id !6630
DSWP:       %125 = mul nsw i32 %124, %12, !pdg.inst.id !174
DSWP:       %160 = add nsw i32 %151, 1, !pdg.inst.id !665
DSWP:       br label %250, !pdg.inst.id !6701
DSWP:       %.lcssa69 = phi i32 [ %357, %355 ], !pdg.inst.id !1082
DSWP:       %232 = getelementptr inbounds i32, i32* %31, i64 %229, !pdg.inst.id !299
DSWP:       %252 = phi i32 [ %274, %272 ], [ %140, %.preheader9 ], !pdg.inst.id !582
DSWP:       %324 = select i1 %320, i32 %321, i32 %314, !pdg.inst.id !992
DSWP:       %283 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:       %389 = select i1 %18, i32* %30, i32* %31, !prof !7106, !pdg.inst.id !213
DSWP:       br label %272, !pdg.inst.id !6873
DSWP:       %262 = getelementptr inbounds double, double* %10, i64 %261, !pdg.inst.id !154
DSWP:       %388 = select i1 %18, i32* %32, i32* %30, !prof !7106, !pdg.inst.id !215
DSWP:       %156 = icmp eq i32 %154, %155, !pdg.inst.id !678
DSWP:       %121 = icmp sgt i64 %119, %117, !pdg.inst.id !535
DSWP:       br label %228, !pdg.inst.id !6798
DSWP:       %161 = select i1 %158, i32 %159, i32 %160, !prof !7108, !pdg.inst.id !685
DSWP:       store i32 %138, i32* %143, align 8, !tbaa !7093, !pdg.inst.id !575
DSWP:       %366 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %365, i64 0, i32 1, !pdg.inst.id !1098
DSWP:       %261 = sext i32 %260 to i64, !pdg.inst.id !887
DSWP:       br label %299, !pdg.inst.id !6915
DSWP:       br i1 %106, label %137, label %110, !prof !7104, !pdg.inst.id !500
DSWP:       br label %311, !pdg.inst.id !6944
DSWP:       %204 = icmp eq i32 %202, %203, !pdg.inst.id !774
DSWP:       br label %328, !pdg.inst.id !6965
DSWP:       %31 = phi i32* [ %387, %377 ], [ %3, %17 ], !pdg.inst.id !77
DSWP:       br label %360, !pdg.inst.id !7031
DSWP:       %384 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 2, !pdg.inst.id !242
DSWP:       %226 = add i32 %33, -1, !pdg.inst.id !319
DSWP:       %353 = sext i32 %350 to i64, !pdg.inst.id !1073
DSWP:       %332 = icmp slt i64 %312, %16, !pdg.inst.id !203
DSWP:       %260 = add i32 %173, %259, !pdg.inst.id !702
DSWP:       %105 = sdiv i32 %104, 2, !pdg.inst.id !486
DSWP:       br label %224, !pdg.inst.id !6790
DSWP:       br label %192, !pdg.inst.id !6724
DSWP:       br label %131, !pdg.inst.id !6633
DSWP:       %358 = add nsw i64 %334, 1, !pdg.inst.id !1033
DSWP:       store %struct.kdnode* null, %struct.kdnode** %381, align 8, !tbaa !7103, !pdg.inst.id !1124
DSWP:       %253 = phi i32 [ %273, %272 ], [ %144, %.preheader9 ], !pdg.inst.id !629
DSWP:       %179 = getelementptr inbounds i32, i32* %2, i64 %176, !pdg.inst.id !71
DSWP:       br label %219, !pdg.inst.id !6778
DSWP:       %276 = icmp slt i64 %251, %16, !pdg.inst.id !193
DSWP:       %297 = sext i32 %294 to i64, !pdg.inst.id !953
DSWP:       %263 = load double, double* %262, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:       %174 = sext i32 %28 to i64, !pdg.inst.id !250
DSWP:       %378 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
DSWP:       br i1 %249, label %228, label %.loopexit4, !prof !7109, !pdg.inst.id !858
DSWP:       br i1 %106, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496
DSWP:       br label %375, !pdg.inst.id !7062
DSWP:       %344 = sext i32 %343 to i64, !pdg.inst.id !1059
DSWP:       %273 = phi i32 [ %253, %._crit_edge4 ], [ %268, %258 ], !pdg.inst.id !872
DSWP:       %142 = getelementptr inbounds i32, i32* %32, i64 %139, !pdg.inst.id !307
DSWP:       %111 = mul nsw i32 %109, %12, !pdg.inst.id !176
DSWP:       br label %277, !pdg.inst.id !6796
DSWP:       %109 = load i32, i32* %108, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:       %.lcssa3 = phi i64 [ %119, %122 ], !pdg.inst.id !537
DSWP:       %182 = icmp eq i32 %180, %181, !pdg.inst.id !729
DSWP:       br label %333, !pdg.inst.id !6942
DSWP:       %194 = phi i32 [ %177, %._crit_edge5 ], [ %189, %183 ], !pdg.inst.id !714
DSWP:       %354 = getelementptr inbounds i32, i32* %31, i64 %353, !pdg.inst.id !289
DSWP:       br label %166, !pdg.inst.id !6674
DSWP:       %184 = icmp slt i32 %180, %109, !pdg.inst.id !515
DSWP:       %242 = select i1 %237, i32 %230, i32 %239, !prof !7108, !pdg.inst.id !815
DSWP:       %383 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %382, i64 1, !pdg.inst.id !1130
DSWP:       br label %245, !pdg.inst.id !6819
DSWP:       store i32 %338, i32* %354, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:       %293 = add nsw i32 %280, 1, !pdg.inst.id !926
DSWP:       br label %171, !pdg.inst.id !6665
DSWP:       br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:       %176 = phi i64 [ %195, %192 ], [ %174, %.preheader7 ], !pdg.inst.id !706
DSWP:       %163 = select i1 %158, i32 %151, i32 %160, !prof !7108, !pdg.inst.id !661
DSWP:       %201 = getelementptr inbounds i32, i32* %1, i64 %198, !pdg.inst.id !61
DSWP:       br i1 %182, label %._crit_edge5, label %183, !prof !7107, !pdg.inst.id !732
DSWP:       %256 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:       br label %360, !pdg.inst.id !7035
DSWP:       %309 = add i32 %33, -1, !pdg.inst.id !317
DSWP:       br label %272, !pdg.inst.id !6857
DSWP:       %178 = phi i32 [ %193, %192 ], [ %144, %.preheader7 ], !pdg.inst.id !631
DSWP:       br label %175, !pdg.inst.id !6703
DSWP:       br label %355, !pdg.inst.id !7001
DSWP:       br label %137, !pdg.inst.id !6614
DSWP:       %268 = select i1 %264, i32 %266, i32 %253, !prof !7111, !pdg.inst.id !870
DSWP:       %339 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:       br i1 %257, label %._crit_edge4, label %258, !prof !7110, !pdg.inst.id !884
DSWP:       %120 = add nsw i64 %119, -1, !pdg.inst.id !542
DSWP:       br i1 %276, label %250, label %.loopexit10, !prof !7112, !pdg.inst.id !910
DSWP:       br label %328, !pdg.inst.id !6976
DSWP:       store %struct.kdnode* %382, %struct.kdnode** %384, align 8, !tbaa !7103, !pdg.inst.id !1128
DSWP:       br label %304, !pdg.inst.id !6929
DSWP:       store %struct.kdnode* %383, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
DSWP:       %335 = phi i32 [ %357, %355 ], [ %140, %.preheader1 ], !pdg.inst.id !590
DSWP:       %381 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %380, i64 0, i32 2, !pdg.inst.id !1122
DSWP:       %315 = getelementptr inbounds i32, i32* %30, i64 %312, !pdg.inst.id !287
DSWP:       %379 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %378, i64 0, i32 1, !pdg.inst.id !1118
DSWP:       %298 = getelementptr inbounds i32, i32* %2, i64 %297, !pdg.inst.id !67
DSWP:       br i1 %376, label %377, label %.loopexit15, !prof !7113, !pdg.inst.id !1116
DSWP:       %380 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
DSWP:       %185 = add nsw i32 %178, 1, !pdg.inst.id !722
DSWP:       %327 = getelementptr inbounds i32, i32* %31, i64 %326, !pdg.inst.id !291
DSWP:       %104 = add nsw i32 %28, %7, !pdg.inst.id !94
DSWP:       br label %304, !pdg.inst.id !6933
DSWP:       %177 = phi i32 [ %194, %192 ], [ %140, %.preheader7 ], !pdg.inst.id !584
DSWP:       br label %118, !pdg.inst.id !6607
DSWP:       %356 = phi i32 [ %336, %._crit_edge1 ], [ %351, %341 ], !pdg.inst.id !1043
DSWP:       store i32 %255, i32* %271, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:       %266 = add nsw i32 %253, 1, !pdg.inst.id !874
DSWP:       %255 = load i32, i32* %254, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:       %.lcssa72 = phi i32 [ %329, %328 ], !pdg.inst.id !1022
DSWP:       %165 = getelementptr inbounds i32, i32* %29, i64 %164, !pdg.inst.id !271
DSWP:       %248 = add nsw i64 %229, 1, !pdg.inst.id !813
DSWP:       %305 = phi i32 [ %144, %224 ], [ %144, %171 ], [ %144, %137 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
DSWP:       %155 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:       %264 = fcmp fast olt double %263, %141, !pdg.inst.id !604
DSWP:       store %struct.kdnode* null, %struct.kdnode** %366, align 8, !tbaa !7102, !pdg.inst.id !1100
DSWP:       %209 = getelementptr inbounds double, double* %10, i64 %208, !pdg.inst.id !152
DSWP:       %.lcssa66 = phi i32 [ %300, %299 ], !pdg.inst.id !959
DSWP:       %143 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 0, !pdg.inst.id !238
DSWP:       %221 = phi i32 [ %199, %._crit_edge ], [ %216, %205 ], !pdg.inst.id !759
DSWP:       %211 = fcmp fast olt double %210, %141, !pdg.inst.id !606
DSWP:       %26 = phi i32 [ %386, %377 ], [ %11, %17 ], !pdg.inst.id !162
DSWP:       %133 = shl i64 %.lcssa, 32, !pdg.inst.id !563
DSWP:       %114 = sext i32 %113 to i64, !pdg.inst.id !526
DSWP:       %188 = select i1 %184, i32 %185, i32 %178, !prof !7108, !pdg.inst.id !718
DSWP:       %.lcssa67 = phi i32 [ %247, %245 ], !pdg.inst.id !854
DSWP:       %189 = select i1 %184, i32 %177, i32 %186, !prof !7108, !pdg.inst.id !712
DSWP:       br label %375, !pdg.inst.id !7059
DSWP:       %193 = phi i32 [ %178, %._crit_edge5 ], [ %188, %183 ], !pdg.inst.id !720
DSWP:       %195 = add nsw i64 %176, 1, !pdg.inst.id !710
DSWP:       %220 = phi i32 [ %200, %._crit_edge ], [ %215, %205 ], !pdg.inst.id !765
DSWP:       %279 = phi i32 [ %301, %299 ], [ %140, %.preheader5 ], !pdg.inst.id !586
DSWP:       %351 = select i1 %347, i32 %349, i32 %336, !pdg.inst.id !1041
DSWP:       %313 = phi i32 [ %330, %328 ], [ %140, %.preheader ], !pdg.inst.id !592
DSWP:       br i1 %284, label %._crit_edge6, label %285, !prof !7110, !pdg.inst.id !936
DSWP:       %317 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:       br label %245, !pdg.inst.id !6830
DSWP:       %287 = add i32 %226, %286, !pdg.inst.id !805
DSWP:       %359 = icmp slt i64 %334, %16, !pdg.inst.id !201
DSWP:       store i32 %202, i32* %218, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:       %116 = load double, double* %115, align 8, !tbaa !7098, !pdg.inst.id !529
DSWP:       %386 = add nsw i32 %33, 1, !pdg.inst.id !331
DSWP:       %207 = add i32 %147, %206, !pdg.inst.id !651
DSWP:       %289 = getelementptr inbounds double, double* %10, i64 %288, !pdg.inst.id !156
DSWP:       %371 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 1, !pdg.inst.id !240
DSWP:       %169 = add nsw i64 %150, 1, !pdg.inst.id !659
DSWP:       %290 = load double, double* %289, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:       %291 = fcmp fast olt double %290, %141, !pdg.inst.id !602
DSWP:       %294 = select i1 %291, i32 %293, i32 %292, !prof !7111, !pdg.inst.id !947
DSWP:       %325 = select i1 %320, i32 %313, i32 %322, !pdg.inst.id !986
DSWP:       %295 = select i1 %291, i32 %293, i32 %280, !prof !7111, !pdg.inst.id !922
DSWP:       store i32 %282, i32* %298, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:       %30 = phi i32* [ %388, %377 ], [ %4, %17 ], !pdg.inst.id !79
DSWP:       tail call fastcc void @buildkdtree(i32* %29, i32* %1, i32* %2, i32* %31, i32* nonnull %32, i32* %30, i32 %28, i32 %361, %struct.kdnode** nonnull %8, %struct.kdnode* %369, double* %10, i32 %372, i32 4), !pdg.inst.id !65
DSWP:       %203 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:       %134 = ashr exact i64 %133, 32, !pdg.inst.id !568
DSWP:       %390 = icmp eq i32 %385, %7, !pdg.inst.id !89
DSWP:       br label %171, !pdg.inst.id !6697
DSWP:       %212 = add nsw i32 %199, 1, !pdg.inst.id !761
DSWP:       %257 = icmp eq i32 %255, %256, !pdg.inst.id !881
DSWP:       %300 = phi i32 [ %280, %._crit_edge6 ], [ %295, %285 ], !pdg.inst.id !924
DSWP:       %301 = phi i32 [ %279, %._crit_edge6 ], [ %296, %285 ], !pdg.inst.id !918
DSWP:       %303 = icmp slt i64 %278, %16, !pdg.inst.id !197
DSWP:       br i1 %106, label %.preheader, label %.preheader1, !pdg.inst.id !492
DSWP:       %106 = icmp eq i32 %33, 0, !pdg.inst.id !327
DSWP:       %.lcssa65 = phi i32 [ %301, %299 ], !pdg.inst.id !962
DSWP:       %145 = icmp sgt i32 %28, %7, !pdg.inst.id !92
DSWP:       br i1 %35, label %36, label %103, !prof !7096, !pdg.inst.id !334
DSWP:       %338 = load i32, i32* %337, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:       %229 = phi i64 [ %248, %245 ], [ %227, %.preheader3 ], !pdg.inst.id !809
DSWP:       %230 = phi i32 [ %247, %245 ], [ %140, %.preheader3 ], !pdg.inst.id !588
DSWP:       br i1 %340, label %._crit_edge1, label %341, !pdg.inst.id !1056
DSWP:       store i32 %180, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:       %231 = phi i32 [ %246, %245 ], [ %144, %.preheader3 ], !pdg.inst.id !635
DSWP:       %233 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:       %196 = icmp slt i64 %176, %16, !pdg.inst.id !195
DSWP:       br i1 %235, label %._crit_edge7, label %236, !prof !7107, !pdg.inst.id !835
DSWP:       %280 = phi i32 [ %300, %299 ], [ %144, %.preheader5 ], !pdg.inst.id !633
DSWP:       %238 = add nsw i32 %231, 1, !pdg.inst.id !825
DSWP:       %314 = phi i32 [ %329, %328 ], [ %144, %.preheader ], !pdg.inst.id !639
DSWP:       store %struct.kdnode* null, %struct.kdnode** %379, align 8, !tbaa !7102, !pdg.inst.id !1120
DSWP:       %241 = select i1 %237, i32 %238, i32 %231, !prof !7108, !pdg.inst.id !821
DSWP:       br label %299, !pdg.inst.id !6899
DSWP:       store i32 %154, i32* %165, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:       %244 = getelementptr inbounds i32, i32* %2, i64 %243, !pdg.inst.id !69
DSWP:       %214 = select i1 %211, i32 %213, i32 %212, !prof !7111, !pdg.inst.id !788
DSWP:       %246 = phi i32 [ %231, %._crit_edge7 ], [ %241, %236 ], !pdg.inst.id !823
DSWP:       %.lcssa68 = phi i32 [ %246, %245 ], !pdg.inst.id !851
DSWP:       %113 = add i32 %112, %111, !pdg.inst.id !521
DSWP:       br i1 %18, label %307, label %360, !prof !7106, !pdg.inst.id !221
DSWP:       %310 = sext i32 %28 to i64, !pdg.inst.id !246
DSWP:       %334 = phi i64 [ %358, %355 ], [ %310, %.preheader1 ], !pdg.inst.id !978
DSWP:       %340 = icmp eq i32 %338, %339, !pdg.inst.id !1053
DSWP:       %346 = load double, double* %345, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:       %347 = fcmp fast olt double %346, %141, !pdg.inst.id !600
DSWP:       %191 = getelementptr inbounds i32, i32* %1, i64 %190, !pdg.inst.id !57
DSWP:       br i1 %145, label %.loopexit15, label %308, !pdg.inst.id !643
DSWP:       %348 = add nsw i32 %335, 1, !pdg.inst.id !1039
DSWP:       %349 = add nsw i32 %336, 1, !pdg.inst.id !1045
DSWP:       %362 = phi i32 [ %306, %304 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
DSWP:       br label %355, !pdg.inst.id !7017
DSWP:       %159 = add nsw i32 %152, 1, !pdg.inst.id !671
DSWP:       %239 = add nsw i32 %230, 1, !pdg.inst.id !819
DSWP:       %357 = phi i32 [ %335, %._crit_edge1 ], [ %352, %341 ], !pdg.inst.id !1037
DSWP:       br i1 %359, label %333, label %.loopexit2, !pdg.inst.id !1086
DSWP:       %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
DSWP:       %387 = select i1 %18, i32* %31, i32* %32, !prof !7106, !pdg.inst.id !217
DSWP:       %.lcssa70 = phi i32 [ %356, %355 ], !pdg.inst.id !1079
DSWP:       %372 = add nsw i32 %33, 1, !pdg.inst.id !329
DSWP:       %312 = phi i64 [ %331, %328 ], [ %310, %.preheader ], !pdg.inst.id !980
DSWP:       %33 = srem i32 %26, %14, !pdg.inst.id !183
DSWP:       %363 = icmp slt i32 %361, %28, !pdg.inst.id !258
DSWP:       %126 = add i32 %112, %125, !pdg.inst.id !523
DSWP:       %316 = load i32, i32* %315, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:       %318 = icmp eq i32 %316, %317, !pdg.inst.id !1003
DSWP:       %243 = sext i32 %240 to i64, !pdg.inst.id !845
DSWP:       br i1 %318, label %._crit_edge3, label %319, !pdg.inst.id !1006
DSWP:       %306 = phi i32 [ %140, %224 ], [ %140, %171 ], [ %140, %137 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
DSWP:       br i1 %106, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494
DSWP:       %370 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %369, i64 1, !pdg.inst.id !1110
DSWP:       %150 = phi i64 [ %169, %166 ], [ %148, %.preheader11 ], !pdg.inst.id !655
DSWP:       br i1 %363, label %375, label %364, !prof !7106, !pdg.inst.id !1096
DSWP:       %365 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
DSWP:       %368 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %367, i64 0, i32 2, !pdg.inst.id !1102
DSWP:       br label %219, !pdg.inst.id !6762
DSWP:       %321 = add nsw i32 %314, 1, !pdg.inst.id !996
DSWP:       br i1 %303, label %277, label %.loopexit6, !prof !7112, !pdg.inst.id !966
DSWP:       %35 = icmp eq i32 %34, %7, !pdg.inst.id !96
DSWP:       store %struct.kdnode* null, %struct.kdnode** %368, align 8, !tbaa !7103, !pdg.inst.id !1104
DSWP:       %369 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
DSWP:       br i1 %18, label %373, label %374, !prof !7106, !pdg.inst.id !219
DSWP:       br i1 %130, label %._crit_edge8, label %118, !prof !7105, !pdg.inst.id !558
DSWP:       %320 = icmp slt i32 %316, %109, !pdg.inst.id !511
DSWP:       %34 = add nsw i32 %28, 1, !pdg.inst.id !264
DSWP:       tail call fastcc void @buildkdtree(i32* %29, i32* %1, i32* %2, i32* nonnull %32, i32* %30, i32* %31, i32 %28, i32 %361, %struct.kdnode** nonnull %8, %struct.kdnode* %369, double* %10, i32 %372, i32 %12), !pdg.inst.id !63
DSWP:       %234 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:       %376 = icmp sgt i32 %362, %140, !pdg.inst.id !598
DSWP:       %330 = phi i32 [ %313, %._crit_edge3 ], [ %325, %319 ], !pdg.inst.id !988
DSWP:       %199 = phi i32 [ %221, %219 ], [ %140, %.preheader13 ], !pdg.inst.id !578
DSWP:       %124 = load i32, i32* %123, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:       %170 = icmp slt i64 %150, %16, !pdg.inst.id !191
DSWP:       %254 = getelementptr inbounds i32, i32* %2, i64 %251, !pdg.inst.id !73
DSWP:       %216 = select i1 %211, i32 %199, i32 %212, !prof !7111, !pdg.inst.id !757
DSWP:       br label %224, !pdg.inst.id !6792
DSWP:       %265 = add nsw i32 %252, 1, !pdg.inst.id !868
DSWP:       %144 = add nsw i32 %28, -1, !pdg.inst.id !262
DSWP:       %181 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:       %288 = sext i32 %287 to i64, !pdg.inst.id !939
DSWP:       %322 = add nsw i32 %313, 1, !pdg.inst.id !990
DSWP:       %.lcssa71 = phi i32 [ %330, %328 ], !pdg.inst.id !1025
DSWP:       %139 = phi i64 [ %134, %131 ], [ %107, %103 ], !pdg.inst.id !502
DSWP:       %210 = load double, double* %209, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:       %132 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
DSWP:       br label %197, !pdg.inst.id !6650
DSWP:       %186 = add nsw i32 %177, 1, !pdg.inst.id !716
DSWP:       %136 = load i32, i32* %135, align 4, !tbaa !7089, !pdg.inst.id !572
DSWP:       %138 = phi i32 [ %136, %131 ], [ %109, %103 ], !pdg.inst.id !509
DSWP:       %215 = select i1 %211, i32 %213, i32 %200, !prof !7111, !pdg.inst.id !763
DSWP:       %140 = phi i32 [ %132, %131 ], [ %105, %103 ], !pdg.inst.id !488
DSWP:       %152 = phi i32 [ %167, %166 ], [ %144, %.preheader11 ], !pdg.inst.id !627
DSWP:       store %struct.kdnode* %369, %struct.kdnode** %371, align 8, !tbaa !7102, !pdg.inst.id !1108
DSWP:       %115 = getelementptr inbounds double, double* %10, i64 %114, !pdg.inst.id !148
DSWP:       %367 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
DSWP:       %147 = add i32 %33, -1, !pdg.inst.id !323
DSWP:       %275 = add nsw i64 %251, 1, !pdg.inst.id !862
DSWP:       %119 = phi i64 [ %120, %122 ], [ %107, %110 ], !pdg.inst.id !504
DSWP:       %190 = sext i32 %187 to i64, !pdg.inst.id !742
DSWP:       %200 = phi i32 [ %220, %219 ], [ %144, %.preheader13 ], !pdg.inst.id !625
DSWP:       br i1 %145, label %304, label %146, !prof !7106, !pdg.inst.id !649
DSWP:       %28 = phi i32 [ %385, %377 ], [ %6, %17 ], !pdg.inst.id !83
DSWP:       %148 = sext i32 %28 to i64, !pdg.inst.id !252
DSWP:       %108 = getelementptr inbounds i32, i32* %32, i64 %107, !pdg.inst.id !311
DSWP:       br i1 %106, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498
DSWP:       %107 = sext i32 %105 to i64, !pdg.inst.id !490
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %350 = select i1 %347, i32 %349, i32 %348, !pdg.inst.id !1067
DSWP:       store i32 %233, i32* %244, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:       %235 = icmp eq i32 %233, %234, !pdg.inst.id !832
DSWP:       %278 = phi i64 [ %302, %299 ], [ %227, %.preheader5 ], !pdg.inst.id !807
DSWP:       %282 = load i32, i32* %281, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:       br i1 %204, label %._crit_edge, label %205, !prof !7110, !pdg.inst.id !777
DSWP:       %202 = load i32, i32* %201, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:       %213 = add nsw i32 %200, 1, !pdg.inst.id !767
DSWP:       %135 = getelementptr inbounds i32, i32* %32, i64 %134, !pdg.inst.id !303
DSWP:       %329 = phi i32 [ %314, %._crit_edge3 ], [ %324, %319 ], !pdg.inst.id !994
DSWP:       %237 = icmp slt i32 %233, %109, !pdg.inst.id !513
DSWP:       %198 = phi i64 [ %222, %219 ], [ %148, %.preheader13 ], !pdg.inst.id !653
DSWP:       br i1 %332, label %311, label %.loopexit, !pdg.inst.id !1029
DSWP:       %326 = sext i32 %323 to i64, !pdg.inst.id !1016
DSWP:       %127 = sext i32 %126 to i64, !pdg.inst.id !552
DSWP:       br i1 %196, label %175, label %.loopexit8, !prof !7109, !pdg.inst.id !751
DSWP:       %29 = phi i32* [ %389, %377 ], [ %5, %17 ], !pdg.inst.id !81
DSWP:       %164 = sext i32 %161 to i64, !pdg.inst.id !691
DSWP:       %158 = icmp slt i32 %154, %109, !pdg.inst.id !517
DSWP:       %302 = add nsw i64 %278, 1, !pdg.inst.id !914
DSWP:       %168 = phi i32 [ %151, %._crit_edge2 ], [ %163, %157 ], !pdg.inst.id !663
DSWP:       %128 = getelementptr inbounds double, double* %10, i64 %127, !pdg.inst.id !150
DSWP:       %296 = select i1 %291, i32 %279, i32 %292, !prof !7111, !pdg.inst.id !916
DSWP:       %361 = phi i32 [ %305, %304 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
DSWP:       %274 = phi i32 [ %252, %._crit_edge4 ], [ %269, %258 ], !pdg.inst.id !866
DSWP:       %117 = sext i32 %28 to i64, !pdg.inst.id !254
DSWP:       %286 = mul nsw i32 %282, %12, !pdg.inst.id !168
DSWP:       %267 = select i1 %264, i32 %266, i32 %265, !prof !7111, !pdg.inst.id !895
DSWP:       %259 = mul nsw i32 %255, %12, !pdg.inst.id !170
DSWP:       %331 = add nsw i64 %312, 1, !pdg.inst.id !984
DSWP:       %240 = select i1 %237, i32 %238, i32 %239, !prof !7108, !pdg.inst.id !839
DSWP:       %223 = icmp slt i64 %198, %16, !pdg.inst.id !189
DSWP:       br label %166, !pdg.inst.id !6685
DSWP:       br i1 %223, label %197, label %.loopexit14, !prof !7112, !pdg.inst.id !803
DSWP:       br i1 %170, label %149, label %.loopexit12, !prof !7109, !pdg.inst.id !700
DSWP:       %337 = getelementptr inbounds i32, i32* %30, i64 %334, !pdg.inst.id !285
DSWP:       %32 = phi i32* [ %29, %377 ], [ %0, %17 ], !pdg.inst.id !53
DSWP:       br i1 %145, label %304, label %225, !prof !7106, !pdg.inst.id !645
DSWP:       %271 = getelementptr inbounds i32, i32* %1, i64 %270, !pdg.inst.id !55
DSWP:       %151 = phi i32 [ %168, %166 ], [ %140, %.preheader11 ], !pdg.inst.id !580
DSWP:       %112 = add nsw i32 %33, -1, !pdg.inst.id !325
DSWP:       %382 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
DSWP:       br i1 %145, label %304, label %172, !prof !7106, !pdg.inst.id !647
DSWP:       %247 = phi i32 [ %230, %._crit_edge7 ], [ %242, %236 ], !pdg.inst.id !817
DSWP:       %153 = getelementptr inbounds i32, i32* %1, i64 %150, !pdg.inst.id !59
DSWP:       %173 = add i32 %33, -1, !pdg.inst.id !321
DSWP:       %269 = select i1 %264, i32 %252, i32 %265, !prof !7111, !pdg.inst.id !864
DSWP:       %27 = phi %struct.kdnode* [ %382, %377 ], [ %9, %17 ], !pdg.inst.id !142
DSWP:       %154 = load i32, i32* %153, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:       %123 = getelementptr inbounds i32, i32* %32, i64 %120, !pdg.inst.id !309
DSWP:       br i1 %121, label %122, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:       br i1 %156, label %._crit_edge2, label %157, !prof !7107, !pdg.inst.id !681
DSWP:       %336 = phi i32 [ %356, %355 ], [ %144, %.preheader1 ], !pdg.inst.id !637
DSWP:       %281 = getelementptr inbounds i32, i32* %31, i64 %278, !pdg.inst.id !297
DSWP:       %343 = add i32 %309, %342, !pdg.inst.id !976
DSWP:       br label %149, !pdg.inst.id !6652
DSWP:       %323 = select i1 %320, i32 %321, i32 %322, !pdg.inst.id !1010
DSWP:       %141 = phi double [ %116, %131 ], [ 0.000000e+00, %103 ], !pdg.inst.id !531
DSWP:       %342 = shl i32 %338, 2, !pdg.inst.id !1051
DSWP:       %284 = icmp eq i32 %282, %283, !pdg.inst.id !933
DSWP:       %385 = add nsw i32 %140, 1, !pdg.inst.id !596
DSWP:       %206 = mul nsw i32 %202, %12, !pdg.inst.id !172
DSWP:       %187 = select i1 %184, i32 %185, i32 %186, !prof !7108, !pdg.inst.id !736
DSWP:       %292 = add nsw i32 %279, 1, !pdg.inst.id !920
DSWP:       %167 = phi i32 [ %152, %._crit_edge2 ], [ %162, %157 ], !pdg.inst.id !669
DSWP:       %129 = load double, double* %128, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:       %162 = select i1 %158, i32 %159, i32 %152, !prof !7108, !pdg.inst.id !667
DSWP:       store i32 %316, i32* %327, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:       %.lcssa2 = phi i64 [ %119, %118 ], !pdg.inst.id !539
DSWP:       %352 = select i1 %347, i32 %335, i32 %348, !pdg.inst.id !1035
DSWP:       %227 = sext i32 %28 to i64, !pdg.inst.id !248
DSWP:       %208 = sext i32 %207 to i64, !pdg.inst.id !780
DSWP:       store %struct.kdnode* %370, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
DSWP:       %345 = getelementptr inbounds double, double* %10, i64 %344, !pdg.inst.id !158
DSWP:       %217 = sext i32 %214 to i64, !pdg.inst.id !794
DSWP:       %270 = sext i32 %267 to i64, !pdg.inst.id !901
DSWP:       %249 = icmp slt i64 %229, %16, !pdg.inst.id !199
DSWP:       br label %192, !pdg.inst.id !6735
DSWP:       %218 = getelementptr inbounds i32, i32* %29, i64 %217, !pdg.inst.id !269
DSWP:       %251 = phi i64 [ %275, %272 ], [ %174, %.preheader9 ], !pdg.inst.id !704
DSWP:       %180 = load i32, i32* %179, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:       %130 = fcmp fast olt double %129, %116, !pdg.inst.id !533
DSWP:       %222 = add nsw i64 %198, 1, !pdg.inst.id !755
DSWP:       br label %131, !pdg.inst.id !6630
DSWP:       %125 = mul nsw i32 %124, %12, !pdg.inst.id !174
DSWP:       %160 = add nsw i32 %151, 1, !pdg.inst.id !665
DSWP:       br label %250, !pdg.inst.id !6701
DSWP:       %.lcssa69 = phi i32 [ %357, %355 ], !pdg.inst.id !1082
DSWP:       %232 = getelementptr inbounds i32, i32* %31, i64 %229, !pdg.inst.id !299
DSWP:       %252 = phi i32 [ %274, %272 ], [ %140, %.preheader9 ], !pdg.inst.id !582
DSWP:       %324 = select i1 %320, i32 %321, i32 %314, !pdg.inst.id !992
DSWP:       %283 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:       %389 = select i1 %18, i32* %30, i32* %31, !prof !7106, !pdg.inst.id !213
DSWP:       br label %272, !pdg.inst.id !6873
DSWP:       %262 = getelementptr inbounds double, double* %10, i64 %261, !pdg.inst.id !154
DSWP:       %388 = select i1 %18, i32* %32, i32* %30, !prof !7106, !pdg.inst.id !215
DSWP:       %156 = icmp eq i32 %154, %155, !pdg.inst.id !678
DSWP:       %121 = icmp sgt i64 %119, %117, !pdg.inst.id !535
DSWP:       br label %228, !pdg.inst.id !6798
DSWP:       %161 = select i1 %158, i32 %159, i32 %160, !prof !7108, !pdg.inst.id !685
DSWP:       store i32 %138, i32* %143, align 8, !tbaa !7093, !pdg.inst.id !575
DSWP:       %366 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %365, i64 0, i32 1, !pdg.inst.id !1098
DSWP:       %261 = sext i32 %260 to i64, !pdg.inst.id !887
DSWP:       br label %299, !pdg.inst.id !6915
DSWP:       br i1 %106, label %137, label %110, !prof !7104, !pdg.inst.id !500
DSWP:       br label %311, !pdg.inst.id !6944
DSWP:       %204 = icmp eq i32 %202, %203, !pdg.inst.id !774
DSWP:       br label %328, !pdg.inst.id !6965
DSWP:       %31 = phi i32* [ %387, %377 ], [ %3, %17 ], !pdg.inst.id !77
DSWP:       br label %360, !pdg.inst.id !7031
DSWP:       %384 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 2, !pdg.inst.id !242
DSWP:       %226 = add i32 %33, -1, !pdg.inst.id !319
DSWP:       %353 = sext i32 %350 to i64, !pdg.inst.id !1073
DSWP:       %332 = icmp slt i64 %312, %16, !pdg.inst.id !203
DSWP:       %260 = add i32 %173, %259, !pdg.inst.id !702
DSWP:       %105 = sdiv i32 %104, 2, !pdg.inst.id !486
DSWP:       br label %224, !pdg.inst.id !6790
DSWP:       br label %192, !pdg.inst.id !6724
DSWP:       br label %131, !pdg.inst.id !6633
DSWP:       %358 = add nsw i64 %334, 1, !pdg.inst.id !1033
DSWP:       store %struct.kdnode* null, %struct.kdnode** %381, align 8, !tbaa !7103, !pdg.inst.id !1124
DSWP:       %253 = phi i32 [ %273, %272 ], [ %144, %.preheader9 ], !pdg.inst.id !629
DSWP:       %179 = getelementptr inbounds i32, i32* %2, i64 %176, !pdg.inst.id !71
DSWP:       br label %219, !pdg.inst.id !6778
DSWP:       %276 = icmp slt i64 %251, %16, !pdg.inst.id !193
DSWP:       %297 = sext i32 %294 to i64, !pdg.inst.id !953
DSWP:       %263 = load double, double* %262, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:       %174 = sext i32 %28 to i64, !pdg.inst.id !250
DSWP:       %378 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
DSWP:       br i1 %249, label %228, label %.loopexit4, !prof !7109, !pdg.inst.id !858
DSWP:       br i1 %106, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496
DSWP:       br label %375, !pdg.inst.id !7062
DSWP:       %344 = sext i32 %343 to i64, !pdg.inst.id !1059
DSWP:       %273 = phi i32 [ %253, %._crit_edge4 ], [ %268, %258 ], !pdg.inst.id !872
DSWP:       %142 = getelementptr inbounds i32, i32* %32, i64 %139, !pdg.inst.id !307
DSWP:       %111 = mul nsw i32 %109, %12, !pdg.inst.id !176
DSWP:       br label %277, !pdg.inst.id !6796
DSWP:       %109 = load i32, i32* %108, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:       %.lcssa3 = phi i64 [ %119, %122 ], !pdg.inst.id !537
DSWP:       %182 = icmp eq i32 %180, %181, !pdg.inst.id !729
DSWP:       br label %333, !pdg.inst.id !6942
DSWP:       %194 = phi i32 [ %177, %._crit_edge5 ], [ %189, %183 ], !pdg.inst.id !714
DSWP:       %354 = getelementptr inbounds i32, i32* %31, i64 %353, !pdg.inst.id !289
DSWP:       br label %166, !pdg.inst.id !6674
DSWP:       %184 = icmp slt i32 %180, %109, !pdg.inst.id !515
DSWP:       %242 = select i1 %237, i32 %230, i32 %239, !prof !7108, !pdg.inst.id !815
DSWP:       %383 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %382, i64 1, !pdg.inst.id !1130
DSWP:       br label %245, !pdg.inst.id !6819
DSWP:       store i32 %338, i32* %354, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:       %293 = add nsw i32 %280, 1, !pdg.inst.id !926
DSWP:       br label %171, !pdg.inst.id !6665
DSWP:       br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:       %176 = phi i64 [ %195, %192 ], [ %174, %.preheader7 ], !pdg.inst.id !706
DSWP:       %163 = select i1 %158, i32 %151, i32 %160, !prof !7108, !pdg.inst.id !661
DSWP:       %201 = getelementptr inbounds i32, i32* %1, i64 %198, !pdg.inst.id !61
DSWP:       br i1 %182, label %._crit_edge5, label %183, !prof !7107, !pdg.inst.id !732
DSWP:       %256 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:       br label %360, !pdg.inst.id !7035
DSWP:       %309 = add i32 %33, -1, !pdg.inst.id !317
DSWP:       br label %272, !pdg.inst.id !6857
DSWP:       %178 = phi i32 [ %193, %192 ], [ %144, %.preheader7 ], !pdg.inst.id !631
DSWP:       br label %175, !pdg.inst.id !6703
DSWP:       br label %355, !pdg.inst.id !7001
DSWP:       br label %137, !pdg.inst.id !6614
DSWP:       %268 = select i1 %264, i32 %266, i32 %253, !prof !7111, !pdg.inst.id !870
DSWP:       %339 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:       br i1 %257, label %._crit_edge4, label %258, !prof !7110, !pdg.inst.id !884
DSWP:       %120 = add nsw i64 %119, -1, !pdg.inst.id !542
DSWP:       br i1 %276, label %250, label %.loopexit10, !prof !7112, !pdg.inst.id !910
DSWP:       br label %328, !pdg.inst.id !6976
DSWP:       store %struct.kdnode* %382, %struct.kdnode** %384, align 8, !tbaa !7103, !pdg.inst.id !1128
DSWP:       br label %304, !pdg.inst.id !6929
DSWP:       store %struct.kdnode* %383, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
DSWP:       %335 = phi i32 [ %357, %355 ], [ %140, %.preheader1 ], !pdg.inst.id !590
DSWP:       %381 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %380, i64 0, i32 2, !pdg.inst.id !1122
DSWP:       %315 = getelementptr inbounds i32, i32* %30, i64 %312, !pdg.inst.id !287
DSWP:       %379 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %378, i64 0, i32 1, !pdg.inst.id !1118
DSWP:       %298 = getelementptr inbounds i32, i32* %2, i64 %297, !pdg.inst.id !67
DSWP:       br i1 %376, label %377, label %.loopexit15, !prof !7113, !pdg.inst.id !1116
DSWP:       %380 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
DSWP:       %185 = add nsw i32 %178, 1, !pdg.inst.id !722
DSWP:       %327 = getelementptr inbounds i32, i32* %31, i64 %326, !pdg.inst.id !291
DSWP:       %104 = add nsw i32 %28, %7, !pdg.inst.id !94
DSWP:       br label %304, !pdg.inst.id !6933
DSWP:       %177 = phi i32 [ %194, %192 ], [ %140, %.preheader7 ], !pdg.inst.id !584
DSWP:       br label %118, !pdg.inst.id !6607
DSWP:       %356 = phi i32 [ %336, %._crit_edge1 ], [ %351, %341 ], !pdg.inst.id !1043
DSWP:       store i32 %255, i32* %271, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:       %266 = add nsw i32 %253, 1, !pdg.inst.id !874
DSWP:       %255 = load i32, i32* %254, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:       %.lcssa72 = phi i32 [ %329, %328 ], !pdg.inst.id !1022
DSWP:       %165 = getelementptr inbounds i32, i32* %29, i64 %164, !pdg.inst.id !271
DSWP:       %248 = add nsw i64 %229, 1, !pdg.inst.id !813
DSWP:       %305 = phi i32 [ %144, %224 ], [ %144, %171 ], [ %144, %137 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
DSWP:       %155 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:       %264 = fcmp fast olt double %263, %141, !pdg.inst.id !604
DSWP:       store %struct.kdnode* null, %struct.kdnode** %366, align 8, !tbaa !7102, !pdg.inst.id !1100
DSWP:       %209 = getelementptr inbounds double, double* %10, i64 %208, !pdg.inst.id !152
DSWP:       %.lcssa66 = phi i32 [ %300, %299 ], !pdg.inst.id !959
DSWP:       %143 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 0, !pdg.inst.id !238
DSWP:       %221 = phi i32 [ %199, %._crit_edge ], [ %216, %205 ], !pdg.inst.id !759
DSWP:       %211 = fcmp fast olt double %210, %141, !pdg.inst.id !606
DSWP:       %26 = phi i32 [ %386, %377 ], [ %11, %17 ], !pdg.inst.id !162
DSWP:       %133 = shl i64 %.lcssa, 32, !pdg.inst.id !563
DSWP:       %114 = sext i32 %113 to i64, !pdg.inst.id !526
DSWP:       %188 = select i1 %184, i32 %185, i32 %178, !prof !7108, !pdg.inst.id !718
DSWP:       %.lcssa67 = phi i32 [ %247, %245 ], !pdg.inst.id !854
DSWP:       %189 = select i1 %184, i32 %177, i32 %186, !prof !7108, !pdg.inst.id !712
DSWP:       br label %375, !pdg.inst.id !7059
DSWP:       %193 = phi i32 [ %178, %._crit_edge5 ], [ %188, %183 ], !pdg.inst.id !720
DSWP:       %195 = add nsw i64 %176, 1, !pdg.inst.id !710
DSWP:       %220 = phi i32 [ %200, %._crit_edge ], [ %215, %205 ], !pdg.inst.id !765
DSWP:       %279 = phi i32 [ %301, %299 ], [ %140, %.preheader5 ], !pdg.inst.id !586
DSWP:       %351 = select i1 %347, i32 %349, i32 %336, !pdg.inst.id !1041
DSWP:       %313 = phi i32 [ %330, %328 ], [ %140, %.preheader ], !pdg.inst.id !592
DSWP:       br i1 %284, label %._crit_edge6, label %285, !prof !7110, !pdg.inst.id !936
DSWP:       %317 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:       br label %245, !pdg.inst.id !6830
DSWP:       %287 = add i32 %226, %286, !pdg.inst.id !805
DSWP:       %359 = icmp slt i64 %334, %16, !pdg.inst.id !201
DSWP:       store i32 %202, i32* %218, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:       %116 = load double, double* %115, align 8, !tbaa !7098, !pdg.inst.id !529
DSWP:       %386 = add nsw i32 %33, 1, !pdg.inst.id !331
DSWP:       %207 = add i32 %147, %206, !pdg.inst.id !651
DSWP:       %289 = getelementptr inbounds double, double* %10, i64 %288, !pdg.inst.id !156
DSWP:       %371 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 1, !pdg.inst.id !240
DSWP:       %169 = add nsw i64 %150, 1, !pdg.inst.id !659
DSWP:       %290 = load double, double* %289, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:       %291 = fcmp fast olt double %290, %141, !pdg.inst.id !602
DSWP:       %294 = select i1 %291, i32 %293, i32 %292, !prof !7111, !pdg.inst.id !947
DSWP:       %325 = select i1 %320, i32 %313, i32 %322, !pdg.inst.id !986
DSWP:       %295 = select i1 %291, i32 %293, i32 %280, !prof !7111, !pdg.inst.id !922
DSWP:       store i32 %282, i32* %298, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:       %30 = phi i32* [ %388, %377 ], [ %4, %17 ], !pdg.inst.id !79
DSWP:       tail call fastcc void @buildkdtree(i32* %29, i32* %1, i32* %2, i32* %31, i32* nonnull %32, i32* %30, i32 %28, i32 %361, %struct.kdnode** nonnull %8, %struct.kdnode* %369, double* %10, i32 %372, i32 4), !pdg.inst.id !65
DSWP:       %203 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:       %134 = ashr exact i64 %133, 32, !pdg.inst.id !568
DSWP:       %390 = icmp eq i32 %385, %7, !pdg.inst.id !89
DSWP:       br label %171, !pdg.inst.id !6697
DSWP:       %212 = add nsw i32 %199, 1, !pdg.inst.id !761
DSWP:       %257 = icmp eq i32 %255, %256, !pdg.inst.id !881
DSWP:       %300 = phi i32 [ %280, %._crit_edge6 ], [ %295, %285 ], !pdg.inst.id !924
DSWP:       %301 = phi i32 [ %279, %._crit_edge6 ], [ %296, %285 ], !pdg.inst.id !918
DSWP:       %303 = icmp slt i64 %278, %16, !pdg.inst.id !197
DSWP:       br i1 %106, label %.preheader, label %.preheader1, !pdg.inst.id !492
DSWP:       %106 = icmp eq i32 %33, 0, !pdg.inst.id !327
DSWP:       %.lcssa65 = phi i32 [ %301, %299 ], !pdg.inst.id !962
DSWP:       %145 = icmp sgt i32 %28, %7, !pdg.inst.id !92
DSWP:       br i1 %35, label %36, label %103, !prof !7096, !pdg.inst.id !334
DSWP:       %338 = load i32, i32* %337, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:       %229 = phi i64 [ %248, %245 ], [ %227, %.preheader3 ], !pdg.inst.id !809
DSWP:       %230 = phi i32 [ %247, %245 ], [ %140, %.preheader3 ], !pdg.inst.id !588
DSWP:       br i1 %340, label %._crit_edge1, label %341, !pdg.inst.id !1056
DSWP:       store i32 %180, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:       %231 = phi i32 [ %246, %245 ], [ %144, %.preheader3 ], !pdg.inst.id !635
DSWP:       %233 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:       %196 = icmp slt i64 %176, %16, !pdg.inst.id !195
DSWP:       br i1 %235, label %._crit_edge7, label %236, !prof !7107, !pdg.inst.id !835
DSWP:       %280 = phi i32 [ %300, %299 ], [ %144, %.preheader5 ], !pdg.inst.id !633
DSWP:       %238 = add nsw i32 %231, 1, !pdg.inst.id !825
DSWP:       %314 = phi i32 [ %329, %328 ], [ %144, %.preheader ], !pdg.inst.id !639
DSWP:       store %struct.kdnode* null, %struct.kdnode** %379, align 8, !tbaa !7102, !pdg.inst.id !1120
DSWP:       %241 = select i1 %237, i32 %238, i32 %231, !prof !7108, !pdg.inst.id !821
DSWP:       br label %299, !pdg.inst.id !6899
DSWP:       store i32 %154, i32* %165, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:       %244 = getelementptr inbounds i32, i32* %2, i64 %243, !pdg.inst.id !69
DSWP:       %214 = select i1 %211, i32 %213, i32 %212, !prof !7111, !pdg.inst.id !788
DSWP:       %246 = phi i32 [ %231, %._crit_edge7 ], [ %241, %236 ], !pdg.inst.id !823
DSWP:       %.lcssa68 = phi i32 [ %246, %245 ], !pdg.inst.id !851
DSWP:       %113 = add i32 %112, %111, !pdg.inst.id !521
DSWP:       br i1 %18, label %307, label %360, !prof !7106, !pdg.inst.id !221
DSWP:       %310 = sext i32 %28 to i64, !pdg.inst.id !246
DSWP:       %334 = phi i64 [ %358, %355 ], [ %310, %.preheader1 ], !pdg.inst.id !978
DSWP:       %340 = icmp eq i32 %338, %339, !pdg.inst.id !1053
DSWP:       %346 = load double, double* %345, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:       %347 = fcmp fast olt double %346, %141, !pdg.inst.id !600
DSWP:       %191 = getelementptr inbounds i32, i32* %1, i64 %190, !pdg.inst.id !57
DSWP:       br i1 %145, label %.loopexit15, label %308, !pdg.inst.id !643
DSWP:       %348 = add nsw i32 %335, 1, !pdg.inst.id !1039
DSWP:       %349 = add nsw i32 %336, 1, !pdg.inst.id !1045
DSWP:       %362 = phi i32 [ %306, %304 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
DSWP:       br label %355, !pdg.inst.id !7017
DSWP:       %159 = add nsw i32 %152, 1, !pdg.inst.id !671
DSWP:       %239 = add nsw i32 %230, 1, !pdg.inst.id !819
DSWP:       %357 = phi i32 [ %335, %._crit_edge1 ], [ %352, %341 ], !pdg.inst.id !1037
DSWP:       br i1 %359, label %333, label %.loopexit2, !pdg.inst.id !1086
DSWP:       %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
DSWP:       %387 = select i1 %18, i32* %31, i32* %32, !prof !7106, !pdg.inst.id !217
DSWP:       %.lcssa70 = phi i32 [ %356, %355 ], !pdg.inst.id !1079
DSWP:       %372 = add nsw i32 %33, 1, !pdg.inst.id !329
DSWP:       %312 = phi i64 [ %331, %328 ], [ %310, %.preheader ], !pdg.inst.id !980
DSWP:       %33 = srem i32 %26, %14, !pdg.inst.id !183
DSWP:       %363 = icmp slt i32 %361, %28, !pdg.inst.id !258
DSWP:       %126 = add i32 %112, %125, !pdg.inst.id !523
DSWP:       %316 = load i32, i32* %315, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:       %318 = icmp eq i32 %316, %317, !pdg.inst.id !1003
DSWP:       %243 = sext i32 %240 to i64, !pdg.inst.id !845
DSWP:       br i1 %318, label %._crit_edge3, label %319, !pdg.inst.id !1006
DSWP:       %306 = phi i32 [ %140, %224 ], [ %140, %171 ], [ %140, %137 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
DSWP:       br i1 %106, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494
DSWP:       %370 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %369, i64 1, !pdg.inst.id !1110
DSWP:       %150 = phi i64 [ %169, %166 ], [ %148, %.preheader11 ], !pdg.inst.id !655
DSWP:       br i1 %363, label %375, label %364, !prof !7106, !pdg.inst.id !1096
DSWP:       %365 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
DSWP:       %368 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %367, i64 0, i32 2, !pdg.inst.id !1102
DSWP:       br label %219, !pdg.inst.id !6762
DSWP:       %321 = add nsw i32 %314, 1, !pdg.inst.id !996
DSWP:       br i1 %303, label %277, label %.loopexit6, !prof !7112, !pdg.inst.id !966
DSWP:       %35 = icmp eq i32 %34, %7, !pdg.inst.id !96
DSWP:       store %struct.kdnode* null, %struct.kdnode** %368, align 8, !tbaa !7103, !pdg.inst.id !1104
DSWP:       %369 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
DSWP:       br i1 %18, label %373, label %374, !prof !7106, !pdg.inst.id !219
DSWP:       br i1 %130, label %._crit_edge8, label %118, !prof !7105, !pdg.inst.id !558
DSWP:       %320 = icmp slt i32 %316, %109, !pdg.inst.id !511
DSWP:       %34 = add nsw i32 %28, 1, !pdg.inst.id !264
DSWP:       tail call fastcc void @buildkdtree(i32* %29, i32* %1, i32* %2, i32* nonnull %32, i32* %30, i32* %31, i32 %28, i32 %361, %struct.kdnode** nonnull %8, %struct.kdnode* %369, double* %10, i32 %372, i32 %12), !pdg.inst.id !63
DSWP:       %234 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:       %376 = icmp sgt i32 %362, %140, !pdg.inst.id !598
DSWP:       %330 = phi i32 [ %313, %._crit_edge3 ], [ %325, %319 ], !pdg.inst.id !988
DSWP:       %199 = phi i32 [ %221, %219 ], [ %140, %.preheader13 ], !pdg.inst.id !578
DSWP:       %124 = load i32, i32* %123, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:       %170 = icmp slt i64 %150, %16, !pdg.inst.id !191
DSWP:       %254 = getelementptr inbounds i32, i32* %2, i64 %251, !pdg.inst.id !73
DSWP:       %216 = select i1 %211, i32 %199, i32 %212, !prof !7111, !pdg.inst.id !757
DSWP:       br label %224, !pdg.inst.id !6792
DSWP:       %265 = add nsw i32 %252, 1, !pdg.inst.id !868
DSWP:       %144 = add nsw i32 %28, -1, !pdg.inst.id !262
DSWP:       %181 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:       %288 = sext i32 %287 to i64, !pdg.inst.id !939
DSWP:       %322 = add nsw i32 %313, 1, !pdg.inst.id !990
DSWP:       %.lcssa71 = phi i32 [ %330, %328 ], !pdg.inst.id !1025
DSWP:       %139 = phi i64 [ %134, %131 ], [ %107, %103 ], !pdg.inst.id !502
DSWP:       %210 = load double, double* %209, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:       %132 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
DSWP:       br label %197, !pdg.inst.id !6650
DSWP:       %186 = add nsw i32 %177, 1, !pdg.inst.id !716
DSWP:       %136 = load i32, i32* %135, align 4, !tbaa !7089, !pdg.inst.id !572
DSWP:       %138 = phi i32 [ %136, %131 ], [ %109, %103 ], !pdg.inst.id !509
DSWP:       %215 = select i1 %211, i32 %213, i32 %200, !prof !7111, !pdg.inst.id !763
DSWP:       %140 = phi i32 [ %132, %131 ], [ %105, %103 ], !pdg.inst.id !488
DSWP:       %152 = phi i32 [ %167, %166 ], [ %144, %.preheader11 ], !pdg.inst.id !627
DSWP:       store %struct.kdnode* %369, %struct.kdnode** %371, align 8, !tbaa !7102, !pdg.inst.id !1108
DSWP:       %115 = getelementptr inbounds double, double* %10, i64 %114, !pdg.inst.id !148
DSWP:       %367 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
DSWP:       %147 = add i32 %33, -1, !pdg.inst.id !323
DSWP:       %275 = add nsw i64 %251, 1, !pdg.inst.id !862
DSWP:       %119 = phi i64 [ %120, %122 ], [ %107, %110 ], !pdg.inst.id !504
DSWP:       %190 = sext i32 %187 to i64, !pdg.inst.id !742
DSWP:       %200 = phi i32 [ %220, %219 ], [ %144, %.preheader13 ], !pdg.inst.id !625
DSWP:       br i1 %145, label %304, label %146, !prof !7106, !pdg.inst.id !649
DSWP:       %28 = phi i32 [ %385, %377 ], [ %6, %17 ], !pdg.inst.id !83
DSWP:       %148 = sext i32 %28 to i64, !pdg.inst.id !252
DSWP:       %108 = getelementptr inbounds i32, i32* %32, i64 %107, !pdg.inst.id !311
DSWP:       br i1 %106, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498
DSWP:       %107 = sext i32 %105 to i64, !pdg.inst.id !490
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 355
DSWP:     	  %350 = select i1 %347, i32 %349, i32 %348, !pdg.inst.id !1067
DSWP:     	  store i32 %233, i32* %244, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	  %235 = icmp eq i32 %233, %234, !pdg.inst.id !832
DSWP:     	  %278 = phi i64 [ %302, %299 ], [ %227, %.preheader5 ], !pdg.inst.id !807
DSWP:     	  %282 = load i32, i32* %281, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:     	  br i1 %204, label %._crit_edge, label %205, !prof !7110, !pdg.inst.id !777
DSWP:     	  %202 = load i32, i32* %201, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:     	  %213 = add nsw i32 %200, 1, !pdg.inst.id !767
DSWP:     	  %135 = getelementptr inbounds i32, i32* %32, i64 %134, !pdg.inst.id !303
DSWP:     	  %329 = phi i32 [ %314, %._crit_edge3 ], [ %324, %319 ], !pdg.inst.id !994
DSWP:     	  %237 = icmp slt i32 %233, %109, !pdg.inst.id !513
DSWP:     	  %198 = phi i64 [ %222, %219 ], [ %148, %.preheader13 ], !pdg.inst.id !653
DSWP:     	  br i1 %332, label %311, label %.loopexit, !pdg.inst.id !1029
DSWP:     	  %326 = sext i32 %323 to i64, !pdg.inst.id !1016
DSWP:     	  %127 = sext i32 %126 to i64, !pdg.inst.id !552
DSWP:     	  br i1 %196, label %175, label %.loopexit8, !prof !7109, !pdg.inst.id !751
DSWP:     	  %29 = phi i32* [ %389, %377 ], [ %5, %17 ], !pdg.inst.id !81
DSWP:     	  %164 = sext i32 %161 to i64, !pdg.inst.id !691
DSWP:     	  %158 = icmp slt i32 %154, %109, !pdg.inst.id !517
DSWP:     	  %302 = add nsw i64 %278, 1, !pdg.inst.id !914
DSWP:     	  %168 = phi i32 [ %151, %._crit_edge2 ], [ %163, %157 ], !pdg.inst.id !663
DSWP:     	  %128 = getelementptr inbounds double, double* %10, i64 %127, !pdg.inst.id !150
DSWP:     	  %296 = select i1 %291, i32 %279, i32 %292, !prof !7111, !pdg.inst.id !916
DSWP:     	  %361 = phi i32 [ %305, %304 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
DSWP:     	  %274 = phi i32 [ %252, %._crit_edge4 ], [ %269, %258 ], !pdg.inst.id !866
DSWP:     	  %117 = sext i32 %28 to i64, !pdg.inst.id !254
DSWP:     	  %286 = mul nsw i32 %282, %12, !pdg.inst.id !168
DSWP:     	  %267 = select i1 %264, i32 %266, i32 %265, !prof !7111, !pdg.inst.id !895
DSWP:     	  %259 = mul nsw i32 %255, %12, !pdg.inst.id !170
DSWP:     	  %331 = add nsw i64 %312, 1, !pdg.inst.id !984
DSWP:     	  %240 = select i1 %237, i32 %238, i32 %239, !prof !7108, !pdg.inst.id !839
DSWP:     	  %223 = icmp slt i64 %198, %16, !pdg.inst.id !189
DSWP:     	  br label %166, !pdg.inst.id !6685
DSWP:     	  br i1 %223, label %197, label %.loopexit14, !prof !7112, !pdg.inst.id !803
DSWP:     	  br i1 %170, label %149, label %.loopexit12, !prof !7109, !pdg.inst.id !700
DSWP:     	  %337 = getelementptr inbounds i32, i32* %30, i64 %334, !pdg.inst.id !285
DSWP:     	  %32 = phi i32* [ %29, %377 ], [ %0, %17 ], !pdg.inst.id !53
DSWP:     	  br i1 %145, label %304, label %225, !prof !7106, !pdg.inst.id !645
DSWP:     	  %271 = getelementptr inbounds i32, i32* %1, i64 %270, !pdg.inst.id !55
DSWP:     	  %151 = phi i32 [ %168, %166 ], [ %140, %.preheader11 ], !pdg.inst.id !580
DSWP:     	  %112 = add nsw i32 %33, -1, !pdg.inst.id !325
DSWP:     	  %382 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
DSWP:     	  br i1 %145, label %304, label %172, !prof !7106, !pdg.inst.id !647
DSWP:     	  %247 = phi i32 [ %230, %._crit_edge7 ], [ %242, %236 ], !pdg.inst.id !817
DSWP:     	  %153 = getelementptr inbounds i32, i32* %1, i64 %150, !pdg.inst.id !59
DSWP:     	  %173 = add i32 %33, -1, !pdg.inst.id !321
DSWP:     	  %269 = select i1 %264, i32 %252, i32 %265, !prof !7111, !pdg.inst.id !864
DSWP:     	  %27 = phi %struct.kdnode* [ %382, %377 ], [ %9, %17 ], !pdg.inst.id !142
DSWP:     	  %154 = load i32, i32* %153, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	  %123 = getelementptr inbounds i32, i32* %32, i64 %120, !pdg.inst.id !309
DSWP:     	  br i1 %121, label %122, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:     	  br i1 %156, label %._crit_edge2, label %157, !prof !7107, !pdg.inst.id !681
DSWP:     	  %336 = phi i32 [ %356, %355 ], [ %144, %.preheader1 ], !pdg.inst.id !637
DSWP:     	  %281 = getelementptr inbounds i32, i32* %31, i64 %278, !pdg.inst.id !297
DSWP:     	  %343 = add i32 %309, %342, !pdg.inst.id !976
DSWP:     	  br label %149, !pdg.inst.id !6652
DSWP:     	  %323 = select i1 %320, i32 %321, i32 %322, !pdg.inst.id !1010
DSWP:     	  %141 = phi double [ %116, %131 ], [ 0.000000e+00, %103 ], !pdg.inst.id !531
DSWP:     	  %342 = shl i32 %338, 2, !pdg.inst.id !1051
DSWP:     	  %284 = icmp eq i32 %282, %283, !pdg.inst.id !933
DSWP:     	  %385 = add nsw i32 %140, 1, !pdg.inst.id !596
DSWP:     	  %206 = mul nsw i32 %202, %12, !pdg.inst.id !172
DSWP:     	  %187 = select i1 %184, i32 %185, i32 %186, !prof !7108, !pdg.inst.id !736
DSWP:     	  %292 = add nsw i32 %279, 1, !pdg.inst.id !920
DSWP:     	  %167 = phi i32 [ %152, %._crit_edge2 ], [ %162, %157 ], !pdg.inst.id !669
DSWP:     	  %129 = load double, double* %128, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:     	  %162 = select i1 %158, i32 %159, i32 %152, !prof !7108, !pdg.inst.id !667
DSWP:     	  store i32 %316, i32* %327, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	  %.lcssa2 = phi i64 [ %119, %118 ], !pdg.inst.id !539
DSWP:     	  %352 = select i1 %347, i32 %335, i32 %348, !pdg.inst.id !1035
DSWP:     	  %227 = sext i32 %28 to i64, !pdg.inst.id !248
DSWP:     	  %208 = sext i32 %207 to i64, !pdg.inst.id !780
DSWP:     	  store %struct.kdnode* %370, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
DSWP:     	  %345 = getelementptr inbounds double, double* %10, i64 %344, !pdg.inst.id !158
DSWP:     	  %217 = sext i32 %214 to i64, !pdg.inst.id !794
DSWP:     	  %270 = sext i32 %267 to i64, !pdg.inst.id !901
DSWP:     	  %249 = icmp slt i64 %229, %16, !pdg.inst.id !199
DSWP:     	  br label %192, !pdg.inst.id !6735
DSWP:     	  %218 = getelementptr inbounds i32, i32* %29, i64 %217, !pdg.inst.id !269
DSWP:     	  %251 = phi i64 [ %275, %272 ], [ %174, %.preheader9 ], !pdg.inst.id !704
DSWP:     	  %180 = load i32, i32* %179, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	  %130 = fcmp fast olt double %129, %116, !pdg.inst.id !533
DSWP:     	  %222 = add nsw i64 %198, 1, !pdg.inst.id !755
DSWP:     	  br label %131, !pdg.inst.id !6630
DSWP:     	  %125 = mul nsw i32 %124, %12, !pdg.inst.id !174
DSWP:     	  %160 = add nsw i32 %151, 1, !pdg.inst.id !665
DSWP:     	  br label %250, !pdg.inst.id !6701
DSWP:     	  %.lcssa69 = phi i32 [ %357, %355 ], !pdg.inst.id !1082
DSWP:     	  %232 = getelementptr inbounds i32, i32* %31, i64 %229, !pdg.inst.id !299
DSWP:     	  %252 = phi i32 [ %274, %272 ], [ %140, %.preheader9 ], !pdg.inst.id !582
DSWP:     	  %324 = select i1 %320, i32 %321, i32 %314, !pdg.inst.id !992
DSWP:     	  %283 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:     	  %389 = select i1 %18, i32* %30, i32* %31, !prof !7106, !pdg.inst.id !213
DSWP:     	  br label %272, !pdg.inst.id !6873
DSWP:     	  %262 = getelementptr inbounds double, double* %10, i64 %261, !pdg.inst.id !154
DSWP:     	  %388 = select i1 %18, i32* %32, i32* %30, !prof !7106, !pdg.inst.id !215
DSWP:     	  %156 = icmp eq i32 %154, %155, !pdg.inst.id !678
DSWP:     	  %121 = icmp sgt i64 %119, %117, !pdg.inst.id !535
DSWP:     	  br label %228, !pdg.inst.id !6798
DSWP:     	  %161 = select i1 %158, i32 %159, i32 %160, !prof !7108, !pdg.inst.id !685
DSWP:     	  store i32 %138, i32* %143, align 8, !tbaa !7093, !pdg.inst.id !575
DSWP:     	  %366 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %365, i64 0, i32 1, !pdg.inst.id !1098
DSWP:     	  %261 = sext i32 %260 to i64, !pdg.inst.id !887
DSWP:     	  br label %299, !pdg.inst.id !6915
DSWP:     	  br i1 %106, label %137, label %110, !prof !7104, !pdg.inst.id !500
DSWP:     	  br label %311, !pdg.inst.id !6944
DSWP:     	  %204 = icmp eq i32 %202, %203, !pdg.inst.id !774
DSWP:     	  br label %328, !pdg.inst.id !6965
DSWP:     	  %31 = phi i32* [ %387, %377 ], [ %3, %17 ], !pdg.inst.id !77
DSWP:     	  br label %360, !pdg.inst.id !7031
DSWP:     	  %384 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 2, !pdg.inst.id !242
DSWP:     	  %226 = add i32 %33, -1, !pdg.inst.id !319
DSWP:     	  %353 = sext i32 %350 to i64, !pdg.inst.id !1073
DSWP:     	  %332 = icmp slt i64 %312, %16, !pdg.inst.id !203
DSWP:     	  %260 = add i32 %173, %259, !pdg.inst.id !702
DSWP:     	  %105 = sdiv i32 %104, 2, !pdg.inst.id !486
DSWP:     	  br label %224, !pdg.inst.id !6790
DSWP:     	  br label %192, !pdg.inst.id !6724
DSWP:     	  br label %131, !pdg.inst.id !6633
DSWP:     	  %358 = add nsw i64 %334, 1, !pdg.inst.id !1033
DSWP:     	  store %struct.kdnode* null, %struct.kdnode** %381, align 8, !tbaa !7103, !pdg.inst.id !1124
DSWP:     	  %253 = phi i32 [ %273, %272 ], [ %144, %.preheader9 ], !pdg.inst.id !629
DSWP:     	  %179 = getelementptr inbounds i32, i32* %2, i64 %176, !pdg.inst.id !71
DSWP:     	  br label %219, !pdg.inst.id !6778
DSWP:     	  %276 = icmp slt i64 %251, %16, !pdg.inst.id !193
DSWP:     	  %297 = sext i32 %294 to i64, !pdg.inst.id !953
DSWP:     	  %263 = load double, double* %262, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:     	  %174 = sext i32 %28 to i64, !pdg.inst.id !250
DSWP:     	  %378 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
DSWP:     	  br i1 %249, label %228, label %.loopexit4, !prof !7109, !pdg.inst.id !858
DSWP:     	  br i1 %106, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496
DSWP:     	  br label %375, !pdg.inst.id !7062
DSWP:     	  %344 = sext i32 %343 to i64, !pdg.inst.id !1059
DSWP:     	  %273 = phi i32 [ %253, %._crit_edge4 ], [ %268, %258 ], !pdg.inst.id !872
DSWP:     	  %142 = getelementptr inbounds i32, i32* %32, i64 %139, !pdg.inst.id !307
DSWP:     	  %111 = mul nsw i32 %109, %12, !pdg.inst.id !176
DSWP:     	  br label %277, !pdg.inst.id !6796
DSWP:     	  %109 = load i32, i32* %108, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:     	  %.lcssa3 = phi i64 [ %119, %122 ], !pdg.inst.id !537
DSWP:     	  %182 = icmp eq i32 %180, %181, !pdg.inst.id !729
DSWP:     	  br label %333, !pdg.inst.id !6942
DSWP:     	  %194 = phi i32 [ %177, %._crit_edge5 ], [ %189, %183 ], !pdg.inst.id !714
DSWP:     	  %354 = getelementptr inbounds i32, i32* %31, i64 %353, !pdg.inst.id !289
DSWP:     	  br label %166, !pdg.inst.id !6674
DSWP:     	  %184 = icmp slt i32 %180, %109, !pdg.inst.id !515
DSWP:     	  %242 = select i1 %237, i32 %230, i32 %239, !prof !7108, !pdg.inst.id !815
DSWP:     	  %383 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %382, i64 1, !pdg.inst.id !1130
DSWP:     	  br label %245, !pdg.inst.id !6819
DSWP:     	  store i32 %338, i32* %354, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:     	  %293 = add nsw i32 %280, 1, !pdg.inst.id !926
DSWP:     	  br label %171, !pdg.inst.id !6665
DSWP:     	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	  %176 = phi i64 [ %195, %192 ], [ %174, %.preheader7 ], !pdg.inst.id !706
DSWP:     	  %163 = select i1 %158, i32 %151, i32 %160, !prof !7108, !pdg.inst.id !661
DSWP:     	  %201 = getelementptr inbounds i32, i32* %1, i64 %198, !pdg.inst.id !61
DSWP:     	  br i1 %182, label %._crit_edge5, label %183, !prof !7107, !pdg.inst.id !732
DSWP:     	  %256 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:     	  br label %360, !pdg.inst.id !7035
DSWP:     	  %309 = add i32 %33, -1, !pdg.inst.id !317
DSWP:     	  br label %272, !pdg.inst.id !6857
DSWP:     	  %178 = phi i32 [ %193, %192 ], [ %144, %.preheader7 ], !pdg.inst.id !631
DSWP:     	  br label %175, !pdg.inst.id !6703
DSWP:     	  br label %355, !pdg.inst.id !7001
DSWP:     	  br label %137, !pdg.inst.id !6614
DSWP:     	  %268 = select i1 %264, i32 %266, i32 %253, !prof !7111, !pdg.inst.id !870
DSWP:     	  %339 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:     	  br i1 %257, label %._crit_edge4, label %258, !prof !7110, !pdg.inst.id !884
DSWP:     	  %120 = add nsw i64 %119, -1, !pdg.inst.id !542
DSWP:     	  br i1 %276, label %250, label %.loopexit10, !prof !7112, !pdg.inst.id !910
DSWP:     	  br label %328, !pdg.inst.id !6976
DSWP:     	  store %struct.kdnode* %382, %struct.kdnode** %384, align 8, !tbaa !7103, !pdg.inst.id !1128
DSWP:     	  br label %304, !pdg.inst.id !6929
DSWP:     	  store %struct.kdnode* %383, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
DSWP:     	  %335 = phi i32 [ %357, %355 ], [ %140, %.preheader1 ], !pdg.inst.id !590
DSWP:     	  %381 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %380, i64 0, i32 2, !pdg.inst.id !1122
DSWP:     	  %315 = getelementptr inbounds i32, i32* %30, i64 %312, !pdg.inst.id !287
DSWP:     	  %379 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %378, i64 0, i32 1, !pdg.inst.id !1118
DSWP:     	  %298 = getelementptr inbounds i32, i32* %2, i64 %297, !pdg.inst.id !67
DSWP:     	  br i1 %376, label %377, label %.loopexit15, !prof !7113, !pdg.inst.id !1116
DSWP:     	  %380 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
DSWP:     	  %185 = add nsw i32 %178, 1, !pdg.inst.id !722
DSWP:     	  %327 = getelementptr inbounds i32, i32* %31, i64 %326, !pdg.inst.id !291
DSWP:     	  %104 = add nsw i32 %28, %7, !pdg.inst.id !94
DSWP:     	  br label %304, !pdg.inst.id !6933
DSWP:     	  %177 = phi i32 [ %194, %192 ], [ %140, %.preheader7 ], !pdg.inst.id !584
DSWP:     	  br label %118, !pdg.inst.id !6607
DSWP:     	  %356 = phi i32 [ %336, %._crit_edge1 ], [ %351, %341 ], !pdg.inst.id !1043
DSWP:     	  store i32 %255, i32* %271, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:     	  %266 = add nsw i32 %253, 1, !pdg.inst.id !874
DSWP:     	  %255 = load i32, i32* %254, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:     	  %.lcssa72 = phi i32 [ %329, %328 ], !pdg.inst.id !1022
DSWP:     	  %165 = getelementptr inbounds i32, i32* %29, i64 %164, !pdg.inst.id !271
DSWP:     	  %248 = add nsw i64 %229, 1, !pdg.inst.id !813
DSWP:     	  %305 = phi i32 [ %144, %224 ], [ %144, %171 ], [ %144, %137 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
DSWP:     	  %155 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:     	  %264 = fcmp fast olt double %263, %141, !pdg.inst.id !604
DSWP:     	  store %struct.kdnode* null, %struct.kdnode** %366, align 8, !tbaa !7102, !pdg.inst.id !1100
DSWP:     	  %209 = getelementptr inbounds double, double* %10, i64 %208, !pdg.inst.id !152
DSWP:     	  %.lcssa66 = phi i32 [ %300, %299 ], !pdg.inst.id !959
DSWP:     	  %143 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 0, !pdg.inst.id !238
DSWP:     	  %221 = phi i32 [ %199, %._crit_edge ], [ %216, %205 ], !pdg.inst.id !759
DSWP:     	  %211 = fcmp fast olt double %210, %141, !pdg.inst.id !606
DSWP:     	  %26 = phi i32 [ %386, %377 ], [ %11, %17 ], !pdg.inst.id !162
DSWP:     	  %133 = shl i64 %.lcssa, 32, !pdg.inst.id !563
DSWP:     	  %114 = sext i32 %113 to i64, !pdg.inst.id !526
DSWP:     	  %188 = select i1 %184, i32 %185, i32 %178, !prof !7108, !pdg.inst.id !718
DSWP:     	  %.lcssa67 = phi i32 [ %247, %245 ], !pdg.inst.id !854
DSWP:     	  %189 = select i1 %184, i32 %177, i32 %186, !prof !7108, !pdg.inst.id !712
DSWP:     	  br label %375, !pdg.inst.id !7059
DSWP:     	  %193 = phi i32 [ %178, %._crit_edge5 ], [ %188, %183 ], !pdg.inst.id !720
DSWP:     	  %195 = add nsw i64 %176, 1, !pdg.inst.id !710
DSWP:     	  %220 = phi i32 [ %200, %._crit_edge ], [ %215, %205 ], !pdg.inst.id !765
DSWP:     	  %279 = phi i32 [ %301, %299 ], [ %140, %.preheader5 ], !pdg.inst.id !586
DSWP:     	  %351 = select i1 %347, i32 %349, i32 %336, !pdg.inst.id !1041
DSWP:     	  %313 = phi i32 [ %330, %328 ], [ %140, %.preheader ], !pdg.inst.id !592
DSWP:     	  br i1 %284, label %._crit_edge6, label %285, !prof !7110, !pdg.inst.id !936
DSWP:     	  %317 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:     	  br label %245, !pdg.inst.id !6830
DSWP:     	  %287 = add i32 %226, %286, !pdg.inst.id !805
DSWP:     	  %359 = icmp slt i64 %334, %16, !pdg.inst.id !201
DSWP:     	  store i32 %202, i32* %218, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:     	  %116 = load double, double* %115, align 8, !tbaa !7098, !pdg.inst.id !529
DSWP:     	  %386 = add nsw i32 %33, 1, !pdg.inst.id !331
DSWP:     	  %207 = add i32 %147, %206, !pdg.inst.id !651
DSWP:     	  %289 = getelementptr inbounds double, double* %10, i64 %288, !pdg.inst.id !156
DSWP:     	  %371 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %27, i64 0, i32 1, !pdg.inst.id !240
DSWP:     	  %169 = add nsw i64 %150, 1, !pdg.inst.id !659
DSWP:     	  %290 = load double, double* %289, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:     	  %291 = fcmp fast olt double %290, %141, !pdg.inst.id !602
DSWP:     	  %294 = select i1 %291, i32 %293, i32 %292, !prof !7111, !pdg.inst.id !947
DSWP:     	  %325 = select i1 %320, i32 %313, i32 %322, !pdg.inst.id !986
DSWP:     	  %295 = select i1 %291, i32 %293, i32 %280, !prof !7111, !pdg.inst.id !922
DSWP:     	  store i32 %282, i32* %298, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:     	  %30 = phi i32* [ %388, %377 ], [ %4, %17 ], !pdg.inst.id !79
DSWP:     	  tail call fastcc void @buildkdtree(i32* %29, i32* %1, i32* %2, i32* %31, i32* nonnull %32, i32* %30, i32 %28, i32 %361, %struct.kdnode** nonnull %8, %struct.kdnode* %369, double* %10, i32 %372, i32 4), !pdg.inst.id !65
DSWP:     	  %203 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:     	  %134 = ashr exact i64 %133, 32, !pdg.inst.id !568
DSWP:     	  %390 = icmp eq i32 %385, %7, !pdg.inst.id !89
DSWP:     	  br label %171, !pdg.inst.id !6697
DSWP:     	  %212 = add nsw i32 %199, 1, !pdg.inst.id !761
DSWP:     	  %257 = icmp eq i32 %255, %256, !pdg.inst.id !881
DSWP:     	  %300 = phi i32 [ %280, %._crit_edge6 ], [ %295, %285 ], !pdg.inst.id !924
DSWP:     	  %301 = phi i32 [ %279, %._crit_edge6 ], [ %296, %285 ], !pdg.inst.id !918
DSWP:     	  %303 = icmp slt i64 %278, %16, !pdg.inst.id !197
DSWP:     	  br i1 %106, label %.preheader, label %.preheader1, !pdg.inst.id !492
DSWP:     	  %106 = icmp eq i32 %33, 0, !pdg.inst.id !327
DSWP:     	  %.lcssa65 = phi i32 [ %301, %299 ], !pdg.inst.id !962
DSWP:     	  %145 = icmp sgt i32 %28, %7, !pdg.inst.id !92
DSWP:     	  br i1 %35, label %36, label %103, !prof !7096, !pdg.inst.id !334
DSWP:     	  %338 = load i32, i32* %337, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:     	  %229 = phi i64 [ %248, %245 ], [ %227, %.preheader3 ], !pdg.inst.id !809
DSWP:     	  %230 = phi i32 [ %247, %245 ], [ %140, %.preheader3 ], !pdg.inst.id !588
DSWP:     	  br i1 %340, label %._crit_edge1, label %341, !pdg.inst.id !1056
DSWP:     	  store i32 %180, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	  %231 = phi i32 [ %246, %245 ], [ %144, %.preheader3 ], !pdg.inst.id !635
DSWP:     	  %233 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	  %196 = icmp slt i64 %176, %16, !pdg.inst.id !195
DSWP:     	  br i1 %235, label %._crit_edge7, label %236, !prof !7107, !pdg.inst.id !835
DSWP:     	  %280 = phi i32 [ %300, %299 ], [ %144, %.preheader5 ], !pdg.inst.id !633
DSWP:     	  %238 = add nsw i32 %231, 1, !pdg.inst.id !825
DSWP:     	  %314 = phi i32 [ %329, %328 ], [ %144, %.preheader ], !pdg.inst.id !639
DSWP:     	  store %struct.kdnode* null, %struct.kdnode** %379, align 8, !tbaa !7102, !pdg.inst.id !1120
DSWP:     	  %241 = select i1 %237, i32 %238, i32 %231, !prof !7108, !pdg.inst.id !821
DSWP:     	  br label %299, !pdg.inst.id !6899
DSWP:     	  store i32 %154, i32* %165, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	  %244 = getelementptr inbounds i32, i32* %2, i64 %243, !pdg.inst.id !69
DSWP:     	  %214 = select i1 %211, i32 %213, i32 %212, !prof !7111, !pdg.inst.id !788
DSWP:     	  %246 = phi i32 [ %231, %._crit_edge7 ], [ %241, %236 ], !pdg.inst.id !823
DSWP:     	  %.lcssa68 = phi i32 [ %246, %245 ], !pdg.inst.id !851
DSWP:     	  %113 = add i32 %112, %111, !pdg.inst.id !521
DSWP:     	  br i1 %18, label %307, label %360, !prof !7106, !pdg.inst.id !221
DSWP:     	  %310 = sext i32 %28 to i64, !pdg.inst.id !246
DSWP:     	  %334 = phi i64 [ %358, %355 ], [ %310, %.preheader1 ], !pdg.inst.id !978
DSWP:     	  %340 = icmp eq i32 %338, %339, !pdg.inst.id !1053
DSWP:     	  %346 = load double, double* %345, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:     	  %347 = fcmp fast olt double %346, %141, !pdg.inst.id !600
DSWP:     	  %191 = getelementptr inbounds i32, i32* %1, i64 %190, !pdg.inst.id !57
DSWP:     	  br i1 %145, label %.loopexit15, label %308, !pdg.inst.id !643
DSWP:     	  %348 = add nsw i32 %335, 1, !pdg.inst.id !1039
DSWP:     	  %349 = add nsw i32 %336, 1, !pdg.inst.id !1045
DSWP:     	  %362 = phi i32 [ %306, %304 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
DSWP:     	  br label %355, !pdg.inst.id !7017
DSWP:     	  %159 = add nsw i32 %152, 1, !pdg.inst.id !671
DSWP:     	  %239 = add nsw i32 %230, 1, !pdg.inst.id !819
DSWP:     	  %357 = phi i32 [ %335, %._crit_edge1 ], [ %352, %341 ], !pdg.inst.id !1037
DSWP:     	  br i1 %359, label %333, label %.loopexit2, !pdg.inst.id !1086
DSWP:     	  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
DSWP:     	  %387 = select i1 %18, i32* %31, i32* %32, !prof !7106, !pdg.inst.id !217
DSWP:     	  %.lcssa70 = phi i32 [ %356, %355 ], !pdg.inst.id !1079
DSWP:     	  %372 = add nsw i32 %33, 1, !pdg.inst.id !329
DSWP:     	  %312 = phi i64 [ %331, %328 ], [ %310, %.preheader ], !pdg.inst.id !980
DSWP:     	  %33 = srem i32 %26, %14, !pdg.inst.id !183
DSWP:     	  %363 = icmp slt i32 %361, %28, !pdg.inst.id !258
DSWP:     	  %126 = add i32 %112, %125, !pdg.inst.id !523
DSWP:     	  %316 = load i32, i32* %315, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	  %318 = icmp eq i32 %316, %317, !pdg.inst.id !1003
DSWP:     	  %243 = sext i32 %240 to i64, !pdg.inst.id !845
DSWP:     	  br i1 %318, label %._crit_edge3, label %319, !pdg.inst.id !1006
DSWP:     	  %306 = phi i32 [ %140, %224 ], [ %140, %171 ], [ %140, %137 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
DSWP:     	  br i1 %106, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494
DSWP:     	  %370 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %369, i64 1, !pdg.inst.id !1110
DSWP:     	  %150 = phi i64 [ %169, %166 ], [ %148, %.preheader11 ], !pdg.inst.id !655
DSWP:     	  br i1 %363, label %375, label %364, !prof !7106, !pdg.inst.id !1096
DSWP:     	  %365 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
DSWP:     	  %368 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %367, i64 0, i32 2, !pdg.inst.id !1102
DSWP:     	  br label %219, !pdg.inst.id !6762
DSWP:     	  %321 = add nsw i32 %314, 1, !pdg.inst.id !996
DSWP:     	  br i1 %303, label %277, label %.loopexit6, !prof !7112, !pdg.inst.id !966
DSWP:     	  %35 = icmp eq i32 %34, %7, !pdg.inst.id !96
DSWP:     	  store %struct.kdnode* null, %struct.kdnode** %368, align 8, !tbaa !7103, !pdg.inst.id !1104
DSWP:     	  %369 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
DSWP:     	  br i1 %18, label %373, label %374, !prof !7106, !pdg.inst.id !219
DSWP:     	  br i1 %130, label %._crit_edge8, label %118, !prof !7105, !pdg.inst.id !558
DSWP:     	  %320 = icmp slt i32 %316, %109, !pdg.inst.id !511
DSWP:     	  %34 = add nsw i32 %28, 1, !pdg.inst.id !264
DSWP:     	  tail call fastcc void @buildkdtree(i32* %29, i32* %1, i32* %2, i32* nonnull %32, i32* %30, i32* %31, i32 %28, i32 %361, %struct.kdnode** nonnull %8, %struct.kdnode* %369, double* %10, i32 %372, i32 %12), !pdg.inst.id !63
DSWP:     	  %234 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:     	  %376 = icmp sgt i32 %362, %140, !pdg.inst.id !598
DSWP:     	  %330 = phi i32 [ %313, %._crit_edge3 ], [ %325, %319 ], !pdg.inst.id !988
DSWP:     	  %199 = phi i32 [ %221, %219 ], [ %140, %.preheader13 ], !pdg.inst.id !578
DSWP:     	  %124 = load i32, i32* %123, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:     	  %170 = icmp slt i64 %150, %16, !pdg.inst.id !191
DSWP:     	  %254 = getelementptr inbounds i32, i32* %2, i64 %251, !pdg.inst.id !73
DSWP:     	  %216 = select i1 %211, i32 %199, i32 %212, !prof !7111, !pdg.inst.id !757
DSWP:     	  br label %224, !pdg.inst.id !6792
DSWP:     	  %265 = add nsw i32 %252, 1, !pdg.inst.id !868
DSWP:     	  %144 = add nsw i32 %28, -1, !pdg.inst.id !262
DSWP:     	  %181 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:     	  %288 = sext i32 %287 to i64, !pdg.inst.id !939
DSWP:     	  %322 = add nsw i32 %313, 1, !pdg.inst.id !990
DSWP:     	  %.lcssa71 = phi i32 [ %330, %328 ], !pdg.inst.id !1025
DSWP:     	  %139 = phi i64 [ %134, %131 ], [ %107, %103 ], !pdg.inst.id !502
DSWP:     	  %210 = load double, double* %209, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:     	  %132 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
DSWP:     	  br label %197, !pdg.inst.id !6650
DSWP:     	  %186 = add nsw i32 %177, 1, !pdg.inst.id !716
DSWP:     	  %136 = load i32, i32* %135, align 4, !tbaa !7089, !pdg.inst.id !572
DSWP:     	  %138 = phi i32 [ %136, %131 ], [ %109, %103 ], !pdg.inst.id !509
DSWP:     	  %215 = select i1 %211, i32 %213, i32 %200, !prof !7111, !pdg.inst.id !763
DSWP:     	  %140 = phi i32 [ %132, %131 ], [ %105, %103 ], !pdg.inst.id !488
DSWP:     	  %152 = phi i32 [ %167, %166 ], [ %144, %.preheader11 ], !pdg.inst.id !627
DSWP:     	  store %struct.kdnode* %369, %struct.kdnode** %371, align 8, !tbaa !7102, !pdg.inst.id !1108
DSWP:     	  %115 = getelementptr inbounds double, double* %10, i64 %114, !pdg.inst.id !148
DSWP:     	  %367 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
DSWP:     	  %147 = add i32 %33, -1, !pdg.inst.id !323
DSWP:     	  %275 = add nsw i64 %251, 1, !pdg.inst.id !862
DSWP:     	  %119 = phi i64 [ %120, %122 ], [ %107, %110 ], !pdg.inst.id !504
DSWP:     	  %190 = sext i32 %187 to i64, !pdg.inst.id !742
DSWP:     	  %200 = phi i32 [ %220, %219 ], [ %144, %.preheader13 ], !pdg.inst.id !625
DSWP:     	  br i1 %145, label %304, label %146, !prof !7106, !pdg.inst.id !649
DSWP:     	  %28 = phi i32 [ %385, %377 ], [ %6, %17 ], !pdg.inst.id !83
DSWP:     	  %148 = sext i32 %28 to i64, !pdg.inst.id !252
DSWP:     	  %108 = getelementptr inbounds i32, i32* %32, i64 %107, !pdg.inst.id !311
DSWP:     	  br i1 %106, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498
DSWP:     	  %107 = sext i32 %105 to i64, !pdg.inst.id !490
DSWP:     External nodes: 0
DSWP:     Edges: 2811
DSWP:     	From:	  %388 = select i1 %18, i32* %32, i32* %30, !prof !7106, !pdg.inst.id !215
DSWP:     	To:	  %30 = phi i32* [ %388, %377 ], [ %4, %17 ], !pdg.inst.id !79
DSWP:     	RAW (must)
DSWP:     	From:	  %389 = select i1 %18, i32* %30, i32* %31, !prof !7106, !pdg.inst.id !213
DSWP:     	To:	  %29 = phi i32* [ %389, %377 ], [ %5, %17 ], !pdg.inst.id !81
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %35 = icmp eq i32 %34, %7, !pdg.inst.id !96
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %26 = phi i32 [ %386, %377 ], [ %11, %17 ], !pdg.inst.id !162
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %32 = phi i32* [ %29, %377 ], [ %0, %17 ], !pdg.inst.id !53
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %28 = phi i32 [ %385, %377 ], [ %6, %17 ], !pdg.inst.id !83
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %27 = phi %struct.kdnode* [ %382, %377 ], [ %9, %17 ], !pdg.inst.id !142
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %31 = phi i32* [ %387, %377 ], [ %3, %17 ], !pdg.inst.id !77
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %29 = phi i32* [ %389, %377 ], [ %5, %17 ], !pdg.inst.id !81
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %30 = phi i32* [ %388, %377 ], [ %4, %17 ], !pdg.inst.id !79
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %34 = add nsw i32 %28, 1, !pdg.inst.id !264
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  %33 = srem i32 %26, %14, !pdg.inst.id !183
DSWP:     	CTRL
DSWP:     	From:	  br i1 %390, label %.loopexit16, label %25, !prof !7114, !pdg.inst.id !1140
DSWP:     	To:	  br i1 %35, label %36, label %103, !prof !7096, !pdg.inst.id !334
DSWP:     	CTRL
DSWP:     	From:	  store %struct.kdnode* %382, %struct.kdnode** %384, align 8, !tbaa !7103, !pdg.inst.id !1128
DSWP:     	To:	  %109 = load i32, i32* %108, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store %struct.kdnode* %382, %struct.kdnode** %384, align 8, !tbaa !7103, !pdg.inst.id !1128
DSWP:     	To:	  store i32 %154, i32* %165, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	WAW (may) from memory 
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	i32 %12
DSWP:    Pre loop env 2, producer:	i32 %11
DSWP:    Pre loop env 3, producer:	%struct.kdnode* %9
DSWP:    Pre loop env 4, producer:	%struct.kdnode** %8
DSWP:    Pre loop env 5, producer:	i32 %6
DSWP:    Pre loop env 6, producer:	i32* %5
DSWP:    Pre loop env 7, producer:	i32 %7
DSWP:    Pre loop env 8, producer:	i32* %0
DSWP:    Pre loop env 9, producer:	  %14 = add nsw i32 %12, 1, !pdg.inst.id !181
DSWP:    Pre loop env 10, producer:	i32* %2
DSWP:    Pre loop env 11, producer:	i32* %1
DSWP:    Pre loop env 12, producer:	i32* %3
DSWP:    Pre loop env 13, producer:	i32* %4
DSWP:    Pre loop env 14, producer:	  %18 = icmp eq i32 %12, 4, !pdg.inst.id !179
DSWP:    Pre loop env 15, producer:	  %16 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:    Pre loop env 16, producer:	double* %10
DSWP:    Post loop env 17, producer:	  %27 = phi %struct.kdnode* [ %382, %377 ], [ %9, %17 ], !pdg.inst.id !142
DSWP:    Post loop env 18, producer:	  %28 = phi i32 [ %385, %377 ], [ %6, %17 ], !pdg.inst.id !83
DSWP:    Post loop env 19, producer:	  %33 = srem i32 %26, %14, !pdg.inst.id !183
DSWP:    Post loop env 20, producer:	  %29 = phi i32* [ %389, %377 ], [ %5, %17 ], !pdg.inst.id !81
DSWP:    Post loop env 21, producer:	  %32 = phi i32* [ %29, %377 ], [ %0, %17 ], !pdg.inst.id !53
DSWP:    Post loop env 22, producer:	  %382 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @23(i8*, i8*) {
  %3 = bitcast i8* %0 to [184 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to %struct.kdnode**
  %13 = load %struct.kdnode*, %struct.kdnode** %12
  %14 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to %struct.kdnode***
  %16 = load %struct.kdnode**, %struct.kdnode*** %15
  %17 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 40
  %21 = bitcast i64* %20 to i32**
  %22 = load i32*, i32** %21
  %23 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 48
  %24 = bitcast i64* %23 to i32*
  %25 = load i32, i32* %24
  %26 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 56
  %27 = bitcast i64* %26 to i32**
  %28 = load i32*, i32** %27
  %29 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 64
  %30 = bitcast i64* %29 to i32*
  %31 = load i32, i32* %30
  %32 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 72
  %33 = bitcast i64* %32 to i32**
  %34 = load i32*, i32** %33
  %35 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 80
  %36 = bitcast i64* %35 to i32**
  %37 = load i32*, i32** %36
  %38 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 88
  %39 = bitcast i64* %38 to i32**
  %40 = load i32*, i32** %39
  %41 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 96
  %42 = bitcast i64* %41 to i32**
  %43 = load i32*, i32** %42
  %44 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 104
  %45 = bitcast i64* %44 to i1*
  %46 = load i1, i1* %45
  %47 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 144
  %48 = load i64, i64* %47
  %49 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 152
  %50 = bitcast i64* %49 to double**
  %51 = load double*, double** %50
  %52 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 112
  %53 = bitcast i64* %52 to %struct.kdnode**
  %54 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 120
  %55 = bitcast i64* %54 to i32*
  %56 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 128
  %57 = bitcast i64* %56 to i32*
  %58 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 136
  %59 = bitcast i64* %58 to i32**
  %60 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 160
  %61 = bitcast i64* %60 to i32**
  %62 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 168
  %63 = bitcast i64* %62 to %struct.kdnode**
  %64 = getelementptr inbounds [184 x i64], [184 x i64]* %3, i64 0, i64 176
  %65 = bitcast i64* %64 to i32*
  br label %71

66:                                               ; preds = %70, %69, %68, %67
  ret void

67:                                               ; preds = %71
  store %struct.kdnode* %73, %struct.kdnode** %53
  store i32 %74, i32* %55
  store i32 %79, i32* %57
  store i32* %75, i32** %59
  store i32* %78, i32** %61
  store i32 0, i32* %65
  br label %66

68:                                               ; No predecessors!
  store i32 1, i32* %65
  br label %66

69:                                               ; preds = %313, %391
  store %struct.kdnode* %73, %struct.kdnode** %53
  store i32 %74, i32* %55
  store i32 %79, i32* %57
  store i32* %75, i32** %59
  store i32* %78, i32** %61
  store i32 2, i32* %65
  br label %66

70:                                               ; preds = %393
  store %struct.kdnode* %73, %struct.kdnode** %53
  store i32 %74, i32* %55
  store i32 %79, i32* %57
  store i32* %75, i32** %59
  store i32* %78, i32** %61
  store i32 3, i32* %65
  br label %66

71:                                               ; preds = %2, %393
  %72 = phi i32 [ %402, %393 ], [ %10, %2 ], !pdg.inst.id !30
  %73 = phi %struct.kdnode* [ %398, %393 ], [ %13, %2 ], !pdg.inst.id !31
  %74 = phi i32 [ %401, %393 ], [ %19, %2 ], !pdg.inst.id !32
  %75 = phi i32* [ %405, %393 ], [ %22, %2 ], !pdg.inst.id !33
  %76 = phi i32* [ %404, %393 ], [ %43, %2 ], !pdg.inst.id !34
  %77 = phi i32* [ %403, %393 ], [ %40, %2 ], !pdg.inst.id !35
  %78 = phi i32* [ %75, %393 ], [ %28, %2 ], !pdg.inst.id !36
  %79 = srem i32 %72, %31, !pdg.inst.id !37
  %80 = add nsw i32 %74, 1, !pdg.inst.id !38
  %81 = icmp eq i32 %80, %25, !pdg.inst.id !39
  br i1 %81, label %67, label %82, !prof !40, !pdg.inst.id !41

82:                                               ; preds = %71
  %83 = add nsw i32 %74, %25, !pdg.inst.id !42
  %84 = sdiv i32 %83, 2, !pdg.inst.id !43
  %85 = icmp eq i32 %79, 0, !pdg.inst.id !44
  %86 = sext i32 %84 to i64, !pdg.inst.id !45
  %87 = getelementptr inbounds i32, i32* %78, i64 %86, !pdg.inst.id !46
  %88 = load i32, i32* %87, align 4, !tbaa !47, !pdg.inst.id !51
  br i1 %85, label %121, label %89, !prof !52, !pdg.inst.id !53

89:                                               ; preds = %82
  %90 = mul nsw i32 %88, %7, !pdg.inst.id !54
  %91 = add nsw i32 %79, -1, !pdg.inst.id !55
  %92 = add i32 %91, %90, !pdg.inst.id !56
  %93 = sext i32 %92 to i64, !pdg.inst.id !57
  %94 = getelementptr inbounds double, double* %51, i64 %93, !pdg.inst.id !58
  %95 = load double, double* %94, align 8, !tbaa !59, !pdg.inst.id !61
  %96 = sext i32 %74 to i64, !pdg.inst.id !62
  br label %97, !pdg.inst.id !63

97:                                               ; preds = %89, %101
  %98 = phi i64 [ %99, %101 ], [ %86, %89 ], !pdg.inst.id !64
  %99 = add nsw i64 %98, -1, !pdg.inst.id !65
  %100 = icmp sgt i64 %98, %96, !pdg.inst.id !66
  br i1 %100, label %101, label %112, !prof !67, !pdg.inst.id !68

101:                                              ; preds = %97
  %102 = getelementptr inbounds i32, i32* %78, i64 %99, !pdg.inst.id !69
  %103 = load i32, i32* %102, align 4, !tbaa !47, !pdg.inst.id !70
  %104 = mul nsw i32 %103, %7, !pdg.inst.id !71
  %105 = add i32 %91, %104, !pdg.inst.id !72
  %106 = sext i32 %105 to i64, !pdg.inst.id !73
  %107 = getelementptr inbounds double, double* %51, i64 %106, !pdg.inst.id !74
  %108 = load double, double* %107, align 8, !tbaa !59, !pdg.inst.id !75
  %109 = fcmp fast olt double %108, %95, !pdg.inst.id !76
  br i1 %109, label %110, label %97, !prof !67, !pdg.inst.id !77

110:                                              ; preds = %101
  %111 = phi i64 [ %98, %101 ], !pdg.inst.id !78
  br label %114, !pdg.inst.id !79

112:                                              ; preds = %97
  %113 = phi i64 [ %98, %97 ], !pdg.inst.id !80
  br label %114, !pdg.inst.id !81

114:                                              ; preds = %110, %112
  %115 = phi i64 [ %111, %110 ], [ %113, %112 ], !pdg.inst.id !82
  %116 = trunc i64 %115 to i32, !pdg.inst.id !83
  %117 = shl i64 %115, 32, !pdg.inst.id !84
  %118 = ashr exact i64 %117, 32, !pdg.inst.id !85
  %119 = getelementptr inbounds i32, i32* %78, i64 %118, !pdg.inst.id !86
  %120 = load i32, i32* %119, align 4, !tbaa !47, !pdg.inst.id !87
  br label %121, !pdg.inst.id !88

121:                                              ; preds = %82, %114
  %122 = phi i32 [ %120, %114 ], [ %88, %82 ], !pdg.inst.id !89
  %123 = phi i64 [ %118, %114 ], [ %86, %82 ], !pdg.inst.id !90
  %124 = phi i32 [ %116, %114 ], [ %84, %82 ], !pdg.inst.id !91
  %125 = phi double [ %95, %114 ], [ 0.000000e+00, %82 ], !pdg.inst.id !92
  %126 = getelementptr inbounds i32, i32* %78, i64 %123, !pdg.inst.id !93
  %127 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %73, i64 0, i32 0, !pdg.inst.id !94
  store i32 %122, i32* %127, align 8, !tbaa !95, !pdg.inst.id !98
  %128 = add nsw i32 %74, -1, !pdg.inst.id !99
  %129 = icmp sgt i32 %74, %25, !pdg.inst.id !100
  br i1 %129, label %310, label %130, !prof !101, !pdg.inst.id !102

130:                                              ; preds = %121
  %131 = add i32 %79, -1, !pdg.inst.id !103
  %132 = sext i32 %74 to i64, !pdg.inst.id !104
  br i1 %85, label %134, label %133, !prof !52, !pdg.inst.id !105

133:                                              ; preds = %130
  br label %189, !pdg.inst.id !106

134:                                              ; preds = %130
  br label %135, !pdg.inst.id !107

135:                                              ; preds = %134, %153
  %136 = phi i64 [ %156, %153 ], [ %132, %134 ], !pdg.inst.id !108
  %137 = phi i32 [ %155, %153 ], [ %124, %134 ], !pdg.inst.id !109
  %138 = phi i32 [ %154, %153 ], [ %128, %134 ], !pdg.inst.id !110
  %139 = getelementptr inbounds i32, i32* %37, i64 %136, !pdg.inst.id !111
  %140 = load i32, i32* %139, align 4, !tbaa !47, !pdg.inst.id !112
  %141 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !113
  %142 = icmp eq i32 %140, %141, !pdg.inst.id !114
  br i1 %142, label %143, label %144, !prof !115, !pdg.inst.id !116

143:                                              ; preds = %135
  br label %153, !pdg.inst.id !117

144:                                              ; preds = %135
  %145 = icmp slt i32 %140, %88, !pdg.inst.id !118
  %146 = add nsw i32 %138, 1, !pdg.inst.id !119
  %147 = add nsw i32 %137, 1, !pdg.inst.id !120
  %148 = select i1 %145, i32 %146, i32 %147, !prof !121, !pdg.inst.id !122
  %149 = select i1 %145, i32 %146, i32 %138, !prof !121, !pdg.inst.id !123
  %150 = select i1 %145, i32 %137, i32 %147, !prof !121, !pdg.inst.id !124
  %151 = sext i32 %148 to i64, !pdg.inst.id !125
  %152 = getelementptr inbounds i32, i32* %75, i64 %151, !pdg.inst.id !126
  store i32 %140, i32* %152, align 4, !tbaa !47, !pdg.inst.id !127
  br label %153, !pdg.inst.id !128

153:                                              ; preds = %144, %143
  %154 = phi i32 [ %138, %143 ], [ %149, %144 ], !pdg.inst.id !129
  %155 = phi i32 [ %137, %143 ], [ %150, %144 ], !pdg.inst.id !130
  %156 = add nsw i64 %136, 1, !pdg.inst.id !131
  %157 = icmp slt i64 %136, %48, !pdg.inst.id !132
  br i1 %157, label %135, label %158, !prof !133, !pdg.inst.id !134

158:                                              ; preds = %153
  br label %160, !pdg.inst.id !135

159:                                              ; preds = %212
  br label %160, !pdg.inst.id !136

160:                                              ; preds = %158, %159
  br i1 %129, label %310, label %161, !prof !101, !pdg.inst.id !137

161:                                              ; preds = %160
  %162 = add i32 %79, -1, !pdg.inst.id !138
  %163 = sext i32 %74 to i64, !pdg.inst.id !139
  br i1 %85, label %165, label %164, !prof !52, !pdg.inst.id !140

164:                                              ; preds = %161
  br label %248, !pdg.inst.id !141

165:                                              ; preds = %161
  br label %166, !pdg.inst.id !142

166:                                              ; preds = %165, %184
  %167 = phi i64 [ %187, %184 ], [ %163, %165 ], !pdg.inst.id !143
  %168 = phi i32 [ %186, %184 ], [ %124, %165 ], !pdg.inst.id !144
  %169 = phi i32 [ %185, %184 ], [ %128, %165 ], !pdg.inst.id !145
  %170 = getelementptr inbounds i32, i32* %34, i64 %167, !pdg.inst.id !146
  %171 = load i32, i32* %170, align 4, !tbaa !47, !pdg.inst.id !147
  %172 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !148
  %173 = icmp eq i32 %171, %172, !pdg.inst.id !149
  br i1 %173, label %174, label %175, !prof !115, !pdg.inst.id !150

174:                                              ; preds = %166
  br label %184, !pdg.inst.id !151

175:                                              ; preds = %166
  %176 = icmp slt i32 %171, %88, !pdg.inst.id !152
  %177 = add nsw i32 %169, 1, !pdg.inst.id !153
  %178 = add nsw i32 %168, 1, !pdg.inst.id !154
  %179 = select i1 %176, i32 %177, i32 %178, !prof !121, !pdg.inst.id !155
  %180 = select i1 %176, i32 %177, i32 %169, !prof !121, !pdg.inst.id !156
  %181 = select i1 %176, i32 %168, i32 %178, !prof !121, !pdg.inst.id !157
  %182 = sext i32 %179 to i64, !pdg.inst.id !158
  %183 = getelementptr inbounds i32, i32* %37, i64 %182, !pdg.inst.id !159
  store i32 %171, i32* %183, align 4, !tbaa !47, !pdg.inst.id !160
  br label %184, !pdg.inst.id !161

184:                                              ; preds = %175, %174
  %185 = phi i32 [ %169, %174 ], [ %180, %175 ], !pdg.inst.id !162
  %186 = phi i32 [ %168, %174 ], [ %181, %175 ], !pdg.inst.id !163
  %187 = add nsw i64 %167, 1, !pdg.inst.id !164
  %188 = icmp slt i64 %167, %48, !pdg.inst.id !165
  br i1 %188, label %166, label %217, !prof !133, !pdg.inst.id !166

189:                                              ; preds = %212, %133
  %190 = phi i64 [ %215, %212 ], [ %132, %133 ], !pdg.inst.id !167
  %191 = phi i32 [ %214, %212 ], [ %124, %133 ], !pdg.inst.id !168
  %192 = phi i32 [ %213, %212 ], [ %128, %133 ], !pdg.inst.id !169
  %193 = getelementptr inbounds i32, i32* %37, i64 %190, !pdg.inst.id !170
  %194 = load i32, i32* %193, align 4, !tbaa !47, !pdg.inst.id !171
  %195 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !172
  %196 = icmp eq i32 %194, %195, !pdg.inst.id !173
  br i1 %196, label %197, label %198, !prof !174, !pdg.inst.id !175

197:                                              ; preds = %189
  br label %212, !pdg.inst.id !176

198:                                              ; preds = %189
  %199 = mul nsw i32 %194, %7, !pdg.inst.id !177
  %200 = add i32 %131, %199, !pdg.inst.id !178
  %201 = sext i32 %200 to i64, !pdg.inst.id !179
  %202 = getelementptr inbounds double, double* %51, i64 %201, !pdg.inst.id !180
  %203 = load double, double* %202, align 8, !tbaa !59, !pdg.inst.id !181
  %204 = fcmp fast olt double %203, %125, !pdg.inst.id !182
  %205 = add nsw i32 %191, 1, !pdg.inst.id !183
  %206 = add nsw i32 %192, 1, !pdg.inst.id !184
  %207 = select i1 %204, i32 %206, i32 %205, !prof !185, !pdg.inst.id !186
  %208 = select i1 %204, i32 %206, i32 %192, !prof !185, !pdg.inst.id !187
  %209 = select i1 %204, i32 %191, i32 %205, !prof !185, !pdg.inst.id !188
  %210 = sext i32 %207 to i64, !pdg.inst.id !189
  %211 = getelementptr inbounds i32, i32* %75, i64 %210, !pdg.inst.id !190
  store i32 %194, i32* %211, align 4, !tbaa !47, !pdg.inst.id !191
  br label %212, !pdg.inst.id !192

212:                                              ; preds = %198, %197
  %213 = phi i32 [ %192, %197 ], [ %208, %198 ], !pdg.inst.id !193
  %214 = phi i32 [ %191, %197 ], [ %209, %198 ], !pdg.inst.id !194
  %215 = add nsw i64 %190, 1, !pdg.inst.id !195
  %216 = icmp slt i64 %190, %48, !pdg.inst.id !196
  br i1 %216, label %189, label %159, !prof !197, !pdg.inst.id !198

217:                                              ; preds = %184
  br label %219, !pdg.inst.id !199

218:                                              ; preds = %271
  br label %219, !pdg.inst.id !200

219:                                              ; preds = %218, %217
  br i1 %129, label %310, label %220, !prof !101, !pdg.inst.id !201

220:                                              ; preds = %219
  %221 = add i32 %79, -1, !pdg.inst.id !202
  %222 = sext i32 %74 to i64, !pdg.inst.id !203
  br i1 %85, label %224, label %223, !prof !52, !pdg.inst.id !204

223:                                              ; preds = %220
  br label %276, !pdg.inst.id !205

224:                                              ; preds = %220
  br label %225, !pdg.inst.id !206

225:                                              ; preds = %224, %243
  %226 = phi i64 [ %246, %243 ], [ %222, %224 ], !pdg.inst.id !207
  %227 = phi i32 [ %245, %243 ], [ %124, %224 ], !pdg.inst.id !208
  %228 = phi i32 [ %244, %243 ], [ %128, %224 ], !pdg.inst.id !209
  %229 = getelementptr inbounds i32, i32* %77, i64 %226, !pdg.inst.id !210
  %230 = load i32, i32* %229, align 4, !tbaa !47, !pdg.inst.id !211
  %231 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !212
  %232 = icmp eq i32 %230, %231, !pdg.inst.id !213
  br i1 %232, label %233, label %234, !prof !115, !pdg.inst.id !214

233:                                              ; preds = %225
  br label %243, !pdg.inst.id !215

234:                                              ; preds = %225
  %235 = icmp slt i32 %230, %88, !pdg.inst.id !216
  %236 = add nsw i32 %228, 1, !pdg.inst.id !217
  %237 = add nsw i32 %227, 1, !pdg.inst.id !218
  %238 = select i1 %235, i32 %236, i32 %237, !prof !121, !pdg.inst.id !219
  %239 = select i1 %235, i32 %236, i32 %228, !prof !121, !pdg.inst.id !220
  %240 = select i1 %235, i32 %227, i32 %237, !prof !121, !pdg.inst.id !221
  %241 = sext i32 %238 to i64, !pdg.inst.id !222
  %242 = getelementptr inbounds i32, i32* %34, i64 %241, !pdg.inst.id !223
  store i32 %230, i32* %242, align 4, !tbaa !47, !pdg.inst.id !224
  br label %243, !pdg.inst.id !225

243:                                              ; preds = %234, %233
  %244 = phi i32 [ %228, %233 ], [ %239, %234 ], !pdg.inst.id !226
  %245 = phi i32 [ %227, %233 ], [ %240, %234 ], !pdg.inst.id !227
  %246 = add nsw i64 %226, 1, !pdg.inst.id !228
  %247 = icmp slt i64 %226, %48, !pdg.inst.id !229
  br i1 %247, label %225, label %304, !prof !133, !pdg.inst.id !230

248:                                              ; preds = %271, %164
  %249 = phi i64 [ %274, %271 ], [ %163, %164 ], !pdg.inst.id !231
  %250 = phi i32 [ %273, %271 ], [ %124, %164 ], !pdg.inst.id !232
  %251 = phi i32 [ %272, %271 ], [ %128, %164 ], !pdg.inst.id !233
  %252 = getelementptr inbounds i32, i32* %34, i64 %249, !pdg.inst.id !234
  %253 = load i32, i32* %252, align 4, !tbaa !47, !pdg.inst.id !235
  %254 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !236
  %255 = icmp eq i32 %253, %254, !pdg.inst.id !237
  br i1 %255, label %256, label %257, !prof !174, !pdg.inst.id !238

256:                                              ; preds = %248
  br label %271, !pdg.inst.id !239

257:                                              ; preds = %248
  %258 = mul nsw i32 %253, %7, !pdg.inst.id !240
  %259 = add i32 %162, %258, !pdg.inst.id !241
  %260 = sext i32 %259 to i64, !pdg.inst.id !242
  %261 = getelementptr inbounds double, double* %51, i64 %260, !pdg.inst.id !243
  %262 = load double, double* %261, align 8, !tbaa !59, !pdg.inst.id !244
  %263 = fcmp fast olt double %262, %125, !pdg.inst.id !245
  %264 = add nsw i32 %250, 1, !pdg.inst.id !246
  %265 = add nsw i32 %251, 1, !pdg.inst.id !247
  %266 = select i1 %263, i32 %265, i32 %264, !prof !185, !pdg.inst.id !248
  %267 = select i1 %263, i32 %265, i32 %251, !prof !185, !pdg.inst.id !249
  %268 = select i1 %263, i32 %250, i32 %264, !prof !185, !pdg.inst.id !250
  %269 = sext i32 %266 to i64, !pdg.inst.id !251
  %270 = getelementptr inbounds i32, i32* %37, i64 %269, !pdg.inst.id !252
  store i32 %253, i32* %270, align 4, !tbaa !47, !pdg.inst.id !253
  br label %271, !pdg.inst.id !254

271:                                              ; preds = %257, %256
  %272 = phi i32 [ %251, %256 ], [ %267, %257 ], !pdg.inst.id !255
  %273 = phi i32 [ %250, %256 ], [ %268, %257 ], !pdg.inst.id !256
  %274 = add nsw i64 %249, 1, !pdg.inst.id !257
  %275 = icmp slt i64 %249, %48, !pdg.inst.id !258
  br i1 %275, label %248, label %218, !prof !197, !pdg.inst.id !259

276:                                              ; preds = %223, %299
  %277 = phi i64 [ %302, %299 ], [ %222, %223 ], !pdg.inst.id !260
  %278 = phi i32 [ %301, %299 ], [ %124, %223 ], !pdg.inst.id !261
  %279 = phi i32 [ %300, %299 ], [ %128, %223 ], !pdg.inst.id !262
  %280 = getelementptr inbounds i32, i32* %77, i64 %277, !pdg.inst.id !263
  %281 = load i32, i32* %280, align 4, !tbaa !47, !pdg.inst.id !264
  %282 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !265
  %283 = icmp eq i32 %281, %282, !pdg.inst.id !266
  br i1 %283, label %284, label %285, !prof !174, !pdg.inst.id !267

284:                                              ; preds = %276
  br label %299, !pdg.inst.id !268

285:                                              ; preds = %276
  %286 = mul nsw i32 %281, %7, !pdg.inst.id !269
  %287 = add i32 %221, %286, !pdg.inst.id !270
  %288 = sext i32 %287 to i64, !pdg.inst.id !271
  %289 = getelementptr inbounds double, double* %51, i64 %288, !pdg.inst.id !272
  %290 = load double, double* %289, align 8, !tbaa !59, !pdg.inst.id !273
  %291 = fcmp fast olt double %290, %125, !pdg.inst.id !274
  %292 = add nsw i32 %278, 1, !pdg.inst.id !275
  %293 = add nsw i32 %279, 1, !pdg.inst.id !276
  %294 = select i1 %291, i32 %293, i32 %292, !prof !185, !pdg.inst.id !277
  %295 = select i1 %291, i32 %293, i32 %279, !prof !185, !pdg.inst.id !278
  %296 = select i1 %291, i32 %278, i32 %292, !prof !185, !pdg.inst.id !279
  %297 = sext i32 %294 to i64, !pdg.inst.id !280
  %298 = getelementptr inbounds i32, i32* %34, i64 %297, !pdg.inst.id !281
  store i32 %281, i32* %298, align 4, !tbaa !47, !pdg.inst.id !282
  br label %299, !pdg.inst.id !283

299:                                              ; preds = %285, %284
  %300 = phi i32 [ %279, %284 ], [ %295, %285 ], !pdg.inst.id !284
  %301 = phi i32 [ %278, %284 ], [ %296, %285 ], !pdg.inst.id !285
  %302 = add nsw i64 %277, 1, !pdg.inst.id !286
  %303 = icmp slt i64 %277, %48, !pdg.inst.id !287
  br i1 %303, label %276, label %307, !prof !197, !pdg.inst.id !288

304:                                              ; preds = %243
  %305 = phi i32 [ %244, %243 ], !pdg.inst.id !289
  %306 = phi i32 [ %245, %243 ], !pdg.inst.id !290
  br label %310, !pdg.inst.id !291

307:                                              ; preds = %299
  %308 = phi i32 [ %300, %299 ], !pdg.inst.id !292
  %309 = phi i32 [ %301, %299 ], !pdg.inst.id !293
  br label %310, !pdg.inst.id !294

310:                                              ; preds = %304, %307, %121, %219, %160
  %311 = phi i32 [ %128, %219 ], [ %128, %160 ], [ %128, %121 ], [ %305, %304 ], [ %308, %307 ], !pdg.inst.id !295
  %312 = phi i32 [ %124, %219 ], [ %124, %160 ], [ %124, %121 ], [ %306, %304 ], [ %309, %307 ], !pdg.inst.id !296
  br i1 %46, label %313, label %376, !prof !101, !pdg.inst.id !297

313:                                              ; preds = %310
  br i1 %129, label %69, label %314, !pdg.inst.id !298

314:                                              ; preds = %313
  %315 = add i32 %79, -1, !pdg.inst.id !299
  %316 = sext i32 %74 to i64, !pdg.inst.id !300
  br i1 %85, label %318, label %317, !pdg.inst.id !301

317:                                              ; preds = %314
  br label %342, !pdg.inst.id !302

318:                                              ; preds = %314
  br label %319, !pdg.inst.id !303

319:                                              ; preds = %337, %318
  %320 = phi i64 [ %340, %337 ], [ %316, %318 ], !pdg.inst.id !304
  %321 = phi i32 [ %339, %337 ], [ %124, %318 ], !pdg.inst.id !305
  %322 = phi i32 [ %338, %337 ], [ %128, %318 ], !pdg.inst.id !306
  %323 = getelementptr inbounds i32, i32* %76, i64 %320, !pdg.inst.id !307
  %324 = load i32, i32* %323, align 4, !tbaa !47, !pdg.inst.id !308
  %325 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !309
  %326 = icmp eq i32 %324, %325, !pdg.inst.id !310
  br i1 %326, label %327, label %328, !pdg.inst.id !311

327:                                              ; preds = %319
  br label %337, !pdg.inst.id !312

328:                                              ; preds = %319
  %329 = icmp slt i32 %324, %88, !pdg.inst.id !313
  %330 = add nsw i32 %322, 1, !pdg.inst.id !314
  %331 = add nsw i32 %321, 1, !pdg.inst.id !315
  %332 = select i1 %329, i32 %330, i32 %331, !pdg.inst.id !316
  %333 = select i1 %329, i32 %330, i32 %322, !pdg.inst.id !317
  %334 = select i1 %329, i32 %321, i32 %331, !pdg.inst.id !318
  %335 = sext i32 %332 to i64, !pdg.inst.id !319
  %336 = getelementptr inbounds i32, i32* %77, i64 %335, !pdg.inst.id !320
  store i32 %324, i32* %336, align 4, !tbaa !47, !pdg.inst.id !321
  br label %337, !pdg.inst.id !322

337:                                              ; preds = %328, %327
  %338 = phi i32 [ %322, %327 ], [ %333, %328 ], !pdg.inst.id !323
  %339 = phi i32 [ %321, %327 ], [ %334, %328 ], !pdg.inst.id !324
  %340 = add nsw i64 %320, 1, !pdg.inst.id !325
  %341 = icmp slt i64 %320, %48, !pdg.inst.id !326
  br i1 %341, label %319, label %370, !pdg.inst.id !327

342:                                              ; preds = %317, %365
  %343 = phi i64 [ %368, %365 ], [ %316, %317 ], !pdg.inst.id !328
  %344 = phi i32 [ %367, %365 ], [ %124, %317 ], !pdg.inst.id !329
  %345 = phi i32 [ %366, %365 ], [ %128, %317 ], !pdg.inst.id !330
  %346 = getelementptr inbounds i32, i32* %76, i64 %343, !pdg.inst.id !331
  %347 = load i32, i32* %346, align 4, !tbaa !47, !pdg.inst.id !332
  %348 = load i32, i32* %126, align 4, !tbaa !47, !pdg.inst.id !333
  %349 = icmp eq i32 %347, %348, !pdg.inst.id !334
  br i1 %349, label %350, label %351, !pdg.inst.id !335

350:                                              ; preds = %342
  br label %365, !pdg.inst.id !336

351:                                              ; preds = %342
  %352 = shl i32 %347, 2, !pdg.inst.id !337
  %353 = add i32 %315, %352, !pdg.inst.id !338
  %354 = sext i32 %353 to i64, !pdg.inst.id !339
  %355 = getelementptr inbounds double, double* %51, i64 %354, !pdg.inst.id !340
  %356 = load double, double* %355, align 8, !tbaa !59, !pdg.inst.id !341
  %357 = fcmp fast olt double %356, %125, !pdg.inst.id !342
  %358 = add nsw i32 %344, 1, !pdg.inst.id !343
  %359 = add nsw i32 %345, 1, !pdg.inst.id !344
  %360 = select i1 %357, i32 %359, i32 %358, !pdg.inst.id !345
  %361 = select i1 %357, i32 %359, i32 %345, !pdg.inst.id !346
  %362 = select i1 %357, i32 %344, i32 %358, !pdg.inst.id !347
  %363 = sext i32 %360 to i64, !pdg.inst.id !348
  %364 = getelementptr inbounds i32, i32* %77, i64 %363, !pdg.inst.id !349
  store i32 %347, i32* %364, align 4, !tbaa !47, !pdg.inst.id !350
  br label %365, !pdg.inst.id !351

365:                                              ; preds = %350, %351
  %366 = phi i32 [ %345, %350 ], [ %361, %351 ], !pdg.inst.id !352
  %367 = phi i32 [ %344, %350 ], [ %362, %351 ], !pdg.inst.id !353
  %368 = add nsw i64 %343, 1, !pdg.inst.id !354
  %369 = icmp slt i64 %343, %48, !pdg.inst.id !355
  br i1 %369, label %342, label %373, !pdg.inst.id !356

370:                                              ; preds = %337
  %371 = phi i32 [ %338, %337 ], !pdg.inst.id !357
  %372 = phi i32 [ %339, %337 ], !pdg.inst.id !358
  br label %376, !pdg.inst.id !359

373:                                              ; preds = %365
  %374 = phi i32 [ %366, %365 ], !pdg.inst.id !360
  %375 = phi i32 [ %367, %365 ], !pdg.inst.id !361
  br label %376, !pdg.inst.id !362

376:                                              ; preds = %310, %373, %370
  %377 = phi i32 [ %311, %310 ], [ %371, %370 ], [ %374, %373 ], !pdg.inst.id !363
  %378 = phi i32 [ %312, %310 ], [ %372, %370 ], [ %375, %373 ], !pdg.inst.id !364
  %379 = icmp slt i32 %377, %74, !pdg.inst.id !365
  br i1 %379, label %391, label %380, !prof !101, !pdg.inst.id !366

380:                                              ; preds = %376
  %381 = load %struct.kdnode*, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !368
  %382 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %381, i64 0, i32 1, !pdg.inst.id !369
  store %struct.kdnode* null, %struct.kdnode** %382, align 8, !tbaa !370, !pdg.inst.id !371
  %383 = load %struct.kdnode*, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !372
  %384 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %383, i64 0, i32 2, !pdg.inst.id !373
  store %struct.kdnode* null, %struct.kdnode** %384, align 8, !tbaa !374, !pdg.inst.id !375
  %385 = load %struct.kdnode*, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !376
  %386 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %385, i64 1, !pdg.inst.id !377
  store %struct.kdnode* %386, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !378
  %387 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %73, i64 0, i32 1, !pdg.inst.id !379
  store %struct.kdnode* %385, %struct.kdnode** %387, align 8, !tbaa !370, !pdg.inst.id !380
  %388 = add nsw i32 %79, 1, !pdg.inst.id !381
  br i1 %46, label %389, label %390, !prof !101, !pdg.inst.id !382

389:                                              ; preds = %380
  tail call fastcc void @buildkdtree(i32* %75, i32* %37, i32* %34, i32* %77, i32* nonnull %78, i32* %76, i32 %74, i32 %377, %struct.kdnode** nonnull %16, %struct.kdnode* %385, double* %51, i32 %388, i32 4), !pdg.inst.id !383
  br label %391, !pdg.inst.id !384

390:                                              ; preds = %380
  tail call fastcc void @buildkdtree(i32* %75, i32* %37, i32* %34, i32* nonnull %78, i32* %76, i32* %77, i32 %74, i32 %377, %struct.kdnode** nonnull %16, %struct.kdnode* %385, double* %51, i32 %388, i32 %7), !pdg.inst.id !385
  br label %391, !pdg.inst.id !386

391:                                              ; preds = %389, %376, %390
  %392 = icmp sgt i32 %378, %124, !pdg.inst.id !387
  br i1 %392, label %393, label %69, !prof !388, !pdg.inst.id !389

393:                                              ; preds = %391
  %394 = load %struct.kdnode*, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !390
  %395 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %394, i64 0, i32 1, !pdg.inst.id !391
  store %struct.kdnode* null, %struct.kdnode** %395, align 8, !tbaa !370, !pdg.inst.id !392
  %396 = load %struct.kdnode*, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !393
  %397 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %396, i64 0, i32 2, !pdg.inst.id !394
  store %struct.kdnode* null, %struct.kdnode** %397, align 8, !tbaa !374, !pdg.inst.id !395
  %398 = load %struct.kdnode*, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !396
  %399 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %398, i64 1, !pdg.inst.id !397
  store %struct.kdnode* %399, %struct.kdnode** %16, align 8, !tbaa !367, !pdg.inst.id !398
  %400 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %73, i64 0, i32 2, !pdg.inst.id !399
  store %struct.kdnode* %398, %struct.kdnode** %400, align 8, !tbaa !374, !pdg.inst.id !400
  %401 = add nsw i32 %124, 1, !pdg.inst.id !401
  %402 = add nsw i32 %79, 1, !pdg.inst.id !402
  %403 = select i1 %46, i32* %77, i32* %78, !prof !101, !pdg.inst.id !403
  %404 = select i1 %46, i32* %78, i32* %76, !prof !101, !pdg.inst.id !404
  %405 = select i1 %46, i32* %76, i32* %77, !prof !101, !pdg.inst.id !405
  %406 = icmp eq i32 %401, %25, !pdg.inst.id !406
  store %struct.kdnode* %398, %struct.kdnode** %63
  br i1 %406, label %70, label %71, !prof !407, !pdg.inst.id !408
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [184 x i64]
  %15 = bitcast [184 x i64]* %14 to i8*
  %16 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to %struct.kdnode**
  %22 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to %struct.kdnode***
  %24 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32*
  %26 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32**
  %28 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 48
  %29 = bitcast i64* %28 to i32*
  %30 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 56
  %31 = bitcast i64* %30 to i32**
  %32 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 64
  %33 = bitcast i64* %32 to i32*
  %34 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 72
  %35 = bitcast i64* %34 to i32**
  %36 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 80
  %37 = bitcast i64* %36 to i32**
  %38 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 88
  %39 = bitcast i64* %38 to i32**
  %40 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 96
  %41 = bitcast i64* %40 to i32**
  %42 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 104
  %43 = bitcast i64* %42 to i1*
  %44 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 112
  %45 = bitcast i64* %44 to %struct.kdnode**
  %46 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 120
  %47 = bitcast i64* %46 to i32*
  %48 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 128
  %49 = bitcast i64* %48 to i32*
  %50 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 136
  %51 = bitcast i64* %50 to i32**
  %52 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 144
  %53 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 152
  %54 = bitcast i64* %53 to double**
  %55 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 160
  %56 = bitcast i64* %55 to i32**
  %57 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 168
  %58 = bitcast i64* %57 to %struct.kdnode**
  %59 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 176
  %60 = bitcast i64* %59 to i32*
  %61 = add nsw i32 %12, 1, !pdg.inst.id !181
  %62 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %63 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %62, label %68, label %64, !prof !7088, !pdg.inst.id !185

64:                                               ; preds = %13
  %65 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %66 = load i32, i32* @9
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %441, label %74

.loopexit16:                                      ; preds = %462, %426
  %.lcssa88 = phi %struct.kdnode* [ %431, %426 ], [ %461, %462 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %78, %426 ], [ %459, %462 ], !pdg.inst.id !225
  br label %68, !pdg.inst.id !6401

68:                                               ; preds = %.loopexit16, %13
  %69 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %70 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %71 = getelementptr inbounds i32, i32* %69, i64 %63, !pdg.inst.id !187
  %72 = load i32, i32* %71, align 4, !tbaa !7089, !pdg.inst.id !230
  %73 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %70, i64 0, i32 0, !pdg.inst.id !228
  store i32 %72, i32* %73, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %440, !pdg.inst.id !6410

74:                                               ; preds = %64, %426
  %75 = phi i32 [ %435, %426 ], [ %11, %64 ], !pdg.inst.id !162
  %76 = phi %struct.kdnode* [ %431, %426 ], [ %9, %64 ], !pdg.inst.id !142
  %77 = phi i32 [ %434, %426 ], [ %6, %64 ], !pdg.inst.id !83
  %78 = phi i32* [ %438, %426 ], [ %5, %64 ], !pdg.inst.id !81
  %79 = phi i32* [ %437, %426 ], [ %4, %64 ], !pdg.inst.id !79
  %80 = phi i32* [ %436, %426 ], [ %3, %64 ], !pdg.inst.id !77
  %81 = phi i32* [ %78, %426 ], [ %0, %64 ], !pdg.inst.id !53
  %82 = srem i32 %75, %61, !pdg.inst.id !183
  %83 = add nsw i32 %77, 1, !pdg.inst.id !264
  %84 = icmp eq i32 %83, %7, !pdg.inst.id !96
  br i1 %84, label %85, label %152, !prof !7096, !pdg.inst.id !334

85:                                               ; preds = %462, %74
  %.lcssa85 = phi %struct.kdnode* [ %76, %74 ], [ %456, %462 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %77, %74 ], [ %457, %462 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %81, %74 ], [ %460, %462 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %82, %74 ], [ %458, %462 ], !pdg.inst.id !315
  %86 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %87 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %88 = getelementptr inbounds i32, i32* %.lcssa76, i64 %87, !pdg.inst.id !352
  %89 = load i32, i32* %88, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %86, label %90, label %94, !prof !7097, !pdg.inst.id !361

90:                                               ; preds = %85
  %91 = getelementptr inbounds i32, i32* %.lcssa76, i64 %63, !pdg.inst.id !207
  %92 = load i32, i32* %91, align 4, !tbaa !7089, !pdg.inst.id !376
  %93 = icmp slt i32 %89, %92, !pdg.inst.id !374
  br i1 %93, label %109, label %122, !pdg.inst.id !382

94:                                               ; preds = %85
  %95 = mul nsw i32 %89, %12, !pdg.inst.id !166
  %96 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %97 = add i32 %96, %95, !pdg.inst.id !384
  %98 = sext i32 %97 to i64, !pdg.inst.id !389
  %99 = getelementptr inbounds double, double* %10, i64 %98, !pdg.inst.id !144
  %100 = load double, double* %99, align 8, !tbaa !7098, !pdg.inst.id !283
  %101 = getelementptr inbounds i32, i32* %.lcssa76, i64 %63, !pdg.inst.id !205
  %102 = load i32, i32* %101, align 4, !tbaa !7089, !pdg.inst.id !397
  %103 = mul nsw i32 %102, %12, !pdg.inst.id !164
  %104 = add i32 %96, %103, !pdg.inst.id !386
  %105 = sext i32 %104 to i64, !pdg.inst.id !402
  %106 = getelementptr inbounds double, double* %10, i64 %105, !pdg.inst.id !146
  %107 = load double, double* %106, align 8, !tbaa !7098, !pdg.inst.id !405
  %108 = fcmp fast olt double %100, %107, !pdg.inst.id !395
  br i1 %108, label %109, label %124, !prof !7100, !pdg.inst.id !409

109:                                              ; preds = %94, %90
  %110 = phi %struct.kdnode* [ %.lcssa85, %94 ], [ %.lcssa85, %90 ], !pdg.inst.id !342
  %111 = phi i32 [ %102, %94 ], [ %92, %90 ], !pdg.inst.id !378
  %112 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %111, i32* %112, align 8, !tbaa !7093, !pdg.inst.id !413
  %113 = load i32, i32* %88, align 4, !tbaa !7089, !pdg.inst.id !364
  %114 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %115 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %114, i64 0, i32 0, !pdg.inst.id !420
  store i32 %113, i32* %115, align 8, !tbaa !7093, !pdg.inst.id !416
  %116 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %114, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %116, align 8, !tbaa !7102, !pdg.inst.id !423
  %117 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %118 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %117, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %118, align 8, !tbaa !7103, !pdg.inst.id !427
  %119 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %120 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %119, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %120, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %121 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %110, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %119, %struct.kdnode** %121, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %440, !pdg.inst.id !6480

122:                                              ; preds = %90
  %123 = icmp sgt i32 %89, %92, !pdg.inst.id !371
  br i1 %123, label %126, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %122
  br label %139, !pdg.inst.id !6511

124:                                              ; preds = %94
  %125 = fcmp fast ogt double %100, %107, !pdg.inst.id !393
  br i1 %125, label %126, label %139, !pdg.inst.id !437

126:                                              ; preds = %124, %122
  %127 = phi i32* [ %.lcssa76, %124 ], [ %.lcssa76, %122 ], !pdg.inst.id !354
  %128 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %89, i32* %128, align 8, !tbaa !7093, !pdg.inst.id !367
  %129 = getelementptr inbounds i32, i32* %127, i64 %63, !pdg.inst.id !211
  %130 = load i32, i32* %129, align 4, !tbaa !7089, !pdg.inst.id !441
  %131 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %132 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 0, !pdg.inst.id !447
  store i32 %130, i32* %132, align 8, !tbaa !7093, !pdg.inst.id !443
  %133 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %133, align 8, !tbaa !7102, !pdg.inst.id !450
  %134 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %135 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %134, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %135, align 8, !tbaa !7103, !pdg.inst.id !454
  %136 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %137 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %136, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %137, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %138 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %136, %struct.kdnode** %138, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %440, !pdg.inst.id !6525

139:                                              ; preds = %._crit_edge9, %124
  %140 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %124 ], !pdg.inst.id !344
  %141 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %89, i32* %141, align 8, !tbaa !7093, !pdg.inst.id !369
  %142 = getelementptr inbounds i32, i32* %.lcssa76, i64 %63, !pdg.inst.id !209
  %143 = load i32, i32* %142, align 4, !tbaa !7089, !pdg.inst.id !465
  %144 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %145 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %144, i64 0, i32 0, !pdg.inst.id !471
  store i32 %143, i32* %145, align 8, !tbaa !7093, !pdg.inst.id !467
  %146 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %144, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %146, align 8, !tbaa !7102, !pdg.inst.id !474
  %147 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %148 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %147, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %148, align 8, !tbaa !7103, !pdg.inst.id !478
  %149 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %150 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %149, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %150, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %151 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %140, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %149, %struct.kdnode** %151, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %440, !pdg.inst.id !6572

152:                                              ; preds = %74
  %153 = add nsw i32 %77, %7, !pdg.inst.id !94
  %154 = sdiv i32 %153, 2, !pdg.inst.id !486
  %155 = icmp eq i32 %82, 0, !pdg.inst.id !327
  %156 = sext i32 %154 to i64, !pdg.inst.id !490
  %157 = getelementptr inbounds i32, i32* %81, i64 %156, !pdg.inst.id !311
  %158 = load i32, i32* %157, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %155, label %186, label %159, !prof !7104, !pdg.inst.id !500

159:                                              ; preds = %152
  %160 = mul nsw i32 %158, %12, !pdg.inst.id !176
  %161 = add nsw i32 %82, -1, !pdg.inst.id !325
  %162 = add i32 %161, %160, !pdg.inst.id !521
  %163 = sext i32 %162 to i64, !pdg.inst.id !526
  %164 = getelementptr inbounds double, double* %10, i64 %163, !pdg.inst.id !148
  %165 = load double, double* %164, align 8, !tbaa !7098, !pdg.inst.id !529
  %166 = sext i32 %77 to i64, !pdg.inst.id !254
  br label %167, !pdg.inst.id !6607

167:                                              ; preds = %171, %159
  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
  %169 = add nsw i64 %168, -1, !pdg.inst.id !542
  %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
  br i1 %170, label %171, label %.loopexit1, !prof !7105, !pdg.inst.id !546

171:                                              ; preds = %167
  %172 = getelementptr inbounds i32, i32* %81, i64 %169, !pdg.inst.id !309
  %173 = load i32, i32* %172, align 4, !tbaa !7089, !pdg.inst.id !548
  %174 = mul nsw i32 %173, %12, !pdg.inst.id !174
  %175 = add i32 %161, %174, !pdg.inst.id !523
  %176 = sext i32 %175 to i64, !pdg.inst.id !552
  %177 = getelementptr inbounds double, double* %10, i64 %176, !pdg.inst.id !150
  %178 = load double, double* %177, align 8, !tbaa !7098, !pdg.inst.id !555
  %179 = fcmp fast olt double %178, %165, !pdg.inst.id !533
  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %171
  %.lcssa3 = phi i64 [ %168, %171 ], !pdg.inst.id !537
  br label %180, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %167
  %.lcssa2 = phi i64 [ %168, %167 ], !pdg.inst.id !539
  br label %180, !pdg.inst.id !6633

180:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %181 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %182 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %183 = ashr exact i64 %182, 32, !pdg.inst.id !568
  %184 = getelementptr inbounds i32, i32* %81, i64 %183, !pdg.inst.id !303
  %185 = load i32, i32* %184, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %186, !pdg.inst.id !6614

186:                                              ; preds = %180, %152
  %187 = phi i32 [ %185, %180 ], [ %158, %152 ], !pdg.inst.id !509
  %188 = phi i64 [ %183, %180 ], [ %156, %152 ], !pdg.inst.id !502
  %189 = phi i32 [ %181, %180 ], [ %154, %152 ], !pdg.inst.id !488
  %190 = phi double [ %165, %180 ], [ 0.000000e+00, %152 ], !pdg.inst.id !531
  %191 = getelementptr inbounds i32, i32* %81, i64 %188, !pdg.inst.id !307
  %192 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %76, i64 0, i32 0, !pdg.inst.id !238
  store i32 %187, i32* %192, align 8, !tbaa !7093, !pdg.inst.id !575
  %193 = add nsw i32 %77, -1, !pdg.inst.id !262
  %194 = icmp sgt i32 %77, %7, !pdg.inst.id !92
  br i1 %194, label %353, label %195, !prof !7106, !pdg.inst.id !649

195:                                              ; preds = %186
  %196 = add i32 %82, -1, !pdg.inst.id !323
  %197 = sext i32 %77 to i64, !pdg.inst.id !252
  br i1 %155, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %195
  br label %246, !pdg.inst.id !6650

.preheader11:                                     ; preds = %195
  br label %198, !pdg.inst.id !6652

198:                                              ; preds = %.preheader11, %215
  %199 = phi i64 [ %218, %215 ], [ %197, %.preheader11 ], !pdg.inst.id !655
  %200 = phi i32 [ %217, %215 ], [ %189, %.preheader11 ], !pdg.inst.id !580
  %201 = phi i32 [ %216, %215 ], [ %193, %.preheader11 ], !pdg.inst.id !627
  %202 = getelementptr inbounds i32, i32* %1, i64 %199, !pdg.inst.id !59
  %203 = load i32, i32* %202, align 4, !tbaa !7089, !pdg.inst.id !673
  %204 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !614
  %205 = icmp eq i32 %203, %204, !pdg.inst.id !678
  br i1 %205, label %._crit_edge2, label %206, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %198
  br label %215, !pdg.inst.id !6674

206:                                              ; preds = %198
  %207 = icmp slt i32 %203, %158, !pdg.inst.id !517
  %208 = add nsw i32 %201, 1, !pdg.inst.id !671
  %209 = add nsw i32 %200, 1, !pdg.inst.id !665
  %210 = select i1 %207, i32 %208, i32 %209, !prof !7108, !pdg.inst.id !685
  %211 = select i1 %207, i32 %208, i32 %201, !prof !7108, !pdg.inst.id !667
  %212 = select i1 %207, i32 %200, i32 %209, !prof !7108, !pdg.inst.id !661
  %213 = sext i32 %210 to i64, !pdg.inst.id !691
  %214 = getelementptr inbounds i32, i32* %78, i64 %213, !pdg.inst.id !271
  store i32 %203, i32* %214, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %215, !pdg.inst.id !6685

215:                                              ; preds = %._crit_edge2, %206
  %216 = phi i32 [ %201, %._crit_edge2 ], [ %211, %206 ], !pdg.inst.id !669
  %217 = phi i32 [ %200, %._crit_edge2 ], [ %212, %206 ], !pdg.inst.id !663
  %218 = add nsw i64 %199, 1, !pdg.inst.id !659
  %219 = icmp slt i64 %199, %63, !pdg.inst.id !191
  br i1 %219, label %198, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %215
  br label %220, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %268
  br label %220, !pdg.inst.id !6697

220:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %194, label %353, label %221, !prof !7106, !pdg.inst.id !647

221:                                              ; preds = %220
  %222 = add i32 %82, -1, !pdg.inst.id !321
  %223 = sext i32 %77 to i64, !pdg.inst.id !250
  br i1 %155, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %221
  br label %299, !pdg.inst.id !6701

.preheader7:                                      ; preds = %221
  br label %224, !pdg.inst.id !6703

224:                                              ; preds = %.preheader7, %241
  %225 = phi i64 [ %244, %241 ], [ %223, %.preheader7 ], !pdg.inst.id !706
  %226 = phi i32 [ %243, %241 ], [ %189, %.preheader7 ], !pdg.inst.id !584
  %227 = phi i32 [ %242, %241 ], [ %193, %.preheader7 ], !pdg.inst.id !631
  %228 = getelementptr inbounds i32, i32* %2, i64 %225, !pdg.inst.id !71
  %229 = load i32, i32* %228, align 4, !tbaa !7089, !pdg.inst.id !724
  %230 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !612
  %231 = icmp eq i32 %229, %230, !pdg.inst.id !729
  br i1 %231, label %._crit_edge5, label %232, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %224
  br label %241, !pdg.inst.id !6724

232:                                              ; preds = %224
  %233 = icmp slt i32 %229, %158, !pdg.inst.id !515
  %234 = add nsw i32 %227, 1, !pdg.inst.id !722
  %235 = add nsw i32 %226, 1, !pdg.inst.id !716
  %236 = select i1 %233, i32 %234, i32 %235, !prof !7108, !pdg.inst.id !736
  %237 = select i1 %233, i32 %234, i32 %227, !prof !7108, !pdg.inst.id !718
  %238 = select i1 %233, i32 %226, i32 %235, !prof !7108, !pdg.inst.id !712
  %239 = sext i32 %236 to i64, !pdg.inst.id !742
  %240 = getelementptr inbounds i32, i32* %1, i64 %239, !pdg.inst.id !57
  store i32 %229, i32* %240, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %241, !pdg.inst.id !6735

241:                                              ; preds = %._crit_edge5, %232
  %242 = phi i32 [ %227, %._crit_edge5 ], [ %237, %232 ], !pdg.inst.id !720
  %243 = phi i32 [ %226, %._crit_edge5 ], [ %238, %232 ], !pdg.inst.id !714
  %244 = add nsw i64 %225, 1, !pdg.inst.id !710
  %245 = icmp slt i64 %225, %63, !pdg.inst.id !195
  br i1 %245, label %224, label %.loopexit8, !prof !7109, !pdg.inst.id !751

246:                                              ; preds = %.preheader13, %268
  %247 = phi i64 [ %271, %268 ], [ %197, %.preheader13 ], !pdg.inst.id !653
  %248 = phi i32 [ %270, %268 ], [ %189, %.preheader13 ], !pdg.inst.id !578
  %249 = phi i32 [ %269, %268 ], [ %193, %.preheader13 ], !pdg.inst.id !625
  %250 = getelementptr inbounds i32, i32* %1, i64 %247, !pdg.inst.id !61
  %251 = load i32, i32* %250, align 4, !tbaa !7089, !pdg.inst.id !769
  %252 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !622
  %253 = icmp eq i32 %251, %252, !pdg.inst.id !774
  br i1 %253, label %._crit_edge, label %254, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %246
  br label %268, !pdg.inst.id !6762

254:                                              ; preds = %246
  %255 = mul nsw i32 %251, %12, !pdg.inst.id !172
  %256 = add i32 %196, %255, !pdg.inst.id !651
  %257 = sext i32 %256 to i64, !pdg.inst.id !780
  %258 = getelementptr inbounds double, double* %10, i64 %257, !pdg.inst.id !152
  %259 = load double, double* %258, align 8, !tbaa !7098, !pdg.inst.id !783
  %260 = fcmp fast olt double %259, %190, !pdg.inst.id !606
  %261 = add nsw i32 %248, 1, !pdg.inst.id !761
  %262 = add nsw i32 %249, 1, !pdg.inst.id !767
  %263 = select i1 %260, i32 %262, i32 %261, !prof !7111, !pdg.inst.id !788
  %264 = select i1 %260, i32 %262, i32 %249, !prof !7111, !pdg.inst.id !763
  %265 = select i1 %260, i32 %248, i32 %261, !prof !7111, !pdg.inst.id !757
  %266 = sext i32 %263 to i64, !pdg.inst.id !794
  %267 = getelementptr inbounds i32, i32* %78, i64 %266, !pdg.inst.id !269
  store i32 %251, i32* %267, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %268, !pdg.inst.id !6778

268:                                              ; preds = %._crit_edge, %254
  %269 = phi i32 [ %249, %._crit_edge ], [ %264, %254 ], !pdg.inst.id !765
  %270 = phi i32 [ %248, %._crit_edge ], [ %265, %254 ], !pdg.inst.id !759
  %271 = add nsw i64 %247, 1, !pdg.inst.id !755
  %272 = icmp slt i64 %247, %63, !pdg.inst.id !189
  br i1 %272, label %246, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %241
  br label %273, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %321
  br label %273, !pdg.inst.id !6792

273:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %194, label %353, label %274, !prof !7106, !pdg.inst.id !645

274:                                              ; preds = %273
  %275 = add i32 %82, -1, !pdg.inst.id !319
  %276 = sext i32 %77 to i64, !pdg.inst.id !248
  br i1 %155, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %274
  br label %326, !pdg.inst.id !6796

.preheader3:                                      ; preds = %274
  br label %277, !pdg.inst.id !6798

277:                                              ; preds = %.preheader3, %294
  %278 = phi i64 [ %297, %294 ], [ %276, %.preheader3 ], !pdg.inst.id !809
  %279 = phi i32 [ %296, %294 ], [ %189, %.preheader3 ], !pdg.inst.id !588
  %280 = phi i32 [ %295, %294 ], [ %193, %.preheader3 ], !pdg.inst.id !635
  %281 = getelementptr inbounds i32, i32* %80, i64 %278, !pdg.inst.id !299
  %282 = load i32, i32* %281, align 4, !tbaa !7089, !pdg.inst.id !827
  %283 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !610
  %284 = icmp eq i32 %282, %283, !pdg.inst.id !832
  br i1 %284, label %._crit_edge7, label %285, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %277
  br label %294, !pdg.inst.id !6819

285:                                              ; preds = %277
  %286 = icmp slt i32 %282, %158, !pdg.inst.id !513
  %287 = add nsw i32 %280, 1, !pdg.inst.id !825
  %288 = add nsw i32 %279, 1, !pdg.inst.id !819
  %289 = select i1 %286, i32 %287, i32 %288, !prof !7108, !pdg.inst.id !839
  %290 = select i1 %286, i32 %287, i32 %280, !prof !7108, !pdg.inst.id !821
  %291 = select i1 %286, i32 %279, i32 %288, !prof !7108, !pdg.inst.id !815
  %292 = sext i32 %289 to i64, !pdg.inst.id !845
  %293 = getelementptr inbounds i32, i32* %2, i64 %292, !pdg.inst.id !69
  store i32 %282, i32* %293, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %294, !pdg.inst.id !6830

294:                                              ; preds = %._crit_edge7, %285
  %295 = phi i32 [ %280, %._crit_edge7 ], [ %290, %285 ], !pdg.inst.id !823
  %296 = phi i32 [ %279, %._crit_edge7 ], [ %291, %285 ], !pdg.inst.id !817
  %297 = add nsw i64 %278, 1, !pdg.inst.id !813
  %298 = icmp slt i64 %278, %63, !pdg.inst.id !199
  br i1 %298, label %277, label %.loopexit4, !prof !7109, !pdg.inst.id !858

299:                                              ; preds = %.preheader9, %321
  %300 = phi i64 [ %324, %321 ], [ %223, %.preheader9 ], !pdg.inst.id !704
  %301 = phi i32 [ %323, %321 ], [ %189, %.preheader9 ], !pdg.inst.id !582
  %302 = phi i32 [ %322, %321 ], [ %193, %.preheader9 ], !pdg.inst.id !629
  %303 = getelementptr inbounds i32, i32* %2, i64 %300, !pdg.inst.id !73
  %304 = load i32, i32* %303, align 4, !tbaa !7089, !pdg.inst.id !876
  %305 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !620
  %306 = icmp eq i32 %304, %305, !pdg.inst.id !881
  br i1 %306, label %._crit_edge4, label %307, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %299
  br label %321, !pdg.inst.id !6857

307:                                              ; preds = %299
  %308 = mul nsw i32 %304, %12, !pdg.inst.id !170
  %309 = add i32 %222, %308, !pdg.inst.id !702
  %310 = sext i32 %309 to i64, !pdg.inst.id !887
  %311 = getelementptr inbounds double, double* %10, i64 %310, !pdg.inst.id !154
  %312 = load double, double* %311, align 8, !tbaa !7098, !pdg.inst.id !890
  %313 = fcmp fast olt double %312, %190, !pdg.inst.id !604
  %314 = add nsw i32 %301, 1, !pdg.inst.id !868
  %315 = add nsw i32 %302, 1, !pdg.inst.id !874
  %316 = select i1 %313, i32 %315, i32 %314, !prof !7111, !pdg.inst.id !895
  %317 = select i1 %313, i32 %315, i32 %302, !prof !7111, !pdg.inst.id !870
  %318 = select i1 %313, i32 %301, i32 %314, !prof !7111, !pdg.inst.id !864
  %319 = sext i32 %316 to i64, !pdg.inst.id !901
  %320 = getelementptr inbounds i32, i32* %1, i64 %319, !pdg.inst.id !55
  store i32 %304, i32* %320, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %321, !pdg.inst.id !6873

321:                                              ; preds = %._crit_edge4, %307
  %322 = phi i32 [ %302, %._crit_edge4 ], [ %317, %307 ], !pdg.inst.id !872
  %323 = phi i32 [ %301, %._crit_edge4 ], [ %318, %307 ], !pdg.inst.id !866
  %324 = add nsw i64 %300, 1, !pdg.inst.id !862
  %325 = icmp slt i64 %300, %63, !pdg.inst.id !193
  br i1 %325, label %299, label %.loopexit10, !prof !7112, !pdg.inst.id !910

326:                                              ; preds = %.preheader5, %348
  %327 = phi i64 [ %351, %348 ], [ %276, %.preheader5 ], !pdg.inst.id !807
  %328 = phi i32 [ %350, %348 ], [ %189, %.preheader5 ], !pdg.inst.id !586
  %329 = phi i32 [ %349, %348 ], [ %193, %.preheader5 ], !pdg.inst.id !633
  %330 = getelementptr inbounds i32, i32* %80, i64 %327, !pdg.inst.id !297
  %331 = load i32, i32* %330, align 4, !tbaa !7089, !pdg.inst.id !928
  %332 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !618
  %333 = icmp eq i32 %331, %332, !pdg.inst.id !933
  br i1 %333, label %._crit_edge6, label %334, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %326
  br label %348, !pdg.inst.id !6899

334:                                              ; preds = %326
  %335 = mul nsw i32 %331, %12, !pdg.inst.id !168
  %336 = add i32 %275, %335, !pdg.inst.id !805
  %337 = sext i32 %336 to i64, !pdg.inst.id !939
  %338 = getelementptr inbounds double, double* %10, i64 %337, !pdg.inst.id !156
  %339 = load double, double* %338, align 8, !tbaa !7098, !pdg.inst.id !942
  %340 = fcmp fast olt double %339, %190, !pdg.inst.id !602
  %341 = add nsw i32 %328, 1, !pdg.inst.id !920
  %342 = add nsw i32 %329, 1, !pdg.inst.id !926
  %343 = select i1 %340, i32 %342, i32 %341, !prof !7111, !pdg.inst.id !947
  %344 = select i1 %340, i32 %342, i32 %329, !prof !7111, !pdg.inst.id !922
  %345 = select i1 %340, i32 %328, i32 %341, !prof !7111, !pdg.inst.id !916
  %346 = sext i32 %343 to i64, !pdg.inst.id !953
  %347 = getelementptr inbounds i32, i32* %2, i64 %346, !pdg.inst.id !67
  store i32 %331, i32* %347, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %348, !pdg.inst.id !6915

348:                                              ; preds = %._crit_edge6, %334
  %349 = phi i32 [ %329, %._crit_edge6 ], [ %344, %334 ], !pdg.inst.id !924
  %350 = phi i32 [ %328, %._crit_edge6 ], [ %345, %334 ], !pdg.inst.id !918
  %351 = add nsw i64 %327, 1, !pdg.inst.id !914
  %352 = icmp slt i64 %327, %63, !pdg.inst.id !197
  br i1 %352, label %326, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %294
  %.lcssa68 = phi i32 [ %295, %294 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %296, %294 ], !pdg.inst.id !854
  br label %353, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %348
  %.lcssa66 = phi i32 [ %349, %348 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %350, %348 ], !pdg.inst.id !962
  br label %353, !pdg.inst.id !6933

353:                                              ; preds = %.loopexit6, %.loopexit4, %186, %220, %273
  %354 = phi i32 [ %193, %273 ], [ %193, %220 ], [ %193, %186 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %355 = phi i32 [ %189, %273 ], [ %189, %220 ], [ %189, %186 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %65, label %356, label %409, !prof !7106, !pdg.inst.id !221

356:                                              ; preds = %353
  br i1 %194, label %.loopexit15, label %357, !pdg.inst.id !643

357:                                              ; preds = %356
  %358 = add i32 %82, -1, !pdg.inst.id !317
  %359 = sext i32 %77 to i64, !pdg.inst.id !246
  br i1 %155, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %357
  br label %382, !pdg.inst.id !6942

.preheader:                                       ; preds = %357
  br label %360, !pdg.inst.id !6944

360:                                              ; preds = %.preheader, %377
  %361 = phi i64 [ %380, %377 ], [ %359, %.preheader ], !pdg.inst.id !980
  %362 = phi i32 [ %379, %377 ], [ %189, %.preheader ], !pdg.inst.id !592
  %363 = phi i32 [ %378, %377 ], [ %193, %.preheader ], !pdg.inst.id !639
  %364 = getelementptr inbounds i32, i32* %79, i64 %361, !pdg.inst.id !287
  %365 = load i32, i32* %364, align 4, !tbaa !7089, !pdg.inst.id !998
  %366 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !608
  %367 = icmp eq i32 %365, %366, !pdg.inst.id !1003
  br i1 %367, label %._crit_edge3, label %368, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %360
  br label %377, !pdg.inst.id !6965

368:                                              ; preds = %360
  %369 = icmp slt i32 %365, %158, !pdg.inst.id !511
  %370 = add nsw i32 %363, 1, !pdg.inst.id !996
  %371 = add nsw i32 %362, 1, !pdg.inst.id !990
  %372 = select i1 %369, i32 %370, i32 %371, !pdg.inst.id !1010
  %373 = select i1 %369, i32 %370, i32 %363, !pdg.inst.id !992
  %374 = select i1 %369, i32 %362, i32 %371, !pdg.inst.id !986
  %375 = sext i32 %372 to i64, !pdg.inst.id !1016
  %376 = getelementptr inbounds i32, i32* %80, i64 %375, !pdg.inst.id !291
  store i32 %365, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %377, !pdg.inst.id !6976

377:                                              ; preds = %._crit_edge3, %368
  %378 = phi i32 [ %363, %._crit_edge3 ], [ %373, %368 ], !pdg.inst.id !994
  %379 = phi i32 [ %362, %._crit_edge3 ], [ %374, %368 ], !pdg.inst.id !988
  %380 = add nsw i64 %361, 1, !pdg.inst.id !984
  %381 = icmp slt i64 %361, %63, !pdg.inst.id !203
  br i1 %381, label %360, label %.loopexit, !pdg.inst.id !1029

382:                                              ; preds = %.preheader1, %404
  %383 = phi i64 [ %407, %404 ], [ %359, %.preheader1 ], !pdg.inst.id !978
  %384 = phi i32 [ %406, %404 ], [ %189, %.preheader1 ], !pdg.inst.id !590
  %385 = phi i32 [ %405, %404 ], [ %193, %.preheader1 ], !pdg.inst.id !637
  %386 = getelementptr inbounds i32, i32* %79, i64 %383, !pdg.inst.id !285
  %387 = load i32, i32* %386, align 4, !tbaa !7089, !pdg.inst.id !1047
  %388 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !616
  %389 = icmp eq i32 %387, %388, !pdg.inst.id !1053
  br i1 %389, label %._crit_edge1, label %390, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %382
  br label %404, !pdg.inst.id !7001

390:                                              ; preds = %382
  %391 = shl i32 %387, 2, !pdg.inst.id !1051
  %392 = add i32 %358, %391, !pdg.inst.id !976
  %393 = sext i32 %392 to i64, !pdg.inst.id !1059
  %394 = getelementptr inbounds double, double* %10, i64 %393, !pdg.inst.id !158
  %395 = load double, double* %394, align 8, !tbaa !7098, !pdg.inst.id !1062
  %396 = fcmp fast olt double %395, %190, !pdg.inst.id !600
  %397 = add nsw i32 %384, 1, !pdg.inst.id !1039
  %398 = add nsw i32 %385, 1, !pdg.inst.id !1045
  %399 = select i1 %396, i32 %398, i32 %397, !pdg.inst.id !1067
  %400 = select i1 %396, i32 %398, i32 %385, !pdg.inst.id !1041
  %401 = select i1 %396, i32 %384, i32 %397, !pdg.inst.id !1035
  %402 = sext i32 %399 to i64, !pdg.inst.id !1073
  %403 = getelementptr inbounds i32, i32* %80, i64 %402, !pdg.inst.id !289
  store i32 %387, i32* %403, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %404, !pdg.inst.id !7017

404:                                              ; preds = %._crit_edge1, %390
  %405 = phi i32 [ %385, %._crit_edge1 ], [ %400, %390 ], !pdg.inst.id !1043
  %406 = phi i32 [ %384, %._crit_edge1 ], [ %401, %390 ], !pdg.inst.id !1037
  %407 = add nsw i64 %383, 1, !pdg.inst.id !1033
  %408 = icmp slt i64 %383, %63, !pdg.inst.id !201
  br i1 %408, label %382, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %377
  %.lcssa72 = phi i32 [ %378, %377 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %379, %377 ], !pdg.inst.id !1025
  br label %409, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %404
  %.lcssa70 = phi i32 [ %405, %404 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %406, %404 ], !pdg.inst.id !1082
  br label %409, !pdg.inst.id !7035

409:                                              ; preds = %.loopexit2, %.loopexit, %353
  %410 = phi i32 [ %354, %353 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %411 = phi i32 [ %355, %353 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %412 = icmp slt i32 %410, %77, !pdg.inst.id !258
  br i1 %412, label %424, label %413, !prof !7106, !pdg.inst.id !1096

413:                                              ; preds = %409
  %414 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %415 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %414, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %415, align 8, !tbaa !7102, !pdg.inst.id !1100
  %416 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %417 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %416, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %417, align 8, !tbaa !7103, !pdg.inst.id !1104
  %418 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %419 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %418, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %419, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %420 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %76, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %418, %struct.kdnode** %420, align 8, !tbaa !7102, !pdg.inst.id !1108
  %421 = add nsw i32 %82, 1, !pdg.inst.id !329
  br i1 %65, label %422, label %423, !prof !7106, !pdg.inst.id !219

422:                                              ; preds = %413
  tail call fastcc void @buildkdtree(i32* %78, i32* %1, i32* %2, i32* %80, i32* nonnull %81, i32* %79, i32 %77, i32 %410, %struct.kdnode** nonnull %8, %struct.kdnode* %418, double* %10, i32 %421, i32 4), !pdg.inst.id !65
  br label %424, !pdg.inst.id !7059

423:                                              ; preds = %413
  tail call fastcc void @buildkdtree(i32* %78, i32* %1, i32* %2, i32* nonnull %81, i32* %79, i32* %80, i32 %77, i32 %410, %struct.kdnode** nonnull %8, %struct.kdnode* %418, double* %10, i32 %421, i32 %12), !pdg.inst.id !63
  br label %424, !pdg.inst.id !7062

424:                                              ; preds = %409, %422, %423
  %425 = icmp sgt i32 %411, %189, !pdg.inst.id !598
  br i1 %425, label %426, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

426:                                              ; preds = %424
  %427 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %428 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %427, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %428, align 8, !tbaa !7102, !pdg.inst.id !1120
  %429 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %430 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %429, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %430, align 8, !tbaa !7103, !pdg.inst.id !1124
  %431 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %432 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %431, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %432, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %433 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %76, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %431, %struct.kdnode** %433, align 8, !tbaa !7103, !pdg.inst.id !1128
  %434 = add nsw i32 %189, 1, !pdg.inst.id !596
  %435 = add nsw i32 %82, 1, !pdg.inst.id !331
  %436 = select i1 %65, i32* %80, i32* %81, !prof !7106, !pdg.inst.id !217
  %437 = select i1 %65, i32* %81, i32* %79, !prof !7106, !pdg.inst.id !215
  %438 = select i1 %65, i32* %79, i32* %80, !prof !7106, !pdg.inst.id !213
  %439 = icmp eq i32 %434, %7, !pdg.inst.id !89
  br i1 %439, label %.loopexit16, label %74, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %462, %462, %424, %356
  br label %440, !pdg.inst.id !7078

440:                                              ; preds = %.loopexit15, %126, %139, %109, %68
  ret void, !pdg.inst.id !7115

441:                                              ; preds = %64
  store i32 1, i32* @9
  store i32 %12, i32* %17
  store i32 %11, i32* %19
  store %struct.kdnode* %9, %struct.kdnode** %21
  store %struct.kdnode** %8, %struct.kdnode*** %23
  store i32 %6, i32* %25
  store i32* %5, i32** %27
  store i32 %7, i32* %29
  store i32* %0, i32** %31
  store i32 %61, i32* %33
  store i32* %2, i32** %35
  store i32* %1, i32** %37
  store i32* %3, i32** %39
  store i32* %4, i32** %41
  store i1 %65, i1* %43
  store i64 %63, i64* %52
  store double* %10, double** %54
  %442 = alloca [1 x i8*]
  %443 = getelementptr inbounds [1 x i8*], [1 x i8*]* %442, i64 0, i64 0
  %444 = bitcast i8** %443 to void (i8*, i8*)**
  store void (i8*, i8*)* @24, void (i8*, i8*)** %444
  %445 = bitcast [1 x i8*]* %442 to i8*
  %446 = alloca [8 x i64]
  %447 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 0
  store i64 64, i64* %447
  %448 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 1
  store i64 64, i64* %448
  %449 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 2
  store i64 64, i64* %449
  %450 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 3
  store i64 64, i64* %450
  %451 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 4
  store i64 64, i64* %451
  %452 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 5
  store i64 64, i64* %452
  %453 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 6
  store i64 64, i64* %453
  %454 = getelementptr inbounds [8 x i64], [8 x i64]* %446, i64 0, i64 7
  store i64 64, i64* %454
  %455 = bitcast [8 x i64]* %446 to i64*
  call void @stageDispatcher(i8* %15, i64* %455, i8* %445, i64 1, i64 8)
  %456 = load %struct.kdnode*, %struct.kdnode** %45
  %457 = load i32, i32* %47
  %458 = load i32, i32* %49
  %459 = load i32*, i32** %51
  %460 = load i32*, i32** %56
  %461 = load %struct.kdnode*, %struct.kdnode** %58
  br label %462

462:                                              ; preds = %441
  %463 = getelementptr inbounds [184 x i64], [184 x i64]* %14, i64 0, i64 176
  %464 = load i64, i64* %463
  %465 = trunc i64 %464 to i32
  store i32 0, i32* @9
  switch i32 %465, label %85 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 19 = "  %169 = add nsw i64 %168, -1, !pdg.inst.id !542"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %173 = load i32, i32* %172, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:       %178 = load double, double* %177, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:       br i1 %170, label %171, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:       %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
DSWP:       %176 = sext i32 %175 to i64, !pdg.inst.id !552
DSWP:       %172 = getelementptr inbounds i32, i32* %81, i64 %169, !pdg.inst.id !309
DSWP:       %177 = getelementptr inbounds double, double* %10, i64 %176, !pdg.inst.id !150
DSWP:       %179 = fcmp fast olt double %178, %165, !pdg.inst.id !533
DSWP:       br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:       %174 = mul nsw i32 %173, %12, !pdg.inst.id !174
DSWP:       %175 = add i32 %161, %174, !pdg.inst.id !523
DSWP:       %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:       %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %173 = load i32, i32* %172, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:       %178 = load double, double* %177, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:       br i1 %170, label %171, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:       %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
DSWP:       %176 = sext i32 %175 to i64, !pdg.inst.id !552
DSWP:       %172 = getelementptr inbounds i32, i32* %81, i64 %169, !pdg.inst.id !309
DSWP:       %177 = getelementptr inbounds double, double* %10, i64 %176, !pdg.inst.id !150
DSWP:       %179 = fcmp fast olt double %178, %165, !pdg.inst.id !533
DSWP:       br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:       %174 = mul nsw i32 %173, %12, !pdg.inst.id !174
DSWP:       %175 = add i32 %161, %174, !pdg.inst.id !523
DSWP:       %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:       %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 13
DSWP:     	  %173 = load i32, i32* %172, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:     	  %178 = load double, double* %177, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:     	  br i1 %170, label %171, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:     	  %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
DSWP:     	  %176 = sext i32 %175 to i64, !pdg.inst.id !552
DSWP:     	  %172 = getelementptr inbounds i32, i32* %81, i64 %169, !pdg.inst.id !309
DSWP:     	  %177 = getelementptr inbounds double, double* %10, i64 %176, !pdg.inst.id !150
DSWP:     	  %179 = fcmp fast olt double %178, %165, !pdg.inst.id !533
DSWP:     	  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:     	  %174 = mul nsw i32 %173, %12, !pdg.inst.id !174
DSWP:     	  %175 = add i32 %161, %174, !pdg.inst.id !523
DSWP:     	  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:     	  %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:     External nodes: 0
DSWP:     Edges: 26
DSWP:     	From:	  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:     	To:	  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:     	CTRL
DSWP:     	From:	  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:     	To:	  %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:     	CTRL
DSWP:     	From:	  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:     	To:	  %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
DSWP:     	CTRL
DSWP:     	From:	  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:     	To:	  br i1 %170, label %171, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:     	CTRL
DSWP:     	From:	  %179 = fcmp fast olt double %178, %165, !pdg.inst.id !533
DSWP:     	To:	  br i1 %179, label %._crit_edge8, label %167, !prof !7105, !pdg.inst.id !558
DSWP:     	RAW (must)
DSWP:     	From:	  %174 = mul nsw i32 %173, %12, !pdg.inst.id !174
DSWP:     	To:	  %175 = add i32 %161, %174, !pdg.inst.id !523
DSWP:     	RAW (must)
DSWP:     	From:	  %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:     	To:	  %172 = getelementptr inbounds i32, i32* %81, i64 %169, !pdg.inst.id !309
DSWP:     	RAW (must)
DSWP:     	From:	  %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:     	To:	  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:     	RAW (must)
DSWP:     	From:	  %175 = add i32 %161, %174, !pdg.inst.id !523
DSWP:     	To:	  %176 = sext i32 %175 to i64, !pdg.inst.id !552
DSWP:     	RAW (must)
DSWP:     	From:	  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:     	To:	  %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
DSWP:     	RAW (must)
DSWP:     	From:	  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:     	To:	  %169 = add nsw i64 %168, -1, !pdg.inst.id !542
DSWP:     	RAW (must)
DSWP:     	From:	  %177 = getelementptr inbounds double, double* %10, i64 %176, !pdg.inst.id !150
DSWP:     	To:	  %178 = load double, double* %177, align 8, !tbaa !7098, !pdg.inst.id !555
DSWP:     	RAW (must)
DSWP:     	From:	  %172 = getelementptr inbounds i32, i32* %81, i64 %169, !pdg.inst.id !309
DSWP:     	To:	  %173 = load i32, i32* %172, align 4, !tbaa !7089, !pdg.inst.id !548
DSWP:     	RAW (must)
DSWP:     	From:	  %176 = sext i32 %175 to i64, !pdg.inst.id !552
DSWP:     	To:	  %177 = getelementptr inbounds double, double* %10, i64 %176, !pdg.inst.id !150
DSWP:     	RAW (must)
DSWP:     	From:	  %170 = icmp sgt i64 %168, %166, !pdg.inst.id !535
DSWP:     	To:	  br i1 %170, label %171, label %.loopexit1, !prof !7105, !pdg.inst.id !546
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	double* %10
DSWP:    Pre loop env 2, producer:	  %161 = add nsw i32 %82, -1, !pdg.inst.id !325
DSWP:    Pre loop env 3, producer:	  %166 = sext i32 %77 to i64, !pdg.inst.id !254
DSWP:    Pre loop env 4, producer:	i32 %12
DSWP:    Pre loop env 5, producer:	  %81 = phi i32* [ %78, %426 ], [ %0, %64 ], !pdg.inst.id !53
DSWP:    Pre loop env 6, producer:	  %156 = sext i32 %154 to i64, !pdg.inst.id !490
DSWP:    Pre loop env 7, producer:	  %165 = load double, double* %164, align 8, !tbaa !7098, !pdg.inst.id !529
DSWP:    Post loop env 8, producer:	  %168 = phi i64 [ %169, %171 ], [ %156, %159 ], !pdg.inst.id !504
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @25(i8*, i8*) {
  %3 = bitcast i8* %0 to [72 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to double**
  %7 = load double*, double** %6
  %8 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 24
  %12 = load i64, i64* %11
  %13 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 32
  %14 = bitcast i64* %13 to i32*
  %15 = load i32, i32* %14
  %16 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 40
  %17 = bitcast i64* %16 to i32**
  %18 = load i32*, i32** %17
  %19 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 48
  %20 = load i64, i64* %19
  %21 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 56
  %22 = bitcast i64* %21 to double*
  %23 = load double, double* %22
  %24 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 16
  %25 = getelementptr inbounds [72 x i64], [72 x i64]* %3, i64 0, i64 64
  %26 = bitcast i64* %25 to i32*
  br label %30

27:                                               ; preds = %29, %28
  ret void

28:                                               ; preds = %30
  store i64 %31, i64* %24
  store i32 0, i32* %26
  br label %27

29:                                               ; preds = %34
  store i64 %31, i64* %24
  store i32 1, i32* %26
  br label %27

30:                                               ; preds = %2, %34
  %31 = phi i64 [ %32, %34 ], [ %20, %2 ], !pdg.inst.id !30
  %32 = add nsw i64 %31, -1, !pdg.inst.id !31
  %33 = icmp sgt i64 %31, %12, !pdg.inst.id !32
  br i1 %33, label %34, label %28, !prof !33, !pdg.inst.id !34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, i32* %18, i64 %32, !pdg.inst.id !35
  %36 = load i32, i32* %35, align 4, !tbaa !36, !pdg.inst.id !40
  %37 = mul nsw i32 %36, %15, !pdg.inst.id !41
  %38 = add i32 %10, %37, !pdg.inst.id !42
  %39 = sext i32 %38 to i64, !pdg.inst.id !43
  %40 = getelementptr inbounds double, double* %7, i64 %39, !pdg.inst.id !44
  %41 = load double, double* %40, align 8, !tbaa !45, !pdg.inst.id !47
  %42 = fcmp fast olt double %41, %23, !pdg.inst.id !48
  br i1 %42, label %29, label %30, !prof !33, !pdg.inst.id !49
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [72 x i64]
  %15 = bitcast [72 x i64]* %14 to i8*
  %16 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to double**
  %18 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 16
  %21 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 24
  %22 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 32
  %23 = bitcast i64* %22 to i32*
  %24 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 40
  %25 = bitcast i64* %24 to i32**
  %26 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 48
  %27 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 56
  %28 = bitcast i64* %27 to double*
  %29 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 64
  %30 = bitcast i64* %29 to i32*
  %31 = alloca [184 x i64]
  %32 = bitcast [184 x i64]* %31 to i8*
  %33 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 0
  %34 = bitcast i64* %33 to i32*
  %35 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 8
  %36 = bitcast i64* %35 to i32*
  %37 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 16
  %38 = bitcast i64* %37 to %struct.kdnode**
  %39 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 24
  %40 = bitcast i64* %39 to %struct.kdnode***
  %41 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 32
  %42 = bitcast i64* %41 to i32*
  %43 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 40
  %44 = bitcast i64* %43 to i32**
  %45 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 48
  %46 = bitcast i64* %45 to i32*
  %47 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 56
  %48 = bitcast i64* %47 to i32**
  %49 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 64
  %50 = bitcast i64* %49 to i32*
  %51 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 72
  %52 = bitcast i64* %51 to i32**
  %53 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 80
  %54 = bitcast i64* %53 to i32**
  %55 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 88
  %56 = bitcast i64* %55 to i32**
  %57 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 96
  %58 = bitcast i64* %57 to i32**
  %59 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 104
  %60 = bitcast i64* %59 to i1*
  %61 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 112
  %62 = bitcast i64* %61 to %struct.kdnode**
  %63 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 120
  %64 = bitcast i64* %63 to i32*
  %65 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 128
  %66 = bitcast i64* %65 to i32*
  %67 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 136
  %68 = bitcast i64* %67 to i32**
  %69 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 144
  %70 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 152
  %71 = bitcast i64* %70 to double**
  %72 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 160
  %73 = bitcast i64* %72 to i32**
  %74 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 168
  %75 = bitcast i64* %74 to %struct.kdnode**
  %76 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 176
  %77 = bitcast i64* %76 to i32*
  %78 = add nsw i32 %12, 1, !pdg.inst.id !181
  %79 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %80 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %79, label %85, label %81, !prof !7088, !pdg.inst.id !185

81:                                               ; preds = %13
  %82 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %83 = load i32, i32* @9
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %460, label %91

.loopexit16:                                      ; preds = %481, %445
  %.lcssa88 = phi %struct.kdnode* [ %450, %445 ], [ %480, %481 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %95, %445 ], [ %478, %481 ], !pdg.inst.id !225
  br label %85, !pdg.inst.id !6401

85:                                               ; preds = %.loopexit16, %13
  %86 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %87 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %88 = getelementptr inbounds i32, i32* %86, i64 %80, !pdg.inst.id !187
  %89 = load i32, i32* %88, align 4, !tbaa !7089, !pdg.inst.id !230
  %90 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %87, i64 0, i32 0, !pdg.inst.id !228
  store i32 %89, i32* %90, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %459, !pdg.inst.id !6410

91:                                               ; preds = %81, %445
  %92 = phi i32 [ %454, %445 ], [ %11, %81 ], !pdg.inst.id !162
  %93 = phi %struct.kdnode* [ %450, %445 ], [ %9, %81 ], !pdg.inst.id !142
  %94 = phi i32 [ %453, %445 ], [ %6, %81 ], !pdg.inst.id !83
  %95 = phi i32* [ %457, %445 ], [ %5, %81 ], !pdg.inst.id !81
  %96 = phi i32* [ %456, %445 ], [ %4, %81 ], !pdg.inst.id !79
  %97 = phi i32* [ %455, %445 ], [ %3, %81 ], !pdg.inst.id !77
  %98 = phi i32* [ %95, %445 ], [ %0, %81 ], !pdg.inst.id !53
  %99 = srem i32 %92, %78, !pdg.inst.id !183
  %100 = add nsw i32 %94, 1, !pdg.inst.id !264
  %101 = icmp eq i32 %100, %7, !pdg.inst.id !96
  br i1 %101, label %102, label %169, !prof !7096, !pdg.inst.id !334

102:                                              ; preds = %481, %91
  %.lcssa85 = phi %struct.kdnode* [ %93, %91 ], [ %475, %481 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %94, %91 ], [ %476, %481 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %98, %91 ], [ %479, %481 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %99, %91 ], [ %477, %481 ], !pdg.inst.id !315
  %103 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %104 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %105 = getelementptr inbounds i32, i32* %.lcssa76, i64 %104, !pdg.inst.id !352
  %106 = load i32, i32* %105, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %103, label %107, label %111, !prof !7097, !pdg.inst.id !361

107:                                              ; preds = %102
  %108 = getelementptr inbounds i32, i32* %.lcssa76, i64 %80, !pdg.inst.id !207
  %109 = load i32, i32* %108, align 4, !tbaa !7089, !pdg.inst.id !376
  %110 = icmp slt i32 %106, %109, !pdg.inst.id !374
  br i1 %110, label %126, label %139, !pdg.inst.id !382

111:                                              ; preds = %102
  %112 = mul nsw i32 %106, %12, !pdg.inst.id !166
  %113 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %114 = add i32 %113, %112, !pdg.inst.id !384
  %115 = sext i32 %114 to i64, !pdg.inst.id !389
  %116 = getelementptr inbounds double, double* %10, i64 %115, !pdg.inst.id !144
  %117 = load double, double* %116, align 8, !tbaa !7098, !pdg.inst.id !283
  %118 = getelementptr inbounds i32, i32* %.lcssa76, i64 %80, !pdg.inst.id !205
  %119 = load i32, i32* %118, align 4, !tbaa !7089, !pdg.inst.id !397
  %120 = mul nsw i32 %119, %12, !pdg.inst.id !164
  %121 = add i32 %113, %120, !pdg.inst.id !386
  %122 = sext i32 %121 to i64, !pdg.inst.id !402
  %123 = getelementptr inbounds double, double* %10, i64 %122, !pdg.inst.id !146
  %124 = load double, double* %123, align 8, !tbaa !7098, !pdg.inst.id !405
  %125 = fcmp fast olt double %117, %124, !pdg.inst.id !395
  br i1 %125, label %126, label %141, !prof !7100, !pdg.inst.id !409

126:                                              ; preds = %111, %107
  %127 = phi %struct.kdnode* [ %.lcssa85, %111 ], [ %.lcssa85, %107 ], !pdg.inst.id !342
  %128 = phi i32 [ %119, %111 ], [ %109, %107 ], !pdg.inst.id !378
  %129 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %128, i32* %129, align 8, !tbaa !7093, !pdg.inst.id !413
  %130 = load i32, i32* %105, align 4, !tbaa !7089, !pdg.inst.id !364
  %131 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %132 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 0, !pdg.inst.id !420
  store i32 %130, i32* %132, align 8, !tbaa !7093, !pdg.inst.id !416
  %133 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %133, align 8, !tbaa !7102, !pdg.inst.id !423
  %134 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %135 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %134, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %135, align 8, !tbaa !7103, !pdg.inst.id !427
  %136 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %137 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %136, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %137, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %138 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %127, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %136, %struct.kdnode** %138, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %459, !pdg.inst.id !6480

139:                                              ; preds = %107
  %140 = icmp sgt i32 %106, %109, !pdg.inst.id !371
  br i1 %140, label %143, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %139
  br label %156, !pdg.inst.id !6511

141:                                              ; preds = %111
  %142 = fcmp fast ogt double %117, %124, !pdg.inst.id !393
  br i1 %142, label %143, label %156, !pdg.inst.id !437

143:                                              ; preds = %141, %139
  %144 = phi i32* [ %.lcssa76, %141 ], [ %.lcssa76, %139 ], !pdg.inst.id !354
  %145 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %106, i32* %145, align 8, !tbaa !7093, !pdg.inst.id !367
  %146 = getelementptr inbounds i32, i32* %144, i64 %80, !pdg.inst.id !211
  %147 = load i32, i32* %146, align 4, !tbaa !7089, !pdg.inst.id !441
  %148 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %149 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %148, i64 0, i32 0, !pdg.inst.id !447
  store i32 %147, i32* %149, align 8, !tbaa !7093, !pdg.inst.id !443
  %150 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %148, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %150, align 8, !tbaa !7102, !pdg.inst.id !450
  %151 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %152 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %151, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %152, align 8, !tbaa !7103, !pdg.inst.id !454
  %153 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %154 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %153, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %154, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %155 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %153, %struct.kdnode** %155, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %459, !pdg.inst.id !6525

156:                                              ; preds = %._crit_edge9, %141
  %157 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %141 ], !pdg.inst.id !344
  %158 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %106, i32* %158, align 8, !tbaa !7093, !pdg.inst.id !369
  %159 = getelementptr inbounds i32, i32* %.lcssa76, i64 %80, !pdg.inst.id !209
  %160 = load i32, i32* %159, align 4, !tbaa !7089, !pdg.inst.id !465
  %161 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %162 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %161, i64 0, i32 0, !pdg.inst.id !471
  store i32 %160, i32* %162, align 8, !tbaa !7093, !pdg.inst.id !467
  %163 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %161, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %163, align 8, !tbaa !7102, !pdg.inst.id !474
  %164 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %165 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %164, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %165, align 8, !tbaa !7103, !pdg.inst.id !478
  %166 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %167 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %166, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %167, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %168 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %157, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %166, %struct.kdnode** %168, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %459, !pdg.inst.id !6572

169:                                              ; preds = %91
  %170 = add nsw i32 %94, %7, !pdg.inst.id !94
  %171 = sdiv i32 %170, 2, !pdg.inst.id !486
  %172 = icmp eq i32 %99, 0, !pdg.inst.id !327
  %173 = sext i32 %171 to i64, !pdg.inst.id !490
  %174 = getelementptr inbounds i32, i32* %98, i64 %173, !pdg.inst.id !311
  %175 = load i32, i32* %174, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %172, label %205, label %176, !prof !7104, !pdg.inst.id !500

176:                                              ; preds = %169
  %177 = mul nsw i32 %175, %12, !pdg.inst.id !176
  %178 = add nsw i32 %99, -1, !pdg.inst.id !325
  %179 = add i32 %178, %177, !pdg.inst.id !521
  %180 = sext i32 %179 to i64, !pdg.inst.id !526
  %181 = getelementptr inbounds double, double* %10, i64 %180, !pdg.inst.id !148
  %182 = load double, double* %181, align 8, !tbaa !7098, !pdg.inst.id !529
  %183 = sext i32 %94 to i64, !pdg.inst.id !254
  %184 = load i32, i32* @10
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %485, label %186

186:                                              ; preds = %176, %190
  %187 = phi i64 [ %188, %190 ], [ %173, %176 ], !pdg.inst.id !504
  %188 = add nsw i64 %187, -1, !pdg.inst.id !542
  %189 = icmp sgt i64 %187, %183, !pdg.inst.id !535
  br i1 %189, label %190, label %.loopexit1, !prof !7105, !pdg.inst.id !546

190:                                              ; preds = %186
  %191 = getelementptr inbounds i32, i32* %98, i64 %188, !pdg.inst.id !309
  %192 = load i32, i32* %191, align 4, !tbaa !7089, !pdg.inst.id !548
  %193 = mul nsw i32 %192, %12, !pdg.inst.id !174
  %194 = add i32 %178, %193, !pdg.inst.id !523
  %195 = sext i32 %194 to i64, !pdg.inst.id !552
  %196 = getelementptr inbounds double, double* %10, i64 %195, !pdg.inst.id !150
  %197 = load double, double* %196, align 8, !tbaa !7098, !pdg.inst.id !555
  %198 = fcmp fast olt double %197, %182, !pdg.inst.id !533
  br i1 %198, label %._crit_edge8, label %186, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %501, %190
  %.lcssa3 = phi i64 [ %187, %190 ], [ %500, %501 ], !pdg.inst.id !537
  br label %199, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %501, %186
  %.lcssa2 = phi i64 [ %187, %186 ], [ %500, %501 ], !pdg.inst.id !539
  br label %199, !pdg.inst.id !6633

199:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %200 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %201 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %202 = ashr exact i64 %201, 32, !pdg.inst.id !568
  %203 = getelementptr inbounds i32, i32* %98, i64 %202, !pdg.inst.id !303
  %204 = load i32, i32* %203, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %205, !pdg.inst.id !6614

205:                                              ; preds = %199, %169
  %206 = phi i32 [ %204, %199 ], [ %175, %169 ], !pdg.inst.id !509
  %207 = phi i64 [ %202, %199 ], [ %173, %169 ], !pdg.inst.id !502
  %208 = phi i32 [ %200, %199 ], [ %171, %169 ], !pdg.inst.id !488
  %209 = phi double [ %182, %199 ], [ 0.000000e+00, %169 ], !pdg.inst.id !531
  %210 = getelementptr inbounds i32, i32* %98, i64 %207, !pdg.inst.id !307
  %211 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %93, i64 0, i32 0, !pdg.inst.id !238
  store i32 %206, i32* %211, align 8, !tbaa !7093, !pdg.inst.id !575
  %212 = add nsw i32 %94, -1, !pdg.inst.id !262
  %213 = icmp sgt i32 %94, %7, !pdg.inst.id !92
  br i1 %213, label %372, label %214, !prof !7106, !pdg.inst.id !649

214:                                              ; preds = %205
  %215 = add i32 %99, -1, !pdg.inst.id !323
  %216 = sext i32 %94 to i64, !pdg.inst.id !252
  br i1 %172, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %214
  br label %265, !pdg.inst.id !6650

.preheader11:                                     ; preds = %214
  br label %217, !pdg.inst.id !6652

217:                                              ; preds = %.preheader11, %234
  %218 = phi i64 [ %237, %234 ], [ %216, %.preheader11 ], !pdg.inst.id !655
  %219 = phi i32 [ %236, %234 ], [ %208, %.preheader11 ], !pdg.inst.id !580
  %220 = phi i32 [ %235, %234 ], [ %212, %.preheader11 ], !pdg.inst.id !627
  %221 = getelementptr inbounds i32, i32* %1, i64 %218, !pdg.inst.id !59
  %222 = load i32, i32* %221, align 4, !tbaa !7089, !pdg.inst.id !673
  %223 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !614
  %224 = icmp eq i32 %222, %223, !pdg.inst.id !678
  br i1 %224, label %._crit_edge2, label %225, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %217
  br label %234, !pdg.inst.id !6674

225:                                              ; preds = %217
  %226 = icmp slt i32 %222, %175, !pdg.inst.id !517
  %227 = add nsw i32 %220, 1, !pdg.inst.id !671
  %228 = add nsw i32 %219, 1, !pdg.inst.id !665
  %229 = select i1 %226, i32 %227, i32 %228, !prof !7108, !pdg.inst.id !685
  %230 = select i1 %226, i32 %227, i32 %220, !prof !7108, !pdg.inst.id !667
  %231 = select i1 %226, i32 %219, i32 %228, !prof !7108, !pdg.inst.id !661
  %232 = sext i32 %229 to i64, !pdg.inst.id !691
  %233 = getelementptr inbounds i32, i32* %95, i64 %232, !pdg.inst.id !271
  store i32 %222, i32* %233, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %234, !pdg.inst.id !6685

234:                                              ; preds = %._crit_edge2, %225
  %235 = phi i32 [ %220, %._crit_edge2 ], [ %230, %225 ], !pdg.inst.id !669
  %236 = phi i32 [ %219, %._crit_edge2 ], [ %231, %225 ], !pdg.inst.id !663
  %237 = add nsw i64 %218, 1, !pdg.inst.id !659
  %238 = icmp slt i64 %218, %80, !pdg.inst.id !191
  br i1 %238, label %217, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %234
  br label %239, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %287
  br label %239, !pdg.inst.id !6697

239:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %213, label %372, label %240, !prof !7106, !pdg.inst.id !647

240:                                              ; preds = %239
  %241 = add i32 %99, -1, !pdg.inst.id !321
  %242 = sext i32 %94 to i64, !pdg.inst.id !250
  br i1 %172, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %240
  br label %318, !pdg.inst.id !6701

.preheader7:                                      ; preds = %240
  br label %243, !pdg.inst.id !6703

243:                                              ; preds = %.preheader7, %260
  %244 = phi i64 [ %263, %260 ], [ %242, %.preheader7 ], !pdg.inst.id !706
  %245 = phi i32 [ %262, %260 ], [ %208, %.preheader7 ], !pdg.inst.id !584
  %246 = phi i32 [ %261, %260 ], [ %212, %.preheader7 ], !pdg.inst.id !631
  %247 = getelementptr inbounds i32, i32* %2, i64 %244, !pdg.inst.id !71
  %248 = load i32, i32* %247, align 4, !tbaa !7089, !pdg.inst.id !724
  %249 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !612
  %250 = icmp eq i32 %248, %249, !pdg.inst.id !729
  br i1 %250, label %._crit_edge5, label %251, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %243
  br label %260, !pdg.inst.id !6724

251:                                              ; preds = %243
  %252 = icmp slt i32 %248, %175, !pdg.inst.id !515
  %253 = add nsw i32 %246, 1, !pdg.inst.id !722
  %254 = add nsw i32 %245, 1, !pdg.inst.id !716
  %255 = select i1 %252, i32 %253, i32 %254, !prof !7108, !pdg.inst.id !736
  %256 = select i1 %252, i32 %253, i32 %246, !prof !7108, !pdg.inst.id !718
  %257 = select i1 %252, i32 %245, i32 %254, !prof !7108, !pdg.inst.id !712
  %258 = sext i32 %255 to i64, !pdg.inst.id !742
  %259 = getelementptr inbounds i32, i32* %1, i64 %258, !pdg.inst.id !57
  store i32 %248, i32* %259, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %260, !pdg.inst.id !6735

260:                                              ; preds = %._crit_edge5, %251
  %261 = phi i32 [ %246, %._crit_edge5 ], [ %256, %251 ], !pdg.inst.id !720
  %262 = phi i32 [ %245, %._crit_edge5 ], [ %257, %251 ], !pdg.inst.id !714
  %263 = add nsw i64 %244, 1, !pdg.inst.id !710
  %264 = icmp slt i64 %244, %80, !pdg.inst.id !195
  br i1 %264, label %243, label %.loopexit8, !prof !7109, !pdg.inst.id !751

265:                                              ; preds = %.preheader13, %287
  %266 = phi i64 [ %290, %287 ], [ %216, %.preheader13 ], !pdg.inst.id !653
  %267 = phi i32 [ %289, %287 ], [ %208, %.preheader13 ], !pdg.inst.id !578
  %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
  %269 = getelementptr inbounds i32, i32* %1, i64 %266, !pdg.inst.id !61
  %270 = load i32, i32* %269, align 4, !tbaa !7089, !pdg.inst.id !769
  %271 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !622
  %272 = icmp eq i32 %270, %271, !pdg.inst.id !774
  br i1 %272, label %._crit_edge, label %273, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %265
  br label %287, !pdg.inst.id !6762

273:                                              ; preds = %265
  %274 = mul nsw i32 %270, %12, !pdg.inst.id !172
  %275 = add i32 %215, %274, !pdg.inst.id !651
  %276 = sext i32 %275 to i64, !pdg.inst.id !780
  %277 = getelementptr inbounds double, double* %10, i64 %276, !pdg.inst.id !152
  %278 = load double, double* %277, align 8, !tbaa !7098, !pdg.inst.id !783
  %279 = fcmp fast olt double %278, %209, !pdg.inst.id !606
  %280 = add nsw i32 %267, 1, !pdg.inst.id !761
  %281 = add nsw i32 %268, 1, !pdg.inst.id !767
  %282 = select i1 %279, i32 %281, i32 %280, !prof !7111, !pdg.inst.id !788
  %283 = select i1 %279, i32 %281, i32 %268, !prof !7111, !pdg.inst.id !763
  %284 = select i1 %279, i32 %267, i32 %280, !prof !7111, !pdg.inst.id !757
  %285 = sext i32 %282 to i64, !pdg.inst.id !794
  %286 = getelementptr inbounds i32, i32* %95, i64 %285, !pdg.inst.id !269
  store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %287, !pdg.inst.id !6778

287:                                              ; preds = %._crit_edge, %273
  %288 = phi i32 [ %268, %._crit_edge ], [ %283, %273 ], !pdg.inst.id !765
  %289 = phi i32 [ %267, %._crit_edge ], [ %284, %273 ], !pdg.inst.id !759
  %290 = add nsw i64 %266, 1, !pdg.inst.id !755
  %291 = icmp slt i64 %266, %80, !pdg.inst.id !189
  br i1 %291, label %265, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %260
  br label %292, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %340
  br label %292, !pdg.inst.id !6792

292:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %213, label %372, label %293, !prof !7106, !pdg.inst.id !645

293:                                              ; preds = %292
  %294 = add i32 %99, -1, !pdg.inst.id !319
  %295 = sext i32 %94 to i64, !pdg.inst.id !248
  br i1 %172, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %293
  br label %345, !pdg.inst.id !6796

.preheader3:                                      ; preds = %293
  br label %296, !pdg.inst.id !6798

296:                                              ; preds = %.preheader3, %313
  %297 = phi i64 [ %316, %313 ], [ %295, %.preheader3 ], !pdg.inst.id !809
  %298 = phi i32 [ %315, %313 ], [ %208, %.preheader3 ], !pdg.inst.id !588
  %299 = phi i32 [ %314, %313 ], [ %212, %.preheader3 ], !pdg.inst.id !635
  %300 = getelementptr inbounds i32, i32* %97, i64 %297, !pdg.inst.id !299
  %301 = load i32, i32* %300, align 4, !tbaa !7089, !pdg.inst.id !827
  %302 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !610
  %303 = icmp eq i32 %301, %302, !pdg.inst.id !832
  br i1 %303, label %._crit_edge7, label %304, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %296
  br label %313, !pdg.inst.id !6819

304:                                              ; preds = %296
  %305 = icmp slt i32 %301, %175, !pdg.inst.id !513
  %306 = add nsw i32 %299, 1, !pdg.inst.id !825
  %307 = add nsw i32 %298, 1, !pdg.inst.id !819
  %308 = select i1 %305, i32 %306, i32 %307, !prof !7108, !pdg.inst.id !839
  %309 = select i1 %305, i32 %306, i32 %299, !prof !7108, !pdg.inst.id !821
  %310 = select i1 %305, i32 %298, i32 %307, !prof !7108, !pdg.inst.id !815
  %311 = sext i32 %308 to i64, !pdg.inst.id !845
  %312 = getelementptr inbounds i32, i32* %2, i64 %311, !pdg.inst.id !69
  store i32 %301, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %313, !pdg.inst.id !6830

313:                                              ; preds = %._crit_edge7, %304
  %314 = phi i32 [ %299, %._crit_edge7 ], [ %309, %304 ], !pdg.inst.id !823
  %315 = phi i32 [ %298, %._crit_edge7 ], [ %310, %304 ], !pdg.inst.id !817
  %316 = add nsw i64 %297, 1, !pdg.inst.id !813
  %317 = icmp slt i64 %297, %80, !pdg.inst.id !199
  br i1 %317, label %296, label %.loopexit4, !prof !7109, !pdg.inst.id !858

318:                                              ; preds = %.preheader9, %340
  %319 = phi i64 [ %343, %340 ], [ %242, %.preheader9 ], !pdg.inst.id !704
  %320 = phi i32 [ %342, %340 ], [ %208, %.preheader9 ], !pdg.inst.id !582
  %321 = phi i32 [ %341, %340 ], [ %212, %.preheader9 ], !pdg.inst.id !629
  %322 = getelementptr inbounds i32, i32* %2, i64 %319, !pdg.inst.id !73
  %323 = load i32, i32* %322, align 4, !tbaa !7089, !pdg.inst.id !876
  %324 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !620
  %325 = icmp eq i32 %323, %324, !pdg.inst.id !881
  br i1 %325, label %._crit_edge4, label %326, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %318
  br label %340, !pdg.inst.id !6857

326:                                              ; preds = %318
  %327 = mul nsw i32 %323, %12, !pdg.inst.id !170
  %328 = add i32 %241, %327, !pdg.inst.id !702
  %329 = sext i32 %328 to i64, !pdg.inst.id !887
  %330 = getelementptr inbounds double, double* %10, i64 %329, !pdg.inst.id !154
  %331 = load double, double* %330, align 8, !tbaa !7098, !pdg.inst.id !890
  %332 = fcmp fast olt double %331, %209, !pdg.inst.id !604
  %333 = add nsw i32 %320, 1, !pdg.inst.id !868
  %334 = add nsw i32 %321, 1, !pdg.inst.id !874
  %335 = select i1 %332, i32 %334, i32 %333, !prof !7111, !pdg.inst.id !895
  %336 = select i1 %332, i32 %334, i32 %321, !prof !7111, !pdg.inst.id !870
  %337 = select i1 %332, i32 %320, i32 %333, !prof !7111, !pdg.inst.id !864
  %338 = sext i32 %335 to i64, !pdg.inst.id !901
  %339 = getelementptr inbounds i32, i32* %1, i64 %338, !pdg.inst.id !55
  store i32 %323, i32* %339, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %340, !pdg.inst.id !6873

340:                                              ; preds = %._crit_edge4, %326
  %341 = phi i32 [ %321, %._crit_edge4 ], [ %336, %326 ], !pdg.inst.id !872
  %342 = phi i32 [ %320, %._crit_edge4 ], [ %337, %326 ], !pdg.inst.id !866
  %343 = add nsw i64 %319, 1, !pdg.inst.id !862
  %344 = icmp slt i64 %319, %80, !pdg.inst.id !193
  br i1 %344, label %318, label %.loopexit10, !prof !7112, !pdg.inst.id !910

345:                                              ; preds = %.preheader5, %367
  %346 = phi i64 [ %370, %367 ], [ %295, %.preheader5 ], !pdg.inst.id !807
  %347 = phi i32 [ %369, %367 ], [ %208, %.preheader5 ], !pdg.inst.id !586
  %348 = phi i32 [ %368, %367 ], [ %212, %.preheader5 ], !pdg.inst.id !633
  %349 = getelementptr inbounds i32, i32* %97, i64 %346, !pdg.inst.id !297
  %350 = load i32, i32* %349, align 4, !tbaa !7089, !pdg.inst.id !928
  %351 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !618
  %352 = icmp eq i32 %350, %351, !pdg.inst.id !933
  br i1 %352, label %._crit_edge6, label %353, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %345
  br label %367, !pdg.inst.id !6899

353:                                              ; preds = %345
  %354 = mul nsw i32 %350, %12, !pdg.inst.id !168
  %355 = add i32 %294, %354, !pdg.inst.id !805
  %356 = sext i32 %355 to i64, !pdg.inst.id !939
  %357 = getelementptr inbounds double, double* %10, i64 %356, !pdg.inst.id !156
  %358 = load double, double* %357, align 8, !tbaa !7098, !pdg.inst.id !942
  %359 = fcmp fast olt double %358, %209, !pdg.inst.id !602
  %360 = add nsw i32 %347, 1, !pdg.inst.id !920
  %361 = add nsw i32 %348, 1, !pdg.inst.id !926
  %362 = select i1 %359, i32 %361, i32 %360, !prof !7111, !pdg.inst.id !947
  %363 = select i1 %359, i32 %361, i32 %348, !prof !7111, !pdg.inst.id !922
  %364 = select i1 %359, i32 %347, i32 %360, !prof !7111, !pdg.inst.id !916
  %365 = sext i32 %362 to i64, !pdg.inst.id !953
  %366 = getelementptr inbounds i32, i32* %2, i64 %365, !pdg.inst.id !67
  store i32 %350, i32* %366, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %367, !pdg.inst.id !6915

367:                                              ; preds = %._crit_edge6, %353
  %368 = phi i32 [ %348, %._crit_edge6 ], [ %363, %353 ], !pdg.inst.id !924
  %369 = phi i32 [ %347, %._crit_edge6 ], [ %364, %353 ], !pdg.inst.id !918
  %370 = add nsw i64 %346, 1, !pdg.inst.id !914
  %371 = icmp slt i64 %346, %80, !pdg.inst.id !197
  br i1 %371, label %345, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %313
  %.lcssa68 = phi i32 [ %314, %313 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %315, %313 ], !pdg.inst.id !854
  br label %372, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %367
  %.lcssa66 = phi i32 [ %368, %367 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %369, %367 ], !pdg.inst.id !962
  br label %372, !pdg.inst.id !6933

372:                                              ; preds = %.loopexit6, %.loopexit4, %205, %239, %292
  %373 = phi i32 [ %212, %292 ], [ %212, %239 ], [ %212, %205 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %374 = phi i32 [ %208, %292 ], [ %208, %239 ], [ %208, %205 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %82, label %375, label %428, !prof !7106, !pdg.inst.id !221

375:                                              ; preds = %372
  br i1 %213, label %.loopexit15, label %376, !pdg.inst.id !643

376:                                              ; preds = %375
  %377 = add i32 %99, -1, !pdg.inst.id !317
  %378 = sext i32 %94 to i64, !pdg.inst.id !246
  br i1 %172, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %376
  br label %401, !pdg.inst.id !6942

.preheader:                                       ; preds = %376
  br label %379, !pdg.inst.id !6944

379:                                              ; preds = %.preheader, %396
  %380 = phi i64 [ %399, %396 ], [ %378, %.preheader ], !pdg.inst.id !980
  %381 = phi i32 [ %398, %396 ], [ %208, %.preheader ], !pdg.inst.id !592
  %382 = phi i32 [ %397, %396 ], [ %212, %.preheader ], !pdg.inst.id !639
  %383 = getelementptr inbounds i32, i32* %96, i64 %380, !pdg.inst.id !287
  %384 = load i32, i32* %383, align 4, !tbaa !7089, !pdg.inst.id !998
  %385 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !608
  %386 = icmp eq i32 %384, %385, !pdg.inst.id !1003
  br i1 %386, label %._crit_edge3, label %387, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %379
  br label %396, !pdg.inst.id !6965

387:                                              ; preds = %379
  %388 = icmp slt i32 %384, %175, !pdg.inst.id !511
  %389 = add nsw i32 %382, 1, !pdg.inst.id !996
  %390 = add nsw i32 %381, 1, !pdg.inst.id !990
  %391 = select i1 %388, i32 %389, i32 %390, !pdg.inst.id !1010
  %392 = select i1 %388, i32 %389, i32 %382, !pdg.inst.id !992
  %393 = select i1 %388, i32 %381, i32 %390, !pdg.inst.id !986
  %394 = sext i32 %391 to i64, !pdg.inst.id !1016
  %395 = getelementptr inbounds i32, i32* %97, i64 %394, !pdg.inst.id !291
  store i32 %384, i32* %395, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %396, !pdg.inst.id !6976

396:                                              ; preds = %._crit_edge3, %387
  %397 = phi i32 [ %382, %._crit_edge3 ], [ %392, %387 ], !pdg.inst.id !994
  %398 = phi i32 [ %381, %._crit_edge3 ], [ %393, %387 ], !pdg.inst.id !988
  %399 = add nsw i64 %380, 1, !pdg.inst.id !984
  %400 = icmp slt i64 %380, %80, !pdg.inst.id !203
  br i1 %400, label %379, label %.loopexit, !pdg.inst.id !1029

401:                                              ; preds = %.preheader1, %423
  %402 = phi i64 [ %426, %423 ], [ %378, %.preheader1 ], !pdg.inst.id !978
  %403 = phi i32 [ %425, %423 ], [ %208, %.preheader1 ], !pdg.inst.id !590
  %404 = phi i32 [ %424, %423 ], [ %212, %.preheader1 ], !pdg.inst.id !637
  %405 = getelementptr inbounds i32, i32* %96, i64 %402, !pdg.inst.id !285
  %406 = load i32, i32* %405, align 4, !tbaa !7089, !pdg.inst.id !1047
  %407 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !616
  %408 = icmp eq i32 %406, %407, !pdg.inst.id !1053
  br i1 %408, label %._crit_edge1, label %409, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %401
  br label %423, !pdg.inst.id !7001

409:                                              ; preds = %401
  %410 = shl i32 %406, 2, !pdg.inst.id !1051
  %411 = add i32 %377, %410, !pdg.inst.id !976
  %412 = sext i32 %411 to i64, !pdg.inst.id !1059
  %413 = getelementptr inbounds double, double* %10, i64 %412, !pdg.inst.id !158
  %414 = load double, double* %413, align 8, !tbaa !7098, !pdg.inst.id !1062
  %415 = fcmp fast olt double %414, %209, !pdg.inst.id !600
  %416 = add nsw i32 %403, 1, !pdg.inst.id !1039
  %417 = add nsw i32 %404, 1, !pdg.inst.id !1045
  %418 = select i1 %415, i32 %417, i32 %416, !pdg.inst.id !1067
  %419 = select i1 %415, i32 %417, i32 %404, !pdg.inst.id !1041
  %420 = select i1 %415, i32 %403, i32 %416, !pdg.inst.id !1035
  %421 = sext i32 %418 to i64, !pdg.inst.id !1073
  %422 = getelementptr inbounds i32, i32* %97, i64 %421, !pdg.inst.id !289
  store i32 %406, i32* %422, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %423, !pdg.inst.id !7017

423:                                              ; preds = %._crit_edge1, %409
  %424 = phi i32 [ %404, %._crit_edge1 ], [ %419, %409 ], !pdg.inst.id !1043
  %425 = phi i32 [ %403, %._crit_edge1 ], [ %420, %409 ], !pdg.inst.id !1037
  %426 = add nsw i64 %402, 1, !pdg.inst.id !1033
  %427 = icmp slt i64 %402, %80, !pdg.inst.id !201
  br i1 %427, label %401, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %396
  %.lcssa72 = phi i32 [ %397, %396 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %398, %396 ], !pdg.inst.id !1025
  br label %428, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %423
  %.lcssa70 = phi i32 [ %424, %423 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %425, %423 ], !pdg.inst.id !1082
  br label %428, !pdg.inst.id !7035

428:                                              ; preds = %.loopexit2, %.loopexit, %372
  %429 = phi i32 [ %373, %372 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %430 = phi i32 [ %374, %372 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %431 = icmp slt i32 %429, %94, !pdg.inst.id !258
  br i1 %431, label %443, label %432, !prof !7106, !pdg.inst.id !1096

432:                                              ; preds = %428
  %433 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %434 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %433, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %434, align 8, !tbaa !7102, !pdg.inst.id !1100
  %435 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %436 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %435, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %436, align 8, !tbaa !7103, !pdg.inst.id !1104
  %437 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %438 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %437, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %438, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %439 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %93, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %437, %struct.kdnode** %439, align 8, !tbaa !7102, !pdg.inst.id !1108
  %440 = add nsw i32 %99, 1, !pdg.inst.id !329
  br i1 %82, label %441, label %442, !prof !7106, !pdg.inst.id !219

441:                                              ; preds = %432
  tail call fastcc void @buildkdtree(i32* %95, i32* %1, i32* %2, i32* %97, i32* nonnull %98, i32* %96, i32 %94, i32 %429, %struct.kdnode** nonnull %8, %struct.kdnode* %437, double* %10, i32 %440, i32 4), !pdg.inst.id !65
  br label %443, !pdg.inst.id !7059

442:                                              ; preds = %432
  tail call fastcc void @buildkdtree(i32* %95, i32* %1, i32* %2, i32* nonnull %98, i32* %96, i32* %97, i32 %94, i32 %429, %struct.kdnode** nonnull %8, %struct.kdnode* %437, double* %10, i32 %440, i32 %12), !pdg.inst.id !63
  br label %443, !pdg.inst.id !7062

443:                                              ; preds = %428, %441, %442
  %444 = icmp sgt i32 %430, %208, !pdg.inst.id !598
  br i1 %444, label %445, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

445:                                              ; preds = %443
  %446 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %447 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %446, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %447, align 8, !tbaa !7102, !pdg.inst.id !1120
  %448 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %449 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %448, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %449, align 8, !tbaa !7103, !pdg.inst.id !1124
  %450 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %451 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %450, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %451, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %452 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %93, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %450, %struct.kdnode** %452, align 8, !tbaa !7103, !pdg.inst.id !1128
  %453 = add nsw i32 %208, 1, !pdg.inst.id !596
  %454 = add nsw i32 %99, 1, !pdg.inst.id !331
  %455 = select i1 %82, i32* %97, i32* %98, !prof !7106, !pdg.inst.id !217
  %456 = select i1 %82, i32* %98, i32* %96, !prof !7106, !pdg.inst.id !215
  %457 = select i1 %82, i32* %96, i32* %97, !prof !7106, !pdg.inst.id !213
  %458 = icmp eq i32 %453, %7, !pdg.inst.id !89
  br i1 %458, label %.loopexit16, label %91, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %481, %481, %443, %375
  br label %459, !pdg.inst.id !7078

459:                                              ; preds = %.loopexit15, %143, %156, %126, %85
  ret void, !pdg.inst.id !7115

460:                                              ; preds = %81
  store i32 1, i32* @9
  store i32 %12, i32* %34
  store i32 %11, i32* %36
  store %struct.kdnode* %9, %struct.kdnode** %38
  store %struct.kdnode** %8, %struct.kdnode*** %40
  store i32 %6, i32* %42
  store i32* %5, i32** %44
  store i32 %7, i32* %46
  store i32* %0, i32** %48
  store i32 %78, i32* %50
  store i32* %2, i32** %52
  store i32* %1, i32** %54
  store i32* %3, i32** %56
  store i32* %4, i32** %58
  store i1 %82, i1* %60
  store i64 %80, i64* %69
  store double* %10, double** %71
  %461 = alloca [1 x i8*]
  %462 = getelementptr inbounds [1 x i8*], [1 x i8*]* %461, i64 0, i64 0
  %463 = bitcast i8** %462 to void (i8*, i8*)**
  store void (i8*, i8*)* @25, void (i8*, i8*)** %463
  %464 = bitcast [1 x i8*]* %461 to i8*
  %465 = alloca [8 x i64]
  %466 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 0
  store i64 64, i64* %466
  %467 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 1
  store i64 64, i64* %467
  %468 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 2
  store i64 64, i64* %468
  %469 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 3
  store i64 64, i64* %469
  %470 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 4
  store i64 64, i64* %470
  %471 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 5
  store i64 64, i64* %471
  %472 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 6
  store i64 64, i64* %472
  %473 = getelementptr inbounds [8 x i64], [8 x i64]* %465, i64 0, i64 7
  store i64 64, i64* %473
  %474 = bitcast [8 x i64]* %465 to i64*
  call void @stageDispatcher(i8* %32, i64* %474, i8* %464, i64 1, i64 8)
  %475 = load %struct.kdnode*, %struct.kdnode** %62
  %476 = load i32, i32* %64
  %477 = load i32, i32* %66
  %478 = load i32*, i32** %68
  %479 = load i32*, i32** %73
  %480 = load %struct.kdnode*, %struct.kdnode** %75
  br label %481

481:                                              ; preds = %460
  %482 = getelementptr inbounds [184 x i64], [184 x i64]* %31, i64 0, i64 176
  %483 = load i64, i64* %482
  %484 = trunc i64 %483 to i32
  store i32 0, i32* @9
  switch i32 %484, label %102 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

485:                                              ; preds = %176
  store i32 1, i32* @10
  store double* %10, double** %17
  store i32 %178, i32* %19
  store i64 %183, i64* %21
  store i32 %12, i32* %23
  store i32* %98, i32** %25
  store i64 %173, i64* %26
  store double %182, double* %28
  %486 = alloca [1 x i8*]
  %487 = getelementptr inbounds [1 x i8*], [1 x i8*]* %486, i64 0, i64 0
  %488 = bitcast i8** %487 to void (i8*, i8*)**
  store void (i8*, i8*)* @26, void (i8*, i8*)** %488
  %489 = bitcast [1 x i8*]* %486 to i8*
  %490 = alloca [8 x i64]
  %491 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 0
  store i64 64, i64* %491
  %492 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 1
  store i64 64, i64* %492
  %493 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 2
  store i64 64, i64* %493
  %494 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 3
  store i64 64, i64* %494
  %495 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 4
  store i64 64, i64* %495
  %496 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 5
  store i64 64, i64* %496
  %497 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 6
  store i64 64, i64* %497
  %498 = getelementptr inbounds [8 x i64], [8 x i64]* %490, i64 0, i64 7
  store i64 64, i64* %498
  %499 = bitcast [8 x i64]* %490 to i64*
  call void @stageDispatcher(i8* %15, i64* %499, i8* %489, i64 1, i64 8)
  %500 = load i64, i64* %20
  br label %501

501:                                              ; preds = %485
  %502 = getelementptr inbounds [72 x i64], [72 x i64]* %14, i64 0, i64 64
  %503 = load i64, i64* %502
  %504 = trunc i64 %503 to i32
  store i32 0, i32* @10
  switch i32 %504, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 20 = "  %269 = getelementptr inbounds i32, i32* %1, i64 %266, !pdg.inst.id !61"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   It wasn't possible to determine how to compute the loop trip count just before executing the loop
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %269 = getelementptr inbounds i32, i32* %1, i64 %266, !pdg.inst.id !61
DSWP:       %278 = load double, double* %277, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:       %277 = getelementptr inbounds double, double* %10, i64 %276, !pdg.inst.id !152
DSWP:       %270 = load i32, i32* %269, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:       %276 = sext i32 %275 to i64, !pdg.inst.id !780
DSWP:       %279 = fcmp fast olt double %278, %209, !pdg.inst.id !606
DSWP:       %274 = mul nsw i32 %270, %12, !pdg.inst.id !172
DSWP:       br i1 %272, label %._crit_edge, label %273, !prof !7110, !pdg.inst.id !777
DSWP:       store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:       %281 = add nsw i32 %268, 1, !pdg.inst.id !767
DSWP:       br label %287, !pdg.inst.id !6762
DSWP:       %285 = sext i32 %282 to i64, !pdg.inst.id !794
DSWP:       %289 = phi i32 [ %267, %._crit_edge ], [ %284, %273 ], !pdg.inst.id !759
DSWP:       %275 = add i32 %215, %274, !pdg.inst.id !651
DSWP:       %280 = add nsw i32 %267, 1, !pdg.inst.id !761
DSWP:       %286 = getelementptr inbounds i32, i32* %95, i64 %285, !pdg.inst.id !269
DSWP:       %284 = select i1 %279, i32 %267, i32 %280, !prof !7111, !pdg.inst.id !757
DSWP:       br label %287, !pdg.inst.id !6778
DSWP:       %283 = select i1 %279, i32 %281, i32 %268, !prof !7111, !pdg.inst.id !763
DSWP:       %282 = select i1 %279, i32 %281, i32 %280, !prof !7111, !pdg.inst.id !788
DSWP:       %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
DSWP:       %271 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:       %267 = phi i32 [ %289, %287 ], [ %208, %.preheader13 ], !pdg.inst.id !578
DSWP:       %288 = phi i32 [ %268, %._crit_edge ], [ %283, %273 ], !pdg.inst.id !765
DSWP:       %272 = icmp eq i32 %270, %271, !pdg.inst.id !774
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %269 = getelementptr inbounds i32, i32* %1, i64 %266, !pdg.inst.id !61
DSWP:       %278 = load double, double* %277, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:       %277 = getelementptr inbounds double, double* %10, i64 %276, !pdg.inst.id !152
DSWP:       %270 = load i32, i32* %269, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:       %276 = sext i32 %275 to i64, !pdg.inst.id !780
DSWP:       %279 = fcmp fast olt double %278, %209, !pdg.inst.id !606
DSWP:       %274 = mul nsw i32 %270, %12, !pdg.inst.id !172
DSWP:       br i1 %272, label %._crit_edge, label %273, !prof !7110, !pdg.inst.id !777
DSWP:       store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:       %281 = add nsw i32 %268, 1, !pdg.inst.id !767
DSWP:       br label %287, !pdg.inst.id !6762
DSWP:       %285 = sext i32 %282 to i64, !pdg.inst.id !794
DSWP:       %289 = phi i32 [ %267, %._crit_edge ], [ %284, %273 ], !pdg.inst.id !759
DSWP:       %275 = add i32 %215, %274, !pdg.inst.id !651
DSWP:       %280 = add nsw i32 %267, 1, !pdg.inst.id !761
DSWP:       %286 = getelementptr inbounds i32, i32* %95, i64 %285, !pdg.inst.id !269
DSWP:       %284 = select i1 %279, i32 %267, i32 %280, !prof !7111, !pdg.inst.id !757
DSWP:       br label %287, !pdg.inst.id !6778
DSWP:       %283 = select i1 %279, i32 %281, i32 %268, !prof !7111, !pdg.inst.id !763
DSWP:       %282 = select i1 %279, i32 %281, i32 %280, !prof !7111, !pdg.inst.id !788
DSWP:       %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
DSWP:       %271 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:       %267 = phi i32 [ %289, %287 ], [ %208, %.preheader13 ], !pdg.inst.id !578
DSWP:       %288 = phi i32 [ %268, %._crit_edge ], [ %283, %273 ], !pdg.inst.id !765
DSWP:       %272 = icmp eq i32 %270, %271, !pdg.inst.id !774
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 25
DSWP:     	  %269 = getelementptr inbounds i32, i32* %1, i64 %266, !pdg.inst.id !61
DSWP:     	  %278 = load double, double* %277, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:     	  %277 = getelementptr inbounds double, double* %10, i64 %276, !pdg.inst.id !152
DSWP:     	  %270 = load i32, i32* %269, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:     	  %276 = sext i32 %275 to i64, !pdg.inst.id !780
DSWP:     	  %279 = fcmp fast olt double %278, %209, !pdg.inst.id !606
DSWP:     	  %274 = mul nsw i32 %270, %12, !pdg.inst.id !172
DSWP:     	  br i1 %272, label %._crit_edge, label %273, !prof !7110, !pdg.inst.id !777
DSWP:     	  store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:     	  %281 = add nsw i32 %268, 1, !pdg.inst.id !767
DSWP:     	  br label %287, !pdg.inst.id !6762
DSWP:     	  %285 = sext i32 %282 to i64, !pdg.inst.id !794
DSWP:     	  %289 = phi i32 [ %267, %._crit_edge ], [ %284, %273 ], !pdg.inst.id !759
DSWP:     	  %275 = add i32 %215, %274, !pdg.inst.id !651
DSWP:     	  %280 = add nsw i32 %267, 1, !pdg.inst.id !761
DSWP:     	  %286 = getelementptr inbounds i32, i32* %95, i64 %285, !pdg.inst.id !269
DSWP:     	  %284 = select i1 %279, i32 %267, i32 %280, !prof !7111, !pdg.inst.id !757
DSWP:     	  br label %287, !pdg.inst.id !6778
DSWP:     	  %283 = select i1 %279, i32 %281, i32 %268, !prof !7111, !pdg.inst.id !763
DSWP:     	  %282 = select i1 %279, i32 %281, i32 %280, !prof !7111, !pdg.inst.id !788
DSWP:     	  %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
DSWP:     	  %271 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:     	  %267 = phi i32 [ %289, %287 ], [ %208, %.preheader13 ], !pdg.inst.id !578
DSWP:     	  %288 = phi i32 [ %268, %._crit_edge ], [ %283, %273 ], !pdg.inst.id !765
DSWP:     	  %272 = icmp eq i32 %270, %271, !pdg.inst.id !774
DSWP:     External nodes: 2
DSWP:     	  %266 = phi i64 [ %290, %287 ], [ %216, %.preheader13 ], !pdg.inst.id !653
DSWP:     	  br i1 %291, label %265, label %.loopexit14, !prof !7112, !pdg.inst.id !803
DSWP:     Edges: 63
DSWP:     	From:	  %286 = getelementptr inbounds i32, i32* %95, i64 %285, !pdg.inst.id !269
DSWP:     	To:	  store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:     	RAW (must)
DSWP:     	From:	  %289 = phi i32 [ %267, %._crit_edge ], [ %284, %273 ], !pdg.inst.id !759
DSWP:     	To:	  %267 = phi i32 [ %289, %287 ], [ %208, %.preheader13 ], !pdg.inst.id !578
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:     	To:	  %270 = load i32, i32* %269, align 4, !tbaa !7089, !pdg.inst.id !769
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:     	To:	  %271 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !622
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %270, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !771
DSWP:     	To:	  %278 = load double, double* %277, align 8, !tbaa !7098, !pdg.inst.id !783
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %285 = sext i32 %282 to i64, !pdg.inst.id !794
DSWP:     	To:	  %286 = getelementptr inbounds i32, i32* %95, i64 %285, !pdg.inst.id !269
DSWP:     	RAW (must)
DSWP:     	From:	  %284 = select i1 %279, i32 %267, i32 %280, !prof !7111, !pdg.inst.id !757
DSWP:     	To:	  %289 = phi i32 [ %267, %._crit_edge ], [ %284, %273 ], !pdg.inst.id !759
DSWP:     	RAW (must)
DSWP:     	From:	  %283 = select i1 %279, i32 %281, i32 %268, !prof !7111, !pdg.inst.id !763
DSWP:     	To:	  %288 = phi i32 [ %268, %._crit_edge ], [ %283, %273 ], !pdg.inst.id !765
DSWP:     	RAW (must)
DSWP:     	From:	  %275 = add i32 %215, %274, !pdg.inst.id !651
DSWP:     	To:	  %276 = sext i32 %275 to i64, !pdg.inst.id !780
DSWP:     	RAW (must)
DSWP:     	From:	  %280 = add nsw i32 %267, 1, !pdg.inst.id !761
DSWP:     	To:	  %284 = select i1 %279, i32 %267, i32 %280, !prof !7111, !pdg.inst.id !757
DSWP:     	RAW (must)
DSWP:     	From:	  %280 = add nsw i32 %267, 1, !pdg.inst.id !761
DSWP:     	To:	  %282 = select i1 %279, i32 %281, i32 %280, !prof !7111, !pdg.inst.id !788
DSWP:     	RAW (must)
DSWP:     	From:	  %282 = select i1 %279, i32 %281, i32 %280, !prof !7111, !pdg.inst.id !788
DSWP:     	To:	  %285 = sext i32 %282 to i64, !pdg.inst.id !794
DSWP:     	RAW (must)
DSWP:     	From:	  %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
DSWP:     	To:	  %283 = select i1 %279, i32 %281, i32 %268, !prof !7111, !pdg.inst.id !763
DSWP:     	RAW (must)
DSWP:     	From:	  %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
DSWP:     	To:	  %288 = phi i32 [ %268, %._crit_edge ], [ %283, %273 ], !pdg.inst.id !765
DSWP:     	RAW (must)
DSWP:     	From:	  %268 = phi i32 [ %288, %287 ], [ %212, %.preheader13 ], !pdg.inst.id !625
DSWP:     	To:	  %281 = add nsw i32 %268, 1, !pdg.inst.id !767
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	i32 %12
DSWP:    Pre loop env 2, producer:	  %212 = add nsw i32 %94, -1, !pdg.inst.id !262
DSWP:    Pre loop env 3, producer:	  %209 = phi double [ %182, %199 ], [ 0.000000e+00, %169 ], !pdg.inst.id !531
DSWP:    Pre loop env 4, producer:	i32* %1
DSWP:    Pre loop env 5, producer:	  %208 = phi i32 [ %200, %199 ], [ %171, %169 ], !pdg.inst.id !488
DSWP:    Pre loop env 6, producer:	  %210 = getelementptr inbounds i32, i32* %98, i64 %207, !pdg.inst.id !307
DSWP:    Pre loop env 7, producer:	  %215 = add i32 %99, -1, !pdg.inst.id !323
DSWP:    Pre loop env 8, producer:	  %95 = phi i32* [ %457, %445 ], [ %5, %81 ], !pdg.inst.id !81
DSWP:    Pre loop env 9, producer:	double* %10
DSWP:    Pre loop env 10, producer:	  %216 = sext i32 %94 to i64, !pdg.inst.id !252
DSWP:    Pre loop env 11, producer:	  %80 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @27(i8*, i8*) {
  %3 = bitcast i8* %0 to [88 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to double*
  %13 = load double, double* %12
  %14 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32**
  %16 = load i32*, i32** %15
  %17 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 40
  %21 = bitcast i64* %20 to i32**
  %22 = load i32*, i32** %21
  %23 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 48
  %24 = bitcast i64* %23 to i32*
  %25 = load i32, i32* %24
  %26 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 56
  %27 = bitcast i64* %26 to i32**
  %28 = load i32*, i32** %27
  %29 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 64
  %30 = bitcast i64* %29 to double**
  %31 = load double*, double** %30
  %32 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 72
  %33 = load i64, i64* %32
  %34 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 80
  %35 = load i64, i64* %34
  br label %38

36:                                               ; preds = %37
  ret void

37:                                               ; preds = %61
  br label %36

38:                                               ; preds = %2, %61
  %39 = phi i64 [ %64, %61 ], [ %33, %2 ], !pdg.inst.id !30
  %40 = phi i32 [ %63, %61 ], [ %19, %2 ], !pdg.inst.id !31
  %41 = phi i32 [ %62, %61 ], [ %10, %2 ], !pdg.inst.id !32
  %42 = getelementptr inbounds i32, i32* %16, i64 %39, !pdg.inst.id !33
  %43 = load i32, i32* %42, align 4, !tbaa !34, !pdg.inst.id !38
  %44 = load i32, i32* %22, align 4, !tbaa !34, !pdg.inst.id !39
  %45 = icmp eq i32 %43, %44, !pdg.inst.id !40
  br i1 %45, label %46, label %47, !prof !41, !pdg.inst.id !42

46:                                               ; preds = %38
  br label %61, !pdg.inst.id !43

47:                                               ; preds = %38
  %48 = mul nsw i32 %43, %7, !pdg.inst.id !44
  %49 = add i32 %25, %48, !pdg.inst.id !45
  %50 = sext i32 %49 to i64, !pdg.inst.id !46
  %51 = getelementptr inbounds double, double* %31, i64 %50, !pdg.inst.id !47
  %52 = load double, double* %51, align 8, !tbaa !48, !pdg.inst.id !50
  %53 = fcmp fast olt double %52, %13, !pdg.inst.id !51
  %54 = add nsw i32 %40, 1, !pdg.inst.id !52
  %55 = add nsw i32 %41, 1, !pdg.inst.id !53
  %56 = select i1 %53, i32 %55, i32 %54, !prof !54, !pdg.inst.id !55
  %57 = select i1 %53, i32 %55, i32 %41, !prof !54, !pdg.inst.id !56
  %58 = select i1 %53, i32 %40, i32 %54, !prof !54, !pdg.inst.id !57
  %59 = sext i32 %56 to i64, !pdg.inst.id !58
  %60 = getelementptr inbounds i32, i32* %28, i64 %59, !pdg.inst.id !59
  store i32 %43, i32* %60, align 4, !tbaa !34, !pdg.inst.id !60
  br label %61, !pdg.inst.id !61

61:                                               ; preds = %46, %47
  %62 = phi i32 [ %41, %46 ], [ %57, %47 ], !pdg.inst.id !62
  %63 = phi i32 [ %40, %46 ], [ %58, %47 ], !pdg.inst.id !63
  %64 = add nsw i64 %39, 1, !pdg.inst.id !64
  %65 = icmp slt i64 %39, %35, !pdg.inst.id !65
  br i1 %65, label %38, label %37, !prof !66, !pdg.inst.id !67
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [88 x i64]
  %15 = bitcast [88 x i64]* %14 to i8*
  %16 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to double*
  %22 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32**
  %24 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32*
  %26 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32**
  %28 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 48
  %29 = bitcast i64* %28 to i32*
  %30 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 56
  %31 = bitcast i64* %30 to i32**
  %32 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 64
  %33 = bitcast i64* %32 to double**
  %34 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 72
  %35 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 80
  %36 = alloca [72 x i64]
  %37 = bitcast [72 x i64]* %36 to i8*
  %38 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 0
  %39 = bitcast i64* %38 to double**
  %40 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 8
  %41 = bitcast i64* %40 to i32*
  %42 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 16
  %43 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 24
  %44 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 32
  %45 = bitcast i64* %44 to i32*
  %46 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 40
  %47 = bitcast i64* %46 to i32**
  %48 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 48
  %49 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 56
  %50 = bitcast i64* %49 to double*
  %51 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 64
  %52 = bitcast i64* %51 to i32*
  %53 = alloca [184 x i64]
  %54 = bitcast [184 x i64]* %53 to i8*
  %55 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 0
  %56 = bitcast i64* %55 to i32*
  %57 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 8
  %58 = bitcast i64* %57 to i32*
  %59 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 16
  %60 = bitcast i64* %59 to %struct.kdnode**
  %61 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 24
  %62 = bitcast i64* %61 to %struct.kdnode***
  %63 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 32
  %64 = bitcast i64* %63 to i32*
  %65 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 40
  %66 = bitcast i64* %65 to i32**
  %67 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 48
  %68 = bitcast i64* %67 to i32*
  %69 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 56
  %70 = bitcast i64* %69 to i32**
  %71 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 64
  %72 = bitcast i64* %71 to i32*
  %73 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 72
  %74 = bitcast i64* %73 to i32**
  %75 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 80
  %76 = bitcast i64* %75 to i32**
  %77 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 88
  %78 = bitcast i64* %77 to i32**
  %79 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 96
  %80 = bitcast i64* %79 to i32**
  %81 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 104
  %82 = bitcast i64* %81 to i1*
  %83 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 112
  %84 = bitcast i64* %83 to %struct.kdnode**
  %85 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 120
  %86 = bitcast i64* %85 to i32*
  %87 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 128
  %88 = bitcast i64* %87 to i32*
  %89 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 136
  %90 = bitcast i64* %89 to i32**
  %91 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 144
  %92 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 152
  %93 = bitcast i64* %92 to double**
  %94 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 160
  %95 = bitcast i64* %94 to i32**
  %96 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 168
  %97 = bitcast i64* %96 to %struct.kdnode**
  %98 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 176
  %99 = bitcast i64* %98 to i32*
  %100 = add nsw i32 %12, 1, !pdg.inst.id !181
  %101 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %102 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %101, label %107, label %103, !prof !7088, !pdg.inst.id !185

103:                                              ; preds = %13
  %104 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %105 = load i32, i32* @9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %484, label %113

.loopexit16:                                      ; preds = %505, %469
  %.lcssa88 = phi %struct.kdnode* [ %474, %469 ], [ %504, %505 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %117, %469 ], [ %502, %505 ], !pdg.inst.id !225
  br label %107, !pdg.inst.id !6401

107:                                              ; preds = %.loopexit16, %13
  %108 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %109 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %110 = getelementptr inbounds i32, i32* %108, i64 %102, !pdg.inst.id !187
  %111 = load i32, i32* %110, align 4, !tbaa !7089, !pdg.inst.id !230
  %112 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %109, i64 0, i32 0, !pdg.inst.id !228
  store i32 %111, i32* %112, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %483, !pdg.inst.id !6410

113:                                              ; preds = %103, %469
  %114 = phi i32 [ %478, %469 ], [ %11, %103 ], !pdg.inst.id !162
  %115 = phi %struct.kdnode* [ %474, %469 ], [ %9, %103 ], !pdg.inst.id !142
  %116 = phi i32 [ %477, %469 ], [ %6, %103 ], !pdg.inst.id !83
  %117 = phi i32* [ %481, %469 ], [ %5, %103 ], !pdg.inst.id !81
  %118 = phi i32* [ %480, %469 ], [ %4, %103 ], !pdg.inst.id !79
  %119 = phi i32* [ %479, %469 ], [ %3, %103 ], !pdg.inst.id !77
  %120 = phi i32* [ %117, %469 ], [ %0, %103 ], !pdg.inst.id !53
  %121 = srem i32 %114, %100, !pdg.inst.id !183
  %122 = add nsw i32 %116, 1, !pdg.inst.id !264
  %123 = icmp eq i32 %122, %7, !pdg.inst.id !96
  br i1 %123, label %124, label %191, !prof !7096, !pdg.inst.id !334

124:                                              ; preds = %505, %113
  %.lcssa85 = phi %struct.kdnode* [ %115, %113 ], [ %499, %505 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %116, %113 ], [ %500, %505 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %120, %113 ], [ %503, %505 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %121, %113 ], [ %501, %505 ], !pdg.inst.id !315
  %125 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %126 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %127 = getelementptr inbounds i32, i32* %.lcssa76, i64 %126, !pdg.inst.id !352
  %128 = load i32, i32* %127, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %125, label %129, label %133, !prof !7097, !pdg.inst.id !361

129:                                              ; preds = %124
  %130 = getelementptr inbounds i32, i32* %.lcssa76, i64 %102, !pdg.inst.id !207
  %131 = load i32, i32* %130, align 4, !tbaa !7089, !pdg.inst.id !376
  %132 = icmp slt i32 %128, %131, !pdg.inst.id !374
  br i1 %132, label %148, label %161, !pdg.inst.id !382

133:                                              ; preds = %124
  %134 = mul nsw i32 %128, %12, !pdg.inst.id !166
  %135 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %136 = add i32 %135, %134, !pdg.inst.id !384
  %137 = sext i32 %136 to i64, !pdg.inst.id !389
  %138 = getelementptr inbounds double, double* %10, i64 %137, !pdg.inst.id !144
  %139 = load double, double* %138, align 8, !tbaa !7098, !pdg.inst.id !283
  %140 = getelementptr inbounds i32, i32* %.lcssa76, i64 %102, !pdg.inst.id !205
  %141 = load i32, i32* %140, align 4, !tbaa !7089, !pdg.inst.id !397
  %142 = mul nsw i32 %141, %12, !pdg.inst.id !164
  %143 = add i32 %135, %142, !pdg.inst.id !386
  %144 = sext i32 %143 to i64, !pdg.inst.id !402
  %145 = getelementptr inbounds double, double* %10, i64 %144, !pdg.inst.id !146
  %146 = load double, double* %145, align 8, !tbaa !7098, !pdg.inst.id !405
  %147 = fcmp fast olt double %139, %146, !pdg.inst.id !395
  br i1 %147, label %148, label %163, !prof !7100, !pdg.inst.id !409

148:                                              ; preds = %133, %129
  %149 = phi %struct.kdnode* [ %.lcssa85, %133 ], [ %.lcssa85, %129 ], !pdg.inst.id !342
  %150 = phi i32 [ %141, %133 ], [ %131, %129 ], !pdg.inst.id !378
  %151 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %150, i32* %151, align 8, !tbaa !7093, !pdg.inst.id !413
  %152 = load i32, i32* %127, align 4, !tbaa !7089, !pdg.inst.id !364
  %153 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %154 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %153, i64 0, i32 0, !pdg.inst.id !420
  store i32 %152, i32* %154, align 8, !tbaa !7093, !pdg.inst.id !416
  %155 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %153, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %155, align 8, !tbaa !7102, !pdg.inst.id !423
  %156 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %157 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %156, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %157, align 8, !tbaa !7103, !pdg.inst.id !427
  %158 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %159 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %158, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %159, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %160 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %149, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %158, %struct.kdnode** %160, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %483, !pdg.inst.id !6480

161:                                              ; preds = %129
  %162 = icmp sgt i32 %128, %131, !pdg.inst.id !371
  br i1 %162, label %165, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %161
  br label %178, !pdg.inst.id !6511

163:                                              ; preds = %133
  %164 = fcmp fast ogt double %139, %146, !pdg.inst.id !393
  br i1 %164, label %165, label %178, !pdg.inst.id !437

165:                                              ; preds = %163, %161
  %166 = phi i32* [ %.lcssa76, %163 ], [ %.lcssa76, %161 ], !pdg.inst.id !354
  %167 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %128, i32* %167, align 8, !tbaa !7093, !pdg.inst.id !367
  %168 = getelementptr inbounds i32, i32* %166, i64 %102, !pdg.inst.id !211
  %169 = load i32, i32* %168, align 4, !tbaa !7089, !pdg.inst.id !441
  %170 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %171 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %170, i64 0, i32 0, !pdg.inst.id !447
  store i32 %169, i32* %171, align 8, !tbaa !7093, !pdg.inst.id !443
  %172 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %170, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %172, align 8, !tbaa !7102, !pdg.inst.id !450
  %173 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %174 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %173, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %174, align 8, !tbaa !7103, !pdg.inst.id !454
  %175 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %176 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %175, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %176, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %177 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %175, %struct.kdnode** %177, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %483, !pdg.inst.id !6525

178:                                              ; preds = %._crit_edge9, %163
  %179 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %163 ], !pdg.inst.id !344
  %180 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %128, i32* %180, align 8, !tbaa !7093, !pdg.inst.id !369
  %181 = getelementptr inbounds i32, i32* %.lcssa76, i64 %102, !pdg.inst.id !209
  %182 = load i32, i32* %181, align 4, !tbaa !7089, !pdg.inst.id !465
  %183 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %184 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %183, i64 0, i32 0, !pdg.inst.id !471
  store i32 %182, i32* %184, align 8, !tbaa !7093, !pdg.inst.id !467
  %185 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %183, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %185, align 8, !tbaa !7102, !pdg.inst.id !474
  %186 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %187 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %186, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %187, align 8, !tbaa !7103, !pdg.inst.id !478
  %188 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %189 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %188, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %189, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %190 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %179, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %188, %struct.kdnode** %190, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %483, !pdg.inst.id !6572

191:                                              ; preds = %113
  %192 = add nsw i32 %116, %7, !pdg.inst.id !94
  %193 = sdiv i32 %192, 2, !pdg.inst.id !486
  %194 = icmp eq i32 %121, 0, !pdg.inst.id !327
  %195 = sext i32 %193 to i64, !pdg.inst.id !490
  %196 = getelementptr inbounds i32, i32* %120, i64 %195, !pdg.inst.id !311
  %197 = load i32, i32* %196, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %194, label %227, label %198, !prof !7104, !pdg.inst.id !500

198:                                              ; preds = %191
  %199 = mul nsw i32 %197, %12, !pdg.inst.id !176
  %200 = add nsw i32 %121, -1, !pdg.inst.id !325
  %201 = add i32 %200, %199, !pdg.inst.id !521
  %202 = sext i32 %201 to i64, !pdg.inst.id !526
  %203 = getelementptr inbounds double, double* %10, i64 %202, !pdg.inst.id !148
  %204 = load double, double* %203, align 8, !tbaa !7098, !pdg.inst.id !529
  %205 = sext i32 %116 to i64, !pdg.inst.id !254
  %206 = load i32, i32* @10
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %509, label %208

208:                                              ; preds = %198, %212
  %209 = phi i64 [ %210, %212 ], [ %195, %198 ], !pdg.inst.id !504
  %210 = add nsw i64 %209, -1, !pdg.inst.id !542
  %211 = icmp sgt i64 %209, %205, !pdg.inst.id !535
  br i1 %211, label %212, label %.loopexit1, !prof !7105, !pdg.inst.id !546

212:                                              ; preds = %208
  %213 = getelementptr inbounds i32, i32* %120, i64 %210, !pdg.inst.id !309
  %214 = load i32, i32* %213, align 4, !tbaa !7089, !pdg.inst.id !548
  %215 = mul nsw i32 %214, %12, !pdg.inst.id !174
  %216 = add i32 %200, %215, !pdg.inst.id !523
  %217 = sext i32 %216 to i64, !pdg.inst.id !552
  %218 = getelementptr inbounds double, double* %10, i64 %217, !pdg.inst.id !150
  %219 = load double, double* %218, align 8, !tbaa !7098, !pdg.inst.id !555
  %220 = fcmp fast olt double %219, %204, !pdg.inst.id !533
  br i1 %220, label %._crit_edge8, label %208, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %525, %212
  %.lcssa3 = phi i64 [ %209, %212 ], [ %524, %525 ], !pdg.inst.id !537
  br label %221, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %525, %208
  %.lcssa2 = phi i64 [ %209, %208 ], [ %524, %525 ], !pdg.inst.id !539
  br label %221, !pdg.inst.id !6633

221:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %222 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %223 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %224 = ashr exact i64 %223, 32, !pdg.inst.id !568
  %225 = getelementptr inbounds i32, i32* %120, i64 %224, !pdg.inst.id !303
  %226 = load i32, i32* %225, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %227, !pdg.inst.id !6614

227:                                              ; preds = %221, %191
  %228 = phi i32 [ %226, %221 ], [ %197, %191 ], !pdg.inst.id !509
  %229 = phi i64 [ %224, %221 ], [ %195, %191 ], !pdg.inst.id !502
  %230 = phi i32 [ %222, %221 ], [ %193, %191 ], !pdg.inst.id !488
  %231 = phi double [ %204, %221 ], [ 0.000000e+00, %191 ], !pdg.inst.id !531
  %232 = getelementptr inbounds i32, i32* %120, i64 %229, !pdg.inst.id !307
  %233 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %115, i64 0, i32 0, !pdg.inst.id !238
  store i32 %228, i32* %233, align 8, !tbaa !7093, !pdg.inst.id !575
  %234 = add nsw i32 %116, -1, !pdg.inst.id !262
  %235 = icmp sgt i32 %116, %7, !pdg.inst.id !92
  br i1 %235, label %396, label %236, !prof !7106, !pdg.inst.id !649

236:                                              ; preds = %227
  %237 = add i32 %121, -1, !pdg.inst.id !323
  %238 = sext i32 %116 to i64, !pdg.inst.id !252
  br i1 %194, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %236
  %239 = load i32, i32* @11
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %529, label %289

.preheader11:                                     ; preds = %236
  br label %241, !pdg.inst.id !6652

241:                                              ; preds = %.preheader11, %258
  %242 = phi i64 [ %261, %258 ], [ %238, %.preheader11 ], !pdg.inst.id !655
  %243 = phi i32 [ %260, %258 ], [ %230, %.preheader11 ], !pdg.inst.id !580
  %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
  %245 = getelementptr inbounds i32, i32* %1, i64 %242, !pdg.inst.id !59
  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
  %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
  %248 = icmp eq i32 %246, %247, !pdg.inst.id !678
  br i1 %248, label %._crit_edge2, label %249, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %241
  br label %258, !pdg.inst.id !6674

249:                                              ; preds = %241
  %250 = icmp slt i32 %246, %197, !pdg.inst.id !517
  %251 = add nsw i32 %244, 1, !pdg.inst.id !671
  %252 = add nsw i32 %243, 1, !pdg.inst.id !665
  %253 = select i1 %250, i32 %251, i32 %252, !prof !7108, !pdg.inst.id !685
  %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
  %255 = select i1 %250, i32 %243, i32 %252, !prof !7108, !pdg.inst.id !661
  %256 = sext i32 %253 to i64, !pdg.inst.id !691
  %257 = getelementptr inbounds i32, i32* %117, i64 %256, !pdg.inst.id !271
  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %258, !pdg.inst.id !6685

258:                                              ; preds = %._crit_edge2, %249
  %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
  %260 = phi i32 [ %243, %._crit_edge2 ], [ %255, %249 ], !pdg.inst.id !663
  %261 = add nsw i64 %242, 1, !pdg.inst.id !659
  %262 = icmp slt i64 %242, %102, !pdg.inst.id !191
  br i1 %262, label %241, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %258
  br label %263, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %544, %311
  br label %263, !pdg.inst.id !6697

263:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %235, label %396, label %264, !prof !7106, !pdg.inst.id !647

264:                                              ; preds = %263
  %265 = add i32 %121, -1, !pdg.inst.id !321
  %266 = sext i32 %116 to i64, !pdg.inst.id !250
  br i1 %194, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %264
  br label %342, !pdg.inst.id !6701

.preheader7:                                      ; preds = %264
  br label %267, !pdg.inst.id !6703

267:                                              ; preds = %.preheader7, %284
  %268 = phi i64 [ %287, %284 ], [ %266, %.preheader7 ], !pdg.inst.id !706
  %269 = phi i32 [ %286, %284 ], [ %230, %.preheader7 ], !pdg.inst.id !584
  %270 = phi i32 [ %285, %284 ], [ %234, %.preheader7 ], !pdg.inst.id !631
  %271 = getelementptr inbounds i32, i32* %2, i64 %268, !pdg.inst.id !71
  %272 = load i32, i32* %271, align 4, !tbaa !7089, !pdg.inst.id !724
  %273 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !612
  %274 = icmp eq i32 %272, %273, !pdg.inst.id !729
  br i1 %274, label %._crit_edge5, label %275, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %267
  br label %284, !pdg.inst.id !6724

275:                                              ; preds = %267
  %276 = icmp slt i32 %272, %197, !pdg.inst.id !515
  %277 = add nsw i32 %270, 1, !pdg.inst.id !722
  %278 = add nsw i32 %269, 1, !pdg.inst.id !716
  %279 = select i1 %276, i32 %277, i32 %278, !prof !7108, !pdg.inst.id !736
  %280 = select i1 %276, i32 %277, i32 %270, !prof !7108, !pdg.inst.id !718
  %281 = select i1 %276, i32 %269, i32 %278, !prof !7108, !pdg.inst.id !712
  %282 = sext i32 %279 to i64, !pdg.inst.id !742
  %283 = getelementptr inbounds i32, i32* %1, i64 %282, !pdg.inst.id !57
  store i32 %272, i32* %283, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %284, !pdg.inst.id !6735

284:                                              ; preds = %._crit_edge5, %275
  %285 = phi i32 [ %270, %._crit_edge5 ], [ %280, %275 ], !pdg.inst.id !720
  %286 = phi i32 [ %269, %._crit_edge5 ], [ %281, %275 ], !pdg.inst.id !714
  %287 = add nsw i64 %268, 1, !pdg.inst.id !710
  %288 = icmp slt i64 %268, %102, !pdg.inst.id !195
  br i1 %288, label %267, label %.loopexit8, !prof !7109, !pdg.inst.id !751

289:                                              ; preds = %.preheader13, %311
  %290 = phi i64 [ %314, %311 ], [ %238, %.preheader13 ], !pdg.inst.id !653
  %291 = phi i32 [ %313, %311 ], [ %230, %.preheader13 ], !pdg.inst.id !578
  %292 = phi i32 [ %312, %311 ], [ %234, %.preheader13 ], !pdg.inst.id !625
  %293 = getelementptr inbounds i32, i32* %1, i64 %290, !pdg.inst.id !61
  %294 = load i32, i32* %293, align 4, !tbaa !7089, !pdg.inst.id !769
  %295 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !622
  %296 = icmp eq i32 %294, %295, !pdg.inst.id !774
  br i1 %296, label %._crit_edge, label %297, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %289
  br label %311, !pdg.inst.id !6762

297:                                              ; preds = %289
  %298 = mul nsw i32 %294, %12, !pdg.inst.id !172
  %299 = add i32 %237, %298, !pdg.inst.id !651
  %300 = sext i32 %299 to i64, !pdg.inst.id !780
  %301 = getelementptr inbounds double, double* %10, i64 %300, !pdg.inst.id !152
  %302 = load double, double* %301, align 8, !tbaa !7098, !pdg.inst.id !783
  %303 = fcmp fast olt double %302, %231, !pdg.inst.id !606
  %304 = add nsw i32 %291, 1, !pdg.inst.id !761
  %305 = add nsw i32 %292, 1, !pdg.inst.id !767
  %306 = select i1 %303, i32 %305, i32 %304, !prof !7111, !pdg.inst.id !788
  %307 = select i1 %303, i32 %305, i32 %292, !prof !7111, !pdg.inst.id !763
  %308 = select i1 %303, i32 %291, i32 %304, !prof !7111, !pdg.inst.id !757
  %309 = sext i32 %306 to i64, !pdg.inst.id !794
  %310 = getelementptr inbounds i32, i32* %117, i64 %309, !pdg.inst.id !269
  store i32 %294, i32* %310, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %311, !pdg.inst.id !6778

311:                                              ; preds = %._crit_edge, %297
  %312 = phi i32 [ %292, %._crit_edge ], [ %307, %297 ], !pdg.inst.id !765
  %313 = phi i32 [ %291, %._crit_edge ], [ %308, %297 ], !pdg.inst.id !759
  %314 = add nsw i64 %290, 1, !pdg.inst.id !755
  %315 = icmp slt i64 %290, %102, !pdg.inst.id !189
  br i1 %315, label %289, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %284
  br label %316, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %364
  br label %316, !pdg.inst.id !6792

316:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %235, label %396, label %317, !prof !7106, !pdg.inst.id !645

317:                                              ; preds = %316
  %318 = add i32 %121, -1, !pdg.inst.id !319
  %319 = sext i32 %116 to i64, !pdg.inst.id !248
  br i1 %194, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %317
  br label %369, !pdg.inst.id !6796

.preheader3:                                      ; preds = %317
  br label %320, !pdg.inst.id !6798

320:                                              ; preds = %.preheader3, %337
  %321 = phi i64 [ %340, %337 ], [ %319, %.preheader3 ], !pdg.inst.id !809
  %322 = phi i32 [ %339, %337 ], [ %230, %.preheader3 ], !pdg.inst.id !588
  %323 = phi i32 [ %338, %337 ], [ %234, %.preheader3 ], !pdg.inst.id !635
  %324 = getelementptr inbounds i32, i32* %119, i64 %321, !pdg.inst.id !299
  %325 = load i32, i32* %324, align 4, !tbaa !7089, !pdg.inst.id !827
  %326 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !610
  %327 = icmp eq i32 %325, %326, !pdg.inst.id !832
  br i1 %327, label %._crit_edge7, label %328, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %320
  br label %337, !pdg.inst.id !6819

328:                                              ; preds = %320
  %329 = icmp slt i32 %325, %197, !pdg.inst.id !513
  %330 = add nsw i32 %323, 1, !pdg.inst.id !825
  %331 = add nsw i32 %322, 1, !pdg.inst.id !819
  %332 = select i1 %329, i32 %330, i32 %331, !prof !7108, !pdg.inst.id !839
  %333 = select i1 %329, i32 %330, i32 %323, !prof !7108, !pdg.inst.id !821
  %334 = select i1 %329, i32 %322, i32 %331, !prof !7108, !pdg.inst.id !815
  %335 = sext i32 %332 to i64, !pdg.inst.id !845
  %336 = getelementptr inbounds i32, i32* %2, i64 %335, !pdg.inst.id !69
  store i32 %325, i32* %336, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %337, !pdg.inst.id !6830

337:                                              ; preds = %._crit_edge7, %328
  %338 = phi i32 [ %323, %._crit_edge7 ], [ %333, %328 ], !pdg.inst.id !823
  %339 = phi i32 [ %322, %._crit_edge7 ], [ %334, %328 ], !pdg.inst.id !817
  %340 = add nsw i64 %321, 1, !pdg.inst.id !813
  %341 = icmp slt i64 %321, %102, !pdg.inst.id !199
  br i1 %341, label %320, label %.loopexit4, !prof !7109, !pdg.inst.id !858

342:                                              ; preds = %.preheader9, %364
  %343 = phi i64 [ %367, %364 ], [ %266, %.preheader9 ], !pdg.inst.id !704
  %344 = phi i32 [ %366, %364 ], [ %230, %.preheader9 ], !pdg.inst.id !582
  %345 = phi i32 [ %365, %364 ], [ %234, %.preheader9 ], !pdg.inst.id !629
  %346 = getelementptr inbounds i32, i32* %2, i64 %343, !pdg.inst.id !73
  %347 = load i32, i32* %346, align 4, !tbaa !7089, !pdg.inst.id !876
  %348 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !620
  %349 = icmp eq i32 %347, %348, !pdg.inst.id !881
  br i1 %349, label %._crit_edge4, label %350, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %342
  br label %364, !pdg.inst.id !6857

350:                                              ; preds = %342
  %351 = mul nsw i32 %347, %12, !pdg.inst.id !170
  %352 = add i32 %265, %351, !pdg.inst.id !702
  %353 = sext i32 %352 to i64, !pdg.inst.id !887
  %354 = getelementptr inbounds double, double* %10, i64 %353, !pdg.inst.id !154
  %355 = load double, double* %354, align 8, !tbaa !7098, !pdg.inst.id !890
  %356 = fcmp fast olt double %355, %231, !pdg.inst.id !604
  %357 = add nsw i32 %344, 1, !pdg.inst.id !868
  %358 = add nsw i32 %345, 1, !pdg.inst.id !874
  %359 = select i1 %356, i32 %358, i32 %357, !prof !7111, !pdg.inst.id !895
  %360 = select i1 %356, i32 %358, i32 %345, !prof !7111, !pdg.inst.id !870
  %361 = select i1 %356, i32 %344, i32 %357, !prof !7111, !pdg.inst.id !864
  %362 = sext i32 %359 to i64, !pdg.inst.id !901
  %363 = getelementptr inbounds i32, i32* %1, i64 %362, !pdg.inst.id !55
  store i32 %347, i32* %363, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %364, !pdg.inst.id !6873

364:                                              ; preds = %._crit_edge4, %350
  %365 = phi i32 [ %345, %._crit_edge4 ], [ %360, %350 ], !pdg.inst.id !872
  %366 = phi i32 [ %344, %._crit_edge4 ], [ %361, %350 ], !pdg.inst.id !866
  %367 = add nsw i64 %343, 1, !pdg.inst.id !862
  %368 = icmp slt i64 %343, %102, !pdg.inst.id !193
  br i1 %368, label %342, label %.loopexit10, !prof !7112, !pdg.inst.id !910

369:                                              ; preds = %.preheader5, %391
  %370 = phi i64 [ %394, %391 ], [ %319, %.preheader5 ], !pdg.inst.id !807
  %371 = phi i32 [ %393, %391 ], [ %230, %.preheader5 ], !pdg.inst.id !586
  %372 = phi i32 [ %392, %391 ], [ %234, %.preheader5 ], !pdg.inst.id !633
  %373 = getelementptr inbounds i32, i32* %119, i64 %370, !pdg.inst.id !297
  %374 = load i32, i32* %373, align 4, !tbaa !7089, !pdg.inst.id !928
  %375 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !618
  %376 = icmp eq i32 %374, %375, !pdg.inst.id !933
  br i1 %376, label %._crit_edge6, label %377, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %369
  br label %391, !pdg.inst.id !6899

377:                                              ; preds = %369
  %378 = mul nsw i32 %374, %12, !pdg.inst.id !168
  %379 = add i32 %318, %378, !pdg.inst.id !805
  %380 = sext i32 %379 to i64, !pdg.inst.id !939
  %381 = getelementptr inbounds double, double* %10, i64 %380, !pdg.inst.id !156
  %382 = load double, double* %381, align 8, !tbaa !7098, !pdg.inst.id !942
  %383 = fcmp fast olt double %382, %231, !pdg.inst.id !602
  %384 = add nsw i32 %371, 1, !pdg.inst.id !920
  %385 = add nsw i32 %372, 1, !pdg.inst.id !926
  %386 = select i1 %383, i32 %385, i32 %384, !prof !7111, !pdg.inst.id !947
  %387 = select i1 %383, i32 %385, i32 %372, !prof !7111, !pdg.inst.id !922
  %388 = select i1 %383, i32 %371, i32 %384, !prof !7111, !pdg.inst.id !916
  %389 = sext i32 %386 to i64, !pdg.inst.id !953
  %390 = getelementptr inbounds i32, i32* %2, i64 %389, !pdg.inst.id !67
  store i32 %374, i32* %390, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %391, !pdg.inst.id !6915

391:                                              ; preds = %._crit_edge6, %377
  %392 = phi i32 [ %372, %._crit_edge6 ], [ %387, %377 ], !pdg.inst.id !924
  %393 = phi i32 [ %371, %._crit_edge6 ], [ %388, %377 ], !pdg.inst.id !918
  %394 = add nsw i64 %370, 1, !pdg.inst.id !914
  %395 = icmp slt i64 %370, %102, !pdg.inst.id !197
  br i1 %395, label %369, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %337
  %.lcssa68 = phi i32 [ %338, %337 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %339, %337 ], !pdg.inst.id !854
  br label %396, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %391
  %.lcssa66 = phi i32 [ %392, %391 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %393, %391 ], !pdg.inst.id !962
  br label %396, !pdg.inst.id !6933

396:                                              ; preds = %.loopexit6, %.loopexit4, %227, %263, %316
  %397 = phi i32 [ %234, %316 ], [ %234, %263 ], [ %234, %227 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %398 = phi i32 [ %230, %316 ], [ %230, %263 ], [ %230, %227 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %104, label %399, label %452, !prof !7106, !pdg.inst.id !221

399:                                              ; preds = %396
  br i1 %235, label %.loopexit15, label %400, !pdg.inst.id !643

400:                                              ; preds = %399
  %401 = add i32 %121, -1, !pdg.inst.id !317
  %402 = sext i32 %116 to i64, !pdg.inst.id !246
  br i1 %194, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %400
  br label %425, !pdg.inst.id !6942

.preheader:                                       ; preds = %400
  br label %403, !pdg.inst.id !6944

403:                                              ; preds = %.preheader, %420
  %404 = phi i64 [ %423, %420 ], [ %402, %.preheader ], !pdg.inst.id !980
  %405 = phi i32 [ %422, %420 ], [ %230, %.preheader ], !pdg.inst.id !592
  %406 = phi i32 [ %421, %420 ], [ %234, %.preheader ], !pdg.inst.id !639
  %407 = getelementptr inbounds i32, i32* %118, i64 %404, !pdg.inst.id !287
  %408 = load i32, i32* %407, align 4, !tbaa !7089, !pdg.inst.id !998
  %409 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !608
  %410 = icmp eq i32 %408, %409, !pdg.inst.id !1003
  br i1 %410, label %._crit_edge3, label %411, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %403
  br label %420, !pdg.inst.id !6965

411:                                              ; preds = %403
  %412 = icmp slt i32 %408, %197, !pdg.inst.id !511
  %413 = add nsw i32 %406, 1, !pdg.inst.id !996
  %414 = add nsw i32 %405, 1, !pdg.inst.id !990
  %415 = select i1 %412, i32 %413, i32 %414, !pdg.inst.id !1010
  %416 = select i1 %412, i32 %413, i32 %406, !pdg.inst.id !992
  %417 = select i1 %412, i32 %405, i32 %414, !pdg.inst.id !986
  %418 = sext i32 %415 to i64, !pdg.inst.id !1016
  %419 = getelementptr inbounds i32, i32* %119, i64 %418, !pdg.inst.id !291
  store i32 %408, i32* %419, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %420, !pdg.inst.id !6976

420:                                              ; preds = %._crit_edge3, %411
  %421 = phi i32 [ %406, %._crit_edge3 ], [ %416, %411 ], !pdg.inst.id !994
  %422 = phi i32 [ %405, %._crit_edge3 ], [ %417, %411 ], !pdg.inst.id !988
  %423 = add nsw i64 %404, 1, !pdg.inst.id !984
  %424 = icmp slt i64 %404, %102, !pdg.inst.id !203
  br i1 %424, label %403, label %.loopexit, !pdg.inst.id !1029

425:                                              ; preds = %.preheader1, %447
  %426 = phi i64 [ %450, %447 ], [ %402, %.preheader1 ], !pdg.inst.id !978
  %427 = phi i32 [ %449, %447 ], [ %230, %.preheader1 ], !pdg.inst.id !590
  %428 = phi i32 [ %448, %447 ], [ %234, %.preheader1 ], !pdg.inst.id !637
  %429 = getelementptr inbounds i32, i32* %118, i64 %426, !pdg.inst.id !285
  %430 = load i32, i32* %429, align 4, !tbaa !7089, !pdg.inst.id !1047
  %431 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !616
  %432 = icmp eq i32 %430, %431, !pdg.inst.id !1053
  br i1 %432, label %._crit_edge1, label %433, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %425
  br label %447, !pdg.inst.id !7001

433:                                              ; preds = %425
  %434 = shl i32 %430, 2, !pdg.inst.id !1051
  %435 = add i32 %401, %434, !pdg.inst.id !976
  %436 = sext i32 %435 to i64, !pdg.inst.id !1059
  %437 = getelementptr inbounds double, double* %10, i64 %436, !pdg.inst.id !158
  %438 = load double, double* %437, align 8, !tbaa !7098, !pdg.inst.id !1062
  %439 = fcmp fast olt double %438, %231, !pdg.inst.id !600
  %440 = add nsw i32 %427, 1, !pdg.inst.id !1039
  %441 = add nsw i32 %428, 1, !pdg.inst.id !1045
  %442 = select i1 %439, i32 %441, i32 %440, !pdg.inst.id !1067
  %443 = select i1 %439, i32 %441, i32 %428, !pdg.inst.id !1041
  %444 = select i1 %439, i32 %427, i32 %440, !pdg.inst.id !1035
  %445 = sext i32 %442 to i64, !pdg.inst.id !1073
  %446 = getelementptr inbounds i32, i32* %119, i64 %445, !pdg.inst.id !289
  store i32 %430, i32* %446, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %447, !pdg.inst.id !7017

447:                                              ; preds = %._crit_edge1, %433
  %448 = phi i32 [ %428, %._crit_edge1 ], [ %443, %433 ], !pdg.inst.id !1043
  %449 = phi i32 [ %427, %._crit_edge1 ], [ %444, %433 ], !pdg.inst.id !1037
  %450 = add nsw i64 %426, 1, !pdg.inst.id !1033
  %451 = icmp slt i64 %426, %102, !pdg.inst.id !201
  br i1 %451, label %425, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %420
  %.lcssa72 = phi i32 [ %421, %420 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %422, %420 ], !pdg.inst.id !1025
  br label %452, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %447
  %.lcssa70 = phi i32 [ %448, %447 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %449, %447 ], !pdg.inst.id !1082
  br label %452, !pdg.inst.id !7035

452:                                              ; preds = %.loopexit2, %.loopexit, %396
  %453 = phi i32 [ %397, %396 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %454 = phi i32 [ %398, %396 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %455 = icmp slt i32 %453, %116, !pdg.inst.id !258
  br i1 %455, label %467, label %456, !prof !7106, !pdg.inst.id !1096

456:                                              ; preds = %452
  %457 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %458 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %457, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %458, align 8, !tbaa !7102, !pdg.inst.id !1100
  %459 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %460 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %459, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %460, align 8, !tbaa !7103, !pdg.inst.id !1104
  %461 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %462 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %461, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %462, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %463 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %115, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %461, %struct.kdnode** %463, align 8, !tbaa !7102, !pdg.inst.id !1108
  %464 = add nsw i32 %121, 1, !pdg.inst.id !329
  br i1 %104, label %465, label %466, !prof !7106, !pdg.inst.id !219

465:                                              ; preds = %456
  tail call fastcc void @buildkdtree(i32* %117, i32* %1, i32* %2, i32* %119, i32* nonnull %120, i32* %118, i32 %116, i32 %453, %struct.kdnode** nonnull %8, %struct.kdnode* %461, double* %10, i32 %464, i32 4), !pdg.inst.id !65
  br label %467, !pdg.inst.id !7059

466:                                              ; preds = %456
  tail call fastcc void @buildkdtree(i32* %117, i32* %1, i32* %2, i32* nonnull %120, i32* %118, i32* %119, i32 %116, i32 %453, %struct.kdnode** nonnull %8, %struct.kdnode* %461, double* %10, i32 %464, i32 %12), !pdg.inst.id !63
  br label %467, !pdg.inst.id !7062

467:                                              ; preds = %452, %465, %466
  %468 = icmp sgt i32 %454, %230, !pdg.inst.id !598
  br i1 %468, label %469, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

469:                                              ; preds = %467
  %470 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %471 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %470, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %471, align 8, !tbaa !7102, !pdg.inst.id !1120
  %472 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %473 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %472, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %473, align 8, !tbaa !7103, !pdg.inst.id !1124
  %474 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %475 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %474, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %475, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %476 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %115, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %474, %struct.kdnode** %476, align 8, !tbaa !7103, !pdg.inst.id !1128
  %477 = add nsw i32 %230, 1, !pdg.inst.id !596
  %478 = add nsw i32 %121, 1, !pdg.inst.id !331
  %479 = select i1 %104, i32* %119, i32* %120, !prof !7106, !pdg.inst.id !217
  %480 = select i1 %104, i32* %120, i32* %118, !prof !7106, !pdg.inst.id !215
  %481 = select i1 %104, i32* %118, i32* %119, !prof !7106, !pdg.inst.id !213
  %482 = icmp eq i32 %477, %7, !pdg.inst.id !89
  br i1 %482, label %.loopexit16, label %113, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %505, %505, %467, %399
  br label %483, !pdg.inst.id !7078

483:                                              ; preds = %.loopexit15, %165, %178, %148, %107
  ret void, !pdg.inst.id !7115

484:                                              ; preds = %103
  store i32 1, i32* @9
  store i32 %12, i32* %56
  store i32 %11, i32* %58
  store %struct.kdnode* %9, %struct.kdnode** %60
  store %struct.kdnode** %8, %struct.kdnode*** %62
  store i32 %6, i32* %64
  store i32* %5, i32** %66
  store i32 %7, i32* %68
  store i32* %0, i32** %70
  store i32 %100, i32* %72
  store i32* %2, i32** %74
  store i32* %1, i32** %76
  store i32* %3, i32** %78
  store i32* %4, i32** %80
  store i1 %104, i1* %82
  store i64 %102, i64* %91
  store double* %10, double** %93
  %485 = alloca [1 x i8*]
  %486 = getelementptr inbounds [1 x i8*], [1 x i8*]* %485, i64 0, i64 0
  %487 = bitcast i8** %486 to void (i8*, i8*)**
  store void (i8*, i8*)* @26, void (i8*, i8*)** %487
  %488 = bitcast [1 x i8*]* %485 to i8*
  %489 = alloca [8 x i64]
  %490 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 0
  store i64 64, i64* %490
  %491 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 1
  store i64 64, i64* %491
  %492 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 2
  store i64 64, i64* %492
  %493 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 3
  store i64 64, i64* %493
  %494 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 4
  store i64 64, i64* %494
  %495 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 5
  store i64 64, i64* %495
  %496 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 6
  store i64 64, i64* %496
  %497 = getelementptr inbounds [8 x i64], [8 x i64]* %489, i64 0, i64 7
  store i64 64, i64* %497
  %498 = bitcast [8 x i64]* %489 to i64*
  call void @stageDispatcher(i8* %54, i64* %498, i8* %488, i64 1, i64 8)
  %499 = load %struct.kdnode*, %struct.kdnode** %84
  %500 = load i32, i32* %86
  %501 = load i32, i32* %88
  %502 = load i32*, i32** %90
  %503 = load i32*, i32** %95
  %504 = load %struct.kdnode*, %struct.kdnode** %97
  br label %505

505:                                              ; preds = %484
  %506 = getelementptr inbounds [184 x i64], [184 x i64]* %53, i64 0, i64 176
  %507 = load i64, i64* %506
  %508 = trunc i64 %507 to i32
  store i32 0, i32* @9
  switch i32 %508, label %124 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

509:                                              ; preds = %198
  store i32 1, i32* @10
  store double* %10, double** %39
  store i32 %200, i32* %41
  store i64 %205, i64* %43
  store i32 %12, i32* %45
  store i32* %120, i32** %47
  store i64 %195, i64* %48
  store double %204, double* %50
  %510 = alloca [1 x i8*]
  %511 = getelementptr inbounds [1 x i8*], [1 x i8*]* %510, i64 0, i64 0
  %512 = bitcast i8** %511 to void (i8*, i8*)**
  store void (i8*, i8*)* @27, void (i8*, i8*)** %512
  %513 = bitcast [1 x i8*]* %510 to i8*
  %514 = alloca [8 x i64]
  %515 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 0
  store i64 64, i64* %515
  %516 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 1
  store i64 64, i64* %516
  %517 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 2
  store i64 64, i64* %517
  %518 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 3
  store i64 64, i64* %518
  %519 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 4
  store i64 64, i64* %519
  %520 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 5
  store i64 64, i64* %520
  %521 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 6
  store i64 64, i64* %521
  %522 = getelementptr inbounds [8 x i64], [8 x i64]* %514, i64 0, i64 7
  store i64 64, i64* %522
  %523 = bitcast [8 x i64]* %514 to i64*
  call void @stageDispatcher(i8* %37, i64* %523, i8* %513, i64 1, i64 8)
  %524 = load i64, i64* %42
  br label %525

525:                                              ; preds = %509
  %526 = getelementptr inbounds [72 x i64], [72 x i64]* %36, i64 0, i64 64
  %527 = load i64, i64* %526
  %528 = trunc i64 %527 to i32
  store i32 0, i32* @10
  switch i32 %528, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

529:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %17
  store i32 %234, i32* %19
  store double %231, double* %21
  store i32* %1, i32** %23
  store i32 %230, i32* %25
  store i32* %232, i32** %27
  store i32 %237, i32* %29
  store i32* %117, i32** %31
  store double* %10, double** %33
  store i64 %238, i64* %34
  store i64 %102, i64* %35
  %530 = alloca [1 x i8*]
  %531 = getelementptr inbounds [1 x i8*], [1 x i8*]* %530, i64 0, i64 0
  %532 = bitcast i8** %531 to void (i8*, i8*)**
  store void (i8*, i8*)* @28, void (i8*, i8*)** %532
  %533 = bitcast [1 x i8*]* %530 to i8*
  %534 = alloca [8 x i64]
  %535 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 0
  store i64 64, i64* %535
  %536 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 1
  store i64 64, i64* %536
  %537 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 2
  store i64 64, i64* %537
  %538 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 3
  store i64 64, i64* %538
  %539 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 4
  store i64 64, i64* %539
  %540 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 5
  store i64 64, i64* %540
  %541 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 6
  store i64 64, i64* %541
  %542 = getelementptr inbounds [8 x i64], [8 x i64]* %534, i64 0, i64 7
  store i64 64, i64* %542
  %543 = bitcast [8 x i64]* %534 to i64*
  call void @stageDispatcher(i8* %15, i64* %543, i8* %533, i64 1, i64 8)
  br label %544

544:                                              ; preds = %529
  store i32 0, i32* @11
  br label %.loopexit14
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 21 = "  %245 = getelementptr inbounds i32, i32* %1, i64 %242, !pdg.inst.id !59"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   It wasn't possible to determine how to compute the loop trip count just before executing the loop
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %245 = getelementptr inbounds i32, i32* %1, i64 %242, !pdg.inst.id !59
DSWP:       %257 = getelementptr inbounds i32, i32* %117, i64 %256, !pdg.inst.id !271
DSWP:       %256 = sext i32 %253 to i64, !pdg.inst.id !691
DSWP:       %260 = phi i32 [ %243, %._crit_edge2 ], [ %255, %249 ], !pdg.inst.id !663
DSWP:       store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:       %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
DSWP:       %252 = add nsw i32 %243, 1, !pdg.inst.id !665
DSWP:       %253 = select i1 %250, i32 %251, i32 %252, !prof !7108, !pdg.inst.id !685
DSWP:       %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:       %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:       br label %258, !pdg.inst.id !6674
DSWP:       %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:       %251 = add nsw i32 %244, 1, !pdg.inst.id !671
DSWP:       br label %258, !pdg.inst.id !6685
DSWP:       %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
DSWP:       %248 = icmp eq i32 %246, %247, !pdg.inst.id !678
DSWP:       br i1 %248, label %._crit_edge2, label %249, !prof !7107, !pdg.inst.id !681
DSWP:       %250 = icmp slt i32 %246, %197, !pdg.inst.id !517
DSWP:       %243 = phi i32 [ %260, %258 ], [ %230, %.preheader11 ], !pdg.inst.id !580
DSWP:       %255 = select i1 %250, i32 %243, i32 %252, !prof !7108, !pdg.inst.id !661
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %245 = getelementptr inbounds i32, i32* %1, i64 %242, !pdg.inst.id !59
DSWP:       %257 = getelementptr inbounds i32, i32* %117, i64 %256, !pdg.inst.id !271
DSWP:       %256 = sext i32 %253 to i64, !pdg.inst.id !691
DSWP:       %260 = phi i32 [ %243, %._crit_edge2 ], [ %255, %249 ], !pdg.inst.id !663
DSWP:       store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:       %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
DSWP:       %252 = add nsw i32 %243, 1, !pdg.inst.id !665
DSWP:       %253 = select i1 %250, i32 %251, i32 %252, !prof !7108, !pdg.inst.id !685
DSWP:       %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:       %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:       br label %258, !pdg.inst.id !6674
DSWP:       %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:       %251 = add nsw i32 %244, 1, !pdg.inst.id !671
DSWP:       br label %258, !pdg.inst.id !6685
DSWP:       %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
DSWP:       %248 = icmp eq i32 %246, %247, !pdg.inst.id !678
DSWP:       br i1 %248, label %._crit_edge2, label %249, !prof !7107, !pdg.inst.id !681
DSWP:       %250 = icmp slt i32 %246, %197, !pdg.inst.id !517
DSWP:       %243 = phi i32 [ %260, %258 ], [ %230, %.preheader11 ], !pdg.inst.id !580
DSWP:       %255 = select i1 %250, i32 %243, i32 %252, !prof !7108, !pdg.inst.id !661
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 20
DSWP:     	  %245 = getelementptr inbounds i32, i32* %1, i64 %242, !pdg.inst.id !59
DSWP:     	  %257 = getelementptr inbounds i32, i32* %117, i64 %256, !pdg.inst.id !271
DSWP:     	  %256 = sext i32 %253 to i64, !pdg.inst.id !691
DSWP:     	  %260 = phi i32 [ %243, %._crit_edge2 ], [ %255, %249 ], !pdg.inst.id !663
DSWP:     	  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	  %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
DSWP:     	  %252 = add nsw i32 %243, 1, !pdg.inst.id !665
DSWP:     	  %253 = select i1 %250, i32 %251, i32 %252, !prof !7108, !pdg.inst.id !685
DSWP:     	  %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:     	  %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:     	  br label %258, !pdg.inst.id !6674
DSWP:     	  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	  %251 = add nsw i32 %244, 1, !pdg.inst.id !671
DSWP:     	  br label %258, !pdg.inst.id !6685
DSWP:     	  %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
DSWP:     	  %248 = icmp eq i32 %246, %247, !pdg.inst.id !678
DSWP:     	  br i1 %248, label %._crit_edge2, label %249, !prof !7107, !pdg.inst.id !681
DSWP:     	  %250 = icmp slt i32 %246, %197, !pdg.inst.id !517
DSWP:     	  %243 = phi i32 [ %260, %258 ], [ %230, %.preheader11 ], !pdg.inst.id !580
DSWP:     	  %255 = select i1 %250, i32 %243, i32 %252, !prof !7108, !pdg.inst.id !661
DSWP:     External nodes: 2
DSWP:     	  %242 = phi i64 [ %261, %258 ], [ %238, %.preheader11 ], !pdg.inst.id !655
DSWP:     	  br i1 %262, label %241, label %.loopexit12, !prof !7109, !pdg.inst.id !700
DSWP:     Edges: 51
DSWP:     	From:	  %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
DSWP:     	To:	  %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	To:	  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	To:	  %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:     	To:	  %248 = icmp eq i32 %246, %247, !pdg.inst.id !678
DSWP:     	RAW (must)
DSWP:     	From:	  %247 = load i32, i32* %232, align 4, !tbaa !7089, !pdg.inst.id !614
DSWP:     	To:	  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:     	To:	  %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
DSWP:     	RAW (must)
DSWP:     	From:	  %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:     	To:	  %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
DSWP:     	RAW (must)
DSWP:     	From:	  %244 = phi i32 [ %259, %258 ], [ %234, %.preheader11 ], !pdg.inst.id !627
DSWP:     	To:	  %251 = add nsw i32 %244, 1, !pdg.inst.id !671
DSWP:     	RAW (must)
DSWP:     	From:	  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	To:	  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	RAW (must)
DSWP:     	From:	  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	To:	  %250 = icmp slt i32 %246, %197, !pdg.inst.id !517
DSWP:     	RAW (must)
DSWP:     	From:	  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	To:	  %248 = icmp eq i32 %246, %247, !pdg.inst.id !678
DSWP:     	RAW (must)
DSWP:     	From:	  %246 = load i32, i32* %245, align 4, !tbaa !7089, !pdg.inst.id !673
DSWP:     	To:	  store i32 %246, i32* %257, align 4, !tbaa !7089, !pdg.inst.id !675
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %251 = add nsw i32 %244, 1, !pdg.inst.id !671
DSWP:     	To:	  %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
DSWP:     	RAW (must)
DSWP:     	From:	  %251 = add nsw i32 %244, 1, !pdg.inst.id !671
DSWP:     	To:	  %253 = select i1 %250, i32 %251, i32 %252, !prof !7108, !pdg.inst.id !685
DSWP:     	RAW (must)
DSWP:     	From:	  %254 = select i1 %250, i32 %251, i32 %244, !prof !7108, !pdg.inst.id !667
DSWP:     	To:	  %259 = phi i32 [ %244, %._crit_edge2 ], [ %254, %249 ], !pdg.inst.id !669
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %117 = phi i32* [ %481, %469 ], [ %5, %103 ], !pdg.inst.id !81
DSWP:    Pre loop env 2, producer:	  %234 = add nsw i32 %116, -1, !pdg.inst.id !262
DSWP:    Pre loop env 3, producer:	  %232 = getelementptr inbounds i32, i32* %120, i64 %229, !pdg.inst.id !307
DSWP:    Pre loop env 4, producer:	  %230 = phi i32 [ %222, %221 ], [ %193, %191 ], !pdg.inst.id !488
DSWP:    Pre loop env 5, producer:	i32* %1
DSWP:    Pre loop env 6, producer:	  %197 = load i32, i32* %196, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:    Pre loop env 7, producer:	  %102 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:    Pre loop env 8, producer:	  %238 = sext i32 %116 to i64, !pdg.inst.id !252
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @29(i8*, i8*) {
  %3 = bitcast i8* %0 to [64 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32**
  %7 = load i32*, i32** %6
  %8 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32**
  %13 = load i32*, i32** %12
  %14 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32*
  %16 = load i32, i32* %15
  %17 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to i32**
  %19 = load i32*, i32** %18
  %20 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 40
  %21 = bitcast i64* %20 to i32*
  %22 = load i32, i32* %21
  %23 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 48
  %24 = load i64, i64* %23
  %25 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 56
  %26 = load i64, i64* %25
  br label %29

27:                                               ; preds = %28
  ret void

28:                                               ; preds = %47
  br label %27

29:                                               ; preds = %2, %47
  %30 = phi i64 [ %50, %47 ], [ %26, %2 ], !pdg.inst.id !30
  %31 = phi i32 [ %49, %47 ], [ %16, %2 ], !pdg.inst.id !31
  %32 = phi i32 [ %48, %47 ], [ %10, %2 ], !pdg.inst.id !32
  %33 = getelementptr inbounds i32, i32* %19, i64 %30, !pdg.inst.id !33
  %34 = load i32, i32* %33, align 4, !tbaa !34, !pdg.inst.id !38
  %35 = load i32, i32* %13, align 4, !tbaa !34, !pdg.inst.id !39
  %36 = icmp eq i32 %34, %35, !pdg.inst.id !40
  br i1 %36, label %37, label %38, !prof !41, !pdg.inst.id !42

37:                                               ; preds = %29
  br label %47, !pdg.inst.id !43

38:                                               ; preds = %29
  %39 = icmp slt i32 %34, %22, !pdg.inst.id !44
  %40 = add nsw i32 %32, 1, !pdg.inst.id !45
  %41 = add nsw i32 %31, 1, !pdg.inst.id !46
  %42 = select i1 %39, i32 %40, i32 %41, !prof !47, !pdg.inst.id !48
  %43 = select i1 %39, i32 %40, i32 %32, !prof !47, !pdg.inst.id !49
  %44 = select i1 %39, i32 %31, i32 %41, !prof !47, !pdg.inst.id !50
  %45 = sext i32 %42 to i64, !pdg.inst.id !51
  %46 = getelementptr inbounds i32, i32* %7, i64 %45, !pdg.inst.id !52
  store i32 %34, i32* %46, align 4, !tbaa !34, !pdg.inst.id !53
  br label %47, !pdg.inst.id !54

47:                                               ; preds = %37, %38
  %48 = phi i32 [ %32, %37 ], [ %43, %38 ], !pdg.inst.id !55
  %49 = phi i32 [ %31, %37 ], [ %44, %38 ], !pdg.inst.id !56
  %50 = add nsw i64 %30, 1, !pdg.inst.id !57
  %51 = icmp slt i64 %30, %24, !pdg.inst.id !58
  br i1 %51, label %29, label %28, !prof !59, !pdg.inst.id !60
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [64 x i64]
  %15 = bitcast [64 x i64]* %14 to i8*
  %16 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32**
  %18 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32**
  %22 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32*
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32**
  %26 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32*
  %28 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 48
  %29 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 56
  %30 = alloca [88 x i64]
  %31 = bitcast [88 x i64]* %30 to i8*
  %32 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 0
  %33 = bitcast i64* %32 to i32*
  %34 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 8
  %35 = bitcast i64* %34 to i32*
  %36 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 16
  %37 = bitcast i64* %36 to double*
  %38 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 24
  %39 = bitcast i64* %38 to i32**
  %40 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 32
  %41 = bitcast i64* %40 to i32*
  %42 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 40
  %43 = bitcast i64* %42 to i32**
  %44 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 48
  %45 = bitcast i64* %44 to i32*
  %46 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 56
  %47 = bitcast i64* %46 to i32**
  %48 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 64
  %49 = bitcast i64* %48 to double**
  %50 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 72
  %51 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 80
  %52 = alloca [72 x i64]
  %53 = bitcast [72 x i64]* %52 to i8*
  %54 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 0
  %55 = bitcast i64* %54 to double**
  %56 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 8
  %57 = bitcast i64* %56 to i32*
  %58 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 16
  %59 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 24
  %60 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 32
  %61 = bitcast i64* %60 to i32*
  %62 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 40
  %63 = bitcast i64* %62 to i32**
  %64 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 48
  %65 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 56
  %66 = bitcast i64* %65 to double*
  %67 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 64
  %68 = bitcast i64* %67 to i32*
  %69 = alloca [184 x i64]
  %70 = bitcast [184 x i64]* %69 to i8*
  %71 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 0
  %72 = bitcast i64* %71 to i32*
  %73 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 8
  %74 = bitcast i64* %73 to i32*
  %75 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 16
  %76 = bitcast i64* %75 to %struct.kdnode**
  %77 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 24
  %78 = bitcast i64* %77 to %struct.kdnode***
  %79 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 32
  %80 = bitcast i64* %79 to i32*
  %81 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 40
  %82 = bitcast i64* %81 to i32**
  %83 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 48
  %84 = bitcast i64* %83 to i32*
  %85 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 56
  %86 = bitcast i64* %85 to i32**
  %87 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 64
  %88 = bitcast i64* %87 to i32*
  %89 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 72
  %90 = bitcast i64* %89 to i32**
  %91 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 80
  %92 = bitcast i64* %91 to i32**
  %93 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 88
  %94 = bitcast i64* %93 to i32**
  %95 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 96
  %96 = bitcast i64* %95 to i32**
  %97 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 104
  %98 = bitcast i64* %97 to i1*
  %99 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 112
  %100 = bitcast i64* %99 to %struct.kdnode**
  %101 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 120
  %102 = bitcast i64* %101 to i32*
  %103 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 128
  %104 = bitcast i64* %103 to i32*
  %105 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 136
  %106 = bitcast i64* %105 to i32**
  %107 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 144
  %108 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 152
  %109 = bitcast i64* %108 to double**
  %110 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 160
  %111 = bitcast i64* %110 to i32**
  %112 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 168
  %113 = bitcast i64* %112 to %struct.kdnode**
  %114 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 176
  %115 = bitcast i64* %114 to i32*
  %116 = add nsw i32 %12, 1, !pdg.inst.id !181
  %117 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %118 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %117, label %123, label %119, !prof !7088, !pdg.inst.id !185

119:                                              ; preds = %13
  %120 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %121 = load i32, i32* @9
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %502, label %129

.loopexit16:                                      ; preds = %523, %487
  %.lcssa88 = phi %struct.kdnode* [ %492, %487 ], [ %522, %523 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %133, %487 ], [ %520, %523 ], !pdg.inst.id !225
  br label %123, !pdg.inst.id !6401

123:                                              ; preds = %.loopexit16, %13
  %124 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %125 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %126 = getelementptr inbounds i32, i32* %124, i64 %118, !pdg.inst.id !187
  %127 = load i32, i32* %126, align 4, !tbaa !7089, !pdg.inst.id !230
  %128 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %125, i64 0, i32 0, !pdg.inst.id !228
  store i32 %127, i32* %128, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %501, !pdg.inst.id !6410

129:                                              ; preds = %119, %487
  %130 = phi i32 [ %496, %487 ], [ %11, %119 ], !pdg.inst.id !162
  %131 = phi %struct.kdnode* [ %492, %487 ], [ %9, %119 ], !pdg.inst.id !142
  %132 = phi i32 [ %495, %487 ], [ %6, %119 ], !pdg.inst.id !83
  %133 = phi i32* [ %499, %487 ], [ %5, %119 ], !pdg.inst.id !81
  %134 = phi i32* [ %498, %487 ], [ %4, %119 ], !pdg.inst.id !79
  %135 = phi i32* [ %497, %487 ], [ %3, %119 ], !pdg.inst.id !77
  %136 = phi i32* [ %133, %487 ], [ %0, %119 ], !pdg.inst.id !53
  %137 = srem i32 %130, %116, !pdg.inst.id !183
  %138 = add nsw i32 %132, 1, !pdg.inst.id !264
  %139 = icmp eq i32 %138, %7, !pdg.inst.id !96
  br i1 %139, label %140, label %207, !prof !7096, !pdg.inst.id !334

140:                                              ; preds = %523, %129
  %.lcssa85 = phi %struct.kdnode* [ %131, %129 ], [ %517, %523 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %132, %129 ], [ %518, %523 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %136, %129 ], [ %521, %523 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %137, %129 ], [ %519, %523 ], !pdg.inst.id !315
  %141 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %142 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %143 = getelementptr inbounds i32, i32* %.lcssa76, i64 %142, !pdg.inst.id !352
  %144 = load i32, i32* %143, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %141, label %145, label %149, !prof !7097, !pdg.inst.id !361

145:                                              ; preds = %140
  %146 = getelementptr inbounds i32, i32* %.lcssa76, i64 %118, !pdg.inst.id !207
  %147 = load i32, i32* %146, align 4, !tbaa !7089, !pdg.inst.id !376
  %148 = icmp slt i32 %144, %147, !pdg.inst.id !374
  br i1 %148, label %164, label %177, !pdg.inst.id !382

149:                                              ; preds = %140
  %150 = mul nsw i32 %144, %12, !pdg.inst.id !166
  %151 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %152 = add i32 %151, %150, !pdg.inst.id !384
  %153 = sext i32 %152 to i64, !pdg.inst.id !389
  %154 = getelementptr inbounds double, double* %10, i64 %153, !pdg.inst.id !144
  %155 = load double, double* %154, align 8, !tbaa !7098, !pdg.inst.id !283
  %156 = getelementptr inbounds i32, i32* %.lcssa76, i64 %118, !pdg.inst.id !205
  %157 = load i32, i32* %156, align 4, !tbaa !7089, !pdg.inst.id !397
  %158 = mul nsw i32 %157, %12, !pdg.inst.id !164
  %159 = add i32 %151, %158, !pdg.inst.id !386
  %160 = sext i32 %159 to i64, !pdg.inst.id !402
  %161 = getelementptr inbounds double, double* %10, i64 %160, !pdg.inst.id !146
  %162 = load double, double* %161, align 8, !tbaa !7098, !pdg.inst.id !405
  %163 = fcmp fast olt double %155, %162, !pdg.inst.id !395
  br i1 %163, label %164, label %179, !prof !7100, !pdg.inst.id !409

164:                                              ; preds = %149, %145
  %165 = phi %struct.kdnode* [ %.lcssa85, %149 ], [ %.lcssa85, %145 ], !pdg.inst.id !342
  %166 = phi i32 [ %157, %149 ], [ %147, %145 ], !pdg.inst.id !378
  %167 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %166, i32* %167, align 8, !tbaa !7093, !pdg.inst.id !413
  %168 = load i32, i32* %143, align 4, !tbaa !7089, !pdg.inst.id !364
  %169 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %170 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %169, i64 0, i32 0, !pdg.inst.id !420
  store i32 %168, i32* %170, align 8, !tbaa !7093, !pdg.inst.id !416
  %171 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %169, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %171, align 8, !tbaa !7102, !pdg.inst.id !423
  %172 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %173 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %172, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %173, align 8, !tbaa !7103, !pdg.inst.id !427
  %174 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %175 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %174, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %175, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %176 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %165, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %174, %struct.kdnode** %176, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %501, !pdg.inst.id !6480

177:                                              ; preds = %145
  %178 = icmp sgt i32 %144, %147, !pdg.inst.id !371
  br i1 %178, label %181, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %177
  br label %194, !pdg.inst.id !6511

179:                                              ; preds = %149
  %180 = fcmp fast ogt double %155, %162, !pdg.inst.id !393
  br i1 %180, label %181, label %194, !pdg.inst.id !437

181:                                              ; preds = %179, %177
  %182 = phi i32* [ %.lcssa76, %179 ], [ %.lcssa76, %177 ], !pdg.inst.id !354
  %183 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %144, i32* %183, align 8, !tbaa !7093, !pdg.inst.id !367
  %184 = getelementptr inbounds i32, i32* %182, i64 %118, !pdg.inst.id !211
  %185 = load i32, i32* %184, align 4, !tbaa !7089, !pdg.inst.id !441
  %186 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %187 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %186, i64 0, i32 0, !pdg.inst.id !447
  store i32 %185, i32* %187, align 8, !tbaa !7093, !pdg.inst.id !443
  %188 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %186, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %188, align 8, !tbaa !7102, !pdg.inst.id !450
  %189 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %190 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %189, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %190, align 8, !tbaa !7103, !pdg.inst.id !454
  %191 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %192 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %191, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %192, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %193 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %191, %struct.kdnode** %193, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %501, !pdg.inst.id !6525

194:                                              ; preds = %._crit_edge9, %179
  %195 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %179 ], !pdg.inst.id !344
  %196 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %144, i32* %196, align 8, !tbaa !7093, !pdg.inst.id !369
  %197 = getelementptr inbounds i32, i32* %.lcssa76, i64 %118, !pdg.inst.id !209
  %198 = load i32, i32* %197, align 4, !tbaa !7089, !pdg.inst.id !465
  %199 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %200 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %199, i64 0, i32 0, !pdg.inst.id !471
  store i32 %198, i32* %200, align 8, !tbaa !7093, !pdg.inst.id !467
  %201 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %199, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %201, align 8, !tbaa !7102, !pdg.inst.id !474
  %202 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %203 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %202, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %203, align 8, !tbaa !7103, !pdg.inst.id !478
  %204 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %205 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %204, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %205, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %206 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %195, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %204, %struct.kdnode** %206, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %501, !pdg.inst.id !6572

207:                                              ; preds = %129
  %208 = add nsw i32 %132, %7, !pdg.inst.id !94
  %209 = sdiv i32 %208, 2, !pdg.inst.id !486
  %210 = icmp eq i32 %137, 0, !pdg.inst.id !327
  %211 = sext i32 %209 to i64, !pdg.inst.id !490
  %212 = getelementptr inbounds i32, i32* %136, i64 %211, !pdg.inst.id !311
  %213 = load i32, i32* %212, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %210, label %243, label %214, !prof !7104, !pdg.inst.id !500

214:                                              ; preds = %207
  %215 = mul nsw i32 %213, %12, !pdg.inst.id !176
  %216 = add nsw i32 %137, -1, !pdg.inst.id !325
  %217 = add i32 %216, %215, !pdg.inst.id !521
  %218 = sext i32 %217 to i64, !pdg.inst.id !526
  %219 = getelementptr inbounds double, double* %10, i64 %218, !pdg.inst.id !148
  %220 = load double, double* %219, align 8, !tbaa !7098, !pdg.inst.id !529
  %221 = sext i32 %132 to i64, !pdg.inst.id !254
  %222 = load i32, i32* @10
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %527, label %224

224:                                              ; preds = %214, %228
  %225 = phi i64 [ %226, %228 ], [ %211, %214 ], !pdg.inst.id !504
  %226 = add nsw i64 %225, -1, !pdg.inst.id !542
  %227 = icmp sgt i64 %225, %221, !pdg.inst.id !535
  br i1 %227, label %228, label %.loopexit1, !prof !7105, !pdg.inst.id !546

228:                                              ; preds = %224
  %229 = getelementptr inbounds i32, i32* %136, i64 %226, !pdg.inst.id !309
  %230 = load i32, i32* %229, align 4, !tbaa !7089, !pdg.inst.id !548
  %231 = mul nsw i32 %230, %12, !pdg.inst.id !174
  %232 = add i32 %216, %231, !pdg.inst.id !523
  %233 = sext i32 %232 to i64, !pdg.inst.id !552
  %234 = getelementptr inbounds double, double* %10, i64 %233, !pdg.inst.id !150
  %235 = load double, double* %234, align 8, !tbaa !7098, !pdg.inst.id !555
  %236 = fcmp fast olt double %235, %220, !pdg.inst.id !533
  br i1 %236, label %._crit_edge8, label %224, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %543, %228
  %.lcssa3 = phi i64 [ %225, %228 ], [ %542, %543 ], !pdg.inst.id !537
  br label %237, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %543, %224
  %.lcssa2 = phi i64 [ %225, %224 ], [ %542, %543 ], !pdg.inst.id !539
  br label %237, !pdg.inst.id !6633

237:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %238 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %239 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %240 = ashr exact i64 %239, 32, !pdg.inst.id !568
  %241 = getelementptr inbounds i32, i32* %136, i64 %240, !pdg.inst.id !303
  %242 = load i32, i32* %241, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %243, !pdg.inst.id !6614

243:                                              ; preds = %237, %207
  %244 = phi i32 [ %242, %237 ], [ %213, %207 ], !pdg.inst.id !509
  %245 = phi i64 [ %240, %237 ], [ %211, %207 ], !pdg.inst.id !502
  %246 = phi i32 [ %238, %237 ], [ %209, %207 ], !pdg.inst.id !488
  %247 = phi double [ %220, %237 ], [ 0.000000e+00, %207 ], !pdg.inst.id !531
  %248 = getelementptr inbounds i32, i32* %136, i64 %245, !pdg.inst.id !307
  %249 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 0, !pdg.inst.id !238
  store i32 %244, i32* %249, align 8, !tbaa !7093, !pdg.inst.id !575
  %250 = add nsw i32 %132, -1, !pdg.inst.id !262
  %251 = icmp sgt i32 %132, %7, !pdg.inst.id !92
  br i1 %251, label %414, label %252, !prof !7106, !pdg.inst.id !649

252:                                              ; preds = %243
  %253 = add i32 %137, -1, !pdg.inst.id !323
  %254 = sext i32 %132 to i64, !pdg.inst.id !252
  br i1 %210, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %252
  %255 = load i32, i32* @11
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %547, label %307

.preheader11:                                     ; preds = %252
  %257 = load i32, i32* @12
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %563, label %259

259:                                              ; preds = %.preheader11, %276
  %260 = phi i64 [ %279, %276 ], [ %254, %.preheader11 ], !pdg.inst.id !655
  %261 = phi i32 [ %278, %276 ], [ %246, %.preheader11 ], !pdg.inst.id !580
  %262 = phi i32 [ %277, %276 ], [ %250, %.preheader11 ], !pdg.inst.id !627
  %263 = getelementptr inbounds i32, i32* %1, i64 %260, !pdg.inst.id !59
  %264 = load i32, i32* %263, align 4, !tbaa !7089, !pdg.inst.id !673
  %265 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !614
  %266 = icmp eq i32 %264, %265, !pdg.inst.id !678
  br i1 %266, label %._crit_edge2, label %267, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %259
  br label %276, !pdg.inst.id !6674

267:                                              ; preds = %259
  %268 = icmp slt i32 %264, %213, !pdg.inst.id !517
  %269 = add nsw i32 %262, 1, !pdg.inst.id !671
  %270 = add nsw i32 %261, 1, !pdg.inst.id !665
  %271 = select i1 %268, i32 %269, i32 %270, !prof !7108, !pdg.inst.id !685
  %272 = select i1 %268, i32 %269, i32 %262, !prof !7108, !pdg.inst.id !667
  %273 = select i1 %268, i32 %261, i32 %270, !prof !7108, !pdg.inst.id !661
  %274 = sext i32 %271 to i64, !pdg.inst.id !691
  %275 = getelementptr inbounds i32, i32* %133, i64 %274, !pdg.inst.id !271
  store i32 %264, i32* %275, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %276, !pdg.inst.id !6685

276:                                              ; preds = %._crit_edge2, %267
  %277 = phi i32 [ %262, %._crit_edge2 ], [ %272, %267 ], !pdg.inst.id !669
  %278 = phi i32 [ %261, %._crit_edge2 ], [ %273, %267 ], !pdg.inst.id !663
  %279 = add nsw i64 %260, 1, !pdg.inst.id !659
  %280 = icmp slt i64 %260, %118, !pdg.inst.id !191
  br i1 %280, label %259, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %578, %276
  br label %281, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %562, %329
  br label %281, !pdg.inst.id !6697

281:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %251, label %414, label %282, !prof !7106, !pdg.inst.id !647

282:                                              ; preds = %281
  %283 = add i32 %137, -1, !pdg.inst.id !321
  %284 = sext i32 %132 to i64, !pdg.inst.id !250
  br i1 %210, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %282
  br label %360, !pdg.inst.id !6701

.preheader7:                                      ; preds = %282
  br label %285, !pdg.inst.id !6703

285:                                              ; preds = %.preheader7, %302
  %286 = phi i64 [ %305, %302 ], [ %284, %.preheader7 ], !pdg.inst.id !706
  %287 = phi i32 [ %304, %302 ], [ %246, %.preheader7 ], !pdg.inst.id !584
  %288 = phi i32 [ %303, %302 ], [ %250, %.preheader7 ], !pdg.inst.id !631
  %289 = getelementptr inbounds i32, i32* %2, i64 %286, !pdg.inst.id !71
  %290 = load i32, i32* %289, align 4, !tbaa !7089, !pdg.inst.id !724
  %291 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !612
  %292 = icmp eq i32 %290, %291, !pdg.inst.id !729
  br i1 %292, label %._crit_edge5, label %293, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %285
  br label %302, !pdg.inst.id !6724

293:                                              ; preds = %285
  %294 = icmp slt i32 %290, %213, !pdg.inst.id !515
  %295 = add nsw i32 %288, 1, !pdg.inst.id !722
  %296 = add nsw i32 %287, 1, !pdg.inst.id !716
  %297 = select i1 %294, i32 %295, i32 %296, !prof !7108, !pdg.inst.id !736
  %298 = select i1 %294, i32 %295, i32 %288, !prof !7108, !pdg.inst.id !718
  %299 = select i1 %294, i32 %287, i32 %296, !prof !7108, !pdg.inst.id !712
  %300 = sext i32 %297 to i64, !pdg.inst.id !742
  %301 = getelementptr inbounds i32, i32* %1, i64 %300, !pdg.inst.id !57
  store i32 %290, i32* %301, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %302, !pdg.inst.id !6735

302:                                              ; preds = %._crit_edge5, %293
  %303 = phi i32 [ %288, %._crit_edge5 ], [ %298, %293 ], !pdg.inst.id !720
  %304 = phi i32 [ %287, %._crit_edge5 ], [ %299, %293 ], !pdg.inst.id !714
  %305 = add nsw i64 %286, 1, !pdg.inst.id !710
  %306 = icmp slt i64 %286, %118, !pdg.inst.id !195
  br i1 %306, label %285, label %.loopexit8, !prof !7109, !pdg.inst.id !751

307:                                              ; preds = %.preheader13, %329
  %308 = phi i64 [ %332, %329 ], [ %254, %.preheader13 ], !pdg.inst.id !653
  %309 = phi i32 [ %331, %329 ], [ %246, %.preheader13 ], !pdg.inst.id !578
  %310 = phi i32 [ %330, %329 ], [ %250, %.preheader13 ], !pdg.inst.id !625
  %311 = getelementptr inbounds i32, i32* %1, i64 %308, !pdg.inst.id !61
  %312 = load i32, i32* %311, align 4, !tbaa !7089, !pdg.inst.id !769
  %313 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !622
  %314 = icmp eq i32 %312, %313, !pdg.inst.id !774
  br i1 %314, label %._crit_edge, label %315, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %307
  br label %329, !pdg.inst.id !6762

315:                                              ; preds = %307
  %316 = mul nsw i32 %312, %12, !pdg.inst.id !172
  %317 = add i32 %253, %316, !pdg.inst.id !651
  %318 = sext i32 %317 to i64, !pdg.inst.id !780
  %319 = getelementptr inbounds double, double* %10, i64 %318, !pdg.inst.id !152
  %320 = load double, double* %319, align 8, !tbaa !7098, !pdg.inst.id !783
  %321 = fcmp fast olt double %320, %247, !pdg.inst.id !606
  %322 = add nsw i32 %309, 1, !pdg.inst.id !761
  %323 = add nsw i32 %310, 1, !pdg.inst.id !767
  %324 = select i1 %321, i32 %323, i32 %322, !prof !7111, !pdg.inst.id !788
  %325 = select i1 %321, i32 %323, i32 %310, !prof !7111, !pdg.inst.id !763
  %326 = select i1 %321, i32 %309, i32 %322, !prof !7111, !pdg.inst.id !757
  %327 = sext i32 %324 to i64, !pdg.inst.id !794
  %328 = getelementptr inbounds i32, i32* %133, i64 %327, !pdg.inst.id !269
  store i32 %312, i32* %328, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %329, !pdg.inst.id !6778

329:                                              ; preds = %._crit_edge, %315
  %330 = phi i32 [ %310, %._crit_edge ], [ %325, %315 ], !pdg.inst.id !765
  %331 = phi i32 [ %309, %._crit_edge ], [ %326, %315 ], !pdg.inst.id !759
  %332 = add nsw i64 %308, 1, !pdg.inst.id !755
  %333 = icmp slt i64 %308, %118, !pdg.inst.id !189
  br i1 %333, label %307, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %302
  br label %334, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %382
  br label %334, !pdg.inst.id !6792

334:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %251, label %414, label %335, !prof !7106, !pdg.inst.id !645

335:                                              ; preds = %334
  %336 = add i32 %137, -1, !pdg.inst.id !319
  %337 = sext i32 %132 to i64, !pdg.inst.id !248
  br i1 %210, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %335
  br label %387, !pdg.inst.id !6796

.preheader3:                                      ; preds = %335
  br label %338, !pdg.inst.id !6798

338:                                              ; preds = %.preheader3, %355
  %339 = phi i64 [ %358, %355 ], [ %337, %.preheader3 ], !pdg.inst.id !809
  %340 = phi i32 [ %357, %355 ], [ %246, %.preheader3 ], !pdg.inst.id !588
  %341 = phi i32 [ %356, %355 ], [ %250, %.preheader3 ], !pdg.inst.id !635
  %342 = getelementptr inbounds i32, i32* %135, i64 %339, !pdg.inst.id !299
  %343 = load i32, i32* %342, align 4, !tbaa !7089, !pdg.inst.id !827
  %344 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !610
  %345 = icmp eq i32 %343, %344, !pdg.inst.id !832
  br i1 %345, label %._crit_edge7, label %346, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %338
  br label %355, !pdg.inst.id !6819

346:                                              ; preds = %338
  %347 = icmp slt i32 %343, %213, !pdg.inst.id !513
  %348 = add nsw i32 %341, 1, !pdg.inst.id !825
  %349 = add nsw i32 %340, 1, !pdg.inst.id !819
  %350 = select i1 %347, i32 %348, i32 %349, !prof !7108, !pdg.inst.id !839
  %351 = select i1 %347, i32 %348, i32 %341, !prof !7108, !pdg.inst.id !821
  %352 = select i1 %347, i32 %340, i32 %349, !prof !7108, !pdg.inst.id !815
  %353 = sext i32 %350 to i64, !pdg.inst.id !845
  %354 = getelementptr inbounds i32, i32* %2, i64 %353, !pdg.inst.id !69
  store i32 %343, i32* %354, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %355, !pdg.inst.id !6830

355:                                              ; preds = %._crit_edge7, %346
  %356 = phi i32 [ %341, %._crit_edge7 ], [ %351, %346 ], !pdg.inst.id !823
  %357 = phi i32 [ %340, %._crit_edge7 ], [ %352, %346 ], !pdg.inst.id !817
  %358 = add nsw i64 %339, 1, !pdg.inst.id !813
  %359 = icmp slt i64 %339, %118, !pdg.inst.id !199
  br i1 %359, label %338, label %.loopexit4, !prof !7109, !pdg.inst.id !858

360:                                              ; preds = %.preheader9, %382
  %361 = phi i64 [ %385, %382 ], [ %284, %.preheader9 ], !pdg.inst.id !704
  %362 = phi i32 [ %384, %382 ], [ %246, %.preheader9 ], !pdg.inst.id !582
  %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
  %364 = getelementptr inbounds i32, i32* %2, i64 %361, !pdg.inst.id !73
  %365 = load i32, i32* %364, align 4, !tbaa !7089, !pdg.inst.id !876
  %366 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !620
  %367 = icmp eq i32 %365, %366, !pdg.inst.id !881
  br i1 %367, label %._crit_edge4, label %368, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %360
  br label %382, !pdg.inst.id !6857

368:                                              ; preds = %360
  %369 = mul nsw i32 %365, %12, !pdg.inst.id !170
  %370 = add i32 %283, %369, !pdg.inst.id !702
  %371 = sext i32 %370 to i64, !pdg.inst.id !887
  %372 = getelementptr inbounds double, double* %10, i64 %371, !pdg.inst.id !154
  %373 = load double, double* %372, align 8, !tbaa !7098, !pdg.inst.id !890
  %374 = fcmp fast olt double %373, %247, !pdg.inst.id !604
  %375 = add nsw i32 %362, 1, !pdg.inst.id !868
  %376 = add nsw i32 %363, 1, !pdg.inst.id !874
  %377 = select i1 %374, i32 %376, i32 %375, !prof !7111, !pdg.inst.id !895
  %378 = select i1 %374, i32 %376, i32 %363, !prof !7111, !pdg.inst.id !870
  %379 = select i1 %374, i32 %362, i32 %375, !prof !7111, !pdg.inst.id !864
  %380 = sext i32 %377 to i64, !pdg.inst.id !901
  %381 = getelementptr inbounds i32, i32* %1, i64 %380, !pdg.inst.id !55
  store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %382, !pdg.inst.id !6873

382:                                              ; preds = %._crit_edge4, %368
  %383 = phi i32 [ %363, %._crit_edge4 ], [ %378, %368 ], !pdg.inst.id !872
  %384 = phi i32 [ %362, %._crit_edge4 ], [ %379, %368 ], !pdg.inst.id !866
  %385 = add nsw i64 %361, 1, !pdg.inst.id !862
  %386 = icmp slt i64 %361, %118, !pdg.inst.id !193
  br i1 %386, label %360, label %.loopexit10, !prof !7112, !pdg.inst.id !910

387:                                              ; preds = %.preheader5, %409
  %388 = phi i64 [ %412, %409 ], [ %337, %.preheader5 ], !pdg.inst.id !807
  %389 = phi i32 [ %411, %409 ], [ %246, %.preheader5 ], !pdg.inst.id !586
  %390 = phi i32 [ %410, %409 ], [ %250, %.preheader5 ], !pdg.inst.id !633
  %391 = getelementptr inbounds i32, i32* %135, i64 %388, !pdg.inst.id !297
  %392 = load i32, i32* %391, align 4, !tbaa !7089, !pdg.inst.id !928
  %393 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !618
  %394 = icmp eq i32 %392, %393, !pdg.inst.id !933
  br i1 %394, label %._crit_edge6, label %395, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %387
  br label %409, !pdg.inst.id !6899

395:                                              ; preds = %387
  %396 = mul nsw i32 %392, %12, !pdg.inst.id !168
  %397 = add i32 %336, %396, !pdg.inst.id !805
  %398 = sext i32 %397 to i64, !pdg.inst.id !939
  %399 = getelementptr inbounds double, double* %10, i64 %398, !pdg.inst.id !156
  %400 = load double, double* %399, align 8, !tbaa !7098, !pdg.inst.id !942
  %401 = fcmp fast olt double %400, %247, !pdg.inst.id !602
  %402 = add nsw i32 %389, 1, !pdg.inst.id !920
  %403 = add nsw i32 %390, 1, !pdg.inst.id !926
  %404 = select i1 %401, i32 %403, i32 %402, !prof !7111, !pdg.inst.id !947
  %405 = select i1 %401, i32 %403, i32 %390, !prof !7111, !pdg.inst.id !922
  %406 = select i1 %401, i32 %389, i32 %402, !prof !7111, !pdg.inst.id !916
  %407 = sext i32 %404 to i64, !pdg.inst.id !953
  %408 = getelementptr inbounds i32, i32* %2, i64 %407, !pdg.inst.id !67
  store i32 %392, i32* %408, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %409, !pdg.inst.id !6915

409:                                              ; preds = %._crit_edge6, %395
  %410 = phi i32 [ %390, %._crit_edge6 ], [ %405, %395 ], !pdg.inst.id !924
  %411 = phi i32 [ %389, %._crit_edge6 ], [ %406, %395 ], !pdg.inst.id !918
  %412 = add nsw i64 %388, 1, !pdg.inst.id !914
  %413 = icmp slt i64 %388, %118, !pdg.inst.id !197
  br i1 %413, label %387, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %355
  %.lcssa68 = phi i32 [ %356, %355 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %357, %355 ], !pdg.inst.id !854
  br label %414, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %409
  %.lcssa66 = phi i32 [ %410, %409 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %411, %409 ], !pdg.inst.id !962
  br label %414, !pdg.inst.id !6933

414:                                              ; preds = %.loopexit6, %.loopexit4, %243, %281, %334
  %415 = phi i32 [ %250, %334 ], [ %250, %281 ], [ %250, %243 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %416 = phi i32 [ %246, %334 ], [ %246, %281 ], [ %246, %243 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %120, label %417, label %470, !prof !7106, !pdg.inst.id !221

417:                                              ; preds = %414
  br i1 %251, label %.loopexit15, label %418, !pdg.inst.id !643

418:                                              ; preds = %417
  %419 = add i32 %137, -1, !pdg.inst.id !317
  %420 = sext i32 %132 to i64, !pdg.inst.id !246
  br i1 %210, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %418
  br label %443, !pdg.inst.id !6942

.preheader:                                       ; preds = %418
  br label %421, !pdg.inst.id !6944

421:                                              ; preds = %.preheader, %438
  %422 = phi i64 [ %441, %438 ], [ %420, %.preheader ], !pdg.inst.id !980
  %423 = phi i32 [ %440, %438 ], [ %246, %.preheader ], !pdg.inst.id !592
  %424 = phi i32 [ %439, %438 ], [ %250, %.preheader ], !pdg.inst.id !639
  %425 = getelementptr inbounds i32, i32* %134, i64 %422, !pdg.inst.id !287
  %426 = load i32, i32* %425, align 4, !tbaa !7089, !pdg.inst.id !998
  %427 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !608
  %428 = icmp eq i32 %426, %427, !pdg.inst.id !1003
  br i1 %428, label %._crit_edge3, label %429, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %421
  br label %438, !pdg.inst.id !6965

429:                                              ; preds = %421
  %430 = icmp slt i32 %426, %213, !pdg.inst.id !511
  %431 = add nsw i32 %424, 1, !pdg.inst.id !996
  %432 = add nsw i32 %423, 1, !pdg.inst.id !990
  %433 = select i1 %430, i32 %431, i32 %432, !pdg.inst.id !1010
  %434 = select i1 %430, i32 %431, i32 %424, !pdg.inst.id !992
  %435 = select i1 %430, i32 %423, i32 %432, !pdg.inst.id !986
  %436 = sext i32 %433 to i64, !pdg.inst.id !1016
  %437 = getelementptr inbounds i32, i32* %135, i64 %436, !pdg.inst.id !291
  store i32 %426, i32* %437, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %438, !pdg.inst.id !6976

438:                                              ; preds = %._crit_edge3, %429
  %439 = phi i32 [ %424, %._crit_edge3 ], [ %434, %429 ], !pdg.inst.id !994
  %440 = phi i32 [ %423, %._crit_edge3 ], [ %435, %429 ], !pdg.inst.id !988
  %441 = add nsw i64 %422, 1, !pdg.inst.id !984
  %442 = icmp slt i64 %422, %118, !pdg.inst.id !203
  br i1 %442, label %421, label %.loopexit, !pdg.inst.id !1029

443:                                              ; preds = %.preheader1, %465
  %444 = phi i64 [ %468, %465 ], [ %420, %.preheader1 ], !pdg.inst.id !978
  %445 = phi i32 [ %467, %465 ], [ %246, %.preheader1 ], !pdg.inst.id !590
  %446 = phi i32 [ %466, %465 ], [ %250, %.preheader1 ], !pdg.inst.id !637
  %447 = getelementptr inbounds i32, i32* %134, i64 %444, !pdg.inst.id !285
  %448 = load i32, i32* %447, align 4, !tbaa !7089, !pdg.inst.id !1047
  %449 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !616
  %450 = icmp eq i32 %448, %449, !pdg.inst.id !1053
  br i1 %450, label %._crit_edge1, label %451, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %443
  br label %465, !pdg.inst.id !7001

451:                                              ; preds = %443
  %452 = shl i32 %448, 2, !pdg.inst.id !1051
  %453 = add i32 %419, %452, !pdg.inst.id !976
  %454 = sext i32 %453 to i64, !pdg.inst.id !1059
  %455 = getelementptr inbounds double, double* %10, i64 %454, !pdg.inst.id !158
  %456 = load double, double* %455, align 8, !tbaa !7098, !pdg.inst.id !1062
  %457 = fcmp fast olt double %456, %247, !pdg.inst.id !600
  %458 = add nsw i32 %445, 1, !pdg.inst.id !1039
  %459 = add nsw i32 %446, 1, !pdg.inst.id !1045
  %460 = select i1 %457, i32 %459, i32 %458, !pdg.inst.id !1067
  %461 = select i1 %457, i32 %459, i32 %446, !pdg.inst.id !1041
  %462 = select i1 %457, i32 %445, i32 %458, !pdg.inst.id !1035
  %463 = sext i32 %460 to i64, !pdg.inst.id !1073
  %464 = getelementptr inbounds i32, i32* %135, i64 %463, !pdg.inst.id !289
  store i32 %448, i32* %464, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %465, !pdg.inst.id !7017

465:                                              ; preds = %._crit_edge1, %451
  %466 = phi i32 [ %446, %._crit_edge1 ], [ %461, %451 ], !pdg.inst.id !1043
  %467 = phi i32 [ %445, %._crit_edge1 ], [ %462, %451 ], !pdg.inst.id !1037
  %468 = add nsw i64 %444, 1, !pdg.inst.id !1033
  %469 = icmp slt i64 %444, %118, !pdg.inst.id !201
  br i1 %469, label %443, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %438
  %.lcssa72 = phi i32 [ %439, %438 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %440, %438 ], !pdg.inst.id !1025
  br label %470, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %465
  %.lcssa70 = phi i32 [ %466, %465 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %467, %465 ], !pdg.inst.id !1082
  br label %470, !pdg.inst.id !7035

470:                                              ; preds = %.loopexit2, %.loopexit, %414
  %471 = phi i32 [ %415, %414 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %472 = phi i32 [ %416, %414 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %473 = icmp slt i32 %471, %132, !pdg.inst.id !258
  br i1 %473, label %485, label %474, !prof !7106, !pdg.inst.id !1096

474:                                              ; preds = %470
  %475 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %476 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %475, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %476, align 8, !tbaa !7102, !pdg.inst.id !1100
  %477 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %478 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %477, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %478, align 8, !tbaa !7103, !pdg.inst.id !1104
  %479 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %480 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %479, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %480, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %481 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %479, %struct.kdnode** %481, align 8, !tbaa !7102, !pdg.inst.id !1108
  %482 = add nsw i32 %137, 1, !pdg.inst.id !329
  br i1 %120, label %483, label %484, !prof !7106, !pdg.inst.id !219

483:                                              ; preds = %474
  tail call fastcc void @buildkdtree(i32* %133, i32* %1, i32* %2, i32* %135, i32* nonnull %136, i32* %134, i32 %132, i32 %471, %struct.kdnode** nonnull %8, %struct.kdnode* %479, double* %10, i32 %482, i32 4), !pdg.inst.id !65
  br label %485, !pdg.inst.id !7059

484:                                              ; preds = %474
  tail call fastcc void @buildkdtree(i32* %133, i32* %1, i32* %2, i32* nonnull %136, i32* %134, i32* %135, i32 %132, i32 %471, %struct.kdnode** nonnull %8, %struct.kdnode* %479, double* %10, i32 %482, i32 %12), !pdg.inst.id !63
  br label %485, !pdg.inst.id !7062

485:                                              ; preds = %470, %483, %484
  %486 = icmp sgt i32 %472, %246, !pdg.inst.id !598
  br i1 %486, label %487, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

487:                                              ; preds = %485
  %488 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %489 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %488, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %489, align 8, !tbaa !7102, !pdg.inst.id !1120
  %490 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %491 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %490, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %491, align 8, !tbaa !7103, !pdg.inst.id !1124
  %492 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %493 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %492, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %493, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %494 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %131, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %492, %struct.kdnode** %494, align 8, !tbaa !7103, !pdg.inst.id !1128
  %495 = add nsw i32 %246, 1, !pdg.inst.id !596
  %496 = add nsw i32 %137, 1, !pdg.inst.id !331
  %497 = select i1 %120, i32* %135, i32* %136, !prof !7106, !pdg.inst.id !217
  %498 = select i1 %120, i32* %136, i32* %134, !prof !7106, !pdg.inst.id !215
  %499 = select i1 %120, i32* %134, i32* %135, !prof !7106, !pdg.inst.id !213
  %500 = icmp eq i32 %495, %7, !pdg.inst.id !89
  br i1 %500, label %.loopexit16, label %129, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %523, %523, %485, %417
  br label %501, !pdg.inst.id !7078

501:                                              ; preds = %.loopexit15, %181, %194, %164, %123
  ret void, !pdg.inst.id !7115

502:                                              ; preds = %119
  store i32 1, i32* @9
  store i32 %12, i32* %72
  store i32 %11, i32* %74
  store %struct.kdnode* %9, %struct.kdnode** %76
  store %struct.kdnode** %8, %struct.kdnode*** %78
  store i32 %6, i32* %80
  store i32* %5, i32** %82
  store i32 %7, i32* %84
  store i32* %0, i32** %86
  store i32 %116, i32* %88
  store i32* %2, i32** %90
  store i32* %1, i32** %92
  store i32* %3, i32** %94
  store i32* %4, i32** %96
  store i1 %120, i1* %98
  store i64 %118, i64* %107
  store double* %10, double** %109
  %503 = alloca [1 x i8*]
  %504 = getelementptr inbounds [1 x i8*], [1 x i8*]* %503, i64 0, i64 0
  %505 = bitcast i8** %504 to void (i8*, i8*)**
  store void (i8*, i8*)* @27, void (i8*, i8*)** %505
  %506 = bitcast [1 x i8*]* %503 to i8*
  %507 = alloca [8 x i64]
  %508 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 0
  store i64 64, i64* %508
  %509 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 1
  store i64 64, i64* %509
  %510 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 2
  store i64 64, i64* %510
  %511 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 3
  store i64 64, i64* %511
  %512 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 4
  store i64 64, i64* %512
  %513 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 5
  store i64 64, i64* %513
  %514 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 6
  store i64 64, i64* %514
  %515 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 7
  store i64 64, i64* %515
  %516 = bitcast [8 x i64]* %507 to i64*
  call void @stageDispatcher(i8* %70, i64* %516, i8* %506, i64 1, i64 8)
  %517 = load %struct.kdnode*, %struct.kdnode** %100
  %518 = load i32, i32* %102
  %519 = load i32, i32* %104
  %520 = load i32*, i32** %106
  %521 = load i32*, i32** %111
  %522 = load %struct.kdnode*, %struct.kdnode** %113
  br label %523

523:                                              ; preds = %502
  %524 = getelementptr inbounds [184 x i64], [184 x i64]* %69, i64 0, i64 176
  %525 = load i64, i64* %524
  %526 = trunc i64 %525 to i32
  store i32 0, i32* @9
  switch i32 %526, label %140 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

527:                                              ; preds = %214
  store i32 1, i32* @10
  store double* %10, double** %55
  store i32 %216, i32* %57
  store i64 %221, i64* %59
  store i32 %12, i32* %61
  store i32* %136, i32** %63
  store i64 %211, i64* %64
  store double %220, double* %66
  %528 = alloca [1 x i8*]
  %529 = getelementptr inbounds [1 x i8*], [1 x i8*]* %528, i64 0, i64 0
  %530 = bitcast i8** %529 to void (i8*, i8*)**
  store void (i8*, i8*)* @28, void (i8*, i8*)** %530
  %531 = bitcast [1 x i8*]* %528 to i8*
  %532 = alloca [8 x i64]
  %533 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 0
  store i64 64, i64* %533
  %534 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 1
  store i64 64, i64* %534
  %535 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 2
  store i64 64, i64* %535
  %536 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 3
  store i64 64, i64* %536
  %537 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 4
  store i64 64, i64* %537
  %538 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 5
  store i64 64, i64* %538
  %539 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 6
  store i64 64, i64* %539
  %540 = getelementptr inbounds [8 x i64], [8 x i64]* %532, i64 0, i64 7
  store i64 64, i64* %540
  %541 = bitcast [8 x i64]* %532 to i64*
  call void @stageDispatcher(i8* %53, i64* %541, i8* %531, i64 1, i64 8)
  %542 = load i64, i64* %58
  br label %543

543:                                              ; preds = %527
  %544 = getelementptr inbounds [72 x i64], [72 x i64]* %52, i64 0, i64 64
  %545 = load i64, i64* %544
  %546 = trunc i64 %545 to i32
  store i32 0, i32* @10
  switch i32 %546, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

547:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %33
  store i32 %250, i32* %35
  store double %247, double* %37
  store i32* %1, i32** %39
  store i32 %246, i32* %41
  store i32* %248, i32** %43
  store i32 %253, i32* %45
  store i32* %133, i32** %47
  store double* %10, double** %49
  store i64 %254, i64* %50
  store i64 %118, i64* %51
  %548 = alloca [1 x i8*]
  %549 = getelementptr inbounds [1 x i8*], [1 x i8*]* %548, i64 0, i64 0
  %550 = bitcast i8** %549 to void (i8*, i8*)**
  store void (i8*, i8*)* @29, void (i8*, i8*)** %550
  %551 = bitcast [1 x i8*]* %548 to i8*
  %552 = alloca [8 x i64]
  %553 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 0
  store i64 64, i64* %553
  %554 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 1
  store i64 64, i64* %554
  %555 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 2
  store i64 64, i64* %555
  %556 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 3
  store i64 64, i64* %556
  %557 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 4
  store i64 64, i64* %557
  %558 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 5
  store i64 64, i64* %558
  %559 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 6
  store i64 64, i64* %559
  %560 = getelementptr inbounds [8 x i64], [8 x i64]* %552, i64 0, i64 7
  store i64 64, i64* %560
  %561 = bitcast [8 x i64]* %552 to i64*
  call void @stageDispatcher(i8* %31, i64* %561, i8* %551, i64 1, i64 8)
  br label %562

562:                                              ; preds = %547
  store i32 0, i32* @11
  br label %.loopexit14

563:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %133, i32** %17
  store i32 %250, i32* %19
  store i32* %248, i32** %21
  store i32 %246, i32* %23
  store i32* %1, i32** %25
  store i32 %213, i32* %27
  store i64 %118, i64* %28
  store i64 %254, i64* %29
  %564 = alloca [1 x i8*]
  %565 = getelementptr inbounds [1 x i8*], [1 x i8*]* %564, i64 0, i64 0
  %566 = bitcast i8** %565 to void (i8*, i8*)**
  store void (i8*, i8*)* @30, void (i8*, i8*)** %566
  %567 = bitcast [1 x i8*]* %564 to i8*
  %568 = alloca [8 x i64]
  %569 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 0
  store i64 64, i64* %569
  %570 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 1
  store i64 64, i64* %570
  %571 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 2
  store i64 64, i64* %571
  %572 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 3
  store i64 64, i64* %572
  %573 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 4
  store i64 64, i64* %573
  %574 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 5
  store i64 64, i64* %574
  %575 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 6
  store i64 64, i64* %575
  %576 = getelementptr inbounds [8 x i64], [8 x i64]* %568, i64 0, i64 7
  store i64 64, i64* %576
  %577 = bitcast [8 x i64]* %568 to i64*
  call void @stageDispatcher(i8* %15, i64* %577, i8* %567, i64 1, i64 8)
  br label %578

578:                                              ; preds = %563
  store i32 0, i32* @12
  br label %.loopexit12
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 22 = "  %364 = getelementptr inbounds i32, i32* %2, i64 %361, !pdg.inst.id !73"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   It wasn't possible to determine how to compute the loop trip count just before executing the loop
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %364 = getelementptr inbounds i32, i32* %2, i64 %361, !pdg.inst.id !73
DSWP:       %373 = load double, double* %372, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:       %372 = getelementptr inbounds double, double* %10, i64 %371, !pdg.inst.id !154
DSWP:       %365 = load i32, i32* %364, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:       %371 = sext i32 %370 to i64, !pdg.inst.id !887
DSWP:       %374 = fcmp fast olt double %373, %247, !pdg.inst.id !604
DSWP:       %369 = mul nsw i32 %365, %12, !pdg.inst.id !170
DSWP:       br i1 %367, label %._crit_edge4, label %368, !prof !7110, !pdg.inst.id !884
DSWP:       store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:       %376 = add nsw i32 %363, 1, !pdg.inst.id !874
DSWP:       br label %382, !pdg.inst.id !6857
DSWP:       %380 = sext i32 %377 to i64, !pdg.inst.id !901
DSWP:       %384 = phi i32 [ %362, %._crit_edge4 ], [ %379, %368 ], !pdg.inst.id !866
DSWP:       %370 = add i32 %283, %369, !pdg.inst.id !702
DSWP:       %375 = add nsw i32 %362, 1, !pdg.inst.id !868
DSWP:       %381 = getelementptr inbounds i32, i32* %1, i64 %380, !pdg.inst.id !55
DSWP:       %379 = select i1 %374, i32 %362, i32 %375, !prof !7111, !pdg.inst.id !864
DSWP:       br label %382, !pdg.inst.id !6873
DSWP:       %378 = select i1 %374, i32 %376, i32 %363, !prof !7111, !pdg.inst.id !870
DSWP:       %377 = select i1 %374, i32 %376, i32 %375, !prof !7111, !pdg.inst.id !895
DSWP:       %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
DSWP:       %366 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:       %362 = phi i32 [ %384, %382 ], [ %246, %.preheader9 ], !pdg.inst.id !582
DSWP:       %383 = phi i32 [ %363, %._crit_edge4 ], [ %378, %368 ], !pdg.inst.id !872
DSWP:       %367 = icmp eq i32 %365, %366, !pdg.inst.id !881
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %364 = getelementptr inbounds i32, i32* %2, i64 %361, !pdg.inst.id !73
DSWP:       %373 = load double, double* %372, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:       %372 = getelementptr inbounds double, double* %10, i64 %371, !pdg.inst.id !154
DSWP:       %365 = load i32, i32* %364, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:       %371 = sext i32 %370 to i64, !pdg.inst.id !887
DSWP:       %374 = fcmp fast olt double %373, %247, !pdg.inst.id !604
DSWP:       %369 = mul nsw i32 %365, %12, !pdg.inst.id !170
DSWP:       br i1 %367, label %._crit_edge4, label %368, !prof !7110, !pdg.inst.id !884
DSWP:       store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:       %376 = add nsw i32 %363, 1, !pdg.inst.id !874
DSWP:       br label %382, !pdg.inst.id !6857
DSWP:       %380 = sext i32 %377 to i64, !pdg.inst.id !901
DSWP:       %384 = phi i32 [ %362, %._crit_edge4 ], [ %379, %368 ], !pdg.inst.id !866
DSWP:       %370 = add i32 %283, %369, !pdg.inst.id !702
DSWP:       %375 = add nsw i32 %362, 1, !pdg.inst.id !868
DSWP:       %381 = getelementptr inbounds i32, i32* %1, i64 %380, !pdg.inst.id !55
DSWP:       %379 = select i1 %374, i32 %362, i32 %375, !prof !7111, !pdg.inst.id !864
DSWP:       br label %382, !pdg.inst.id !6873
DSWP:       %378 = select i1 %374, i32 %376, i32 %363, !prof !7111, !pdg.inst.id !870
DSWP:       %377 = select i1 %374, i32 %376, i32 %375, !prof !7111, !pdg.inst.id !895
DSWP:       %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
DSWP:       %366 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:       %362 = phi i32 [ %384, %382 ], [ %246, %.preheader9 ], !pdg.inst.id !582
DSWP:       %383 = phi i32 [ %363, %._crit_edge4 ], [ %378, %368 ], !pdg.inst.id !872
DSWP:       %367 = icmp eq i32 %365, %366, !pdg.inst.id !881
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 25
DSWP:     	  %364 = getelementptr inbounds i32, i32* %2, i64 %361, !pdg.inst.id !73
DSWP:     	  %373 = load double, double* %372, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:     	  %372 = getelementptr inbounds double, double* %10, i64 %371, !pdg.inst.id !154
DSWP:     	  %365 = load i32, i32* %364, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:     	  %371 = sext i32 %370 to i64, !pdg.inst.id !887
DSWP:     	  %374 = fcmp fast olt double %373, %247, !pdg.inst.id !604
DSWP:     	  %369 = mul nsw i32 %365, %12, !pdg.inst.id !170
DSWP:     	  br i1 %367, label %._crit_edge4, label %368, !prof !7110, !pdg.inst.id !884
DSWP:     	  store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:     	  %376 = add nsw i32 %363, 1, !pdg.inst.id !874
DSWP:     	  br label %382, !pdg.inst.id !6857
DSWP:     	  %380 = sext i32 %377 to i64, !pdg.inst.id !901
DSWP:     	  %384 = phi i32 [ %362, %._crit_edge4 ], [ %379, %368 ], !pdg.inst.id !866
DSWP:     	  %370 = add i32 %283, %369, !pdg.inst.id !702
DSWP:     	  %375 = add nsw i32 %362, 1, !pdg.inst.id !868
DSWP:     	  %381 = getelementptr inbounds i32, i32* %1, i64 %380, !pdg.inst.id !55
DSWP:     	  %379 = select i1 %374, i32 %362, i32 %375, !prof !7111, !pdg.inst.id !864
DSWP:     	  br label %382, !pdg.inst.id !6873
DSWP:     	  %378 = select i1 %374, i32 %376, i32 %363, !prof !7111, !pdg.inst.id !870
DSWP:     	  %377 = select i1 %374, i32 %376, i32 %375, !prof !7111, !pdg.inst.id !895
DSWP:     	  %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
DSWP:     	  %366 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:     	  %362 = phi i32 [ %384, %382 ], [ %246, %.preheader9 ], !pdg.inst.id !582
DSWP:     	  %383 = phi i32 [ %363, %._crit_edge4 ], [ %378, %368 ], !pdg.inst.id !872
DSWP:     	  %367 = icmp eq i32 %365, %366, !pdg.inst.id !881
DSWP:     External nodes: 2
DSWP:     	  %361 = phi i64 [ %385, %382 ], [ %284, %.preheader9 ], !pdg.inst.id !704
DSWP:     	  br i1 %386, label %360, label %.loopexit10, !prof !7112, !pdg.inst.id !910
DSWP:     Edges: 63
DSWP:     	From:	  %381 = getelementptr inbounds i32, i32* %1, i64 %380, !pdg.inst.id !55
DSWP:     	To:	  store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:     	RAW (must)
DSWP:     	From:	  %384 = phi i32 [ %362, %._crit_edge4 ], [ %379, %368 ], !pdg.inst.id !866
DSWP:     	To:	  %362 = phi i32 [ %384, %382 ], [ %246, %.preheader9 ], !pdg.inst.id !582
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:     	To:	  %365 = load i32, i32* %364, align 4, !tbaa !7089, !pdg.inst.id !876
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:     	To:	  %366 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !620
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %365, i32* %381, align 4, !tbaa !7089, !pdg.inst.id !878
DSWP:     	To:	  %373 = load double, double* %372, align 8, !tbaa !7098, !pdg.inst.id !890
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %380 = sext i32 %377 to i64, !pdg.inst.id !901
DSWP:     	To:	  %381 = getelementptr inbounds i32, i32* %1, i64 %380, !pdg.inst.id !55
DSWP:     	RAW (must)
DSWP:     	From:	  %379 = select i1 %374, i32 %362, i32 %375, !prof !7111, !pdg.inst.id !864
DSWP:     	To:	  %384 = phi i32 [ %362, %._crit_edge4 ], [ %379, %368 ], !pdg.inst.id !866
DSWP:     	RAW (must)
DSWP:     	From:	  %378 = select i1 %374, i32 %376, i32 %363, !prof !7111, !pdg.inst.id !870
DSWP:     	To:	  %383 = phi i32 [ %363, %._crit_edge4 ], [ %378, %368 ], !pdg.inst.id !872
DSWP:     	RAW (must)
DSWP:     	From:	  %370 = add i32 %283, %369, !pdg.inst.id !702
DSWP:     	To:	  %371 = sext i32 %370 to i64, !pdg.inst.id !887
DSWP:     	RAW (must)
DSWP:     	From:	  %375 = add nsw i32 %362, 1, !pdg.inst.id !868
DSWP:     	To:	  %379 = select i1 %374, i32 %362, i32 %375, !prof !7111, !pdg.inst.id !864
DSWP:     	RAW (must)
DSWP:     	From:	  %375 = add nsw i32 %362, 1, !pdg.inst.id !868
DSWP:     	To:	  %377 = select i1 %374, i32 %376, i32 %375, !prof !7111, !pdg.inst.id !895
DSWP:     	RAW (must)
DSWP:     	From:	  %377 = select i1 %374, i32 %376, i32 %375, !prof !7111, !pdg.inst.id !895
DSWP:     	To:	  %380 = sext i32 %377 to i64, !pdg.inst.id !901
DSWP:     	RAW (must)
DSWP:     	From:	  %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
DSWP:     	To:	  %378 = select i1 %374, i32 %376, i32 %363, !prof !7111, !pdg.inst.id !870
DSWP:     	RAW (must)
DSWP:     	From:	  %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
DSWP:     	To:	  %383 = phi i32 [ %363, %._crit_edge4 ], [ %378, %368 ], !pdg.inst.id !872
DSWP:     	RAW (must)
DSWP:     	From:	  %363 = phi i32 [ %383, %382 ], [ %250, %.preheader9 ], !pdg.inst.id !629
DSWP:     	To:	  %376 = add nsw i32 %363, 1, !pdg.inst.id !874
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	i32 %12
DSWP:    Pre loop env 2, producer:	  %250 = add nsw i32 %132, -1, !pdg.inst.id !262
DSWP:    Pre loop env 3, producer:	  %246 = phi i32 [ %238, %237 ], [ %209, %207 ], !pdg.inst.id !488
DSWP:    Pre loop env 4, producer:	i32* %1
DSWP:    Pre loop env 5, producer:	  %247 = phi double [ %220, %237 ], [ 0.000000e+00, %207 ], !pdg.inst.id !531
DSWP:    Pre loop env 6, producer:	  %248 = getelementptr inbounds i32, i32* %136, i64 %245, !pdg.inst.id !307
DSWP:    Pre loop env 7, producer:	i32* %2
DSWP:    Pre loop env 8, producer:	  %283 = add i32 %137, -1, !pdg.inst.id !321
DSWP:    Pre loop env 9, producer:	double* %10
DSWP:    Pre loop env 10, producer:	  %284 = sext i32 %132 to i64, !pdg.inst.id !250
DSWP:    Pre loop env 11, producer:	  %118 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @31(i8*, i8*) {
  %3 = bitcast i8* %0 to [88 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32**
  %16 = load i32*, i32** %15
  %17 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to double*
  %19 = load double, double* %18
  %20 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 40
  %21 = bitcast i64* %20 to i32**
  %22 = load i32*, i32** %21
  %23 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 48
  %24 = bitcast i64* %23 to i32**
  %25 = load i32*, i32** %24
  %26 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 56
  %27 = bitcast i64* %26 to i32*
  %28 = load i32, i32* %27
  %29 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 64
  %30 = bitcast i64* %29 to double**
  %31 = load double*, double** %30
  %32 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 72
  %33 = load i64, i64* %32
  %34 = getelementptr inbounds [88 x i64], [88 x i64]* %3, i64 0, i64 80
  %35 = load i64, i64* %34
  br label %38

36:                                               ; preds = %37
  ret void

37:                                               ; preds = %61
  br label %36

38:                                               ; preds = %2, %61
  %39 = phi i64 [ %64, %61 ], [ %33, %2 ], !pdg.inst.id !30
  %40 = phi i32 [ %63, %61 ], [ %13, %2 ], !pdg.inst.id !31
  %41 = phi i32 [ %62, %61 ], [ %10, %2 ], !pdg.inst.id !32
  %42 = getelementptr inbounds i32, i32* %25, i64 %39, !pdg.inst.id !33
  %43 = load i32, i32* %42, align 4, !tbaa !34, !pdg.inst.id !38
  %44 = load i32, i32* %22, align 4, !tbaa !34, !pdg.inst.id !39
  %45 = icmp eq i32 %43, %44, !pdg.inst.id !40
  br i1 %45, label %46, label %47, !prof !41, !pdg.inst.id !42

46:                                               ; preds = %38
  br label %61, !pdg.inst.id !43

47:                                               ; preds = %38
  %48 = mul nsw i32 %43, %7, !pdg.inst.id !44
  %49 = add i32 %28, %48, !pdg.inst.id !45
  %50 = sext i32 %49 to i64, !pdg.inst.id !46
  %51 = getelementptr inbounds double, double* %31, i64 %50, !pdg.inst.id !47
  %52 = load double, double* %51, align 8, !tbaa !48, !pdg.inst.id !50
  %53 = fcmp fast olt double %52, %19, !pdg.inst.id !51
  %54 = add nsw i32 %40, 1, !pdg.inst.id !52
  %55 = add nsw i32 %41, 1, !pdg.inst.id !53
  %56 = select i1 %53, i32 %55, i32 %54, !prof !54, !pdg.inst.id !55
  %57 = select i1 %53, i32 %55, i32 %41, !prof !54, !pdg.inst.id !56
  %58 = select i1 %53, i32 %40, i32 %54, !prof !54, !pdg.inst.id !57
  %59 = sext i32 %56 to i64, !pdg.inst.id !58
  %60 = getelementptr inbounds i32, i32* %16, i64 %59, !pdg.inst.id !59
  store i32 %43, i32* %60, align 4, !tbaa !34, !pdg.inst.id !60
  br label %61, !pdg.inst.id !61

61:                                               ; preds = %46, %47
  %62 = phi i32 [ %41, %46 ], [ %57, %47 ], !pdg.inst.id !62
  %63 = phi i32 [ %40, %46 ], [ %58, %47 ], !pdg.inst.id !63
  %64 = add nsw i64 %39, 1, !pdg.inst.id !64
  %65 = icmp slt i64 %39, %35, !pdg.inst.id !65
  br i1 %65, label %38, label %37, !prof !66, !pdg.inst.id !67
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [88 x i64]
  %15 = bitcast [88 x i64]* %14 to i8*
  %16 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32*
  %22 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32**
  %24 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to double*
  %26 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32**
  %28 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 48
  %29 = bitcast i64* %28 to i32**
  %30 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 56
  %31 = bitcast i64* %30 to i32*
  %32 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 64
  %33 = bitcast i64* %32 to double**
  %34 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 72
  %35 = getelementptr inbounds [88 x i64], [88 x i64]* %14, i64 0, i64 80
  %36 = alloca [64 x i64]
  %37 = bitcast [64 x i64]* %36 to i8*
  %38 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 0
  %39 = bitcast i64* %38 to i32**
  %40 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 8
  %41 = bitcast i64* %40 to i32*
  %42 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 16
  %43 = bitcast i64* %42 to i32**
  %44 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 24
  %45 = bitcast i64* %44 to i32*
  %46 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 32
  %47 = bitcast i64* %46 to i32**
  %48 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 40
  %49 = bitcast i64* %48 to i32*
  %50 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 48
  %51 = getelementptr inbounds [64 x i64], [64 x i64]* %36, i64 0, i64 56
  %52 = alloca [88 x i64]
  %53 = bitcast [88 x i64]* %52 to i8*
  %54 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 0
  %55 = bitcast i64* %54 to i32*
  %56 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 8
  %57 = bitcast i64* %56 to i32*
  %58 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 16
  %59 = bitcast i64* %58 to double*
  %60 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 24
  %61 = bitcast i64* %60 to i32**
  %62 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 32
  %63 = bitcast i64* %62 to i32*
  %64 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 40
  %65 = bitcast i64* %64 to i32**
  %66 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 48
  %67 = bitcast i64* %66 to i32*
  %68 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 56
  %69 = bitcast i64* %68 to i32**
  %70 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 64
  %71 = bitcast i64* %70 to double**
  %72 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 72
  %73 = getelementptr inbounds [88 x i64], [88 x i64]* %52, i64 0, i64 80
  %74 = alloca [72 x i64]
  %75 = bitcast [72 x i64]* %74 to i8*
  %76 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 0
  %77 = bitcast i64* %76 to double**
  %78 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 8
  %79 = bitcast i64* %78 to i32*
  %80 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 16
  %81 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 24
  %82 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 32
  %83 = bitcast i64* %82 to i32*
  %84 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 40
  %85 = bitcast i64* %84 to i32**
  %86 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 48
  %87 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 56
  %88 = bitcast i64* %87 to double*
  %89 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 64
  %90 = bitcast i64* %89 to i32*
  %91 = alloca [184 x i64]
  %92 = bitcast [184 x i64]* %91 to i8*
  %93 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 0
  %94 = bitcast i64* %93 to i32*
  %95 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 8
  %96 = bitcast i64* %95 to i32*
  %97 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 16
  %98 = bitcast i64* %97 to %struct.kdnode**
  %99 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 24
  %100 = bitcast i64* %99 to %struct.kdnode***
  %101 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 32
  %102 = bitcast i64* %101 to i32*
  %103 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 40
  %104 = bitcast i64* %103 to i32**
  %105 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 48
  %106 = bitcast i64* %105 to i32*
  %107 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 56
  %108 = bitcast i64* %107 to i32**
  %109 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 64
  %110 = bitcast i64* %109 to i32*
  %111 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 72
  %112 = bitcast i64* %111 to i32**
  %113 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 80
  %114 = bitcast i64* %113 to i32**
  %115 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 88
  %116 = bitcast i64* %115 to i32**
  %117 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 96
  %118 = bitcast i64* %117 to i32**
  %119 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 104
  %120 = bitcast i64* %119 to i1*
  %121 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 112
  %122 = bitcast i64* %121 to %struct.kdnode**
  %123 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 120
  %124 = bitcast i64* %123 to i32*
  %125 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 128
  %126 = bitcast i64* %125 to i32*
  %127 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 136
  %128 = bitcast i64* %127 to i32**
  %129 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 144
  %130 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 152
  %131 = bitcast i64* %130 to double**
  %132 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 160
  %133 = bitcast i64* %132 to i32**
  %134 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 168
  %135 = bitcast i64* %134 to %struct.kdnode**
  %136 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 176
  %137 = bitcast i64* %136 to i32*
  %138 = add nsw i32 %12, 1, !pdg.inst.id !181
  %139 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %140 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %139, label %145, label %141, !prof !7088, !pdg.inst.id !185

141:                                              ; preds = %13
  %142 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %143 = load i32, i32* @9
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %526, label %151

.loopexit16:                                      ; preds = %547, %511
  %.lcssa88 = phi %struct.kdnode* [ %516, %511 ], [ %546, %547 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %155, %511 ], [ %544, %547 ], !pdg.inst.id !225
  br label %145, !pdg.inst.id !6401

145:                                              ; preds = %.loopexit16, %13
  %146 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %147 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %148 = getelementptr inbounds i32, i32* %146, i64 %140, !pdg.inst.id !187
  %149 = load i32, i32* %148, align 4, !tbaa !7089, !pdg.inst.id !230
  %150 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %147, i64 0, i32 0, !pdg.inst.id !228
  store i32 %149, i32* %150, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %525, !pdg.inst.id !6410

151:                                              ; preds = %141, %511
  %152 = phi i32 [ %520, %511 ], [ %11, %141 ], !pdg.inst.id !162
  %153 = phi %struct.kdnode* [ %516, %511 ], [ %9, %141 ], !pdg.inst.id !142
  %154 = phi i32 [ %519, %511 ], [ %6, %141 ], !pdg.inst.id !83
  %155 = phi i32* [ %523, %511 ], [ %5, %141 ], !pdg.inst.id !81
  %156 = phi i32* [ %522, %511 ], [ %4, %141 ], !pdg.inst.id !79
  %157 = phi i32* [ %521, %511 ], [ %3, %141 ], !pdg.inst.id !77
  %158 = phi i32* [ %155, %511 ], [ %0, %141 ], !pdg.inst.id !53
  %159 = srem i32 %152, %138, !pdg.inst.id !183
  %160 = add nsw i32 %154, 1, !pdg.inst.id !264
  %161 = icmp eq i32 %160, %7, !pdg.inst.id !96
  br i1 %161, label %162, label %229, !prof !7096, !pdg.inst.id !334

162:                                              ; preds = %547, %151
  %.lcssa85 = phi %struct.kdnode* [ %153, %151 ], [ %541, %547 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %154, %151 ], [ %542, %547 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %158, %151 ], [ %545, %547 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %159, %151 ], [ %543, %547 ], !pdg.inst.id !315
  %163 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %164 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %165 = getelementptr inbounds i32, i32* %.lcssa76, i64 %164, !pdg.inst.id !352
  %166 = load i32, i32* %165, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %163, label %167, label %171, !prof !7097, !pdg.inst.id !361

167:                                              ; preds = %162
  %168 = getelementptr inbounds i32, i32* %.lcssa76, i64 %140, !pdg.inst.id !207
  %169 = load i32, i32* %168, align 4, !tbaa !7089, !pdg.inst.id !376
  %170 = icmp slt i32 %166, %169, !pdg.inst.id !374
  br i1 %170, label %186, label %199, !pdg.inst.id !382

171:                                              ; preds = %162
  %172 = mul nsw i32 %166, %12, !pdg.inst.id !166
  %173 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %174 = add i32 %173, %172, !pdg.inst.id !384
  %175 = sext i32 %174 to i64, !pdg.inst.id !389
  %176 = getelementptr inbounds double, double* %10, i64 %175, !pdg.inst.id !144
  %177 = load double, double* %176, align 8, !tbaa !7098, !pdg.inst.id !283
  %178 = getelementptr inbounds i32, i32* %.lcssa76, i64 %140, !pdg.inst.id !205
  %179 = load i32, i32* %178, align 4, !tbaa !7089, !pdg.inst.id !397
  %180 = mul nsw i32 %179, %12, !pdg.inst.id !164
  %181 = add i32 %173, %180, !pdg.inst.id !386
  %182 = sext i32 %181 to i64, !pdg.inst.id !402
  %183 = getelementptr inbounds double, double* %10, i64 %182, !pdg.inst.id !146
  %184 = load double, double* %183, align 8, !tbaa !7098, !pdg.inst.id !405
  %185 = fcmp fast olt double %177, %184, !pdg.inst.id !395
  br i1 %185, label %186, label %201, !prof !7100, !pdg.inst.id !409

186:                                              ; preds = %171, %167
  %187 = phi %struct.kdnode* [ %.lcssa85, %171 ], [ %.lcssa85, %167 ], !pdg.inst.id !342
  %188 = phi i32 [ %179, %171 ], [ %169, %167 ], !pdg.inst.id !378
  %189 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %188, i32* %189, align 8, !tbaa !7093, !pdg.inst.id !413
  %190 = load i32, i32* %165, align 4, !tbaa !7089, !pdg.inst.id !364
  %191 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %192 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %191, i64 0, i32 0, !pdg.inst.id !420
  store i32 %190, i32* %192, align 8, !tbaa !7093, !pdg.inst.id !416
  %193 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %191, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %193, align 8, !tbaa !7102, !pdg.inst.id !423
  %194 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %195 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %194, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %195, align 8, !tbaa !7103, !pdg.inst.id !427
  %196 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %197 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %196, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %197, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %198 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %187, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %196, %struct.kdnode** %198, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %525, !pdg.inst.id !6480

199:                                              ; preds = %167
  %200 = icmp sgt i32 %166, %169, !pdg.inst.id !371
  br i1 %200, label %203, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %199
  br label %216, !pdg.inst.id !6511

201:                                              ; preds = %171
  %202 = fcmp fast ogt double %177, %184, !pdg.inst.id !393
  br i1 %202, label %203, label %216, !pdg.inst.id !437

203:                                              ; preds = %201, %199
  %204 = phi i32* [ %.lcssa76, %201 ], [ %.lcssa76, %199 ], !pdg.inst.id !354
  %205 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %166, i32* %205, align 8, !tbaa !7093, !pdg.inst.id !367
  %206 = getelementptr inbounds i32, i32* %204, i64 %140, !pdg.inst.id !211
  %207 = load i32, i32* %206, align 4, !tbaa !7089, !pdg.inst.id !441
  %208 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %209 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %208, i64 0, i32 0, !pdg.inst.id !447
  store i32 %207, i32* %209, align 8, !tbaa !7093, !pdg.inst.id !443
  %210 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %208, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %210, align 8, !tbaa !7102, !pdg.inst.id !450
  %211 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %212 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %211, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %212, align 8, !tbaa !7103, !pdg.inst.id !454
  %213 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %214 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %213, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %214, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %215 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %213, %struct.kdnode** %215, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %525, !pdg.inst.id !6525

216:                                              ; preds = %._crit_edge9, %201
  %217 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %201 ], !pdg.inst.id !344
  %218 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %166, i32* %218, align 8, !tbaa !7093, !pdg.inst.id !369
  %219 = getelementptr inbounds i32, i32* %.lcssa76, i64 %140, !pdg.inst.id !209
  %220 = load i32, i32* %219, align 4, !tbaa !7089, !pdg.inst.id !465
  %221 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %222 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %221, i64 0, i32 0, !pdg.inst.id !471
  store i32 %220, i32* %222, align 8, !tbaa !7093, !pdg.inst.id !467
  %223 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %221, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %223, align 8, !tbaa !7102, !pdg.inst.id !474
  %224 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %225 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %224, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %225, align 8, !tbaa !7103, !pdg.inst.id !478
  %226 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %227 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %226, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %227, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %228 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %217, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %226, %struct.kdnode** %228, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %525, !pdg.inst.id !6572

229:                                              ; preds = %151
  %230 = add nsw i32 %154, %7, !pdg.inst.id !94
  %231 = sdiv i32 %230, 2, !pdg.inst.id !486
  %232 = icmp eq i32 %159, 0, !pdg.inst.id !327
  %233 = sext i32 %231 to i64, !pdg.inst.id !490
  %234 = getelementptr inbounds i32, i32* %158, i64 %233, !pdg.inst.id !311
  %235 = load i32, i32* %234, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %232, label %265, label %236, !prof !7104, !pdg.inst.id !500

236:                                              ; preds = %229
  %237 = mul nsw i32 %235, %12, !pdg.inst.id !176
  %238 = add nsw i32 %159, -1, !pdg.inst.id !325
  %239 = add i32 %238, %237, !pdg.inst.id !521
  %240 = sext i32 %239 to i64, !pdg.inst.id !526
  %241 = getelementptr inbounds double, double* %10, i64 %240, !pdg.inst.id !148
  %242 = load double, double* %241, align 8, !tbaa !7098, !pdg.inst.id !529
  %243 = sext i32 %154 to i64, !pdg.inst.id !254
  %244 = load i32, i32* @10
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %551, label %246

246:                                              ; preds = %236, %250
  %247 = phi i64 [ %248, %250 ], [ %233, %236 ], !pdg.inst.id !504
  %248 = add nsw i64 %247, -1, !pdg.inst.id !542
  %249 = icmp sgt i64 %247, %243, !pdg.inst.id !535
  br i1 %249, label %250, label %.loopexit1, !prof !7105, !pdg.inst.id !546

250:                                              ; preds = %246
  %251 = getelementptr inbounds i32, i32* %158, i64 %248, !pdg.inst.id !309
  %252 = load i32, i32* %251, align 4, !tbaa !7089, !pdg.inst.id !548
  %253 = mul nsw i32 %252, %12, !pdg.inst.id !174
  %254 = add i32 %238, %253, !pdg.inst.id !523
  %255 = sext i32 %254 to i64, !pdg.inst.id !552
  %256 = getelementptr inbounds double, double* %10, i64 %255, !pdg.inst.id !150
  %257 = load double, double* %256, align 8, !tbaa !7098, !pdg.inst.id !555
  %258 = fcmp fast olt double %257, %242, !pdg.inst.id !533
  br i1 %258, label %._crit_edge8, label %246, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %567, %250
  %.lcssa3 = phi i64 [ %247, %250 ], [ %566, %567 ], !pdg.inst.id !537
  br label %259, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %567, %246
  %.lcssa2 = phi i64 [ %247, %246 ], [ %566, %567 ], !pdg.inst.id !539
  br label %259, !pdg.inst.id !6633

259:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %260 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %261 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %262 = ashr exact i64 %261, 32, !pdg.inst.id !568
  %263 = getelementptr inbounds i32, i32* %158, i64 %262, !pdg.inst.id !303
  %264 = load i32, i32* %263, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %265, !pdg.inst.id !6614

265:                                              ; preds = %259, %229
  %266 = phi i32 [ %264, %259 ], [ %235, %229 ], !pdg.inst.id !509
  %267 = phi i64 [ %262, %259 ], [ %233, %229 ], !pdg.inst.id !502
  %268 = phi i32 [ %260, %259 ], [ %231, %229 ], !pdg.inst.id !488
  %269 = phi double [ %242, %259 ], [ 0.000000e+00, %229 ], !pdg.inst.id !531
  %270 = getelementptr inbounds i32, i32* %158, i64 %267, !pdg.inst.id !307
  %271 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %153, i64 0, i32 0, !pdg.inst.id !238
  store i32 %266, i32* %271, align 8, !tbaa !7093, !pdg.inst.id !575
  %272 = add nsw i32 %154, -1, !pdg.inst.id !262
  %273 = icmp sgt i32 %154, %7, !pdg.inst.id !92
  br i1 %273, label %438, label %274, !prof !7106, !pdg.inst.id !649

274:                                              ; preds = %265
  %275 = add i32 %159, -1, !pdg.inst.id !323
  %276 = sext i32 %154 to i64, !pdg.inst.id !252
  br i1 %232, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %274
  %277 = load i32, i32* @11
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %571, label %331

.preheader11:                                     ; preds = %274
  %279 = load i32, i32* @12
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %587, label %281

281:                                              ; preds = %.preheader11, %298
  %282 = phi i64 [ %301, %298 ], [ %276, %.preheader11 ], !pdg.inst.id !655
  %283 = phi i32 [ %300, %298 ], [ %268, %.preheader11 ], !pdg.inst.id !580
  %284 = phi i32 [ %299, %298 ], [ %272, %.preheader11 ], !pdg.inst.id !627
  %285 = getelementptr inbounds i32, i32* %1, i64 %282, !pdg.inst.id !59
  %286 = load i32, i32* %285, align 4, !tbaa !7089, !pdg.inst.id !673
  %287 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !614
  %288 = icmp eq i32 %286, %287, !pdg.inst.id !678
  br i1 %288, label %._crit_edge2, label %289, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %281
  br label %298, !pdg.inst.id !6674

289:                                              ; preds = %281
  %290 = icmp slt i32 %286, %235, !pdg.inst.id !517
  %291 = add nsw i32 %284, 1, !pdg.inst.id !671
  %292 = add nsw i32 %283, 1, !pdg.inst.id !665
  %293 = select i1 %290, i32 %291, i32 %292, !prof !7108, !pdg.inst.id !685
  %294 = select i1 %290, i32 %291, i32 %284, !prof !7108, !pdg.inst.id !667
  %295 = select i1 %290, i32 %283, i32 %292, !prof !7108, !pdg.inst.id !661
  %296 = sext i32 %293 to i64, !pdg.inst.id !691
  %297 = getelementptr inbounds i32, i32* %155, i64 %296, !pdg.inst.id !271
  store i32 %286, i32* %297, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %298, !pdg.inst.id !6685

298:                                              ; preds = %._crit_edge2, %289
  %299 = phi i32 [ %284, %._crit_edge2 ], [ %294, %289 ], !pdg.inst.id !669
  %300 = phi i32 [ %283, %._crit_edge2 ], [ %295, %289 ], !pdg.inst.id !663
  %301 = add nsw i64 %282, 1, !pdg.inst.id !659
  %302 = icmp slt i64 %282, %140, !pdg.inst.id !191
  br i1 %302, label %281, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %602, %298
  br label %303, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %586, %353
  br label %303, !pdg.inst.id !6697

303:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %273, label %438, label %304, !prof !7106, !pdg.inst.id !647

304:                                              ; preds = %303
  %305 = add i32 %159, -1, !pdg.inst.id !321
  %306 = sext i32 %154 to i64, !pdg.inst.id !250
  br i1 %232, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %304
  %307 = load i32, i32* @13
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %603, label %384

.preheader7:                                      ; preds = %304
  br label %309, !pdg.inst.id !6703

309:                                              ; preds = %.preheader7, %326
  %310 = phi i64 [ %329, %326 ], [ %306, %.preheader7 ], !pdg.inst.id !706
  %311 = phi i32 [ %328, %326 ], [ %268, %.preheader7 ], !pdg.inst.id !584
  %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
  %313 = getelementptr inbounds i32, i32* %2, i64 %310, !pdg.inst.id !71
  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
  %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
  %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
  br i1 %316, label %._crit_edge5, label %317, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %309
  br label %326, !pdg.inst.id !6724

317:                                              ; preds = %309
  %318 = icmp slt i32 %314, %235, !pdg.inst.id !515
  %319 = add nsw i32 %312, 1, !pdg.inst.id !722
  %320 = add nsw i32 %311, 1, !pdg.inst.id !716
  %321 = select i1 %318, i32 %319, i32 %320, !prof !7108, !pdg.inst.id !736
  %322 = select i1 %318, i32 %319, i32 %312, !prof !7108, !pdg.inst.id !718
  %323 = select i1 %318, i32 %311, i32 %320, !prof !7108, !pdg.inst.id !712
  %324 = sext i32 %321 to i64, !pdg.inst.id !742
  %325 = getelementptr inbounds i32, i32* %1, i64 %324, !pdg.inst.id !57
  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %326, !pdg.inst.id !6735

326:                                              ; preds = %._crit_edge5, %317
  %327 = phi i32 [ %312, %._crit_edge5 ], [ %322, %317 ], !pdg.inst.id !720
  %328 = phi i32 [ %311, %._crit_edge5 ], [ %323, %317 ], !pdg.inst.id !714
  %329 = add nsw i64 %310, 1, !pdg.inst.id !710
  %330 = icmp slt i64 %310, %140, !pdg.inst.id !195
  br i1 %330, label %309, label %.loopexit8, !prof !7109, !pdg.inst.id !751

331:                                              ; preds = %.preheader13, %353
  %332 = phi i64 [ %356, %353 ], [ %276, %.preheader13 ], !pdg.inst.id !653
  %333 = phi i32 [ %355, %353 ], [ %268, %.preheader13 ], !pdg.inst.id !578
  %334 = phi i32 [ %354, %353 ], [ %272, %.preheader13 ], !pdg.inst.id !625
  %335 = getelementptr inbounds i32, i32* %1, i64 %332, !pdg.inst.id !61
  %336 = load i32, i32* %335, align 4, !tbaa !7089, !pdg.inst.id !769
  %337 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !622
  %338 = icmp eq i32 %336, %337, !pdg.inst.id !774
  br i1 %338, label %._crit_edge, label %339, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %331
  br label %353, !pdg.inst.id !6762

339:                                              ; preds = %331
  %340 = mul nsw i32 %336, %12, !pdg.inst.id !172
  %341 = add i32 %275, %340, !pdg.inst.id !651
  %342 = sext i32 %341 to i64, !pdg.inst.id !780
  %343 = getelementptr inbounds double, double* %10, i64 %342, !pdg.inst.id !152
  %344 = load double, double* %343, align 8, !tbaa !7098, !pdg.inst.id !783
  %345 = fcmp fast olt double %344, %269, !pdg.inst.id !606
  %346 = add nsw i32 %333, 1, !pdg.inst.id !761
  %347 = add nsw i32 %334, 1, !pdg.inst.id !767
  %348 = select i1 %345, i32 %347, i32 %346, !prof !7111, !pdg.inst.id !788
  %349 = select i1 %345, i32 %347, i32 %334, !prof !7111, !pdg.inst.id !763
  %350 = select i1 %345, i32 %333, i32 %346, !prof !7111, !pdg.inst.id !757
  %351 = sext i32 %348 to i64, !pdg.inst.id !794
  %352 = getelementptr inbounds i32, i32* %155, i64 %351, !pdg.inst.id !269
  store i32 %336, i32* %352, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %353, !pdg.inst.id !6778

353:                                              ; preds = %._crit_edge, %339
  %354 = phi i32 [ %334, %._crit_edge ], [ %349, %339 ], !pdg.inst.id !765
  %355 = phi i32 [ %333, %._crit_edge ], [ %350, %339 ], !pdg.inst.id !759
  %356 = add nsw i64 %332, 1, !pdg.inst.id !755
  %357 = icmp slt i64 %332, %140, !pdg.inst.id !189
  br i1 %357, label %331, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %326
  br label %358, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %618, %406
  br label %358, !pdg.inst.id !6792

358:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %273, label %438, label %359, !prof !7106, !pdg.inst.id !645

359:                                              ; preds = %358
  %360 = add i32 %159, -1, !pdg.inst.id !319
  %361 = sext i32 %154 to i64, !pdg.inst.id !248
  br i1 %232, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %359
  br label %411, !pdg.inst.id !6796

.preheader3:                                      ; preds = %359
  br label %362, !pdg.inst.id !6798

362:                                              ; preds = %.preheader3, %379
  %363 = phi i64 [ %382, %379 ], [ %361, %.preheader3 ], !pdg.inst.id !809
  %364 = phi i32 [ %381, %379 ], [ %268, %.preheader3 ], !pdg.inst.id !588
  %365 = phi i32 [ %380, %379 ], [ %272, %.preheader3 ], !pdg.inst.id !635
  %366 = getelementptr inbounds i32, i32* %157, i64 %363, !pdg.inst.id !299
  %367 = load i32, i32* %366, align 4, !tbaa !7089, !pdg.inst.id !827
  %368 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !610
  %369 = icmp eq i32 %367, %368, !pdg.inst.id !832
  br i1 %369, label %._crit_edge7, label %370, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %362
  br label %379, !pdg.inst.id !6819

370:                                              ; preds = %362
  %371 = icmp slt i32 %367, %235, !pdg.inst.id !513
  %372 = add nsw i32 %365, 1, !pdg.inst.id !825
  %373 = add nsw i32 %364, 1, !pdg.inst.id !819
  %374 = select i1 %371, i32 %372, i32 %373, !prof !7108, !pdg.inst.id !839
  %375 = select i1 %371, i32 %372, i32 %365, !prof !7108, !pdg.inst.id !821
  %376 = select i1 %371, i32 %364, i32 %373, !prof !7108, !pdg.inst.id !815
  %377 = sext i32 %374 to i64, !pdg.inst.id !845
  %378 = getelementptr inbounds i32, i32* %2, i64 %377, !pdg.inst.id !69
  store i32 %367, i32* %378, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %379, !pdg.inst.id !6830

379:                                              ; preds = %._crit_edge7, %370
  %380 = phi i32 [ %365, %._crit_edge7 ], [ %375, %370 ], !pdg.inst.id !823
  %381 = phi i32 [ %364, %._crit_edge7 ], [ %376, %370 ], !pdg.inst.id !817
  %382 = add nsw i64 %363, 1, !pdg.inst.id !813
  %383 = icmp slt i64 %363, %140, !pdg.inst.id !199
  br i1 %383, label %362, label %.loopexit4, !prof !7109, !pdg.inst.id !858

384:                                              ; preds = %.preheader9, %406
  %385 = phi i64 [ %409, %406 ], [ %306, %.preheader9 ], !pdg.inst.id !704
  %386 = phi i32 [ %408, %406 ], [ %268, %.preheader9 ], !pdg.inst.id !582
  %387 = phi i32 [ %407, %406 ], [ %272, %.preheader9 ], !pdg.inst.id !629
  %388 = getelementptr inbounds i32, i32* %2, i64 %385, !pdg.inst.id !73
  %389 = load i32, i32* %388, align 4, !tbaa !7089, !pdg.inst.id !876
  %390 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !620
  %391 = icmp eq i32 %389, %390, !pdg.inst.id !881
  br i1 %391, label %._crit_edge4, label %392, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %384
  br label %406, !pdg.inst.id !6857

392:                                              ; preds = %384
  %393 = mul nsw i32 %389, %12, !pdg.inst.id !170
  %394 = add i32 %305, %393, !pdg.inst.id !702
  %395 = sext i32 %394 to i64, !pdg.inst.id !887
  %396 = getelementptr inbounds double, double* %10, i64 %395, !pdg.inst.id !154
  %397 = load double, double* %396, align 8, !tbaa !7098, !pdg.inst.id !890
  %398 = fcmp fast olt double %397, %269, !pdg.inst.id !604
  %399 = add nsw i32 %386, 1, !pdg.inst.id !868
  %400 = add nsw i32 %387, 1, !pdg.inst.id !874
  %401 = select i1 %398, i32 %400, i32 %399, !prof !7111, !pdg.inst.id !895
  %402 = select i1 %398, i32 %400, i32 %387, !prof !7111, !pdg.inst.id !870
  %403 = select i1 %398, i32 %386, i32 %399, !prof !7111, !pdg.inst.id !864
  %404 = sext i32 %401 to i64, !pdg.inst.id !901
  %405 = getelementptr inbounds i32, i32* %1, i64 %404, !pdg.inst.id !55
  store i32 %389, i32* %405, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %406, !pdg.inst.id !6873

406:                                              ; preds = %._crit_edge4, %392
  %407 = phi i32 [ %387, %._crit_edge4 ], [ %402, %392 ], !pdg.inst.id !872
  %408 = phi i32 [ %386, %._crit_edge4 ], [ %403, %392 ], !pdg.inst.id !866
  %409 = add nsw i64 %385, 1, !pdg.inst.id !862
  %410 = icmp slt i64 %385, %140, !pdg.inst.id !193
  br i1 %410, label %384, label %.loopexit10, !prof !7112, !pdg.inst.id !910

411:                                              ; preds = %.preheader5, %433
  %412 = phi i64 [ %436, %433 ], [ %361, %.preheader5 ], !pdg.inst.id !807
  %413 = phi i32 [ %435, %433 ], [ %268, %.preheader5 ], !pdg.inst.id !586
  %414 = phi i32 [ %434, %433 ], [ %272, %.preheader5 ], !pdg.inst.id !633
  %415 = getelementptr inbounds i32, i32* %157, i64 %412, !pdg.inst.id !297
  %416 = load i32, i32* %415, align 4, !tbaa !7089, !pdg.inst.id !928
  %417 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !618
  %418 = icmp eq i32 %416, %417, !pdg.inst.id !933
  br i1 %418, label %._crit_edge6, label %419, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %411
  br label %433, !pdg.inst.id !6899

419:                                              ; preds = %411
  %420 = mul nsw i32 %416, %12, !pdg.inst.id !168
  %421 = add i32 %360, %420, !pdg.inst.id !805
  %422 = sext i32 %421 to i64, !pdg.inst.id !939
  %423 = getelementptr inbounds double, double* %10, i64 %422, !pdg.inst.id !156
  %424 = load double, double* %423, align 8, !tbaa !7098, !pdg.inst.id !942
  %425 = fcmp fast olt double %424, %269, !pdg.inst.id !602
  %426 = add nsw i32 %413, 1, !pdg.inst.id !920
  %427 = add nsw i32 %414, 1, !pdg.inst.id !926
  %428 = select i1 %425, i32 %427, i32 %426, !prof !7111, !pdg.inst.id !947
  %429 = select i1 %425, i32 %427, i32 %414, !prof !7111, !pdg.inst.id !922
  %430 = select i1 %425, i32 %413, i32 %426, !prof !7111, !pdg.inst.id !916
  %431 = sext i32 %428 to i64, !pdg.inst.id !953
  %432 = getelementptr inbounds i32, i32* %2, i64 %431, !pdg.inst.id !67
  store i32 %416, i32* %432, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %433, !pdg.inst.id !6915

433:                                              ; preds = %._crit_edge6, %419
  %434 = phi i32 [ %414, %._crit_edge6 ], [ %429, %419 ], !pdg.inst.id !924
  %435 = phi i32 [ %413, %._crit_edge6 ], [ %430, %419 ], !pdg.inst.id !918
  %436 = add nsw i64 %412, 1, !pdg.inst.id !914
  %437 = icmp slt i64 %412, %140, !pdg.inst.id !197
  br i1 %437, label %411, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %379
  %.lcssa68 = phi i32 [ %380, %379 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %381, %379 ], !pdg.inst.id !854
  br label %438, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %433
  %.lcssa66 = phi i32 [ %434, %433 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %435, %433 ], !pdg.inst.id !962
  br label %438, !pdg.inst.id !6933

438:                                              ; preds = %.loopexit6, %.loopexit4, %265, %303, %358
  %439 = phi i32 [ %272, %358 ], [ %272, %303 ], [ %272, %265 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %440 = phi i32 [ %268, %358 ], [ %268, %303 ], [ %268, %265 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %142, label %441, label %494, !prof !7106, !pdg.inst.id !221

441:                                              ; preds = %438
  br i1 %273, label %.loopexit15, label %442, !pdg.inst.id !643

442:                                              ; preds = %441
  %443 = add i32 %159, -1, !pdg.inst.id !317
  %444 = sext i32 %154 to i64, !pdg.inst.id !246
  br i1 %232, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %442
  br label %467, !pdg.inst.id !6942

.preheader:                                       ; preds = %442
  br label %445, !pdg.inst.id !6944

445:                                              ; preds = %.preheader, %462
  %446 = phi i64 [ %465, %462 ], [ %444, %.preheader ], !pdg.inst.id !980
  %447 = phi i32 [ %464, %462 ], [ %268, %.preheader ], !pdg.inst.id !592
  %448 = phi i32 [ %463, %462 ], [ %272, %.preheader ], !pdg.inst.id !639
  %449 = getelementptr inbounds i32, i32* %156, i64 %446, !pdg.inst.id !287
  %450 = load i32, i32* %449, align 4, !tbaa !7089, !pdg.inst.id !998
  %451 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !608
  %452 = icmp eq i32 %450, %451, !pdg.inst.id !1003
  br i1 %452, label %._crit_edge3, label %453, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %445
  br label %462, !pdg.inst.id !6965

453:                                              ; preds = %445
  %454 = icmp slt i32 %450, %235, !pdg.inst.id !511
  %455 = add nsw i32 %448, 1, !pdg.inst.id !996
  %456 = add nsw i32 %447, 1, !pdg.inst.id !990
  %457 = select i1 %454, i32 %455, i32 %456, !pdg.inst.id !1010
  %458 = select i1 %454, i32 %455, i32 %448, !pdg.inst.id !992
  %459 = select i1 %454, i32 %447, i32 %456, !pdg.inst.id !986
  %460 = sext i32 %457 to i64, !pdg.inst.id !1016
  %461 = getelementptr inbounds i32, i32* %157, i64 %460, !pdg.inst.id !291
  store i32 %450, i32* %461, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %462, !pdg.inst.id !6976

462:                                              ; preds = %._crit_edge3, %453
  %463 = phi i32 [ %448, %._crit_edge3 ], [ %458, %453 ], !pdg.inst.id !994
  %464 = phi i32 [ %447, %._crit_edge3 ], [ %459, %453 ], !pdg.inst.id !988
  %465 = add nsw i64 %446, 1, !pdg.inst.id !984
  %466 = icmp slt i64 %446, %140, !pdg.inst.id !203
  br i1 %466, label %445, label %.loopexit, !pdg.inst.id !1029

467:                                              ; preds = %.preheader1, %489
  %468 = phi i64 [ %492, %489 ], [ %444, %.preheader1 ], !pdg.inst.id !978
  %469 = phi i32 [ %491, %489 ], [ %268, %.preheader1 ], !pdg.inst.id !590
  %470 = phi i32 [ %490, %489 ], [ %272, %.preheader1 ], !pdg.inst.id !637
  %471 = getelementptr inbounds i32, i32* %156, i64 %468, !pdg.inst.id !285
  %472 = load i32, i32* %471, align 4, !tbaa !7089, !pdg.inst.id !1047
  %473 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !616
  %474 = icmp eq i32 %472, %473, !pdg.inst.id !1053
  br i1 %474, label %._crit_edge1, label %475, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %467
  br label %489, !pdg.inst.id !7001

475:                                              ; preds = %467
  %476 = shl i32 %472, 2, !pdg.inst.id !1051
  %477 = add i32 %443, %476, !pdg.inst.id !976
  %478 = sext i32 %477 to i64, !pdg.inst.id !1059
  %479 = getelementptr inbounds double, double* %10, i64 %478, !pdg.inst.id !158
  %480 = load double, double* %479, align 8, !tbaa !7098, !pdg.inst.id !1062
  %481 = fcmp fast olt double %480, %269, !pdg.inst.id !600
  %482 = add nsw i32 %469, 1, !pdg.inst.id !1039
  %483 = add nsw i32 %470, 1, !pdg.inst.id !1045
  %484 = select i1 %481, i32 %483, i32 %482, !pdg.inst.id !1067
  %485 = select i1 %481, i32 %483, i32 %470, !pdg.inst.id !1041
  %486 = select i1 %481, i32 %469, i32 %482, !pdg.inst.id !1035
  %487 = sext i32 %484 to i64, !pdg.inst.id !1073
  %488 = getelementptr inbounds i32, i32* %157, i64 %487, !pdg.inst.id !289
  store i32 %472, i32* %488, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %489, !pdg.inst.id !7017

489:                                              ; preds = %._crit_edge1, %475
  %490 = phi i32 [ %470, %._crit_edge1 ], [ %485, %475 ], !pdg.inst.id !1043
  %491 = phi i32 [ %469, %._crit_edge1 ], [ %486, %475 ], !pdg.inst.id !1037
  %492 = add nsw i64 %468, 1, !pdg.inst.id !1033
  %493 = icmp slt i64 %468, %140, !pdg.inst.id !201
  br i1 %493, label %467, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %462
  %.lcssa72 = phi i32 [ %463, %462 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %464, %462 ], !pdg.inst.id !1025
  br label %494, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %489
  %.lcssa70 = phi i32 [ %490, %489 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %491, %489 ], !pdg.inst.id !1082
  br label %494, !pdg.inst.id !7035

494:                                              ; preds = %.loopexit2, %.loopexit, %438
  %495 = phi i32 [ %439, %438 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %496 = phi i32 [ %440, %438 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %497 = icmp slt i32 %495, %154, !pdg.inst.id !258
  br i1 %497, label %509, label %498, !prof !7106, !pdg.inst.id !1096

498:                                              ; preds = %494
  %499 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %500 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %499, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %500, align 8, !tbaa !7102, !pdg.inst.id !1100
  %501 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %502 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %501, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %502, align 8, !tbaa !7103, !pdg.inst.id !1104
  %503 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %504 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %503, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %504, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %505 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %153, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %503, %struct.kdnode** %505, align 8, !tbaa !7102, !pdg.inst.id !1108
  %506 = add nsw i32 %159, 1, !pdg.inst.id !329
  br i1 %142, label %507, label %508, !prof !7106, !pdg.inst.id !219

507:                                              ; preds = %498
  tail call fastcc void @buildkdtree(i32* %155, i32* %1, i32* %2, i32* %157, i32* nonnull %158, i32* %156, i32 %154, i32 %495, %struct.kdnode** nonnull %8, %struct.kdnode* %503, double* %10, i32 %506, i32 4), !pdg.inst.id !65
  br label %509, !pdg.inst.id !7059

508:                                              ; preds = %498
  tail call fastcc void @buildkdtree(i32* %155, i32* %1, i32* %2, i32* nonnull %158, i32* %156, i32* %157, i32 %154, i32 %495, %struct.kdnode** nonnull %8, %struct.kdnode* %503, double* %10, i32 %506, i32 %12), !pdg.inst.id !63
  br label %509, !pdg.inst.id !7062

509:                                              ; preds = %494, %507, %508
  %510 = icmp sgt i32 %496, %268, !pdg.inst.id !598
  br i1 %510, label %511, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

511:                                              ; preds = %509
  %512 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %513 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %512, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %513, align 8, !tbaa !7102, !pdg.inst.id !1120
  %514 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %515 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %514, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %515, align 8, !tbaa !7103, !pdg.inst.id !1124
  %516 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %517 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %516, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %517, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %518 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %153, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %516, %struct.kdnode** %518, align 8, !tbaa !7103, !pdg.inst.id !1128
  %519 = add nsw i32 %268, 1, !pdg.inst.id !596
  %520 = add nsw i32 %159, 1, !pdg.inst.id !331
  %521 = select i1 %142, i32* %157, i32* %158, !prof !7106, !pdg.inst.id !217
  %522 = select i1 %142, i32* %158, i32* %156, !prof !7106, !pdg.inst.id !215
  %523 = select i1 %142, i32* %156, i32* %157, !prof !7106, !pdg.inst.id !213
  %524 = icmp eq i32 %519, %7, !pdg.inst.id !89
  br i1 %524, label %.loopexit16, label %151, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %547, %547, %509, %441
  br label %525, !pdg.inst.id !7078

525:                                              ; preds = %.loopexit15, %203, %216, %186, %145
  ret void, !pdg.inst.id !7115

526:                                              ; preds = %141
  store i32 1, i32* @9
  store i32 %12, i32* %94
  store i32 %11, i32* %96
  store %struct.kdnode* %9, %struct.kdnode** %98
  store %struct.kdnode** %8, %struct.kdnode*** %100
  store i32 %6, i32* %102
  store i32* %5, i32** %104
  store i32 %7, i32* %106
  store i32* %0, i32** %108
  store i32 %138, i32* %110
  store i32* %2, i32** %112
  store i32* %1, i32** %114
  store i32* %3, i32** %116
  store i32* %4, i32** %118
  store i1 %142, i1* %120
  store i64 %140, i64* %129
  store double* %10, double** %131
  %527 = alloca [1 x i8*]
  %528 = getelementptr inbounds [1 x i8*], [1 x i8*]* %527, i64 0, i64 0
  %529 = bitcast i8** %528 to void (i8*, i8*)**
  store void (i8*, i8*)* @28, void (i8*, i8*)** %529
  %530 = bitcast [1 x i8*]* %527 to i8*
  %531 = alloca [8 x i64]
  %532 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 0
  store i64 64, i64* %532
  %533 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 1
  store i64 64, i64* %533
  %534 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 2
  store i64 64, i64* %534
  %535 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 3
  store i64 64, i64* %535
  %536 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 4
  store i64 64, i64* %536
  %537 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 5
  store i64 64, i64* %537
  %538 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 6
  store i64 64, i64* %538
  %539 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 7
  store i64 64, i64* %539
  %540 = bitcast [8 x i64]* %531 to i64*
  call void @stageDispatcher(i8* %92, i64* %540, i8* %530, i64 1, i64 8)
  %541 = load %struct.kdnode*, %struct.kdnode** %122
  %542 = load i32, i32* %124
  %543 = load i32, i32* %126
  %544 = load i32*, i32** %128
  %545 = load i32*, i32** %133
  %546 = load %struct.kdnode*, %struct.kdnode** %135
  br label %547

547:                                              ; preds = %526
  %548 = getelementptr inbounds [184 x i64], [184 x i64]* %91, i64 0, i64 176
  %549 = load i64, i64* %548
  %550 = trunc i64 %549 to i32
  store i32 0, i32* @9
  switch i32 %550, label %162 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

551:                                              ; preds = %236
  store i32 1, i32* @10
  store double* %10, double** %77
  store i32 %238, i32* %79
  store i64 %243, i64* %81
  store i32 %12, i32* %83
  store i32* %158, i32** %85
  store i64 %233, i64* %86
  store double %242, double* %88
  %552 = alloca [1 x i8*]
  %553 = getelementptr inbounds [1 x i8*], [1 x i8*]* %552, i64 0, i64 0
  %554 = bitcast i8** %553 to void (i8*, i8*)**
  store void (i8*, i8*)* @29, void (i8*, i8*)** %554
  %555 = bitcast [1 x i8*]* %552 to i8*
  %556 = alloca [8 x i64]
  %557 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 0
  store i64 64, i64* %557
  %558 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 1
  store i64 64, i64* %558
  %559 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 2
  store i64 64, i64* %559
  %560 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 3
  store i64 64, i64* %560
  %561 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 4
  store i64 64, i64* %561
  %562 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 5
  store i64 64, i64* %562
  %563 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 6
  store i64 64, i64* %563
  %564 = getelementptr inbounds [8 x i64], [8 x i64]* %556, i64 0, i64 7
  store i64 64, i64* %564
  %565 = bitcast [8 x i64]* %556 to i64*
  call void @stageDispatcher(i8* %75, i64* %565, i8* %555, i64 1, i64 8)
  %566 = load i64, i64* %80
  br label %567

567:                                              ; preds = %551
  %568 = getelementptr inbounds [72 x i64], [72 x i64]* %74, i64 0, i64 64
  %569 = load i64, i64* %568
  %570 = trunc i64 %569 to i32
  store i32 0, i32* @10
  switch i32 %570, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

571:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %55
  store i32 %272, i32* %57
  store double %269, double* %59
  store i32* %1, i32** %61
  store i32 %268, i32* %63
  store i32* %270, i32** %65
  store i32 %275, i32* %67
  store i32* %155, i32** %69
  store double* %10, double** %71
  store i64 %276, i64* %72
  store i64 %140, i64* %73
  %572 = alloca [1 x i8*]
  %573 = getelementptr inbounds [1 x i8*], [1 x i8*]* %572, i64 0, i64 0
  %574 = bitcast i8** %573 to void (i8*, i8*)**
  store void (i8*, i8*)* @30, void (i8*, i8*)** %574
  %575 = bitcast [1 x i8*]* %572 to i8*
  %576 = alloca [8 x i64]
  %577 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 0
  store i64 64, i64* %577
  %578 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 1
  store i64 64, i64* %578
  %579 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 2
  store i64 64, i64* %579
  %580 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 3
  store i64 64, i64* %580
  %581 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 4
  store i64 64, i64* %581
  %582 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 5
  store i64 64, i64* %582
  %583 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 6
  store i64 64, i64* %583
  %584 = getelementptr inbounds [8 x i64], [8 x i64]* %576, i64 0, i64 7
  store i64 64, i64* %584
  %585 = bitcast [8 x i64]* %576 to i64*
  call void @stageDispatcher(i8* %53, i64* %585, i8* %575, i64 1, i64 8)
  br label %586

586:                                              ; preds = %571
  store i32 0, i32* @11
  br label %.loopexit14

587:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %155, i32** %39
  store i32 %272, i32* %41
  store i32* %270, i32** %43
  store i32 %268, i32* %45
  store i32* %1, i32** %47
  store i32 %235, i32* %49
  store i64 %140, i64* %50
  store i64 %276, i64* %51
  %588 = alloca [1 x i8*]
  %589 = getelementptr inbounds [1 x i8*], [1 x i8*]* %588, i64 0, i64 0
  %590 = bitcast i8** %589 to void (i8*, i8*)**
  store void (i8*, i8*)* @31, void (i8*, i8*)** %590
  %591 = bitcast [1 x i8*]* %588 to i8*
  %592 = alloca [8 x i64]
  %593 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 0
  store i64 64, i64* %593
  %594 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 1
  store i64 64, i64* %594
  %595 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 2
  store i64 64, i64* %595
  %596 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 3
  store i64 64, i64* %596
  %597 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 4
  store i64 64, i64* %597
  %598 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 5
  store i64 64, i64* %598
  %599 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 6
  store i64 64, i64* %599
  %600 = getelementptr inbounds [8 x i64], [8 x i64]* %592, i64 0, i64 7
  store i64 64, i64* %600
  %601 = bitcast [8 x i64]* %592 to i64*
  call void @stageDispatcher(i8* %37, i64* %601, i8* %591, i64 1, i64 8)
  br label %602

602:                                              ; preds = %587
  store i32 0, i32* @12
  br label %.loopexit12

603:                                              ; preds = %.preheader9
  store i32 1, i32* @13
  store i32 %12, i32* %17
  store i32 %272, i32* %19
  store i32 %268, i32* %21
  store i32* %1, i32** %23
  store double %269, double* %25
  store i32* %270, i32** %27
  store i32* %2, i32** %29
  store i32 %305, i32* %31
  store double* %10, double** %33
  store i64 %306, i64* %34
  store i64 %140, i64* %35
  %604 = alloca [1 x i8*]
  %605 = getelementptr inbounds [1 x i8*], [1 x i8*]* %604, i64 0, i64 0
  %606 = bitcast i8** %605 to void (i8*, i8*)**
  store void (i8*, i8*)* @32, void (i8*, i8*)** %606
  %607 = bitcast [1 x i8*]* %604 to i8*
  %608 = alloca [8 x i64]
  %609 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 0
  store i64 64, i64* %609
  %610 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 1
  store i64 64, i64* %610
  %611 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 2
  store i64 64, i64* %611
  %612 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 3
  store i64 64, i64* %612
  %613 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 4
  store i64 64, i64* %613
  %614 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 5
  store i64 64, i64* %614
  %615 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 6
  store i64 64, i64* %615
  %616 = getelementptr inbounds [8 x i64], [8 x i64]* %608, i64 0, i64 7
  store i64 64, i64* %616
  %617 = bitcast [8 x i64]* %608 to i64*
  call void @stageDispatcher(i8* %15, i64* %617, i8* %607, i64 1, i64 8)
  br label %618

618:                                              ; preds = %603
  store i32 0, i32* @13
  br label %.loopexit10
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 23 = "  %313 = getelementptr inbounds i32, i32* %2, i64 %310, !pdg.inst.id !71"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   It wasn't possible to determine how to compute the loop trip count just before executing the loop
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %313 = getelementptr inbounds i32, i32* %2, i64 %310, !pdg.inst.id !71
DSWP:       %325 = getelementptr inbounds i32, i32* %1, i64 %324, !pdg.inst.id !57
DSWP:       %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:       %319 = add nsw i32 %312, 1, !pdg.inst.id !722
DSWP:       %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:       %324 = sext i32 %321 to i64, !pdg.inst.id !742
DSWP:       %311 = phi i32 [ %328, %326 ], [ %268, %.preheader7 ], !pdg.inst.id !584
DSWP:       %328 = phi i32 [ %311, %._crit_edge5 ], [ %323, %317 ], !pdg.inst.id !714
DSWP:       store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:       br label %326, !pdg.inst.id !6724
DSWP:       %327 = phi i32 [ %312, %._crit_edge5 ], [ %322, %317 ], !pdg.inst.id !720
DSWP:       %320 = add nsw i32 %311, 1, !pdg.inst.id !716
DSWP:       %321 = select i1 %318, i32 %319, i32 %320, !prof !7108, !pdg.inst.id !736
DSWP:       %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:       %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
DSWP:       br i1 %316, label %._crit_edge5, label %317, !prof !7107, !pdg.inst.id !732
DSWP:       %318 = icmp slt i32 %314, %235, !pdg.inst.id !515
DSWP:       br label %326, !pdg.inst.id !6735
DSWP:       %322 = select i1 %318, i32 %319, i32 %312, !prof !7108, !pdg.inst.id !718
DSWP:       %323 = select i1 %318, i32 %311, i32 %320, !prof !7108, !pdg.inst.id !712
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %313 = getelementptr inbounds i32, i32* %2, i64 %310, !pdg.inst.id !71
DSWP:       %325 = getelementptr inbounds i32, i32* %1, i64 %324, !pdg.inst.id !57
DSWP:       %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:       %319 = add nsw i32 %312, 1, !pdg.inst.id !722
DSWP:       %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:       %324 = sext i32 %321 to i64, !pdg.inst.id !742
DSWP:       %311 = phi i32 [ %328, %326 ], [ %268, %.preheader7 ], !pdg.inst.id !584
DSWP:       %328 = phi i32 [ %311, %._crit_edge5 ], [ %323, %317 ], !pdg.inst.id !714
DSWP:       store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:       br label %326, !pdg.inst.id !6724
DSWP:       %327 = phi i32 [ %312, %._crit_edge5 ], [ %322, %317 ], !pdg.inst.id !720
DSWP:       %320 = add nsw i32 %311, 1, !pdg.inst.id !716
DSWP:       %321 = select i1 %318, i32 %319, i32 %320, !prof !7108, !pdg.inst.id !736
DSWP:       %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:       %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
DSWP:       br i1 %316, label %._crit_edge5, label %317, !prof !7107, !pdg.inst.id !732
DSWP:       %318 = icmp slt i32 %314, %235, !pdg.inst.id !515
DSWP:       br label %326, !pdg.inst.id !6735
DSWP:       %322 = select i1 %318, i32 %319, i32 %312, !prof !7108, !pdg.inst.id !718
DSWP:       %323 = select i1 %318, i32 %311, i32 %320, !prof !7108, !pdg.inst.id !712
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 20
DSWP:     	  %313 = getelementptr inbounds i32, i32* %2, i64 %310, !pdg.inst.id !71
DSWP:     	  %325 = getelementptr inbounds i32, i32* %1, i64 %324, !pdg.inst.id !57
DSWP:     	  %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:     	  %319 = add nsw i32 %312, 1, !pdg.inst.id !722
DSWP:     	  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	  %324 = sext i32 %321 to i64, !pdg.inst.id !742
DSWP:     	  %311 = phi i32 [ %328, %326 ], [ %268, %.preheader7 ], !pdg.inst.id !584
DSWP:     	  %328 = phi i32 [ %311, %._crit_edge5 ], [ %323, %317 ], !pdg.inst.id !714
DSWP:     	  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	  br label %326, !pdg.inst.id !6724
DSWP:     	  %327 = phi i32 [ %312, %._crit_edge5 ], [ %322, %317 ], !pdg.inst.id !720
DSWP:     	  %320 = add nsw i32 %311, 1, !pdg.inst.id !716
DSWP:     	  %321 = select i1 %318, i32 %319, i32 %320, !prof !7108, !pdg.inst.id !736
DSWP:     	  %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:     	  %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
DSWP:     	  br i1 %316, label %._crit_edge5, label %317, !prof !7107, !pdg.inst.id !732
DSWP:     	  %318 = icmp slt i32 %314, %235, !pdg.inst.id !515
DSWP:     	  br label %326, !pdg.inst.id !6735
DSWP:     	  %322 = select i1 %318, i32 %319, i32 %312, !prof !7108, !pdg.inst.id !718
DSWP:     	  %323 = select i1 %318, i32 %311, i32 %320, !prof !7108, !pdg.inst.id !712
DSWP:     External nodes: 2
DSWP:     	  %310 = phi i64 [ %329, %326 ], [ %306, %.preheader7 ], !pdg.inst.id !706
DSWP:     	  br i1 %330, label %309, label %.loopexit8, !prof !7109, !pdg.inst.id !751
DSWP:     Edges: 51
DSWP:     	From:	  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	To:	  %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	To:	  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	To:	  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	RAW (must)
DSWP:     	From:	  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	To:	  %318 = icmp slt i32 %314, %235, !pdg.inst.id !515
DSWP:     	RAW (must)
DSWP:     	From:	  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	To:	  %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
DSWP:     	RAW (must)
DSWP:     	From:	  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !724
DSWP:     	To:	  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %319 = add nsw i32 %312, 1, !pdg.inst.id !722
DSWP:     	To:	  %322 = select i1 %318, i32 %319, i32 %312, !prof !7108, !pdg.inst.id !718
DSWP:     	RAW (must)
DSWP:     	From:	  %319 = add nsw i32 %312, 1, !pdg.inst.id !722
DSWP:     	To:	  %321 = select i1 %318, i32 %319, i32 %320, !prof !7108, !pdg.inst.id !736
DSWP:     	RAW (must)
DSWP:     	From:	  %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:     	To:	  %322 = select i1 %318, i32 %319, i32 %312, !prof !7108, !pdg.inst.id !718
DSWP:     	RAW (must)
DSWP:     	From:	  %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:     	To:	  %327 = phi i32 [ %312, %._crit_edge5 ], [ %322, %317 ], !pdg.inst.id !720
DSWP:     	RAW (must)
DSWP:     	From:	  %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:     	To:	  %319 = add nsw i32 %312, 1, !pdg.inst.id !722
DSWP:     	RAW (must)
DSWP:     	From:	  %327 = phi i32 [ %312, %._crit_edge5 ], [ %322, %317 ], !pdg.inst.id !720
DSWP:     	To:	  %312 = phi i32 [ %327, %326 ], [ %272, %.preheader7 ], !pdg.inst.id !631
DSWP:     	RAW (must)
DSWP:     	From:	  %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:     	To:	  %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
DSWP:     	RAW (must)
DSWP:     	From:	  %315 = load i32, i32* %270, align 4, !tbaa !7089, !pdg.inst.id !612
DSWP:     	To:	  store i32 %314, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !726
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %316 = icmp eq i32 %314, %315, !pdg.inst.id !729
DSWP:     	To:	  br i1 %316, label %._crit_edge5, label %317, !prof !7107, !pdg.inst.id !732
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %272 = add nsw i32 %154, -1, !pdg.inst.id !262
DSWP:    Pre loop env 2, producer:	  %306 = sext i32 %154 to i64, !pdg.inst.id !250
DSWP:    Pre loop env 3, producer:	  %270 = getelementptr inbounds i32, i32* %158, i64 %267, !pdg.inst.id !307
DSWP:    Pre loop env 4, producer:	  %268 = phi i32 [ %260, %259 ], [ %231, %229 ], !pdg.inst.id !488
DSWP:    Pre loop env 5, producer:	i32* %1
DSWP:    Pre loop env 6, producer:	  %235 = load i32, i32* %234, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:    Pre loop env 7, producer:	i32* %2
DSWP:    Pre loop env 8, producer:	  %140 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @33(i8*, i8*) {
  %3 = bitcast i8* %0 to [64 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 8
  %9 = load i64, i64* %8
  %10 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 16
  %11 = bitcast i64* %10 to i32**
  %12 = load i32*, i32** %11
  %13 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 24
  %14 = bitcast i64* %13 to i32*
  %15 = load i32, i32* %14
  %16 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 32
  %17 = bitcast i64* %16 to i32**
  %18 = load i32*, i32** %17
  %19 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 40
  %20 = bitcast i64* %19 to i32*
  %21 = load i32, i32* %20
  %22 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 48
  %23 = bitcast i64* %22 to i32**
  %24 = load i32*, i32** %23
  %25 = getelementptr inbounds [64 x i64], [64 x i64]* %3, i64 0, i64 56
  %26 = load i64, i64* %25
  br label %29

27:                                               ; preds = %28
  ret void

28:                                               ; preds = %47
  br label %27

29:                                               ; preds = %2, %47
  %30 = phi i64 [ %50, %47 ], [ %9, %2 ], !pdg.inst.id !30
  %31 = phi i32 [ %49, %47 ], [ %15, %2 ], !pdg.inst.id !31
  %32 = phi i32 [ %48, %47 ], [ %7, %2 ], !pdg.inst.id !32
  %33 = getelementptr inbounds i32, i32* %24, i64 %30, !pdg.inst.id !33
  %34 = load i32, i32* %33, align 4, !tbaa !34, !pdg.inst.id !38
  %35 = load i32, i32* %12, align 4, !tbaa !34, !pdg.inst.id !39
  %36 = icmp eq i32 %34, %35, !pdg.inst.id !40
  br i1 %36, label %37, label %38, !prof !41, !pdg.inst.id !42

37:                                               ; preds = %29
  br label %47, !pdg.inst.id !43

38:                                               ; preds = %29
  %39 = icmp slt i32 %34, %21, !pdg.inst.id !44
  %40 = add nsw i32 %32, 1, !pdg.inst.id !45
  %41 = add nsw i32 %31, 1, !pdg.inst.id !46
  %42 = select i1 %39, i32 %40, i32 %41, !prof !47, !pdg.inst.id !48
  %43 = select i1 %39, i32 %40, i32 %32, !prof !47, !pdg.inst.id !49
  %44 = select i1 %39, i32 %31, i32 %41, !prof !47, !pdg.inst.id !50
  %45 = sext i32 %42 to i64, !pdg.inst.id !51
  %46 = getelementptr inbounds i32, i32* %18, i64 %45, !pdg.inst.id !52
  store i32 %34, i32* %46, align 4, !tbaa !34, !pdg.inst.id !53
  br label %47, !pdg.inst.id !54

47:                                               ; preds = %38, %37
  %48 = phi i32 [ %32, %37 ], [ %43, %38 ], !pdg.inst.id !55
  %49 = phi i32 [ %31, %37 ], [ %44, %38 ], !pdg.inst.id !56
  %50 = add nsw i64 %30, 1, !pdg.inst.id !57
  %51 = icmp slt i64 %30, %26, !pdg.inst.id !58
  br i1 %51, label %29, label %28, !prof !59, !pdg.inst.id !60
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [64 x i64]
  %15 = bitcast [64 x i64]* %14 to i8*
  %16 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 8
  %19 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 16
  %20 = bitcast i64* %19 to i32**
  %21 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 24
  %22 = bitcast i64* %21 to i32*
  %23 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 32
  %24 = bitcast i64* %23 to i32**
  %25 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 40
  %26 = bitcast i64* %25 to i32*
  %27 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 48
  %28 = bitcast i64* %27 to i32**
  %29 = getelementptr inbounds [64 x i64], [64 x i64]* %14, i64 0, i64 56
  %30 = alloca [88 x i64]
  %31 = bitcast [88 x i64]* %30 to i8*
  %32 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 0
  %33 = bitcast i64* %32 to i32*
  %34 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 8
  %35 = bitcast i64* %34 to i32*
  %36 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 16
  %37 = bitcast i64* %36 to i32*
  %38 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 24
  %39 = bitcast i64* %38 to i32**
  %40 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 32
  %41 = bitcast i64* %40 to double*
  %42 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 40
  %43 = bitcast i64* %42 to i32**
  %44 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 48
  %45 = bitcast i64* %44 to i32**
  %46 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 56
  %47 = bitcast i64* %46 to i32*
  %48 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 64
  %49 = bitcast i64* %48 to double**
  %50 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 72
  %51 = getelementptr inbounds [88 x i64], [88 x i64]* %30, i64 0, i64 80
  %52 = alloca [64 x i64]
  %53 = bitcast [64 x i64]* %52 to i8*
  %54 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 0
  %55 = bitcast i64* %54 to i32**
  %56 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 8
  %57 = bitcast i64* %56 to i32*
  %58 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 16
  %59 = bitcast i64* %58 to i32**
  %60 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 24
  %61 = bitcast i64* %60 to i32*
  %62 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 32
  %63 = bitcast i64* %62 to i32**
  %64 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 40
  %65 = bitcast i64* %64 to i32*
  %66 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 48
  %67 = getelementptr inbounds [64 x i64], [64 x i64]* %52, i64 0, i64 56
  %68 = alloca [88 x i64]
  %69 = bitcast [88 x i64]* %68 to i8*
  %70 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 0
  %71 = bitcast i64* %70 to i32*
  %72 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 8
  %73 = bitcast i64* %72 to i32*
  %74 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 16
  %75 = bitcast i64* %74 to double*
  %76 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 24
  %77 = bitcast i64* %76 to i32**
  %78 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 32
  %79 = bitcast i64* %78 to i32*
  %80 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 40
  %81 = bitcast i64* %80 to i32**
  %82 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 48
  %83 = bitcast i64* %82 to i32*
  %84 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 56
  %85 = bitcast i64* %84 to i32**
  %86 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 64
  %87 = bitcast i64* %86 to double**
  %88 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 72
  %89 = getelementptr inbounds [88 x i64], [88 x i64]* %68, i64 0, i64 80
  %90 = alloca [72 x i64]
  %91 = bitcast [72 x i64]* %90 to i8*
  %92 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 0
  %93 = bitcast i64* %92 to double**
  %94 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 8
  %95 = bitcast i64* %94 to i32*
  %96 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 16
  %97 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 24
  %98 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 32
  %99 = bitcast i64* %98 to i32*
  %100 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 40
  %101 = bitcast i64* %100 to i32**
  %102 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 48
  %103 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 56
  %104 = bitcast i64* %103 to double*
  %105 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 64
  %106 = bitcast i64* %105 to i32*
  %107 = alloca [184 x i64]
  %108 = bitcast [184 x i64]* %107 to i8*
  %109 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 0
  %110 = bitcast i64* %109 to i32*
  %111 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 8
  %112 = bitcast i64* %111 to i32*
  %113 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 16
  %114 = bitcast i64* %113 to %struct.kdnode**
  %115 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 24
  %116 = bitcast i64* %115 to %struct.kdnode***
  %117 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 32
  %118 = bitcast i64* %117 to i32*
  %119 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 40
  %120 = bitcast i64* %119 to i32**
  %121 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 48
  %122 = bitcast i64* %121 to i32*
  %123 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 56
  %124 = bitcast i64* %123 to i32**
  %125 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 64
  %126 = bitcast i64* %125 to i32*
  %127 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 72
  %128 = bitcast i64* %127 to i32**
  %129 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 80
  %130 = bitcast i64* %129 to i32**
  %131 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 88
  %132 = bitcast i64* %131 to i32**
  %133 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 96
  %134 = bitcast i64* %133 to i32**
  %135 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 104
  %136 = bitcast i64* %135 to i1*
  %137 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 112
  %138 = bitcast i64* %137 to %struct.kdnode**
  %139 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 120
  %140 = bitcast i64* %139 to i32*
  %141 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 128
  %142 = bitcast i64* %141 to i32*
  %143 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 136
  %144 = bitcast i64* %143 to i32**
  %145 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 144
  %146 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 152
  %147 = bitcast i64* %146 to double**
  %148 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 160
  %149 = bitcast i64* %148 to i32**
  %150 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 168
  %151 = bitcast i64* %150 to %struct.kdnode**
  %152 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 176
  %153 = bitcast i64* %152 to i32*
  %154 = add nsw i32 %12, 1, !pdg.inst.id !181
  %155 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %156 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %155, label %161, label %157, !prof !7088, !pdg.inst.id !185

157:                                              ; preds = %13
  %158 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %159 = load i32, i32* @9
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %544, label %167

.loopexit16:                                      ; preds = %565, %529
  %.lcssa88 = phi %struct.kdnode* [ %534, %529 ], [ %564, %565 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %171, %529 ], [ %562, %565 ], !pdg.inst.id !225
  br label %161, !pdg.inst.id !6401

161:                                              ; preds = %.loopexit16, %13
  %162 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %163 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %164 = getelementptr inbounds i32, i32* %162, i64 %156, !pdg.inst.id !187
  %165 = load i32, i32* %164, align 4, !tbaa !7089, !pdg.inst.id !230
  %166 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %163, i64 0, i32 0, !pdg.inst.id !228
  store i32 %165, i32* %166, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %543, !pdg.inst.id !6410

167:                                              ; preds = %157, %529
  %168 = phi i32 [ %538, %529 ], [ %11, %157 ], !pdg.inst.id !162
  %169 = phi %struct.kdnode* [ %534, %529 ], [ %9, %157 ], !pdg.inst.id !142
  %170 = phi i32 [ %537, %529 ], [ %6, %157 ], !pdg.inst.id !83
  %171 = phi i32* [ %541, %529 ], [ %5, %157 ], !pdg.inst.id !81
  %172 = phi i32* [ %540, %529 ], [ %4, %157 ], !pdg.inst.id !79
  %173 = phi i32* [ %539, %529 ], [ %3, %157 ], !pdg.inst.id !77
  %174 = phi i32* [ %171, %529 ], [ %0, %157 ], !pdg.inst.id !53
  %175 = srem i32 %168, %154, !pdg.inst.id !183
  %176 = add nsw i32 %170, 1, !pdg.inst.id !264
  %177 = icmp eq i32 %176, %7, !pdg.inst.id !96
  br i1 %177, label %178, label %245, !prof !7096, !pdg.inst.id !334

178:                                              ; preds = %565, %167
  %.lcssa85 = phi %struct.kdnode* [ %169, %167 ], [ %559, %565 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %170, %167 ], [ %560, %565 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %174, %167 ], [ %563, %565 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %175, %167 ], [ %561, %565 ], !pdg.inst.id !315
  %179 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %180 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %181 = getelementptr inbounds i32, i32* %.lcssa76, i64 %180, !pdg.inst.id !352
  %182 = load i32, i32* %181, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %179, label %183, label %187, !prof !7097, !pdg.inst.id !361

183:                                              ; preds = %178
  %184 = getelementptr inbounds i32, i32* %.lcssa76, i64 %156, !pdg.inst.id !207
  %185 = load i32, i32* %184, align 4, !tbaa !7089, !pdg.inst.id !376
  %186 = icmp slt i32 %182, %185, !pdg.inst.id !374
  br i1 %186, label %202, label %215, !pdg.inst.id !382

187:                                              ; preds = %178
  %188 = mul nsw i32 %182, %12, !pdg.inst.id !166
  %189 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %190 = add i32 %189, %188, !pdg.inst.id !384
  %191 = sext i32 %190 to i64, !pdg.inst.id !389
  %192 = getelementptr inbounds double, double* %10, i64 %191, !pdg.inst.id !144
  %193 = load double, double* %192, align 8, !tbaa !7098, !pdg.inst.id !283
  %194 = getelementptr inbounds i32, i32* %.lcssa76, i64 %156, !pdg.inst.id !205
  %195 = load i32, i32* %194, align 4, !tbaa !7089, !pdg.inst.id !397
  %196 = mul nsw i32 %195, %12, !pdg.inst.id !164
  %197 = add i32 %189, %196, !pdg.inst.id !386
  %198 = sext i32 %197 to i64, !pdg.inst.id !402
  %199 = getelementptr inbounds double, double* %10, i64 %198, !pdg.inst.id !146
  %200 = load double, double* %199, align 8, !tbaa !7098, !pdg.inst.id !405
  %201 = fcmp fast olt double %193, %200, !pdg.inst.id !395
  br i1 %201, label %202, label %217, !prof !7100, !pdg.inst.id !409

202:                                              ; preds = %187, %183
  %203 = phi %struct.kdnode* [ %.lcssa85, %187 ], [ %.lcssa85, %183 ], !pdg.inst.id !342
  %204 = phi i32 [ %195, %187 ], [ %185, %183 ], !pdg.inst.id !378
  %205 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %204, i32* %205, align 8, !tbaa !7093, !pdg.inst.id !413
  %206 = load i32, i32* %181, align 4, !tbaa !7089, !pdg.inst.id !364
  %207 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %208 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %207, i64 0, i32 0, !pdg.inst.id !420
  store i32 %206, i32* %208, align 8, !tbaa !7093, !pdg.inst.id !416
  %209 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %207, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %209, align 8, !tbaa !7102, !pdg.inst.id !423
  %210 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %211 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %210, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %211, align 8, !tbaa !7103, !pdg.inst.id !427
  %212 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %213 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %212, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %213, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %214 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %203, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %212, %struct.kdnode** %214, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %543, !pdg.inst.id !6480

215:                                              ; preds = %183
  %216 = icmp sgt i32 %182, %185, !pdg.inst.id !371
  br i1 %216, label %219, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %215
  br label %232, !pdg.inst.id !6511

217:                                              ; preds = %187
  %218 = fcmp fast ogt double %193, %200, !pdg.inst.id !393
  br i1 %218, label %219, label %232, !pdg.inst.id !437

219:                                              ; preds = %217, %215
  %220 = phi i32* [ %.lcssa76, %217 ], [ %.lcssa76, %215 ], !pdg.inst.id !354
  %221 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %182, i32* %221, align 8, !tbaa !7093, !pdg.inst.id !367
  %222 = getelementptr inbounds i32, i32* %220, i64 %156, !pdg.inst.id !211
  %223 = load i32, i32* %222, align 4, !tbaa !7089, !pdg.inst.id !441
  %224 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %225 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %224, i64 0, i32 0, !pdg.inst.id !447
  store i32 %223, i32* %225, align 8, !tbaa !7093, !pdg.inst.id !443
  %226 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %224, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %226, align 8, !tbaa !7102, !pdg.inst.id !450
  %227 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %228 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %227, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %228, align 8, !tbaa !7103, !pdg.inst.id !454
  %229 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %230 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %229, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %230, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %231 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %229, %struct.kdnode** %231, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %543, !pdg.inst.id !6525

232:                                              ; preds = %._crit_edge9, %217
  %233 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %217 ], !pdg.inst.id !344
  %234 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %182, i32* %234, align 8, !tbaa !7093, !pdg.inst.id !369
  %235 = getelementptr inbounds i32, i32* %.lcssa76, i64 %156, !pdg.inst.id !209
  %236 = load i32, i32* %235, align 4, !tbaa !7089, !pdg.inst.id !465
  %237 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %238 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %237, i64 0, i32 0, !pdg.inst.id !471
  store i32 %236, i32* %238, align 8, !tbaa !7093, !pdg.inst.id !467
  %239 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %237, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %239, align 8, !tbaa !7102, !pdg.inst.id !474
  %240 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %241 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %240, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %241, align 8, !tbaa !7103, !pdg.inst.id !478
  %242 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %243 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %242, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %243, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %244 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %233, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %242, %struct.kdnode** %244, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %543, !pdg.inst.id !6572

245:                                              ; preds = %167
  %246 = add nsw i32 %170, %7, !pdg.inst.id !94
  %247 = sdiv i32 %246, 2, !pdg.inst.id !486
  %248 = icmp eq i32 %175, 0, !pdg.inst.id !327
  %249 = sext i32 %247 to i64, !pdg.inst.id !490
  %250 = getelementptr inbounds i32, i32* %174, i64 %249, !pdg.inst.id !311
  %251 = load i32, i32* %250, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %248, label %281, label %252, !prof !7104, !pdg.inst.id !500

252:                                              ; preds = %245
  %253 = mul nsw i32 %251, %12, !pdg.inst.id !176
  %254 = add nsw i32 %175, -1, !pdg.inst.id !325
  %255 = add i32 %254, %253, !pdg.inst.id !521
  %256 = sext i32 %255 to i64, !pdg.inst.id !526
  %257 = getelementptr inbounds double, double* %10, i64 %256, !pdg.inst.id !148
  %258 = load double, double* %257, align 8, !tbaa !7098, !pdg.inst.id !529
  %259 = sext i32 %170 to i64, !pdg.inst.id !254
  %260 = load i32, i32* @10
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %569, label %262

262:                                              ; preds = %252, %266
  %263 = phi i64 [ %264, %266 ], [ %249, %252 ], !pdg.inst.id !504
  %264 = add nsw i64 %263, -1, !pdg.inst.id !542
  %265 = icmp sgt i64 %263, %259, !pdg.inst.id !535
  br i1 %265, label %266, label %.loopexit1, !prof !7105, !pdg.inst.id !546

266:                                              ; preds = %262
  %267 = getelementptr inbounds i32, i32* %174, i64 %264, !pdg.inst.id !309
  %268 = load i32, i32* %267, align 4, !tbaa !7089, !pdg.inst.id !548
  %269 = mul nsw i32 %268, %12, !pdg.inst.id !174
  %270 = add i32 %254, %269, !pdg.inst.id !523
  %271 = sext i32 %270 to i64, !pdg.inst.id !552
  %272 = getelementptr inbounds double, double* %10, i64 %271, !pdg.inst.id !150
  %273 = load double, double* %272, align 8, !tbaa !7098, !pdg.inst.id !555
  %274 = fcmp fast olt double %273, %258, !pdg.inst.id !533
  br i1 %274, label %._crit_edge8, label %262, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %585, %266
  %.lcssa3 = phi i64 [ %263, %266 ], [ %584, %585 ], !pdg.inst.id !537
  br label %275, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %585, %262
  %.lcssa2 = phi i64 [ %263, %262 ], [ %584, %585 ], !pdg.inst.id !539
  br label %275, !pdg.inst.id !6633

275:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %276 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %277 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %278 = ashr exact i64 %277, 32, !pdg.inst.id !568
  %279 = getelementptr inbounds i32, i32* %174, i64 %278, !pdg.inst.id !303
  %280 = load i32, i32* %279, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %281, !pdg.inst.id !6614

281:                                              ; preds = %275, %245
  %282 = phi i32 [ %280, %275 ], [ %251, %245 ], !pdg.inst.id !509
  %283 = phi i64 [ %278, %275 ], [ %249, %245 ], !pdg.inst.id !502
  %284 = phi i32 [ %276, %275 ], [ %247, %245 ], !pdg.inst.id !488
  %285 = phi double [ %258, %275 ], [ 0.000000e+00, %245 ], !pdg.inst.id !531
  %286 = getelementptr inbounds i32, i32* %174, i64 %283, !pdg.inst.id !307
  %287 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %169, i64 0, i32 0, !pdg.inst.id !238
  store i32 %282, i32* %287, align 8, !tbaa !7093, !pdg.inst.id !575
  %288 = add nsw i32 %170, -1, !pdg.inst.id !262
  %289 = icmp sgt i32 %170, %7, !pdg.inst.id !92
  br i1 %289, label %456, label %290, !prof !7106, !pdg.inst.id !649

290:                                              ; preds = %281
  %291 = add i32 %175, -1, !pdg.inst.id !323
  %292 = sext i32 %170 to i64, !pdg.inst.id !252
  br i1 %248, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %290
  %293 = load i32, i32* @11
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %589, label %349

.preheader11:                                     ; preds = %290
  %295 = load i32, i32* @12
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %605, label %297

297:                                              ; preds = %.preheader11, %314
  %298 = phi i64 [ %317, %314 ], [ %292, %.preheader11 ], !pdg.inst.id !655
  %299 = phi i32 [ %316, %314 ], [ %284, %.preheader11 ], !pdg.inst.id !580
  %300 = phi i32 [ %315, %314 ], [ %288, %.preheader11 ], !pdg.inst.id !627
  %301 = getelementptr inbounds i32, i32* %1, i64 %298, !pdg.inst.id !59
  %302 = load i32, i32* %301, align 4, !tbaa !7089, !pdg.inst.id !673
  %303 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !614
  %304 = icmp eq i32 %302, %303, !pdg.inst.id !678
  br i1 %304, label %._crit_edge2, label %305, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %297
  br label %314, !pdg.inst.id !6674

305:                                              ; preds = %297
  %306 = icmp slt i32 %302, %251, !pdg.inst.id !517
  %307 = add nsw i32 %300, 1, !pdg.inst.id !671
  %308 = add nsw i32 %299, 1, !pdg.inst.id !665
  %309 = select i1 %306, i32 %307, i32 %308, !prof !7108, !pdg.inst.id !685
  %310 = select i1 %306, i32 %307, i32 %300, !prof !7108, !pdg.inst.id !667
  %311 = select i1 %306, i32 %299, i32 %308, !prof !7108, !pdg.inst.id !661
  %312 = sext i32 %309 to i64, !pdg.inst.id !691
  %313 = getelementptr inbounds i32, i32* %171, i64 %312, !pdg.inst.id !271
  store i32 %302, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %314, !pdg.inst.id !6685

314:                                              ; preds = %._crit_edge2, %305
  %315 = phi i32 [ %300, %._crit_edge2 ], [ %310, %305 ], !pdg.inst.id !669
  %316 = phi i32 [ %299, %._crit_edge2 ], [ %311, %305 ], !pdg.inst.id !663
  %317 = add nsw i64 %298, 1, !pdg.inst.id !659
  %318 = icmp slt i64 %298, %156, !pdg.inst.id !191
  br i1 %318, label %297, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %620, %314
  br label %319, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %604, %371
  br label %319, !pdg.inst.id !6697

319:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %289, label %456, label %320, !prof !7106, !pdg.inst.id !647

320:                                              ; preds = %319
  %321 = add i32 %175, -1, !pdg.inst.id !321
  %322 = sext i32 %170 to i64, !pdg.inst.id !250
  br i1 %248, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %320
  %323 = load i32, i32* @13
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %621, label %402

.preheader7:                                      ; preds = %320
  %325 = load i32, i32* @14
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %637, label %327

327:                                              ; preds = %.preheader7, %344
  %328 = phi i64 [ %347, %344 ], [ %322, %.preheader7 ], !pdg.inst.id !706
  %329 = phi i32 [ %346, %344 ], [ %284, %.preheader7 ], !pdg.inst.id !584
  %330 = phi i32 [ %345, %344 ], [ %288, %.preheader7 ], !pdg.inst.id !631
  %331 = getelementptr inbounds i32, i32* %2, i64 %328, !pdg.inst.id !71
  %332 = load i32, i32* %331, align 4, !tbaa !7089, !pdg.inst.id !724
  %333 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !612
  %334 = icmp eq i32 %332, %333, !pdg.inst.id !729
  br i1 %334, label %._crit_edge5, label %335, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %327
  br label %344, !pdg.inst.id !6724

335:                                              ; preds = %327
  %336 = icmp slt i32 %332, %251, !pdg.inst.id !515
  %337 = add nsw i32 %330, 1, !pdg.inst.id !722
  %338 = add nsw i32 %329, 1, !pdg.inst.id !716
  %339 = select i1 %336, i32 %337, i32 %338, !prof !7108, !pdg.inst.id !736
  %340 = select i1 %336, i32 %337, i32 %330, !prof !7108, !pdg.inst.id !718
  %341 = select i1 %336, i32 %329, i32 %338, !prof !7108, !pdg.inst.id !712
  %342 = sext i32 %339 to i64, !pdg.inst.id !742
  %343 = getelementptr inbounds i32, i32* %1, i64 %342, !pdg.inst.id !57
  store i32 %332, i32* %343, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %344, !pdg.inst.id !6735

344:                                              ; preds = %._crit_edge5, %335
  %345 = phi i32 [ %330, %._crit_edge5 ], [ %340, %335 ], !pdg.inst.id !720
  %346 = phi i32 [ %329, %._crit_edge5 ], [ %341, %335 ], !pdg.inst.id !714
  %347 = add nsw i64 %328, 1, !pdg.inst.id !710
  %348 = icmp slt i64 %328, %156, !pdg.inst.id !195
  br i1 %348, label %327, label %.loopexit8, !prof !7109, !pdg.inst.id !751

349:                                              ; preds = %.preheader13, %371
  %350 = phi i64 [ %374, %371 ], [ %292, %.preheader13 ], !pdg.inst.id !653
  %351 = phi i32 [ %373, %371 ], [ %284, %.preheader13 ], !pdg.inst.id !578
  %352 = phi i32 [ %372, %371 ], [ %288, %.preheader13 ], !pdg.inst.id !625
  %353 = getelementptr inbounds i32, i32* %1, i64 %350, !pdg.inst.id !61
  %354 = load i32, i32* %353, align 4, !tbaa !7089, !pdg.inst.id !769
  %355 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !622
  %356 = icmp eq i32 %354, %355, !pdg.inst.id !774
  br i1 %356, label %._crit_edge, label %357, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %349
  br label %371, !pdg.inst.id !6762

357:                                              ; preds = %349
  %358 = mul nsw i32 %354, %12, !pdg.inst.id !172
  %359 = add i32 %291, %358, !pdg.inst.id !651
  %360 = sext i32 %359 to i64, !pdg.inst.id !780
  %361 = getelementptr inbounds double, double* %10, i64 %360, !pdg.inst.id !152
  %362 = load double, double* %361, align 8, !tbaa !7098, !pdg.inst.id !783
  %363 = fcmp fast olt double %362, %285, !pdg.inst.id !606
  %364 = add nsw i32 %351, 1, !pdg.inst.id !761
  %365 = add nsw i32 %352, 1, !pdg.inst.id !767
  %366 = select i1 %363, i32 %365, i32 %364, !prof !7111, !pdg.inst.id !788
  %367 = select i1 %363, i32 %365, i32 %352, !prof !7111, !pdg.inst.id !763
  %368 = select i1 %363, i32 %351, i32 %364, !prof !7111, !pdg.inst.id !757
  %369 = sext i32 %366 to i64, !pdg.inst.id !794
  %370 = getelementptr inbounds i32, i32* %171, i64 %369, !pdg.inst.id !269
  store i32 %354, i32* %370, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %371, !pdg.inst.id !6778

371:                                              ; preds = %._crit_edge, %357
  %372 = phi i32 [ %352, %._crit_edge ], [ %367, %357 ], !pdg.inst.id !765
  %373 = phi i32 [ %351, %._crit_edge ], [ %368, %357 ], !pdg.inst.id !759
  %374 = add nsw i64 %350, 1, !pdg.inst.id !755
  %375 = icmp slt i64 %350, %156, !pdg.inst.id !189
  br i1 %375, label %349, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %652, %344
  br label %376, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %636, %424
  br label %376, !pdg.inst.id !6792

376:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %289, label %456, label %377, !prof !7106, !pdg.inst.id !645

377:                                              ; preds = %376
  %378 = add i32 %175, -1, !pdg.inst.id !319
  %379 = sext i32 %170 to i64, !pdg.inst.id !248
  br i1 %248, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %377
  br label %429, !pdg.inst.id !6796

.preheader3:                                      ; preds = %377
  br label %380, !pdg.inst.id !6798

380:                                              ; preds = %.preheader3, %397
  %381 = phi i64 [ %400, %397 ], [ %379, %.preheader3 ], !pdg.inst.id !809
  %382 = phi i32 [ %399, %397 ], [ %284, %.preheader3 ], !pdg.inst.id !588
  %383 = phi i32 [ %398, %397 ], [ %288, %.preheader3 ], !pdg.inst.id !635
  %384 = getelementptr inbounds i32, i32* %173, i64 %381, !pdg.inst.id !299
  %385 = load i32, i32* %384, align 4, !tbaa !7089, !pdg.inst.id !827
  %386 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !610
  %387 = icmp eq i32 %385, %386, !pdg.inst.id !832
  br i1 %387, label %._crit_edge7, label %388, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %380
  br label %397, !pdg.inst.id !6819

388:                                              ; preds = %380
  %389 = icmp slt i32 %385, %251, !pdg.inst.id !513
  %390 = add nsw i32 %383, 1, !pdg.inst.id !825
  %391 = add nsw i32 %382, 1, !pdg.inst.id !819
  %392 = select i1 %389, i32 %390, i32 %391, !prof !7108, !pdg.inst.id !839
  %393 = select i1 %389, i32 %390, i32 %383, !prof !7108, !pdg.inst.id !821
  %394 = select i1 %389, i32 %382, i32 %391, !prof !7108, !pdg.inst.id !815
  %395 = sext i32 %392 to i64, !pdg.inst.id !845
  %396 = getelementptr inbounds i32, i32* %2, i64 %395, !pdg.inst.id !69
  store i32 %385, i32* %396, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %397, !pdg.inst.id !6830

397:                                              ; preds = %._crit_edge7, %388
  %398 = phi i32 [ %383, %._crit_edge7 ], [ %393, %388 ], !pdg.inst.id !823
  %399 = phi i32 [ %382, %._crit_edge7 ], [ %394, %388 ], !pdg.inst.id !817
  %400 = add nsw i64 %381, 1, !pdg.inst.id !813
  %401 = icmp slt i64 %381, %156, !pdg.inst.id !199
  br i1 %401, label %380, label %.loopexit4, !prof !7109, !pdg.inst.id !858

402:                                              ; preds = %.preheader9, %424
  %403 = phi i64 [ %427, %424 ], [ %322, %.preheader9 ], !pdg.inst.id !704
  %404 = phi i32 [ %426, %424 ], [ %284, %.preheader9 ], !pdg.inst.id !582
  %405 = phi i32 [ %425, %424 ], [ %288, %.preheader9 ], !pdg.inst.id !629
  %406 = getelementptr inbounds i32, i32* %2, i64 %403, !pdg.inst.id !73
  %407 = load i32, i32* %406, align 4, !tbaa !7089, !pdg.inst.id !876
  %408 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !620
  %409 = icmp eq i32 %407, %408, !pdg.inst.id !881
  br i1 %409, label %._crit_edge4, label %410, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %402
  br label %424, !pdg.inst.id !6857

410:                                              ; preds = %402
  %411 = mul nsw i32 %407, %12, !pdg.inst.id !170
  %412 = add i32 %321, %411, !pdg.inst.id !702
  %413 = sext i32 %412 to i64, !pdg.inst.id !887
  %414 = getelementptr inbounds double, double* %10, i64 %413, !pdg.inst.id !154
  %415 = load double, double* %414, align 8, !tbaa !7098, !pdg.inst.id !890
  %416 = fcmp fast olt double %415, %285, !pdg.inst.id !604
  %417 = add nsw i32 %404, 1, !pdg.inst.id !868
  %418 = add nsw i32 %405, 1, !pdg.inst.id !874
  %419 = select i1 %416, i32 %418, i32 %417, !prof !7111, !pdg.inst.id !895
  %420 = select i1 %416, i32 %418, i32 %405, !prof !7111, !pdg.inst.id !870
  %421 = select i1 %416, i32 %404, i32 %417, !prof !7111, !pdg.inst.id !864
  %422 = sext i32 %419 to i64, !pdg.inst.id !901
  %423 = getelementptr inbounds i32, i32* %1, i64 %422, !pdg.inst.id !55
  store i32 %407, i32* %423, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %424, !pdg.inst.id !6873

424:                                              ; preds = %._crit_edge4, %410
  %425 = phi i32 [ %405, %._crit_edge4 ], [ %420, %410 ], !pdg.inst.id !872
  %426 = phi i32 [ %404, %._crit_edge4 ], [ %421, %410 ], !pdg.inst.id !866
  %427 = add nsw i64 %403, 1, !pdg.inst.id !862
  %428 = icmp slt i64 %403, %156, !pdg.inst.id !193
  br i1 %428, label %402, label %.loopexit10, !prof !7112, !pdg.inst.id !910

429:                                              ; preds = %.preheader5, %451
  %430 = phi i64 [ %454, %451 ], [ %379, %.preheader5 ], !pdg.inst.id !807
  %431 = phi i32 [ %453, %451 ], [ %284, %.preheader5 ], !pdg.inst.id !586
  %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
  %433 = getelementptr inbounds i32, i32* %173, i64 %430, !pdg.inst.id !297
  %434 = load i32, i32* %433, align 4, !tbaa !7089, !pdg.inst.id !928
  %435 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !618
  %436 = icmp eq i32 %434, %435, !pdg.inst.id !933
  br i1 %436, label %._crit_edge6, label %437, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %429
  br label %451, !pdg.inst.id !6899

437:                                              ; preds = %429
  %438 = mul nsw i32 %434, %12, !pdg.inst.id !168
  %439 = add i32 %378, %438, !pdg.inst.id !805
  %440 = sext i32 %439 to i64, !pdg.inst.id !939
  %441 = getelementptr inbounds double, double* %10, i64 %440, !pdg.inst.id !156
  %442 = load double, double* %441, align 8, !tbaa !7098, !pdg.inst.id !942
  %443 = fcmp fast olt double %442, %285, !pdg.inst.id !602
  %444 = add nsw i32 %431, 1, !pdg.inst.id !920
  %445 = add nsw i32 %432, 1, !pdg.inst.id !926
  %446 = select i1 %443, i32 %445, i32 %444, !prof !7111, !pdg.inst.id !947
  %447 = select i1 %443, i32 %445, i32 %432, !prof !7111, !pdg.inst.id !922
  %448 = select i1 %443, i32 %431, i32 %444, !prof !7111, !pdg.inst.id !916
  %449 = sext i32 %446 to i64, !pdg.inst.id !953
  %450 = getelementptr inbounds i32, i32* %2, i64 %449, !pdg.inst.id !67
  store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %451, !pdg.inst.id !6915

451:                                              ; preds = %._crit_edge6, %437
  %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
  %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
  %454 = add nsw i64 %430, 1, !pdg.inst.id !914
  %455 = icmp slt i64 %430, %156, !pdg.inst.id !197
  br i1 %455, label %429, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %397
  %.lcssa68 = phi i32 [ %398, %397 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %399, %397 ], !pdg.inst.id !854
  br label %456, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %451
  %.lcssa66 = phi i32 [ %452, %451 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %453, %451 ], !pdg.inst.id !962
  br label %456, !pdg.inst.id !6933

456:                                              ; preds = %.loopexit6, %.loopexit4, %281, %319, %376
  %457 = phi i32 [ %288, %376 ], [ %288, %319 ], [ %288, %281 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %458 = phi i32 [ %284, %376 ], [ %284, %319 ], [ %284, %281 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %158, label %459, label %512, !prof !7106, !pdg.inst.id !221

459:                                              ; preds = %456
  br i1 %289, label %.loopexit15, label %460, !pdg.inst.id !643

460:                                              ; preds = %459
  %461 = add i32 %175, -1, !pdg.inst.id !317
  %462 = sext i32 %170 to i64, !pdg.inst.id !246
  br i1 %248, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %460
  br label %485, !pdg.inst.id !6942

.preheader:                                       ; preds = %460
  br label %463, !pdg.inst.id !6944

463:                                              ; preds = %.preheader, %480
  %464 = phi i64 [ %483, %480 ], [ %462, %.preheader ], !pdg.inst.id !980
  %465 = phi i32 [ %482, %480 ], [ %284, %.preheader ], !pdg.inst.id !592
  %466 = phi i32 [ %481, %480 ], [ %288, %.preheader ], !pdg.inst.id !639
  %467 = getelementptr inbounds i32, i32* %172, i64 %464, !pdg.inst.id !287
  %468 = load i32, i32* %467, align 4, !tbaa !7089, !pdg.inst.id !998
  %469 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !608
  %470 = icmp eq i32 %468, %469, !pdg.inst.id !1003
  br i1 %470, label %._crit_edge3, label %471, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %463
  br label %480, !pdg.inst.id !6965

471:                                              ; preds = %463
  %472 = icmp slt i32 %468, %251, !pdg.inst.id !511
  %473 = add nsw i32 %466, 1, !pdg.inst.id !996
  %474 = add nsw i32 %465, 1, !pdg.inst.id !990
  %475 = select i1 %472, i32 %473, i32 %474, !pdg.inst.id !1010
  %476 = select i1 %472, i32 %473, i32 %466, !pdg.inst.id !992
  %477 = select i1 %472, i32 %465, i32 %474, !pdg.inst.id !986
  %478 = sext i32 %475 to i64, !pdg.inst.id !1016
  %479 = getelementptr inbounds i32, i32* %173, i64 %478, !pdg.inst.id !291
  store i32 %468, i32* %479, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %480, !pdg.inst.id !6976

480:                                              ; preds = %._crit_edge3, %471
  %481 = phi i32 [ %466, %._crit_edge3 ], [ %476, %471 ], !pdg.inst.id !994
  %482 = phi i32 [ %465, %._crit_edge3 ], [ %477, %471 ], !pdg.inst.id !988
  %483 = add nsw i64 %464, 1, !pdg.inst.id !984
  %484 = icmp slt i64 %464, %156, !pdg.inst.id !203
  br i1 %484, label %463, label %.loopexit, !pdg.inst.id !1029

485:                                              ; preds = %.preheader1, %507
  %486 = phi i64 [ %510, %507 ], [ %462, %.preheader1 ], !pdg.inst.id !978
  %487 = phi i32 [ %509, %507 ], [ %284, %.preheader1 ], !pdg.inst.id !590
  %488 = phi i32 [ %508, %507 ], [ %288, %.preheader1 ], !pdg.inst.id !637
  %489 = getelementptr inbounds i32, i32* %172, i64 %486, !pdg.inst.id !285
  %490 = load i32, i32* %489, align 4, !tbaa !7089, !pdg.inst.id !1047
  %491 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !616
  %492 = icmp eq i32 %490, %491, !pdg.inst.id !1053
  br i1 %492, label %._crit_edge1, label %493, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %485
  br label %507, !pdg.inst.id !7001

493:                                              ; preds = %485
  %494 = shl i32 %490, 2, !pdg.inst.id !1051
  %495 = add i32 %461, %494, !pdg.inst.id !976
  %496 = sext i32 %495 to i64, !pdg.inst.id !1059
  %497 = getelementptr inbounds double, double* %10, i64 %496, !pdg.inst.id !158
  %498 = load double, double* %497, align 8, !tbaa !7098, !pdg.inst.id !1062
  %499 = fcmp fast olt double %498, %285, !pdg.inst.id !600
  %500 = add nsw i32 %487, 1, !pdg.inst.id !1039
  %501 = add nsw i32 %488, 1, !pdg.inst.id !1045
  %502 = select i1 %499, i32 %501, i32 %500, !pdg.inst.id !1067
  %503 = select i1 %499, i32 %501, i32 %488, !pdg.inst.id !1041
  %504 = select i1 %499, i32 %487, i32 %500, !pdg.inst.id !1035
  %505 = sext i32 %502 to i64, !pdg.inst.id !1073
  %506 = getelementptr inbounds i32, i32* %173, i64 %505, !pdg.inst.id !289
  store i32 %490, i32* %506, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %507, !pdg.inst.id !7017

507:                                              ; preds = %._crit_edge1, %493
  %508 = phi i32 [ %488, %._crit_edge1 ], [ %503, %493 ], !pdg.inst.id !1043
  %509 = phi i32 [ %487, %._crit_edge1 ], [ %504, %493 ], !pdg.inst.id !1037
  %510 = add nsw i64 %486, 1, !pdg.inst.id !1033
  %511 = icmp slt i64 %486, %156, !pdg.inst.id !201
  br i1 %511, label %485, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %480
  %.lcssa72 = phi i32 [ %481, %480 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %482, %480 ], !pdg.inst.id !1025
  br label %512, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %507
  %.lcssa70 = phi i32 [ %508, %507 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %509, %507 ], !pdg.inst.id !1082
  br label %512, !pdg.inst.id !7035

512:                                              ; preds = %.loopexit2, %.loopexit, %456
  %513 = phi i32 [ %457, %456 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %514 = phi i32 [ %458, %456 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %515 = icmp slt i32 %513, %170, !pdg.inst.id !258
  br i1 %515, label %527, label %516, !prof !7106, !pdg.inst.id !1096

516:                                              ; preds = %512
  %517 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %518 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %517, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %518, align 8, !tbaa !7102, !pdg.inst.id !1100
  %519 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %520 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %519, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %520, align 8, !tbaa !7103, !pdg.inst.id !1104
  %521 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %522 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %521, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %522, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %523 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %169, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %521, %struct.kdnode** %523, align 8, !tbaa !7102, !pdg.inst.id !1108
  %524 = add nsw i32 %175, 1, !pdg.inst.id !329
  br i1 %158, label %525, label %526, !prof !7106, !pdg.inst.id !219

525:                                              ; preds = %516
  tail call fastcc void @buildkdtree(i32* %171, i32* %1, i32* %2, i32* %173, i32* nonnull %174, i32* %172, i32 %170, i32 %513, %struct.kdnode** nonnull %8, %struct.kdnode* %521, double* %10, i32 %524, i32 4), !pdg.inst.id !65
  br label %527, !pdg.inst.id !7059

526:                                              ; preds = %516
  tail call fastcc void @buildkdtree(i32* %171, i32* %1, i32* %2, i32* nonnull %174, i32* %172, i32* %173, i32 %170, i32 %513, %struct.kdnode** nonnull %8, %struct.kdnode* %521, double* %10, i32 %524, i32 %12), !pdg.inst.id !63
  br label %527, !pdg.inst.id !7062

527:                                              ; preds = %512, %525, %526
  %528 = icmp sgt i32 %514, %284, !pdg.inst.id !598
  br i1 %528, label %529, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

529:                                              ; preds = %527
  %530 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %531 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %530, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %531, align 8, !tbaa !7102, !pdg.inst.id !1120
  %532 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %533 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %532, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %533, align 8, !tbaa !7103, !pdg.inst.id !1124
  %534 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %535 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %534, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %535, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %536 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %169, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %534, %struct.kdnode** %536, align 8, !tbaa !7103, !pdg.inst.id !1128
  %537 = add nsw i32 %284, 1, !pdg.inst.id !596
  %538 = add nsw i32 %175, 1, !pdg.inst.id !331
  %539 = select i1 %158, i32* %173, i32* %174, !prof !7106, !pdg.inst.id !217
  %540 = select i1 %158, i32* %174, i32* %172, !prof !7106, !pdg.inst.id !215
  %541 = select i1 %158, i32* %172, i32* %173, !prof !7106, !pdg.inst.id !213
  %542 = icmp eq i32 %537, %7, !pdg.inst.id !89
  br i1 %542, label %.loopexit16, label %167, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %565, %565, %527, %459
  br label %543, !pdg.inst.id !7078

543:                                              ; preds = %.loopexit15, %219, %232, %202, %161
  ret void, !pdg.inst.id !7115

544:                                              ; preds = %157
  store i32 1, i32* @9
  store i32 %12, i32* %110
  store i32 %11, i32* %112
  store %struct.kdnode* %9, %struct.kdnode** %114
  store %struct.kdnode** %8, %struct.kdnode*** %116
  store i32 %6, i32* %118
  store i32* %5, i32** %120
  store i32 %7, i32* %122
  store i32* %0, i32** %124
  store i32 %154, i32* %126
  store i32* %2, i32** %128
  store i32* %1, i32** %130
  store i32* %3, i32** %132
  store i32* %4, i32** %134
  store i1 %158, i1* %136
  store i64 %156, i64* %145
  store double* %10, double** %147
  %545 = alloca [1 x i8*]
  %546 = getelementptr inbounds [1 x i8*], [1 x i8*]* %545, i64 0, i64 0
  %547 = bitcast i8** %546 to void (i8*, i8*)**
  store void (i8*, i8*)* @29, void (i8*, i8*)** %547
  %548 = bitcast [1 x i8*]* %545 to i8*
  %549 = alloca [8 x i64]
  %550 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 0
  store i64 64, i64* %550
  %551 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 1
  store i64 64, i64* %551
  %552 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 2
  store i64 64, i64* %552
  %553 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 3
  store i64 64, i64* %553
  %554 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 4
  store i64 64, i64* %554
  %555 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 5
  store i64 64, i64* %555
  %556 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 6
  store i64 64, i64* %556
  %557 = getelementptr inbounds [8 x i64], [8 x i64]* %549, i64 0, i64 7
  store i64 64, i64* %557
  %558 = bitcast [8 x i64]* %549 to i64*
  call void @stageDispatcher(i8* %108, i64* %558, i8* %548, i64 1, i64 8)
  %559 = load %struct.kdnode*, %struct.kdnode** %138
  %560 = load i32, i32* %140
  %561 = load i32, i32* %142
  %562 = load i32*, i32** %144
  %563 = load i32*, i32** %149
  %564 = load %struct.kdnode*, %struct.kdnode** %151
  br label %565

565:                                              ; preds = %544
  %566 = getelementptr inbounds [184 x i64], [184 x i64]* %107, i64 0, i64 176
  %567 = load i64, i64* %566
  %568 = trunc i64 %567 to i32
  store i32 0, i32* @9
  switch i32 %568, label %178 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

569:                                              ; preds = %252
  store i32 1, i32* @10
  store double* %10, double** %93
  store i32 %254, i32* %95
  store i64 %259, i64* %97
  store i32 %12, i32* %99
  store i32* %174, i32** %101
  store i64 %249, i64* %102
  store double %258, double* %104
  %570 = alloca [1 x i8*]
  %571 = getelementptr inbounds [1 x i8*], [1 x i8*]* %570, i64 0, i64 0
  %572 = bitcast i8** %571 to void (i8*, i8*)**
  store void (i8*, i8*)* @30, void (i8*, i8*)** %572
  %573 = bitcast [1 x i8*]* %570 to i8*
  %574 = alloca [8 x i64]
  %575 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 0
  store i64 64, i64* %575
  %576 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 1
  store i64 64, i64* %576
  %577 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 2
  store i64 64, i64* %577
  %578 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 3
  store i64 64, i64* %578
  %579 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 4
  store i64 64, i64* %579
  %580 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 5
  store i64 64, i64* %580
  %581 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 6
  store i64 64, i64* %581
  %582 = getelementptr inbounds [8 x i64], [8 x i64]* %574, i64 0, i64 7
  store i64 64, i64* %582
  %583 = bitcast [8 x i64]* %574 to i64*
  call void @stageDispatcher(i8* %91, i64* %583, i8* %573, i64 1, i64 8)
  %584 = load i64, i64* %96
  br label %585

585:                                              ; preds = %569
  %586 = getelementptr inbounds [72 x i64], [72 x i64]* %90, i64 0, i64 64
  %587 = load i64, i64* %586
  %588 = trunc i64 %587 to i32
  store i32 0, i32* @10
  switch i32 %588, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

589:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %71
  store i32 %288, i32* %73
  store double %285, double* %75
  store i32* %1, i32** %77
  store i32 %284, i32* %79
  store i32* %286, i32** %81
  store i32 %291, i32* %83
  store i32* %171, i32** %85
  store double* %10, double** %87
  store i64 %292, i64* %88
  store i64 %156, i64* %89
  %590 = alloca [1 x i8*]
  %591 = getelementptr inbounds [1 x i8*], [1 x i8*]* %590, i64 0, i64 0
  %592 = bitcast i8** %591 to void (i8*, i8*)**
  store void (i8*, i8*)* @31, void (i8*, i8*)** %592
  %593 = bitcast [1 x i8*]* %590 to i8*
  %594 = alloca [8 x i64]
  %595 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 0
  store i64 64, i64* %595
  %596 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 1
  store i64 64, i64* %596
  %597 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 2
  store i64 64, i64* %597
  %598 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 3
  store i64 64, i64* %598
  %599 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 4
  store i64 64, i64* %599
  %600 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 5
  store i64 64, i64* %600
  %601 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 6
  store i64 64, i64* %601
  %602 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 7
  store i64 64, i64* %602
  %603 = bitcast [8 x i64]* %594 to i64*
  call void @stageDispatcher(i8* %69, i64* %603, i8* %593, i64 1, i64 8)
  br label %604

604:                                              ; preds = %589
  store i32 0, i32* @11
  br label %.loopexit14

605:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %171, i32** %55
  store i32 %288, i32* %57
  store i32* %286, i32** %59
  store i32 %284, i32* %61
  store i32* %1, i32** %63
  store i32 %251, i32* %65
  store i64 %156, i64* %66
  store i64 %292, i64* %67
  %606 = alloca [1 x i8*]
  %607 = getelementptr inbounds [1 x i8*], [1 x i8*]* %606, i64 0, i64 0
  %608 = bitcast i8** %607 to void (i8*, i8*)**
  store void (i8*, i8*)* @32, void (i8*, i8*)** %608
  %609 = bitcast [1 x i8*]* %606 to i8*
  %610 = alloca [8 x i64]
  %611 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 0
  store i64 64, i64* %611
  %612 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 1
  store i64 64, i64* %612
  %613 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 2
  store i64 64, i64* %613
  %614 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 3
  store i64 64, i64* %614
  %615 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 4
  store i64 64, i64* %615
  %616 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 5
  store i64 64, i64* %616
  %617 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 6
  store i64 64, i64* %617
  %618 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 7
  store i64 64, i64* %618
  %619 = bitcast [8 x i64]* %610 to i64*
  call void @stageDispatcher(i8* %53, i64* %619, i8* %609, i64 1, i64 8)
  br label %620

620:                                              ; preds = %605
  store i32 0, i32* @12
  br label %.loopexit12

621:                                              ; preds = %.preheader9
  store i32 1, i32* @13
  store i32 %12, i32* %33
  store i32 %288, i32* %35
  store i32 %284, i32* %37
  store i32* %1, i32** %39
  store double %285, double* %41
  store i32* %286, i32** %43
  store i32* %2, i32** %45
  store i32 %321, i32* %47
  store double* %10, double** %49
  store i64 %322, i64* %50
  store i64 %156, i64* %51
  %622 = alloca [1 x i8*]
  %623 = getelementptr inbounds [1 x i8*], [1 x i8*]* %622, i64 0, i64 0
  %624 = bitcast i8** %623 to void (i8*, i8*)**
  store void (i8*, i8*)* @33, void (i8*, i8*)** %624
  %625 = bitcast [1 x i8*]* %622 to i8*
  %626 = alloca [8 x i64]
  %627 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 0
  store i64 64, i64* %627
  %628 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 1
  store i64 64, i64* %628
  %629 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 2
  store i64 64, i64* %629
  %630 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 3
  store i64 64, i64* %630
  %631 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 4
  store i64 64, i64* %631
  %632 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 5
  store i64 64, i64* %632
  %633 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 6
  store i64 64, i64* %633
  %634 = getelementptr inbounds [8 x i64], [8 x i64]* %626, i64 0, i64 7
  store i64 64, i64* %634
  %635 = bitcast [8 x i64]* %626 to i64*
  call void @stageDispatcher(i8* %31, i64* %635, i8* %625, i64 1, i64 8)
  br label %636

636:                                              ; preds = %621
  store i32 0, i32* @13
  br label %.loopexit10

637:                                              ; preds = %.preheader7
  store i32 1, i32* @14
  store i32 %288, i32* %17
  store i64 %322, i64* %18
  store i32* %286, i32** %20
  store i32 %284, i32* %22
  store i32* %1, i32** %24
  store i32 %251, i32* %26
  store i32* %2, i32** %28
  store i64 %156, i64* %29
  %638 = alloca [1 x i8*]
  %639 = getelementptr inbounds [1 x i8*], [1 x i8*]* %638, i64 0, i64 0
  %640 = bitcast i8** %639 to void (i8*, i8*)**
  store void (i8*, i8*)* @34, void (i8*, i8*)** %640
  %641 = bitcast [1 x i8*]* %638 to i8*
  %642 = alloca [8 x i64]
  %643 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 0
  store i64 64, i64* %643
  %644 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 1
  store i64 64, i64* %644
  %645 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 2
  store i64 64, i64* %645
  %646 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 3
  store i64 64, i64* %646
  %647 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 4
  store i64 64, i64* %647
  %648 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 5
  store i64 64, i64* %648
  %649 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 6
  store i64 64, i64* %649
  %650 = getelementptr inbounds [8 x i64], [8 x i64]* %642, i64 0, i64 7
  store i64 64, i64* %650
  %651 = bitcast [8 x i64]* %642 to i64*
  call void @stageDispatcher(i8* %15, i64* %651, i8* %641, i64 1, i64 8)
  br label %652

652:                                              ; preds = %637
  store i32 0, i32* @14
  br label %.loopexit8
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 24 = "  %433 = getelementptr inbounds i32, i32* %173, i64 %430, !pdg.inst.id !297"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %433 = getelementptr inbounds i32, i32* %173, i64 %430, !pdg.inst.id !297
DSWP:       %442 = load double, double* %441, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:       %441 = getelementptr inbounds double, double* %10, i64 %440, !pdg.inst.id !156
DSWP:       %434 = load i32, i32* %433, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:       %440 = sext i32 %439 to i64, !pdg.inst.id !939
DSWP:       %443 = fcmp fast olt double %442, %285, !pdg.inst.id !602
DSWP:       %438 = mul nsw i32 %434, %12, !pdg.inst.id !168
DSWP:       br i1 %436, label %._crit_edge6, label %437, !prof !7110, !pdg.inst.id !936
DSWP:       store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:       %445 = add nsw i32 %432, 1, !pdg.inst.id !926
DSWP:       br label %451, !pdg.inst.id !6899
DSWP:       %449 = sext i32 %446 to i64, !pdg.inst.id !953
DSWP:       %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
DSWP:       %439 = add i32 %378, %438, !pdg.inst.id !805
DSWP:       %444 = add nsw i32 %431, 1, !pdg.inst.id !920
DSWP:       %450 = getelementptr inbounds i32, i32* %2, i64 %449, !pdg.inst.id !67
DSWP:       %448 = select i1 %443, i32 %431, i32 %444, !prof !7111, !pdg.inst.id !916
DSWP:       br label %451, !pdg.inst.id !6915
DSWP:       %447 = select i1 %443, i32 %445, i32 %432, !prof !7111, !pdg.inst.id !922
DSWP:       %446 = select i1 %443, i32 %445, i32 %444, !prof !7111, !pdg.inst.id !947
DSWP:       %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
DSWP:       %435 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:       %431 = phi i32 [ %453, %451 ], [ %284, %.preheader5 ], !pdg.inst.id !586
DSWP:       %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
DSWP:       %436 = icmp eq i32 %434, %435, !pdg.inst.id !933
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %433 = getelementptr inbounds i32, i32* %173, i64 %430, !pdg.inst.id !297
DSWP:       %442 = load double, double* %441, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:       %441 = getelementptr inbounds double, double* %10, i64 %440, !pdg.inst.id !156
DSWP:       %434 = load i32, i32* %433, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:       %440 = sext i32 %439 to i64, !pdg.inst.id !939
DSWP:       %443 = fcmp fast olt double %442, %285, !pdg.inst.id !602
DSWP:       %438 = mul nsw i32 %434, %12, !pdg.inst.id !168
DSWP:       br i1 %436, label %._crit_edge6, label %437, !prof !7110, !pdg.inst.id !936
DSWP:       store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:       %445 = add nsw i32 %432, 1, !pdg.inst.id !926
DSWP:       br label %451, !pdg.inst.id !6899
DSWP:       %449 = sext i32 %446 to i64, !pdg.inst.id !953
DSWP:       %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
DSWP:       %439 = add i32 %378, %438, !pdg.inst.id !805
DSWP:       %444 = add nsw i32 %431, 1, !pdg.inst.id !920
DSWP:       %450 = getelementptr inbounds i32, i32* %2, i64 %449, !pdg.inst.id !67
DSWP:       %448 = select i1 %443, i32 %431, i32 %444, !prof !7111, !pdg.inst.id !916
DSWP:       br label %451, !pdg.inst.id !6915
DSWP:       %447 = select i1 %443, i32 %445, i32 %432, !prof !7111, !pdg.inst.id !922
DSWP:       %446 = select i1 %443, i32 %445, i32 %444, !prof !7111, !pdg.inst.id !947
DSWP:       %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
DSWP:       %435 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:       %431 = phi i32 [ %453, %451 ], [ %284, %.preheader5 ], !pdg.inst.id !586
DSWP:       %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
DSWP:       %436 = icmp eq i32 %434, %435, !pdg.inst.id !933
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 25
DSWP:     	  %433 = getelementptr inbounds i32, i32* %173, i64 %430, !pdg.inst.id !297
DSWP:     	  %442 = load double, double* %441, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:     	  %441 = getelementptr inbounds double, double* %10, i64 %440, !pdg.inst.id !156
DSWP:     	  %434 = load i32, i32* %433, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:     	  %440 = sext i32 %439 to i64, !pdg.inst.id !939
DSWP:     	  %443 = fcmp fast olt double %442, %285, !pdg.inst.id !602
DSWP:     	  %438 = mul nsw i32 %434, %12, !pdg.inst.id !168
DSWP:     	  br i1 %436, label %._crit_edge6, label %437, !prof !7110, !pdg.inst.id !936
DSWP:     	  store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:     	  %445 = add nsw i32 %432, 1, !pdg.inst.id !926
DSWP:     	  br label %451, !pdg.inst.id !6899
DSWP:     	  %449 = sext i32 %446 to i64, !pdg.inst.id !953
DSWP:     	  %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
DSWP:     	  %439 = add i32 %378, %438, !pdg.inst.id !805
DSWP:     	  %444 = add nsw i32 %431, 1, !pdg.inst.id !920
DSWP:     	  %450 = getelementptr inbounds i32, i32* %2, i64 %449, !pdg.inst.id !67
DSWP:     	  %448 = select i1 %443, i32 %431, i32 %444, !prof !7111, !pdg.inst.id !916
DSWP:     	  br label %451, !pdg.inst.id !6915
DSWP:     	  %447 = select i1 %443, i32 %445, i32 %432, !prof !7111, !pdg.inst.id !922
DSWP:     	  %446 = select i1 %443, i32 %445, i32 %444, !prof !7111, !pdg.inst.id !947
DSWP:     	  %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
DSWP:     	  %435 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:     	  %431 = phi i32 [ %453, %451 ], [ %284, %.preheader5 ], !pdg.inst.id !586
DSWP:     	  %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
DSWP:     	  %436 = icmp eq i32 %434, %435, !pdg.inst.id !933
DSWP:     External nodes: 2
DSWP:     	  %430 = phi i64 [ %454, %451 ], [ %379, %.preheader5 ], !pdg.inst.id !807
DSWP:     	  br i1 %455, label %429, label %.loopexit6, !prof !7112, !pdg.inst.id !966
DSWP:     Edges: 63
DSWP:     	From:	  %450 = getelementptr inbounds i32, i32* %2, i64 %449, !pdg.inst.id !67
DSWP:     	To:	  store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:     	RAW (must)
DSWP:     	From:	  %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
DSWP:     	To:	  %431 = phi i32 [ %453, %451 ], [ %284, %.preheader5 ], !pdg.inst.id !586
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:     	To:	  %434 = load i32, i32* %433, align 4, !tbaa !7089, !pdg.inst.id !928
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:     	To:	  %435 = load i32, i32* %286, align 4, !tbaa !7089, !pdg.inst.id !618
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %434, i32* %450, align 4, !tbaa !7089, !pdg.inst.id !930
DSWP:     	To:	  %442 = load double, double* %441, align 8, !tbaa !7098, !pdg.inst.id !942
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %449 = sext i32 %446 to i64, !pdg.inst.id !953
DSWP:     	To:	  %450 = getelementptr inbounds i32, i32* %2, i64 %449, !pdg.inst.id !67
DSWP:     	RAW (must)
DSWP:     	From:	  %448 = select i1 %443, i32 %431, i32 %444, !prof !7111, !pdg.inst.id !916
DSWP:     	To:	  %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
DSWP:     	RAW (must)
DSWP:     	From:	  %447 = select i1 %443, i32 %445, i32 %432, !prof !7111, !pdg.inst.id !922
DSWP:     	To:	  %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
DSWP:     	RAW (must)
DSWP:     	From:	  %439 = add i32 %378, %438, !pdg.inst.id !805
DSWP:     	To:	  %440 = sext i32 %439 to i64, !pdg.inst.id !939
DSWP:     	RAW (must)
DSWP:     	From:	  %444 = add nsw i32 %431, 1, !pdg.inst.id !920
DSWP:     	To:	  %448 = select i1 %443, i32 %431, i32 %444, !prof !7111, !pdg.inst.id !916
DSWP:     	RAW (must)
DSWP:     	From:	  %444 = add nsw i32 %431, 1, !pdg.inst.id !920
DSWP:     	To:	  %446 = select i1 %443, i32 %445, i32 %444, !prof !7111, !pdg.inst.id !947
DSWP:     	RAW (must)
DSWP:     	From:	  %446 = select i1 %443, i32 %445, i32 %444, !prof !7111, !pdg.inst.id !947
DSWP:     	To:	  %449 = sext i32 %446 to i64, !pdg.inst.id !953
DSWP:     	RAW (must)
DSWP:     	From:	  %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
DSWP:     	To:	  %447 = select i1 %443, i32 %445, i32 %432, !prof !7111, !pdg.inst.id !922
DSWP:     	RAW (must)
DSWP:     	From:	  %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
DSWP:     	To:	  %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
DSWP:     	RAW (must)
DSWP:     	From:	  %432 = phi i32 [ %452, %451 ], [ %288, %.preheader5 ], !pdg.inst.id !633
DSWP:     	To:	  %445 = add nsw i32 %432, 1, !pdg.inst.id !926
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %288 = add nsw i32 %170, -1, !pdg.inst.id !262
DSWP:    Pre loop env 2, producer:	  %285 = phi double [ %258, %275 ], [ 0.000000e+00, %245 ], !pdg.inst.id !531
DSWP:    Pre loop env 3, producer:	  %284 = phi i32 [ %276, %275 ], [ %247, %245 ], !pdg.inst.id !488
DSWP:    Pre loop env 4, producer:	  %173 = phi i32* [ %539, %529 ], [ %3, %157 ], !pdg.inst.id !77
DSWP:    Pre loop env 5, producer:	i32 %12
DSWP:    Pre loop env 6, producer:	i32* %2
DSWP:    Pre loop env 7, producer:	  %286 = getelementptr inbounds i32, i32* %174, i64 %283, !pdg.inst.id !307
DSWP:    Pre loop env 8, producer:	  %378 = add i32 %175, -1, !pdg.inst.id !319
DSWP:    Pre loop env 9, producer:	  %156 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:    Pre loop env 10, producer:	double* %10
DSWP:    Pre loop env 11, producer:	  %379 = sext i32 %170 to i64, !pdg.inst.id !248
DSWP:    Post loop env 12, producer:	  %452 = phi i32 [ %432, %._crit_edge6 ], [ %447, %437 ], !pdg.inst.id !924
DSWP:    Post loop env 13, producer:	  %453 = phi i32 [ %431, %._crit_edge6 ], [ %448, %437 ], !pdg.inst.id !918
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @35(i8*, i8*) {
  %3 = bitcast i8* %0 to [104 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to double*
  %10 = load double, double* %9
  %11 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32**
  %16 = load i32*, i32** %15
  %17 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 40
  %21 = bitcast i64* %20 to i32**
  %22 = load i32*, i32** %21
  %23 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 48
  %24 = bitcast i64* %23 to i32**
  %25 = load i32*, i32** %24
  %26 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 56
  %27 = bitcast i64* %26 to i32*
  %28 = load i32, i32* %27
  %29 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 72
  %30 = load i64, i64* %29
  %31 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 88
  %32 = bitcast i64* %31 to double**
  %33 = load double*, double** %32
  %34 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 96
  %35 = load i64, i64* %34
  %36 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 64
  %37 = bitcast i64* %36 to i32*
  %38 = getelementptr inbounds [104 x i64], [104 x i64]* %3, i64 0, i64 80
  %39 = bitcast i64* %38 to i32*
  br label %42

40:                                               ; preds = %41
  ret void

41:                                               ; preds = %65
  br label %40

42:                                               ; preds = %2, %65
  %43 = phi i64 [ %68, %65 ], [ %35, %2 ], !pdg.inst.id !30
  %44 = phi i32 [ %67, %65 ], [ %13, %2 ], !pdg.inst.id !31
  %45 = phi i32 [ %66, %65 ], [ %7, %2 ], !pdg.inst.id !32
  %46 = getelementptr inbounds i32, i32* %16, i64 %43, !pdg.inst.id !33
  %47 = load i32, i32* %46, align 4, !tbaa !34, !pdg.inst.id !38
  %48 = load i32, i32* %25, align 4, !tbaa !34, !pdg.inst.id !39
  %49 = icmp eq i32 %47, %48, !pdg.inst.id !40
  br i1 %49, label %50, label %51, !prof !41, !pdg.inst.id !42

50:                                               ; preds = %42
  br label %65, !pdg.inst.id !43

51:                                               ; preds = %42
  %52 = mul nsw i32 %47, %19, !pdg.inst.id !44
  %53 = add i32 %28, %52, !pdg.inst.id !45
  %54 = sext i32 %53 to i64, !pdg.inst.id !46
  %55 = getelementptr inbounds double, double* %33, i64 %54, !pdg.inst.id !47
  %56 = load double, double* %55, align 8, !tbaa !48, !pdg.inst.id !50
  %57 = fcmp fast olt double %56, %10, !pdg.inst.id !51
  %58 = add nsw i32 %44, 1, !pdg.inst.id !52
  %59 = add nsw i32 %45, 1, !pdg.inst.id !53
  %60 = select i1 %57, i32 %59, i32 %58, !prof !54, !pdg.inst.id !55
  %61 = select i1 %57, i32 %59, i32 %45, !prof !54, !pdg.inst.id !56
  %62 = select i1 %57, i32 %44, i32 %58, !prof !54, !pdg.inst.id !57
  %63 = sext i32 %60 to i64, !pdg.inst.id !58
  %64 = getelementptr inbounds i32, i32* %22, i64 %63, !pdg.inst.id !59
  store i32 %47, i32* %64, align 4, !tbaa !34, !pdg.inst.id !60
  br label %65, !pdg.inst.id !61

65:                                               ; preds = %50, %51
  %66 = phi i32 [ %45, %50 ], [ %61, %51 ], !pdg.inst.id !62
  %67 = phi i32 [ %44, %50 ], [ %62, %51 ], !pdg.inst.id !63
  %68 = add nsw i64 %43, 1, !pdg.inst.id !64
  %69 = icmp slt i64 %43, %30, !pdg.inst.id !65
  store i32 %66, i32* %37
  store i32 %67, i32* %39
  br i1 %69, label %42, label %41, !prof !66, !pdg.inst.id !67
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [104 x i64]
  %15 = bitcast [104 x i64]* %14 to i8*
  %16 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to double*
  %20 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32*
  %22 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32**
  %24 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32*
  %26 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32**
  %28 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 48
  %29 = bitcast i64* %28 to i32**
  %30 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 56
  %31 = bitcast i64* %30 to i32*
  %32 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 64
  %33 = bitcast i64* %32 to i32*
  %34 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 72
  %35 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 80
  %36 = bitcast i64* %35 to i32*
  %37 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 88
  %38 = bitcast i64* %37 to double**
  %39 = getelementptr inbounds [104 x i64], [104 x i64]* %14, i64 0, i64 96
  %40 = alloca [64 x i64]
  %41 = bitcast [64 x i64]* %40 to i8*
  %42 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 0
  %43 = bitcast i64* %42 to i32*
  %44 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 8
  %45 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 16
  %46 = bitcast i64* %45 to i32**
  %47 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 24
  %48 = bitcast i64* %47 to i32*
  %49 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 32
  %50 = bitcast i64* %49 to i32**
  %51 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 40
  %52 = bitcast i64* %51 to i32*
  %53 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 48
  %54 = bitcast i64* %53 to i32**
  %55 = getelementptr inbounds [64 x i64], [64 x i64]* %40, i64 0, i64 56
  %56 = alloca [88 x i64]
  %57 = bitcast [88 x i64]* %56 to i8*
  %58 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 0
  %59 = bitcast i64* %58 to i32*
  %60 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 8
  %61 = bitcast i64* %60 to i32*
  %62 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 16
  %63 = bitcast i64* %62 to i32*
  %64 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 24
  %65 = bitcast i64* %64 to i32**
  %66 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 32
  %67 = bitcast i64* %66 to double*
  %68 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 40
  %69 = bitcast i64* %68 to i32**
  %70 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 48
  %71 = bitcast i64* %70 to i32**
  %72 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 56
  %73 = bitcast i64* %72 to i32*
  %74 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 64
  %75 = bitcast i64* %74 to double**
  %76 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 72
  %77 = getelementptr inbounds [88 x i64], [88 x i64]* %56, i64 0, i64 80
  %78 = alloca [64 x i64]
  %79 = bitcast [64 x i64]* %78 to i8*
  %80 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 0
  %81 = bitcast i64* %80 to i32**
  %82 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 8
  %83 = bitcast i64* %82 to i32*
  %84 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 16
  %85 = bitcast i64* %84 to i32**
  %86 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 24
  %87 = bitcast i64* %86 to i32*
  %88 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 32
  %89 = bitcast i64* %88 to i32**
  %90 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 40
  %91 = bitcast i64* %90 to i32*
  %92 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 48
  %93 = getelementptr inbounds [64 x i64], [64 x i64]* %78, i64 0, i64 56
  %94 = alloca [88 x i64]
  %95 = bitcast [88 x i64]* %94 to i8*
  %96 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 0
  %97 = bitcast i64* %96 to i32*
  %98 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 8
  %99 = bitcast i64* %98 to i32*
  %100 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 16
  %101 = bitcast i64* %100 to double*
  %102 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 24
  %103 = bitcast i64* %102 to i32**
  %104 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 32
  %105 = bitcast i64* %104 to i32*
  %106 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 40
  %107 = bitcast i64* %106 to i32**
  %108 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 48
  %109 = bitcast i64* %108 to i32*
  %110 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 56
  %111 = bitcast i64* %110 to i32**
  %112 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 64
  %113 = bitcast i64* %112 to double**
  %114 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 72
  %115 = getelementptr inbounds [88 x i64], [88 x i64]* %94, i64 0, i64 80
  %116 = alloca [72 x i64]
  %117 = bitcast [72 x i64]* %116 to i8*
  %118 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 0
  %119 = bitcast i64* %118 to double**
  %120 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 8
  %121 = bitcast i64* %120 to i32*
  %122 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 16
  %123 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 24
  %124 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 32
  %125 = bitcast i64* %124 to i32*
  %126 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 40
  %127 = bitcast i64* %126 to i32**
  %128 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 48
  %129 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 56
  %130 = bitcast i64* %129 to double*
  %131 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 64
  %132 = bitcast i64* %131 to i32*
  %133 = alloca [184 x i64]
  %134 = bitcast [184 x i64]* %133 to i8*
  %135 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 0
  %136 = bitcast i64* %135 to i32*
  %137 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 8
  %138 = bitcast i64* %137 to i32*
  %139 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 16
  %140 = bitcast i64* %139 to %struct.kdnode**
  %141 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 24
  %142 = bitcast i64* %141 to %struct.kdnode***
  %143 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 32
  %144 = bitcast i64* %143 to i32*
  %145 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 40
  %146 = bitcast i64* %145 to i32**
  %147 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 48
  %148 = bitcast i64* %147 to i32*
  %149 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 56
  %150 = bitcast i64* %149 to i32**
  %151 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 64
  %152 = bitcast i64* %151 to i32*
  %153 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 72
  %154 = bitcast i64* %153 to i32**
  %155 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 80
  %156 = bitcast i64* %155 to i32**
  %157 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 88
  %158 = bitcast i64* %157 to i32**
  %159 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 96
  %160 = bitcast i64* %159 to i32**
  %161 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 104
  %162 = bitcast i64* %161 to i1*
  %163 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 112
  %164 = bitcast i64* %163 to %struct.kdnode**
  %165 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 120
  %166 = bitcast i64* %165 to i32*
  %167 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 128
  %168 = bitcast i64* %167 to i32*
  %169 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 136
  %170 = bitcast i64* %169 to i32**
  %171 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 144
  %172 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 152
  %173 = bitcast i64* %172 to double**
  %174 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 160
  %175 = bitcast i64* %174 to i32**
  %176 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 168
  %177 = bitcast i64* %176 to %struct.kdnode**
  %178 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 176
  %179 = bitcast i64* %178 to i32*
  %180 = add nsw i32 %12, 1, !pdg.inst.id !181
  %181 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %182 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %181, label %187, label %183, !prof !7088, !pdg.inst.id !185

183:                                              ; preds = %13
  %184 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %185 = load i32, i32* @9
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %572, label %193

.loopexit16:                                      ; preds = %593, %557
  %.lcssa88 = phi %struct.kdnode* [ %562, %557 ], [ %592, %593 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %197, %557 ], [ %590, %593 ], !pdg.inst.id !225
  br label %187, !pdg.inst.id !6401

187:                                              ; preds = %.loopexit16, %13
  %188 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %189 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %190 = getelementptr inbounds i32, i32* %188, i64 %182, !pdg.inst.id !187
  %191 = load i32, i32* %190, align 4, !tbaa !7089, !pdg.inst.id !230
  %192 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %189, i64 0, i32 0, !pdg.inst.id !228
  store i32 %191, i32* %192, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %571, !pdg.inst.id !6410

193:                                              ; preds = %183, %557
  %194 = phi i32 [ %566, %557 ], [ %11, %183 ], !pdg.inst.id !162
  %195 = phi %struct.kdnode* [ %562, %557 ], [ %9, %183 ], !pdg.inst.id !142
  %196 = phi i32 [ %565, %557 ], [ %6, %183 ], !pdg.inst.id !83
  %197 = phi i32* [ %569, %557 ], [ %5, %183 ], !pdg.inst.id !81
  %198 = phi i32* [ %568, %557 ], [ %4, %183 ], !pdg.inst.id !79
  %199 = phi i32* [ %567, %557 ], [ %3, %183 ], !pdg.inst.id !77
  %200 = phi i32* [ %197, %557 ], [ %0, %183 ], !pdg.inst.id !53
  %201 = srem i32 %194, %180, !pdg.inst.id !183
  %202 = add nsw i32 %196, 1, !pdg.inst.id !264
  %203 = icmp eq i32 %202, %7, !pdg.inst.id !96
  br i1 %203, label %204, label %271, !prof !7096, !pdg.inst.id !334

204:                                              ; preds = %593, %193
  %.lcssa85 = phi %struct.kdnode* [ %195, %193 ], [ %587, %593 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %196, %193 ], [ %588, %593 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %200, %193 ], [ %591, %593 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %201, %193 ], [ %589, %593 ], !pdg.inst.id !315
  %205 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %206 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %207 = getelementptr inbounds i32, i32* %.lcssa76, i64 %206, !pdg.inst.id !352
  %208 = load i32, i32* %207, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %205, label %209, label %213, !prof !7097, !pdg.inst.id !361

209:                                              ; preds = %204
  %210 = getelementptr inbounds i32, i32* %.lcssa76, i64 %182, !pdg.inst.id !207
  %211 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !376
  %212 = icmp slt i32 %208, %211, !pdg.inst.id !374
  br i1 %212, label %228, label %241, !pdg.inst.id !382

213:                                              ; preds = %204
  %214 = mul nsw i32 %208, %12, !pdg.inst.id !166
  %215 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %216 = add i32 %215, %214, !pdg.inst.id !384
  %217 = sext i32 %216 to i64, !pdg.inst.id !389
  %218 = getelementptr inbounds double, double* %10, i64 %217, !pdg.inst.id !144
  %219 = load double, double* %218, align 8, !tbaa !7098, !pdg.inst.id !283
  %220 = getelementptr inbounds i32, i32* %.lcssa76, i64 %182, !pdg.inst.id !205
  %221 = load i32, i32* %220, align 4, !tbaa !7089, !pdg.inst.id !397
  %222 = mul nsw i32 %221, %12, !pdg.inst.id !164
  %223 = add i32 %215, %222, !pdg.inst.id !386
  %224 = sext i32 %223 to i64, !pdg.inst.id !402
  %225 = getelementptr inbounds double, double* %10, i64 %224, !pdg.inst.id !146
  %226 = load double, double* %225, align 8, !tbaa !7098, !pdg.inst.id !405
  %227 = fcmp fast olt double %219, %226, !pdg.inst.id !395
  br i1 %227, label %228, label %243, !prof !7100, !pdg.inst.id !409

228:                                              ; preds = %213, %209
  %229 = phi %struct.kdnode* [ %.lcssa85, %213 ], [ %.lcssa85, %209 ], !pdg.inst.id !342
  %230 = phi i32 [ %221, %213 ], [ %211, %209 ], !pdg.inst.id !378
  %231 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %230, i32* %231, align 8, !tbaa !7093, !pdg.inst.id !413
  %232 = load i32, i32* %207, align 4, !tbaa !7089, !pdg.inst.id !364
  %233 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %234 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %233, i64 0, i32 0, !pdg.inst.id !420
  store i32 %232, i32* %234, align 8, !tbaa !7093, !pdg.inst.id !416
  %235 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %233, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %235, align 8, !tbaa !7102, !pdg.inst.id !423
  %236 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %237 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %236, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %237, align 8, !tbaa !7103, !pdg.inst.id !427
  %238 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %239 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %238, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %239, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %240 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %229, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %238, %struct.kdnode** %240, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %571, !pdg.inst.id !6480

241:                                              ; preds = %209
  %242 = icmp sgt i32 %208, %211, !pdg.inst.id !371
  br i1 %242, label %245, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %241
  br label %258, !pdg.inst.id !6511

243:                                              ; preds = %213
  %244 = fcmp fast ogt double %219, %226, !pdg.inst.id !393
  br i1 %244, label %245, label %258, !pdg.inst.id !437

245:                                              ; preds = %243, %241
  %246 = phi i32* [ %.lcssa76, %243 ], [ %.lcssa76, %241 ], !pdg.inst.id !354
  %247 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %208, i32* %247, align 8, !tbaa !7093, !pdg.inst.id !367
  %248 = getelementptr inbounds i32, i32* %246, i64 %182, !pdg.inst.id !211
  %249 = load i32, i32* %248, align 4, !tbaa !7089, !pdg.inst.id !441
  %250 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %251 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %250, i64 0, i32 0, !pdg.inst.id !447
  store i32 %249, i32* %251, align 8, !tbaa !7093, !pdg.inst.id !443
  %252 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %250, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %252, align 8, !tbaa !7102, !pdg.inst.id !450
  %253 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %254 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %253, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %254, align 8, !tbaa !7103, !pdg.inst.id !454
  %255 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %256 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %255, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %256, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %257 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %255, %struct.kdnode** %257, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %571, !pdg.inst.id !6525

258:                                              ; preds = %._crit_edge9, %243
  %259 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %243 ], !pdg.inst.id !344
  %260 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %208, i32* %260, align 8, !tbaa !7093, !pdg.inst.id !369
  %261 = getelementptr inbounds i32, i32* %.lcssa76, i64 %182, !pdg.inst.id !209
  %262 = load i32, i32* %261, align 4, !tbaa !7089, !pdg.inst.id !465
  %263 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %264 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %263, i64 0, i32 0, !pdg.inst.id !471
  store i32 %262, i32* %264, align 8, !tbaa !7093, !pdg.inst.id !467
  %265 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %263, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %265, align 8, !tbaa !7102, !pdg.inst.id !474
  %266 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %267 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %266, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %267, align 8, !tbaa !7103, !pdg.inst.id !478
  %268 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %269 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %268, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %269, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %270 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %259, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %268, %struct.kdnode** %270, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %571, !pdg.inst.id !6572

271:                                              ; preds = %193
  %272 = add nsw i32 %196, %7, !pdg.inst.id !94
  %273 = sdiv i32 %272, 2, !pdg.inst.id !486
  %274 = icmp eq i32 %201, 0, !pdg.inst.id !327
  %275 = sext i32 %273 to i64, !pdg.inst.id !490
  %276 = getelementptr inbounds i32, i32* %200, i64 %275, !pdg.inst.id !311
  %277 = load i32, i32* %276, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %274, label %307, label %278, !prof !7104, !pdg.inst.id !500

278:                                              ; preds = %271
  %279 = mul nsw i32 %277, %12, !pdg.inst.id !176
  %280 = add nsw i32 %201, -1, !pdg.inst.id !325
  %281 = add i32 %280, %279, !pdg.inst.id !521
  %282 = sext i32 %281 to i64, !pdg.inst.id !526
  %283 = getelementptr inbounds double, double* %10, i64 %282, !pdg.inst.id !148
  %284 = load double, double* %283, align 8, !tbaa !7098, !pdg.inst.id !529
  %285 = sext i32 %196 to i64, !pdg.inst.id !254
  %286 = load i32, i32* @10
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %597, label %288

288:                                              ; preds = %278, %292
  %289 = phi i64 [ %290, %292 ], [ %275, %278 ], !pdg.inst.id !504
  %290 = add nsw i64 %289, -1, !pdg.inst.id !542
  %291 = icmp sgt i64 %289, %285, !pdg.inst.id !535
  br i1 %291, label %292, label %.loopexit1, !prof !7105, !pdg.inst.id !546

292:                                              ; preds = %288
  %293 = getelementptr inbounds i32, i32* %200, i64 %290, !pdg.inst.id !309
  %294 = load i32, i32* %293, align 4, !tbaa !7089, !pdg.inst.id !548
  %295 = mul nsw i32 %294, %12, !pdg.inst.id !174
  %296 = add i32 %280, %295, !pdg.inst.id !523
  %297 = sext i32 %296 to i64, !pdg.inst.id !552
  %298 = getelementptr inbounds double, double* %10, i64 %297, !pdg.inst.id !150
  %299 = load double, double* %298, align 8, !tbaa !7098, !pdg.inst.id !555
  %300 = fcmp fast olt double %299, %284, !pdg.inst.id !533
  br i1 %300, label %._crit_edge8, label %288, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %613, %292
  %.lcssa3 = phi i64 [ %289, %292 ], [ %612, %613 ], !pdg.inst.id !537
  br label %301, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %613, %288
  %.lcssa2 = phi i64 [ %289, %288 ], [ %612, %613 ], !pdg.inst.id !539
  br label %301, !pdg.inst.id !6633

301:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %302 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %303 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %304 = ashr exact i64 %303, 32, !pdg.inst.id !568
  %305 = getelementptr inbounds i32, i32* %200, i64 %304, !pdg.inst.id !303
  %306 = load i32, i32* %305, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %307, !pdg.inst.id !6614

307:                                              ; preds = %301, %271
  %308 = phi i32 [ %306, %301 ], [ %277, %271 ], !pdg.inst.id !509
  %309 = phi i64 [ %304, %301 ], [ %275, %271 ], !pdg.inst.id !502
  %310 = phi i32 [ %302, %301 ], [ %273, %271 ], !pdg.inst.id !488
  %311 = phi double [ %284, %301 ], [ 0.000000e+00, %271 ], !pdg.inst.id !531
  %312 = getelementptr inbounds i32, i32* %200, i64 %309, !pdg.inst.id !307
  %313 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %195, i64 0, i32 0, !pdg.inst.id !238
  store i32 %308, i32* %313, align 8, !tbaa !7093, !pdg.inst.id !575
  %314 = add nsw i32 %196, -1, !pdg.inst.id !262
  %315 = icmp sgt i32 %196, %7, !pdg.inst.id !92
  br i1 %315, label %484, label %316, !prof !7106, !pdg.inst.id !649

316:                                              ; preds = %307
  %317 = add i32 %201, -1, !pdg.inst.id !323
  %318 = sext i32 %196 to i64, !pdg.inst.id !252
  br i1 %274, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %316
  %319 = load i32, i32* @11
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %617, label %375

.preheader11:                                     ; preds = %316
  %321 = load i32, i32* @12
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %633, label %323

323:                                              ; preds = %.preheader11, %340
  %324 = phi i64 [ %343, %340 ], [ %318, %.preheader11 ], !pdg.inst.id !655
  %325 = phi i32 [ %342, %340 ], [ %310, %.preheader11 ], !pdg.inst.id !580
  %326 = phi i32 [ %341, %340 ], [ %314, %.preheader11 ], !pdg.inst.id !627
  %327 = getelementptr inbounds i32, i32* %1, i64 %324, !pdg.inst.id !59
  %328 = load i32, i32* %327, align 4, !tbaa !7089, !pdg.inst.id !673
  %329 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !614
  %330 = icmp eq i32 %328, %329, !pdg.inst.id !678
  br i1 %330, label %._crit_edge2, label %331, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %323
  br label %340, !pdg.inst.id !6674

331:                                              ; preds = %323
  %332 = icmp slt i32 %328, %277, !pdg.inst.id !517
  %333 = add nsw i32 %326, 1, !pdg.inst.id !671
  %334 = add nsw i32 %325, 1, !pdg.inst.id !665
  %335 = select i1 %332, i32 %333, i32 %334, !prof !7108, !pdg.inst.id !685
  %336 = select i1 %332, i32 %333, i32 %326, !prof !7108, !pdg.inst.id !667
  %337 = select i1 %332, i32 %325, i32 %334, !prof !7108, !pdg.inst.id !661
  %338 = sext i32 %335 to i64, !pdg.inst.id !691
  %339 = getelementptr inbounds i32, i32* %197, i64 %338, !pdg.inst.id !271
  store i32 %328, i32* %339, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %340, !pdg.inst.id !6685

340:                                              ; preds = %._crit_edge2, %331
  %341 = phi i32 [ %326, %._crit_edge2 ], [ %336, %331 ], !pdg.inst.id !669
  %342 = phi i32 [ %325, %._crit_edge2 ], [ %337, %331 ], !pdg.inst.id !663
  %343 = add nsw i64 %324, 1, !pdg.inst.id !659
  %344 = icmp slt i64 %324, %182, !pdg.inst.id !191
  br i1 %344, label %323, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %648, %340
  br label %345, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %632, %397
  br label %345, !pdg.inst.id !6697

345:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %315, label %484, label %346, !prof !7106, !pdg.inst.id !647

346:                                              ; preds = %345
  %347 = add i32 %201, -1, !pdg.inst.id !321
  %348 = sext i32 %196 to i64, !pdg.inst.id !250
  br i1 %274, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %346
  %349 = load i32, i32* @13
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %649, label %430

.preheader7:                                      ; preds = %346
  %351 = load i32, i32* @14
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %665, label %353

353:                                              ; preds = %.preheader7, %370
  %354 = phi i64 [ %373, %370 ], [ %348, %.preheader7 ], !pdg.inst.id !706
  %355 = phi i32 [ %372, %370 ], [ %310, %.preheader7 ], !pdg.inst.id !584
  %356 = phi i32 [ %371, %370 ], [ %314, %.preheader7 ], !pdg.inst.id !631
  %357 = getelementptr inbounds i32, i32* %2, i64 %354, !pdg.inst.id !71
  %358 = load i32, i32* %357, align 4, !tbaa !7089, !pdg.inst.id !724
  %359 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !612
  %360 = icmp eq i32 %358, %359, !pdg.inst.id !729
  br i1 %360, label %._crit_edge5, label %361, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %353
  br label %370, !pdg.inst.id !6724

361:                                              ; preds = %353
  %362 = icmp slt i32 %358, %277, !pdg.inst.id !515
  %363 = add nsw i32 %356, 1, !pdg.inst.id !722
  %364 = add nsw i32 %355, 1, !pdg.inst.id !716
  %365 = select i1 %362, i32 %363, i32 %364, !prof !7108, !pdg.inst.id !736
  %366 = select i1 %362, i32 %363, i32 %356, !prof !7108, !pdg.inst.id !718
  %367 = select i1 %362, i32 %355, i32 %364, !prof !7108, !pdg.inst.id !712
  %368 = sext i32 %365 to i64, !pdg.inst.id !742
  %369 = getelementptr inbounds i32, i32* %1, i64 %368, !pdg.inst.id !57
  store i32 %358, i32* %369, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %370, !pdg.inst.id !6735

370:                                              ; preds = %._crit_edge5, %361
  %371 = phi i32 [ %356, %._crit_edge5 ], [ %366, %361 ], !pdg.inst.id !720
  %372 = phi i32 [ %355, %._crit_edge5 ], [ %367, %361 ], !pdg.inst.id !714
  %373 = add nsw i64 %354, 1, !pdg.inst.id !710
  %374 = icmp slt i64 %354, %182, !pdg.inst.id !195
  br i1 %374, label %353, label %.loopexit8, !prof !7109, !pdg.inst.id !751

375:                                              ; preds = %.preheader13, %397
  %376 = phi i64 [ %400, %397 ], [ %318, %.preheader13 ], !pdg.inst.id !653
  %377 = phi i32 [ %399, %397 ], [ %310, %.preheader13 ], !pdg.inst.id !578
  %378 = phi i32 [ %398, %397 ], [ %314, %.preheader13 ], !pdg.inst.id !625
  %379 = getelementptr inbounds i32, i32* %1, i64 %376, !pdg.inst.id !61
  %380 = load i32, i32* %379, align 4, !tbaa !7089, !pdg.inst.id !769
  %381 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !622
  %382 = icmp eq i32 %380, %381, !pdg.inst.id !774
  br i1 %382, label %._crit_edge, label %383, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %375
  br label %397, !pdg.inst.id !6762

383:                                              ; preds = %375
  %384 = mul nsw i32 %380, %12, !pdg.inst.id !172
  %385 = add i32 %317, %384, !pdg.inst.id !651
  %386 = sext i32 %385 to i64, !pdg.inst.id !780
  %387 = getelementptr inbounds double, double* %10, i64 %386, !pdg.inst.id !152
  %388 = load double, double* %387, align 8, !tbaa !7098, !pdg.inst.id !783
  %389 = fcmp fast olt double %388, %311, !pdg.inst.id !606
  %390 = add nsw i32 %377, 1, !pdg.inst.id !761
  %391 = add nsw i32 %378, 1, !pdg.inst.id !767
  %392 = select i1 %389, i32 %391, i32 %390, !prof !7111, !pdg.inst.id !788
  %393 = select i1 %389, i32 %391, i32 %378, !prof !7111, !pdg.inst.id !763
  %394 = select i1 %389, i32 %377, i32 %390, !prof !7111, !pdg.inst.id !757
  %395 = sext i32 %392 to i64, !pdg.inst.id !794
  %396 = getelementptr inbounds i32, i32* %197, i64 %395, !pdg.inst.id !269
  store i32 %380, i32* %396, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %397, !pdg.inst.id !6778

397:                                              ; preds = %._crit_edge, %383
  %398 = phi i32 [ %378, %._crit_edge ], [ %393, %383 ], !pdg.inst.id !765
  %399 = phi i32 [ %377, %._crit_edge ], [ %394, %383 ], !pdg.inst.id !759
  %400 = add nsw i64 %376, 1, !pdg.inst.id !755
  %401 = icmp slt i64 %376, %182, !pdg.inst.id !189
  br i1 %401, label %375, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %680, %370
  br label %402, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %664, %452
  br label %402, !pdg.inst.id !6792

402:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %315, label %484, label %403, !prof !7106, !pdg.inst.id !645

403:                                              ; preds = %402
  %404 = add i32 %201, -1, !pdg.inst.id !319
  %405 = sext i32 %196 to i64, !pdg.inst.id !248
  br i1 %274, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %403
  %406 = load i32, i32* @15
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %681, label %457

.preheader3:                                      ; preds = %403
  br label %408, !pdg.inst.id !6798

408:                                              ; preds = %.preheader3, %425
  %409 = phi i64 [ %428, %425 ], [ %405, %.preheader3 ], !pdg.inst.id !809
  %410 = phi i32 [ %427, %425 ], [ %310, %.preheader3 ], !pdg.inst.id !588
  %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
  %412 = getelementptr inbounds i32, i32* %199, i64 %409, !pdg.inst.id !299
  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
  %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
  %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
  br i1 %415, label %._crit_edge7, label %416, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %408
  br label %425, !pdg.inst.id !6819

416:                                              ; preds = %408
  %417 = icmp slt i32 %413, %277, !pdg.inst.id !513
  %418 = add nsw i32 %411, 1, !pdg.inst.id !825
  %419 = add nsw i32 %410, 1, !pdg.inst.id !819
  %420 = select i1 %417, i32 %418, i32 %419, !prof !7108, !pdg.inst.id !839
  %421 = select i1 %417, i32 %418, i32 %411, !prof !7108, !pdg.inst.id !821
  %422 = select i1 %417, i32 %410, i32 %419, !prof !7108, !pdg.inst.id !815
  %423 = sext i32 %420 to i64, !pdg.inst.id !845
  %424 = getelementptr inbounds i32, i32* %2, i64 %423, !pdg.inst.id !69
  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %425, !pdg.inst.id !6830

425:                                              ; preds = %._crit_edge7, %416
  %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
  %427 = phi i32 [ %410, %._crit_edge7 ], [ %422, %416 ], !pdg.inst.id !817
  %428 = add nsw i64 %409, 1, !pdg.inst.id !813
  %429 = icmp slt i64 %409, %182, !pdg.inst.id !199
  br i1 %429, label %408, label %.loopexit4, !prof !7109, !pdg.inst.id !858

430:                                              ; preds = %.preheader9, %452
  %431 = phi i64 [ %455, %452 ], [ %348, %.preheader9 ], !pdg.inst.id !704
  %432 = phi i32 [ %454, %452 ], [ %310, %.preheader9 ], !pdg.inst.id !582
  %433 = phi i32 [ %453, %452 ], [ %314, %.preheader9 ], !pdg.inst.id !629
  %434 = getelementptr inbounds i32, i32* %2, i64 %431, !pdg.inst.id !73
  %435 = load i32, i32* %434, align 4, !tbaa !7089, !pdg.inst.id !876
  %436 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !620
  %437 = icmp eq i32 %435, %436, !pdg.inst.id !881
  br i1 %437, label %._crit_edge4, label %438, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %430
  br label %452, !pdg.inst.id !6857

438:                                              ; preds = %430
  %439 = mul nsw i32 %435, %12, !pdg.inst.id !170
  %440 = add i32 %347, %439, !pdg.inst.id !702
  %441 = sext i32 %440 to i64, !pdg.inst.id !887
  %442 = getelementptr inbounds double, double* %10, i64 %441, !pdg.inst.id !154
  %443 = load double, double* %442, align 8, !tbaa !7098, !pdg.inst.id !890
  %444 = fcmp fast olt double %443, %311, !pdg.inst.id !604
  %445 = add nsw i32 %432, 1, !pdg.inst.id !868
  %446 = add nsw i32 %433, 1, !pdg.inst.id !874
  %447 = select i1 %444, i32 %446, i32 %445, !prof !7111, !pdg.inst.id !895
  %448 = select i1 %444, i32 %446, i32 %433, !prof !7111, !pdg.inst.id !870
  %449 = select i1 %444, i32 %432, i32 %445, !prof !7111, !pdg.inst.id !864
  %450 = sext i32 %447 to i64, !pdg.inst.id !901
  %451 = getelementptr inbounds i32, i32* %1, i64 %450, !pdg.inst.id !55
  store i32 %435, i32* %451, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %452, !pdg.inst.id !6873

452:                                              ; preds = %._crit_edge4, %438
  %453 = phi i32 [ %433, %._crit_edge4 ], [ %448, %438 ], !pdg.inst.id !872
  %454 = phi i32 [ %432, %._crit_edge4 ], [ %449, %438 ], !pdg.inst.id !866
  %455 = add nsw i64 %431, 1, !pdg.inst.id !862
  %456 = icmp slt i64 %431, %182, !pdg.inst.id !193
  br i1 %456, label %430, label %.loopexit10, !prof !7112, !pdg.inst.id !910

457:                                              ; preds = %.preheader5, %479
  %458 = phi i64 [ %482, %479 ], [ %405, %.preheader5 ], !pdg.inst.id !807
  %459 = phi i32 [ %481, %479 ], [ %310, %.preheader5 ], !pdg.inst.id !586
  %460 = phi i32 [ %480, %479 ], [ %314, %.preheader5 ], !pdg.inst.id !633
  %461 = getelementptr inbounds i32, i32* %199, i64 %458, !pdg.inst.id !297
  %462 = load i32, i32* %461, align 4, !tbaa !7089, !pdg.inst.id !928
  %463 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !618
  %464 = icmp eq i32 %462, %463, !pdg.inst.id !933
  br i1 %464, label %._crit_edge6, label %465, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %457
  br label %479, !pdg.inst.id !6899

465:                                              ; preds = %457
  %466 = mul nsw i32 %462, %12, !pdg.inst.id !168
  %467 = add i32 %404, %466, !pdg.inst.id !805
  %468 = sext i32 %467 to i64, !pdg.inst.id !939
  %469 = getelementptr inbounds double, double* %10, i64 %468, !pdg.inst.id !156
  %470 = load double, double* %469, align 8, !tbaa !7098, !pdg.inst.id !942
  %471 = fcmp fast olt double %470, %311, !pdg.inst.id !602
  %472 = add nsw i32 %459, 1, !pdg.inst.id !920
  %473 = add nsw i32 %460, 1, !pdg.inst.id !926
  %474 = select i1 %471, i32 %473, i32 %472, !prof !7111, !pdg.inst.id !947
  %475 = select i1 %471, i32 %473, i32 %460, !prof !7111, !pdg.inst.id !922
  %476 = select i1 %471, i32 %459, i32 %472, !prof !7111, !pdg.inst.id !916
  %477 = sext i32 %474 to i64, !pdg.inst.id !953
  %478 = getelementptr inbounds i32, i32* %2, i64 %477, !pdg.inst.id !67
  store i32 %462, i32* %478, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %479, !pdg.inst.id !6915

479:                                              ; preds = %._crit_edge6, %465
  %480 = phi i32 [ %460, %._crit_edge6 ], [ %475, %465 ], !pdg.inst.id !924
  %481 = phi i32 [ %459, %._crit_edge6 ], [ %476, %465 ], !pdg.inst.id !918
  %482 = add nsw i64 %458, 1, !pdg.inst.id !914
  %483 = icmp slt i64 %458, %182, !pdg.inst.id !197
  br i1 %483, label %457, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %425
  %.lcssa68 = phi i32 [ %426, %425 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %427, %425 ], !pdg.inst.id !854
  br label %484, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %698, %479
  %.lcssa66 = phi i32 [ %480, %479 ], [ %696, %698 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %481, %479 ], [ %697, %698 ], !pdg.inst.id !962
  br label %484, !pdg.inst.id !6933

484:                                              ; preds = %.loopexit6, %.loopexit4, %307, %345, %402
  %485 = phi i32 [ %314, %402 ], [ %314, %345 ], [ %314, %307 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %486 = phi i32 [ %310, %402 ], [ %310, %345 ], [ %310, %307 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %184, label %487, label %540, !prof !7106, !pdg.inst.id !221

487:                                              ; preds = %484
  br i1 %315, label %.loopexit15, label %488, !pdg.inst.id !643

488:                                              ; preds = %487
  %489 = add i32 %201, -1, !pdg.inst.id !317
  %490 = sext i32 %196 to i64, !pdg.inst.id !246
  br i1 %274, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %488
  br label %513, !pdg.inst.id !6942

.preheader:                                       ; preds = %488
  br label %491, !pdg.inst.id !6944

491:                                              ; preds = %.preheader, %508
  %492 = phi i64 [ %511, %508 ], [ %490, %.preheader ], !pdg.inst.id !980
  %493 = phi i32 [ %510, %508 ], [ %310, %.preheader ], !pdg.inst.id !592
  %494 = phi i32 [ %509, %508 ], [ %314, %.preheader ], !pdg.inst.id !639
  %495 = getelementptr inbounds i32, i32* %198, i64 %492, !pdg.inst.id !287
  %496 = load i32, i32* %495, align 4, !tbaa !7089, !pdg.inst.id !998
  %497 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !608
  %498 = icmp eq i32 %496, %497, !pdg.inst.id !1003
  br i1 %498, label %._crit_edge3, label %499, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %491
  br label %508, !pdg.inst.id !6965

499:                                              ; preds = %491
  %500 = icmp slt i32 %496, %277, !pdg.inst.id !511
  %501 = add nsw i32 %494, 1, !pdg.inst.id !996
  %502 = add nsw i32 %493, 1, !pdg.inst.id !990
  %503 = select i1 %500, i32 %501, i32 %502, !pdg.inst.id !1010
  %504 = select i1 %500, i32 %501, i32 %494, !pdg.inst.id !992
  %505 = select i1 %500, i32 %493, i32 %502, !pdg.inst.id !986
  %506 = sext i32 %503 to i64, !pdg.inst.id !1016
  %507 = getelementptr inbounds i32, i32* %199, i64 %506, !pdg.inst.id !291
  store i32 %496, i32* %507, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %508, !pdg.inst.id !6976

508:                                              ; preds = %._crit_edge3, %499
  %509 = phi i32 [ %494, %._crit_edge3 ], [ %504, %499 ], !pdg.inst.id !994
  %510 = phi i32 [ %493, %._crit_edge3 ], [ %505, %499 ], !pdg.inst.id !988
  %511 = add nsw i64 %492, 1, !pdg.inst.id !984
  %512 = icmp slt i64 %492, %182, !pdg.inst.id !203
  br i1 %512, label %491, label %.loopexit, !pdg.inst.id !1029

513:                                              ; preds = %.preheader1, %535
  %514 = phi i64 [ %538, %535 ], [ %490, %.preheader1 ], !pdg.inst.id !978
  %515 = phi i32 [ %537, %535 ], [ %310, %.preheader1 ], !pdg.inst.id !590
  %516 = phi i32 [ %536, %535 ], [ %314, %.preheader1 ], !pdg.inst.id !637
  %517 = getelementptr inbounds i32, i32* %198, i64 %514, !pdg.inst.id !285
  %518 = load i32, i32* %517, align 4, !tbaa !7089, !pdg.inst.id !1047
  %519 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !616
  %520 = icmp eq i32 %518, %519, !pdg.inst.id !1053
  br i1 %520, label %._crit_edge1, label %521, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %513
  br label %535, !pdg.inst.id !7001

521:                                              ; preds = %513
  %522 = shl i32 %518, 2, !pdg.inst.id !1051
  %523 = add i32 %489, %522, !pdg.inst.id !976
  %524 = sext i32 %523 to i64, !pdg.inst.id !1059
  %525 = getelementptr inbounds double, double* %10, i64 %524, !pdg.inst.id !158
  %526 = load double, double* %525, align 8, !tbaa !7098, !pdg.inst.id !1062
  %527 = fcmp fast olt double %526, %311, !pdg.inst.id !600
  %528 = add nsw i32 %515, 1, !pdg.inst.id !1039
  %529 = add nsw i32 %516, 1, !pdg.inst.id !1045
  %530 = select i1 %527, i32 %529, i32 %528, !pdg.inst.id !1067
  %531 = select i1 %527, i32 %529, i32 %516, !pdg.inst.id !1041
  %532 = select i1 %527, i32 %515, i32 %528, !pdg.inst.id !1035
  %533 = sext i32 %530 to i64, !pdg.inst.id !1073
  %534 = getelementptr inbounds i32, i32* %199, i64 %533, !pdg.inst.id !289
  store i32 %518, i32* %534, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %535, !pdg.inst.id !7017

535:                                              ; preds = %._crit_edge1, %521
  %536 = phi i32 [ %516, %._crit_edge1 ], [ %531, %521 ], !pdg.inst.id !1043
  %537 = phi i32 [ %515, %._crit_edge1 ], [ %532, %521 ], !pdg.inst.id !1037
  %538 = add nsw i64 %514, 1, !pdg.inst.id !1033
  %539 = icmp slt i64 %514, %182, !pdg.inst.id !201
  br i1 %539, label %513, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %508
  %.lcssa72 = phi i32 [ %509, %508 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %510, %508 ], !pdg.inst.id !1025
  br label %540, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %535
  %.lcssa70 = phi i32 [ %536, %535 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %537, %535 ], !pdg.inst.id !1082
  br label %540, !pdg.inst.id !7035

540:                                              ; preds = %.loopexit2, %.loopexit, %484
  %541 = phi i32 [ %485, %484 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %542 = phi i32 [ %486, %484 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %543 = icmp slt i32 %541, %196, !pdg.inst.id !258
  br i1 %543, label %555, label %544, !prof !7106, !pdg.inst.id !1096

544:                                              ; preds = %540
  %545 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %546 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %545, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %546, align 8, !tbaa !7102, !pdg.inst.id !1100
  %547 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %548 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %547, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %548, align 8, !tbaa !7103, !pdg.inst.id !1104
  %549 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %550 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %549, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %550, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %551 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %195, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %549, %struct.kdnode** %551, align 8, !tbaa !7102, !pdg.inst.id !1108
  %552 = add nsw i32 %201, 1, !pdg.inst.id !329
  br i1 %184, label %553, label %554, !prof !7106, !pdg.inst.id !219

553:                                              ; preds = %544
  tail call fastcc void @buildkdtree(i32* %197, i32* %1, i32* %2, i32* %199, i32* nonnull %200, i32* %198, i32 %196, i32 %541, %struct.kdnode** nonnull %8, %struct.kdnode* %549, double* %10, i32 %552, i32 4), !pdg.inst.id !65
  br label %555, !pdg.inst.id !7059

554:                                              ; preds = %544
  tail call fastcc void @buildkdtree(i32* %197, i32* %1, i32* %2, i32* nonnull %200, i32* %198, i32* %199, i32 %196, i32 %541, %struct.kdnode** nonnull %8, %struct.kdnode* %549, double* %10, i32 %552, i32 %12), !pdg.inst.id !63
  br label %555, !pdg.inst.id !7062

555:                                              ; preds = %540, %553, %554
  %556 = icmp sgt i32 %542, %310, !pdg.inst.id !598
  br i1 %556, label %557, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

557:                                              ; preds = %555
  %558 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %559 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %558, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %559, align 8, !tbaa !7102, !pdg.inst.id !1120
  %560 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %561 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %560, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %561, align 8, !tbaa !7103, !pdg.inst.id !1124
  %562 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %563 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %562, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %563, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %564 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %195, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %562, %struct.kdnode** %564, align 8, !tbaa !7103, !pdg.inst.id !1128
  %565 = add nsw i32 %310, 1, !pdg.inst.id !596
  %566 = add nsw i32 %201, 1, !pdg.inst.id !331
  %567 = select i1 %184, i32* %199, i32* %200, !prof !7106, !pdg.inst.id !217
  %568 = select i1 %184, i32* %200, i32* %198, !prof !7106, !pdg.inst.id !215
  %569 = select i1 %184, i32* %198, i32* %199, !prof !7106, !pdg.inst.id !213
  %570 = icmp eq i32 %565, %7, !pdg.inst.id !89
  br i1 %570, label %.loopexit16, label %193, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %593, %593, %555, %487
  br label %571, !pdg.inst.id !7078

571:                                              ; preds = %.loopexit15, %245, %258, %228, %187
  ret void, !pdg.inst.id !7115

572:                                              ; preds = %183
  store i32 1, i32* @9
  store i32 %12, i32* %136
  store i32 %11, i32* %138
  store %struct.kdnode* %9, %struct.kdnode** %140
  store %struct.kdnode** %8, %struct.kdnode*** %142
  store i32 %6, i32* %144
  store i32* %5, i32** %146
  store i32 %7, i32* %148
  store i32* %0, i32** %150
  store i32 %180, i32* %152
  store i32* %2, i32** %154
  store i32* %1, i32** %156
  store i32* %3, i32** %158
  store i32* %4, i32** %160
  store i1 %184, i1* %162
  store i64 %182, i64* %171
  store double* %10, double** %173
  %573 = alloca [1 x i8*]
  %574 = getelementptr inbounds [1 x i8*], [1 x i8*]* %573, i64 0, i64 0
  %575 = bitcast i8** %574 to void (i8*, i8*)**
  store void (i8*, i8*)* @30, void (i8*, i8*)** %575
  %576 = bitcast [1 x i8*]* %573 to i8*
  %577 = alloca [8 x i64]
  %578 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 0
  store i64 64, i64* %578
  %579 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 1
  store i64 64, i64* %579
  %580 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 2
  store i64 64, i64* %580
  %581 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 3
  store i64 64, i64* %581
  %582 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 4
  store i64 64, i64* %582
  %583 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 5
  store i64 64, i64* %583
  %584 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 6
  store i64 64, i64* %584
  %585 = getelementptr inbounds [8 x i64], [8 x i64]* %577, i64 0, i64 7
  store i64 64, i64* %585
  %586 = bitcast [8 x i64]* %577 to i64*
  call void @stageDispatcher(i8* %134, i64* %586, i8* %576, i64 1, i64 8)
  %587 = load %struct.kdnode*, %struct.kdnode** %164
  %588 = load i32, i32* %166
  %589 = load i32, i32* %168
  %590 = load i32*, i32** %170
  %591 = load i32*, i32** %175
  %592 = load %struct.kdnode*, %struct.kdnode** %177
  br label %593

593:                                              ; preds = %572
  %594 = getelementptr inbounds [184 x i64], [184 x i64]* %133, i64 0, i64 176
  %595 = load i64, i64* %594
  %596 = trunc i64 %595 to i32
  store i32 0, i32* @9
  switch i32 %596, label %204 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

597:                                              ; preds = %278
  store i32 1, i32* @10
  store double* %10, double** %119
  store i32 %280, i32* %121
  store i64 %285, i64* %123
  store i32 %12, i32* %125
  store i32* %200, i32** %127
  store i64 %275, i64* %128
  store double %284, double* %130
  %598 = alloca [1 x i8*]
  %599 = getelementptr inbounds [1 x i8*], [1 x i8*]* %598, i64 0, i64 0
  %600 = bitcast i8** %599 to void (i8*, i8*)**
  store void (i8*, i8*)* @31, void (i8*, i8*)** %600
  %601 = bitcast [1 x i8*]* %598 to i8*
  %602 = alloca [8 x i64]
  %603 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 0
  store i64 64, i64* %603
  %604 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 1
  store i64 64, i64* %604
  %605 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 2
  store i64 64, i64* %605
  %606 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 3
  store i64 64, i64* %606
  %607 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 4
  store i64 64, i64* %607
  %608 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 5
  store i64 64, i64* %608
  %609 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 6
  store i64 64, i64* %609
  %610 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 7
  store i64 64, i64* %610
  %611 = bitcast [8 x i64]* %602 to i64*
  call void @stageDispatcher(i8* %117, i64* %611, i8* %601, i64 1, i64 8)
  %612 = load i64, i64* %122
  br label %613

613:                                              ; preds = %597
  %614 = getelementptr inbounds [72 x i64], [72 x i64]* %116, i64 0, i64 64
  %615 = load i64, i64* %614
  %616 = trunc i64 %615 to i32
  store i32 0, i32* @10
  switch i32 %616, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

617:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %97
  store i32 %314, i32* %99
  store double %311, double* %101
  store i32* %1, i32** %103
  store i32 %310, i32* %105
  store i32* %312, i32** %107
  store i32 %317, i32* %109
  store i32* %197, i32** %111
  store double* %10, double** %113
  store i64 %318, i64* %114
  store i64 %182, i64* %115
  %618 = alloca [1 x i8*]
  %619 = getelementptr inbounds [1 x i8*], [1 x i8*]* %618, i64 0, i64 0
  %620 = bitcast i8** %619 to void (i8*, i8*)**
  store void (i8*, i8*)* @32, void (i8*, i8*)** %620
  %621 = bitcast [1 x i8*]* %618 to i8*
  %622 = alloca [8 x i64]
  %623 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 0
  store i64 64, i64* %623
  %624 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 1
  store i64 64, i64* %624
  %625 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 2
  store i64 64, i64* %625
  %626 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 3
  store i64 64, i64* %626
  %627 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 4
  store i64 64, i64* %627
  %628 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 5
  store i64 64, i64* %628
  %629 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 6
  store i64 64, i64* %629
  %630 = getelementptr inbounds [8 x i64], [8 x i64]* %622, i64 0, i64 7
  store i64 64, i64* %630
  %631 = bitcast [8 x i64]* %622 to i64*
  call void @stageDispatcher(i8* %95, i64* %631, i8* %621, i64 1, i64 8)
  br label %632

632:                                              ; preds = %617
  store i32 0, i32* @11
  br label %.loopexit14

633:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %197, i32** %81
  store i32 %314, i32* %83
  store i32* %312, i32** %85
  store i32 %310, i32* %87
  store i32* %1, i32** %89
  store i32 %277, i32* %91
  store i64 %182, i64* %92
  store i64 %318, i64* %93
  %634 = alloca [1 x i8*]
  %635 = getelementptr inbounds [1 x i8*], [1 x i8*]* %634, i64 0, i64 0
  %636 = bitcast i8** %635 to void (i8*, i8*)**
  store void (i8*, i8*)* @33, void (i8*, i8*)** %636
  %637 = bitcast [1 x i8*]* %634 to i8*
  %638 = alloca [8 x i64]
  %639 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 0
  store i64 64, i64* %639
  %640 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 1
  store i64 64, i64* %640
  %641 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 2
  store i64 64, i64* %641
  %642 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 3
  store i64 64, i64* %642
  %643 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 4
  store i64 64, i64* %643
  %644 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 5
  store i64 64, i64* %644
  %645 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 6
  store i64 64, i64* %645
  %646 = getelementptr inbounds [8 x i64], [8 x i64]* %638, i64 0, i64 7
  store i64 64, i64* %646
  %647 = bitcast [8 x i64]* %638 to i64*
  call void @stageDispatcher(i8* %79, i64* %647, i8* %637, i64 1, i64 8)
  br label %648

648:                                              ; preds = %633
  store i32 0, i32* @12
  br label %.loopexit12

649:                                              ; preds = %.preheader9
  store i32 1, i32* @13
  store i32 %12, i32* %59
  store i32 %314, i32* %61
  store i32 %310, i32* %63
  store i32* %1, i32** %65
  store double %311, double* %67
  store i32* %312, i32** %69
  store i32* %2, i32** %71
  store i32 %347, i32* %73
  store double* %10, double** %75
  store i64 %348, i64* %76
  store i64 %182, i64* %77
  %650 = alloca [1 x i8*]
  %651 = getelementptr inbounds [1 x i8*], [1 x i8*]* %650, i64 0, i64 0
  %652 = bitcast i8** %651 to void (i8*, i8*)**
  store void (i8*, i8*)* @34, void (i8*, i8*)** %652
  %653 = bitcast [1 x i8*]* %650 to i8*
  %654 = alloca [8 x i64]
  %655 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 0
  store i64 64, i64* %655
  %656 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 1
  store i64 64, i64* %656
  %657 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 2
  store i64 64, i64* %657
  %658 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 3
  store i64 64, i64* %658
  %659 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 4
  store i64 64, i64* %659
  %660 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 5
  store i64 64, i64* %660
  %661 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 6
  store i64 64, i64* %661
  %662 = getelementptr inbounds [8 x i64], [8 x i64]* %654, i64 0, i64 7
  store i64 64, i64* %662
  %663 = bitcast [8 x i64]* %654 to i64*
  call void @stageDispatcher(i8* %57, i64* %663, i8* %653, i64 1, i64 8)
  br label %664

664:                                              ; preds = %649
  store i32 0, i32* @13
  br label %.loopexit10

665:                                              ; preds = %.preheader7
  store i32 1, i32* @14
  store i32 %314, i32* %43
  store i64 %348, i64* %44
  store i32* %312, i32** %46
  store i32 %310, i32* %48
  store i32* %1, i32** %50
  store i32 %277, i32* %52
  store i32* %2, i32** %54
  store i64 %182, i64* %55
  %666 = alloca [1 x i8*]
  %667 = getelementptr inbounds [1 x i8*], [1 x i8*]* %666, i64 0, i64 0
  %668 = bitcast i8** %667 to void (i8*, i8*)**
  store void (i8*, i8*)* @35, void (i8*, i8*)** %668
  %669 = bitcast [1 x i8*]* %666 to i8*
  %670 = alloca [8 x i64]
  %671 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 0
  store i64 64, i64* %671
  %672 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 1
  store i64 64, i64* %672
  %673 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 2
  store i64 64, i64* %673
  %674 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 3
  store i64 64, i64* %674
  %675 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 4
  store i64 64, i64* %675
  %676 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 5
  store i64 64, i64* %676
  %677 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 6
  store i64 64, i64* %677
  %678 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 7
  store i64 64, i64* %678
  %679 = bitcast [8 x i64]* %670 to i64*
  call void @stageDispatcher(i8* %41, i64* %679, i8* %669, i64 1, i64 8)
  br label %680

680:                                              ; preds = %665
  store i32 0, i32* @14
  br label %.loopexit8

681:                                              ; preds = %.preheader5
  store i32 1, i32* @15
  store i32 %314, i32* %17
  store double %311, double* %19
  store i32 %310, i32* %21
  store i32* %199, i32** %23
  store i32 %12, i32* %25
  store i32* %2, i32** %27
  store i32* %312, i32** %29
  store i32 %404, i32* %31
  store i64 %182, i64* %34
  store double* %10, double** %38
  store i64 %405, i64* %39
  %682 = alloca [1 x i8*]
  %683 = getelementptr inbounds [1 x i8*], [1 x i8*]* %682, i64 0, i64 0
  %684 = bitcast i8** %683 to void (i8*, i8*)**
  store void (i8*, i8*)* @36, void (i8*, i8*)** %684
  %685 = bitcast [1 x i8*]* %682 to i8*
  %686 = alloca [8 x i64]
  %687 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 0
  store i64 64, i64* %687
  %688 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 1
  store i64 64, i64* %688
  %689 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 2
  store i64 64, i64* %689
  %690 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 3
  store i64 64, i64* %690
  %691 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 4
  store i64 64, i64* %691
  %692 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 5
  store i64 64, i64* %692
  %693 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 6
  store i64 64, i64* %693
  %694 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 7
  store i64 64, i64* %694
  %695 = bitcast [8 x i64]* %686 to i64*
  call void @stageDispatcher(i8* %15, i64* %695, i8* %685, i64 1, i64 8)
  %696 = load i32, i32* %33
  %697 = load i32, i32* %36
  br label %698

698:                                              ; preds = %681
  store i32 0, i32* @15
  br label %.loopexit6
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 25 = "  %412 = getelementptr inbounds i32, i32* %199, i64 %409, !pdg.inst.id !299"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %412 = getelementptr inbounds i32, i32* %199, i64 %409, !pdg.inst.id !299
DSWP:       %424 = getelementptr inbounds i32, i32* %2, i64 %423, !pdg.inst.id !69
DSWP:       %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:       %418 = add nsw i32 %411, 1, !pdg.inst.id !825
DSWP:       %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:       %423 = sext i32 %420 to i64, !pdg.inst.id !845
DSWP:       %410 = phi i32 [ %427, %425 ], [ %310, %.preheader3 ], !pdg.inst.id !588
DSWP:       %427 = phi i32 [ %410, %._crit_edge7 ], [ %422, %416 ], !pdg.inst.id !817
DSWP:       store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:       br label %425, !pdg.inst.id !6819
DSWP:       %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
DSWP:       %419 = add nsw i32 %410, 1, !pdg.inst.id !819
DSWP:       %420 = select i1 %417, i32 %418, i32 %419, !prof !7108, !pdg.inst.id !839
DSWP:       %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:       %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
DSWP:       br i1 %415, label %._crit_edge7, label %416, !prof !7107, !pdg.inst.id !835
DSWP:       %417 = icmp slt i32 %413, %277, !pdg.inst.id !513
DSWP:       br label %425, !pdg.inst.id !6830
DSWP:       %421 = select i1 %417, i32 %418, i32 %411, !prof !7108, !pdg.inst.id !821
DSWP:       %422 = select i1 %417, i32 %410, i32 %419, !prof !7108, !pdg.inst.id !815
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %412 = getelementptr inbounds i32, i32* %199, i64 %409, !pdg.inst.id !299
DSWP:       %424 = getelementptr inbounds i32, i32* %2, i64 %423, !pdg.inst.id !69
DSWP:       %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:       %418 = add nsw i32 %411, 1, !pdg.inst.id !825
DSWP:       %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:       %423 = sext i32 %420 to i64, !pdg.inst.id !845
DSWP:       %410 = phi i32 [ %427, %425 ], [ %310, %.preheader3 ], !pdg.inst.id !588
DSWP:       %427 = phi i32 [ %410, %._crit_edge7 ], [ %422, %416 ], !pdg.inst.id !817
DSWP:       store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:       br label %425, !pdg.inst.id !6819
DSWP:       %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
DSWP:       %419 = add nsw i32 %410, 1, !pdg.inst.id !819
DSWP:       %420 = select i1 %417, i32 %418, i32 %419, !prof !7108, !pdg.inst.id !839
DSWP:       %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:       %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
DSWP:       br i1 %415, label %._crit_edge7, label %416, !prof !7107, !pdg.inst.id !835
DSWP:       %417 = icmp slt i32 %413, %277, !pdg.inst.id !513
DSWP:       br label %425, !pdg.inst.id !6830
DSWP:       %421 = select i1 %417, i32 %418, i32 %411, !prof !7108, !pdg.inst.id !821
DSWP:       %422 = select i1 %417, i32 %410, i32 %419, !prof !7108, !pdg.inst.id !815
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 20
DSWP:     	  %412 = getelementptr inbounds i32, i32* %199, i64 %409, !pdg.inst.id !299
DSWP:     	  %424 = getelementptr inbounds i32, i32* %2, i64 %423, !pdg.inst.id !69
DSWP:     	  %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:     	  %418 = add nsw i32 %411, 1, !pdg.inst.id !825
DSWP:     	  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	  %423 = sext i32 %420 to i64, !pdg.inst.id !845
DSWP:     	  %410 = phi i32 [ %427, %425 ], [ %310, %.preheader3 ], !pdg.inst.id !588
DSWP:     	  %427 = phi i32 [ %410, %._crit_edge7 ], [ %422, %416 ], !pdg.inst.id !817
DSWP:     	  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	  br label %425, !pdg.inst.id !6819
DSWP:     	  %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
DSWP:     	  %419 = add nsw i32 %410, 1, !pdg.inst.id !819
DSWP:     	  %420 = select i1 %417, i32 %418, i32 %419, !prof !7108, !pdg.inst.id !839
DSWP:     	  %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:     	  %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
DSWP:     	  br i1 %415, label %._crit_edge7, label %416, !prof !7107, !pdg.inst.id !835
DSWP:     	  %417 = icmp slt i32 %413, %277, !pdg.inst.id !513
DSWP:     	  br label %425, !pdg.inst.id !6830
DSWP:     	  %421 = select i1 %417, i32 %418, i32 %411, !prof !7108, !pdg.inst.id !821
DSWP:     	  %422 = select i1 %417, i32 %410, i32 %419, !prof !7108, !pdg.inst.id !815
DSWP:     External nodes: 2
DSWP:     	  %409 = phi i64 [ %428, %425 ], [ %405, %.preheader3 ], !pdg.inst.id !809
DSWP:     	  br i1 %429, label %408, label %.loopexit4, !prof !7109, !pdg.inst.id !858
DSWP:     Edges: 51
DSWP:     	From:	  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	To:	  %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	To:	  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	To:	  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	RAW (must)
DSWP:     	From:	  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	To:	  %417 = icmp slt i32 %413, %277, !pdg.inst.id !513
DSWP:     	RAW (must)
DSWP:     	From:	  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	To:	  %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
DSWP:     	RAW (must)
DSWP:     	From:	  %413 = load i32, i32* %412, align 4, !tbaa !7089, !pdg.inst.id !827
DSWP:     	To:	  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %418 = add nsw i32 %411, 1, !pdg.inst.id !825
DSWP:     	To:	  %421 = select i1 %417, i32 %418, i32 %411, !prof !7108, !pdg.inst.id !821
DSWP:     	RAW (must)
DSWP:     	From:	  %418 = add nsw i32 %411, 1, !pdg.inst.id !825
DSWP:     	To:	  %420 = select i1 %417, i32 %418, i32 %419, !prof !7108, !pdg.inst.id !839
DSWP:     	RAW (must)
DSWP:     	From:	  %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:     	To:	  %421 = select i1 %417, i32 %418, i32 %411, !prof !7108, !pdg.inst.id !821
DSWP:     	RAW (must)
DSWP:     	From:	  %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:     	To:	  %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
DSWP:     	RAW (must)
DSWP:     	From:	  %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:     	To:	  %418 = add nsw i32 %411, 1, !pdg.inst.id !825
DSWP:     	RAW (must)
DSWP:     	From:	  %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
DSWP:     	To:	  %411 = phi i32 [ %426, %425 ], [ %314, %.preheader3 ], !pdg.inst.id !635
DSWP:     	RAW (must)
DSWP:     	From:	  %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:     	To:	  %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
DSWP:     	RAW (must)
DSWP:     	From:	  %414 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !610
DSWP:     	To:	  store i32 %413, i32* %424, align 4, !tbaa !7089, !pdg.inst.id !829
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %415 = icmp eq i32 %413, %414, !pdg.inst.id !832
DSWP:     	To:	  br i1 %415, label %._crit_edge7, label %416, !prof !7107, !pdg.inst.id !835
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %312 = getelementptr inbounds i32, i32* %200, i64 %309, !pdg.inst.id !307
DSWP:    Pre loop env 2, producer:	  %310 = phi i32 [ %302, %301 ], [ %273, %271 ], !pdg.inst.id !488
DSWP:    Pre loop env 3, producer:	  %199 = phi i32* [ %567, %557 ], [ %3, %183 ], !pdg.inst.id !77
DSWP:    Pre loop env 4, producer:	i32* %2
DSWP:    Pre loop env 5, producer:	  %277 = load i32, i32* %276, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:    Pre loop env 6, producer:	  %314 = add nsw i32 %196, -1, !pdg.inst.id !262
DSWP:    Pre loop env 7, producer:	  %405 = sext i32 %196 to i64, !pdg.inst.id !248
DSWP:    Pre loop env 8, producer:	  %182 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:    Post loop env 9, producer:	  %427 = phi i32 [ %410, %._crit_edge7 ], [ %422, %416 ], !pdg.inst.id !817
DSWP:    Post loop env 10, producer:	  %426 = phi i32 [ %411, %._crit_edge7 ], [ %421, %416 ], !pdg.inst.id !823
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @37(i8*, i8*) {
  %3 = bitcast i8* %0 to [80 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32**
  %7 = load i32*, i32** %6
  %8 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32**
  %13 = load i32*, i32** %12
  %14 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32**
  %16 = load i32*, i32** %15
  %17 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 40
  %21 = bitcast i64* %20 to i32*
  %22 = load i32, i32* %21
  %23 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 48
  %24 = load i64, i64* %23
  %25 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 72
  %26 = load i64, i64* %25
  %27 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 56
  %28 = bitcast i64* %27 to i32*
  %29 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 64
  %30 = bitcast i64* %29 to i32*
  br label %33

31:                                               ; preds = %32
  ret void

32:                                               ; preds = %51
  br label %31

33:                                               ; preds = %2, %51
  %34 = phi i64 [ %54, %51 ], [ %24, %2 ], !pdg.inst.id !30
  %35 = phi i32 [ %53, %51 ], [ %10, %2 ], !pdg.inst.id !31
  %36 = phi i32 [ %52, %51 ], [ %22, %2 ], !pdg.inst.id !32
  %37 = getelementptr inbounds i32, i32* %13, i64 %34, !pdg.inst.id !33
  %38 = load i32, i32* %37, align 4, !tbaa !34, !pdg.inst.id !38
  %39 = load i32, i32* %7, align 4, !tbaa !34, !pdg.inst.id !39
  %40 = icmp eq i32 %38, %39, !pdg.inst.id !40
  br i1 %40, label %41, label %42, !prof !41, !pdg.inst.id !42

41:                                               ; preds = %33
  br label %51, !pdg.inst.id !43

42:                                               ; preds = %33
  %43 = icmp slt i32 %38, %19, !pdg.inst.id !44
  %44 = add nsw i32 %36, 1, !pdg.inst.id !45
  %45 = add nsw i32 %35, 1, !pdg.inst.id !46
  %46 = select i1 %43, i32 %44, i32 %45, !prof !47, !pdg.inst.id !48
  %47 = select i1 %43, i32 %44, i32 %36, !prof !47, !pdg.inst.id !49
  %48 = select i1 %43, i32 %35, i32 %45, !prof !47, !pdg.inst.id !50
  %49 = sext i32 %46 to i64, !pdg.inst.id !51
  %50 = getelementptr inbounds i32, i32* %16, i64 %49, !pdg.inst.id !52
  store i32 %38, i32* %50, align 4, !tbaa !34, !pdg.inst.id !53
  br label %51, !pdg.inst.id !54

51:                                               ; preds = %42, %41
  %52 = phi i32 [ %36, %41 ], [ %47, %42 ], !pdg.inst.id !55
  %53 = phi i32 [ %35, %41 ], [ %48, %42 ], !pdg.inst.id !56
  %54 = add nsw i64 %34, 1, !pdg.inst.id !57
  %55 = icmp slt i64 %34, %26, !pdg.inst.id !58
  store i32 %53, i32* %28
  store i32 %52, i32* %30
  br i1 %55, label %33, label %32, !prof !59, !pdg.inst.id !60
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [80 x i64]
  %15 = bitcast [80 x i64]* %14 to i8*
  %16 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32**
  %18 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32**
  %22 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32**
  %24 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32*
  %26 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32*
  %28 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 48
  %29 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 56
  %30 = bitcast i64* %29 to i32*
  %31 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 64
  %32 = bitcast i64* %31 to i32*
  %33 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 72
  %34 = alloca [104 x i64]
  %35 = bitcast [104 x i64]* %34 to i8*
  %36 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 0
  %37 = bitcast i64* %36 to i32*
  %38 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 8
  %39 = bitcast i64* %38 to double*
  %40 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 16
  %41 = bitcast i64* %40 to i32*
  %42 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 24
  %43 = bitcast i64* %42 to i32**
  %44 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 32
  %45 = bitcast i64* %44 to i32*
  %46 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 40
  %47 = bitcast i64* %46 to i32**
  %48 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 48
  %49 = bitcast i64* %48 to i32**
  %50 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 56
  %51 = bitcast i64* %50 to i32*
  %52 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 64
  %53 = bitcast i64* %52 to i32*
  %54 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 72
  %55 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 80
  %56 = bitcast i64* %55 to i32*
  %57 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 88
  %58 = bitcast i64* %57 to double**
  %59 = getelementptr inbounds [104 x i64], [104 x i64]* %34, i64 0, i64 96
  %60 = alloca [64 x i64]
  %61 = bitcast [64 x i64]* %60 to i8*
  %62 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 0
  %63 = bitcast i64* %62 to i32*
  %64 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 8
  %65 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 16
  %66 = bitcast i64* %65 to i32**
  %67 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 24
  %68 = bitcast i64* %67 to i32*
  %69 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 32
  %70 = bitcast i64* %69 to i32**
  %71 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 40
  %72 = bitcast i64* %71 to i32*
  %73 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 48
  %74 = bitcast i64* %73 to i32**
  %75 = getelementptr inbounds [64 x i64], [64 x i64]* %60, i64 0, i64 56
  %76 = alloca [88 x i64]
  %77 = bitcast [88 x i64]* %76 to i8*
  %78 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 0
  %79 = bitcast i64* %78 to i32*
  %80 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 8
  %81 = bitcast i64* %80 to i32*
  %82 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 16
  %83 = bitcast i64* %82 to i32*
  %84 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 24
  %85 = bitcast i64* %84 to i32**
  %86 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 32
  %87 = bitcast i64* %86 to double*
  %88 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 40
  %89 = bitcast i64* %88 to i32**
  %90 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 48
  %91 = bitcast i64* %90 to i32**
  %92 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 56
  %93 = bitcast i64* %92 to i32*
  %94 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 64
  %95 = bitcast i64* %94 to double**
  %96 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 72
  %97 = getelementptr inbounds [88 x i64], [88 x i64]* %76, i64 0, i64 80
  %98 = alloca [64 x i64]
  %99 = bitcast [64 x i64]* %98 to i8*
  %100 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 0
  %101 = bitcast i64* %100 to i32**
  %102 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 8
  %103 = bitcast i64* %102 to i32*
  %104 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 16
  %105 = bitcast i64* %104 to i32**
  %106 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 24
  %107 = bitcast i64* %106 to i32*
  %108 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 32
  %109 = bitcast i64* %108 to i32**
  %110 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 40
  %111 = bitcast i64* %110 to i32*
  %112 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 48
  %113 = getelementptr inbounds [64 x i64], [64 x i64]* %98, i64 0, i64 56
  %114 = alloca [88 x i64]
  %115 = bitcast [88 x i64]* %114 to i8*
  %116 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 0
  %117 = bitcast i64* %116 to i32*
  %118 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 8
  %119 = bitcast i64* %118 to i32*
  %120 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 16
  %121 = bitcast i64* %120 to double*
  %122 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 24
  %123 = bitcast i64* %122 to i32**
  %124 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 32
  %125 = bitcast i64* %124 to i32*
  %126 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 40
  %127 = bitcast i64* %126 to i32**
  %128 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 48
  %129 = bitcast i64* %128 to i32*
  %130 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 56
  %131 = bitcast i64* %130 to i32**
  %132 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 64
  %133 = bitcast i64* %132 to double**
  %134 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 72
  %135 = getelementptr inbounds [88 x i64], [88 x i64]* %114, i64 0, i64 80
  %136 = alloca [72 x i64]
  %137 = bitcast [72 x i64]* %136 to i8*
  %138 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 0
  %139 = bitcast i64* %138 to double**
  %140 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 8
  %141 = bitcast i64* %140 to i32*
  %142 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 16
  %143 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 24
  %144 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 32
  %145 = bitcast i64* %144 to i32*
  %146 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 40
  %147 = bitcast i64* %146 to i32**
  %148 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 48
  %149 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 56
  %150 = bitcast i64* %149 to double*
  %151 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 64
  %152 = bitcast i64* %151 to i32*
  %153 = alloca [184 x i64]
  %154 = bitcast [184 x i64]* %153 to i8*
  %155 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 0
  %156 = bitcast i64* %155 to i32*
  %157 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 8
  %158 = bitcast i64* %157 to i32*
  %159 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 16
  %160 = bitcast i64* %159 to %struct.kdnode**
  %161 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 24
  %162 = bitcast i64* %161 to %struct.kdnode***
  %163 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 32
  %164 = bitcast i64* %163 to i32*
  %165 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 40
  %166 = bitcast i64* %165 to i32**
  %167 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 48
  %168 = bitcast i64* %167 to i32*
  %169 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 56
  %170 = bitcast i64* %169 to i32**
  %171 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 64
  %172 = bitcast i64* %171 to i32*
  %173 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 72
  %174 = bitcast i64* %173 to i32**
  %175 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 80
  %176 = bitcast i64* %175 to i32**
  %177 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 88
  %178 = bitcast i64* %177 to i32**
  %179 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 96
  %180 = bitcast i64* %179 to i32**
  %181 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 104
  %182 = bitcast i64* %181 to i1*
  %183 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 112
  %184 = bitcast i64* %183 to %struct.kdnode**
  %185 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 120
  %186 = bitcast i64* %185 to i32*
  %187 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 128
  %188 = bitcast i64* %187 to i32*
  %189 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 136
  %190 = bitcast i64* %189 to i32**
  %191 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 144
  %192 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 152
  %193 = bitcast i64* %192 to double**
  %194 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 160
  %195 = bitcast i64* %194 to i32**
  %196 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 168
  %197 = bitcast i64* %196 to %struct.kdnode**
  %198 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 176
  %199 = bitcast i64* %198 to i32*
  %200 = add nsw i32 %12, 1, !pdg.inst.id !181
  %201 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %202 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %201, label %207, label %203, !prof !7088, !pdg.inst.id !185

203:                                              ; preds = %13
  %204 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %205 = load i32, i32* @9
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %594, label %213

.loopexit16:                                      ; preds = %615, %579
  %.lcssa88 = phi %struct.kdnode* [ %584, %579 ], [ %614, %615 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %217, %579 ], [ %612, %615 ], !pdg.inst.id !225
  br label %207, !pdg.inst.id !6401

207:                                              ; preds = %.loopexit16, %13
  %208 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %209 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %210 = getelementptr inbounds i32, i32* %208, i64 %202, !pdg.inst.id !187
  %211 = load i32, i32* %210, align 4, !tbaa !7089, !pdg.inst.id !230
  %212 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %209, i64 0, i32 0, !pdg.inst.id !228
  store i32 %211, i32* %212, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %593, !pdg.inst.id !6410

213:                                              ; preds = %203, %579
  %214 = phi i32 [ %588, %579 ], [ %11, %203 ], !pdg.inst.id !162
  %215 = phi %struct.kdnode* [ %584, %579 ], [ %9, %203 ], !pdg.inst.id !142
  %216 = phi i32 [ %587, %579 ], [ %6, %203 ], !pdg.inst.id !83
  %217 = phi i32* [ %591, %579 ], [ %5, %203 ], !pdg.inst.id !81
  %218 = phi i32* [ %590, %579 ], [ %4, %203 ], !pdg.inst.id !79
  %219 = phi i32* [ %589, %579 ], [ %3, %203 ], !pdg.inst.id !77
  %220 = phi i32* [ %217, %579 ], [ %0, %203 ], !pdg.inst.id !53
  %221 = srem i32 %214, %200, !pdg.inst.id !183
  %222 = add nsw i32 %216, 1, !pdg.inst.id !264
  %223 = icmp eq i32 %222, %7, !pdg.inst.id !96
  br i1 %223, label %224, label %291, !prof !7096, !pdg.inst.id !334

224:                                              ; preds = %615, %213
  %.lcssa85 = phi %struct.kdnode* [ %215, %213 ], [ %609, %615 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %216, %213 ], [ %610, %615 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %220, %213 ], [ %613, %615 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %221, %213 ], [ %611, %615 ], !pdg.inst.id !315
  %225 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %226 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %227 = getelementptr inbounds i32, i32* %.lcssa76, i64 %226, !pdg.inst.id !352
  %228 = load i32, i32* %227, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %225, label %229, label %233, !prof !7097, !pdg.inst.id !361

229:                                              ; preds = %224
  %230 = getelementptr inbounds i32, i32* %.lcssa76, i64 %202, !pdg.inst.id !207
  %231 = load i32, i32* %230, align 4, !tbaa !7089, !pdg.inst.id !376
  %232 = icmp slt i32 %228, %231, !pdg.inst.id !374
  br i1 %232, label %248, label %261, !pdg.inst.id !382

233:                                              ; preds = %224
  %234 = mul nsw i32 %228, %12, !pdg.inst.id !166
  %235 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %236 = add i32 %235, %234, !pdg.inst.id !384
  %237 = sext i32 %236 to i64, !pdg.inst.id !389
  %238 = getelementptr inbounds double, double* %10, i64 %237, !pdg.inst.id !144
  %239 = load double, double* %238, align 8, !tbaa !7098, !pdg.inst.id !283
  %240 = getelementptr inbounds i32, i32* %.lcssa76, i64 %202, !pdg.inst.id !205
  %241 = load i32, i32* %240, align 4, !tbaa !7089, !pdg.inst.id !397
  %242 = mul nsw i32 %241, %12, !pdg.inst.id !164
  %243 = add i32 %235, %242, !pdg.inst.id !386
  %244 = sext i32 %243 to i64, !pdg.inst.id !402
  %245 = getelementptr inbounds double, double* %10, i64 %244, !pdg.inst.id !146
  %246 = load double, double* %245, align 8, !tbaa !7098, !pdg.inst.id !405
  %247 = fcmp fast olt double %239, %246, !pdg.inst.id !395
  br i1 %247, label %248, label %263, !prof !7100, !pdg.inst.id !409

248:                                              ; preds = %233, %229
  %249 = phi %struct.kdnode* [ %.lcssa85, %233 ], [ %.lcssa85, %229 ], !pdg.inst.id !342
  %250 = phi i32 [ %241, %233 ], [ %231, %229 ], !pdg.inst.id !378
  %251 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %250, i32* %251, align 8, !tbaa !7093, !pdg.inst.id !413
  %252 = load i32, i32* %227, align 4, !tbaa !7089, !pdg.inst.id !364
  %253 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %254 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %253, i64 0, i32 0, !pdg.inst.id !420
  store i32 %252, i32* %254, align 8, !tbaa !7093, !pdg.inst.id !416
  %255 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %253, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %255, align 8, !tbaa !7102, !pdg.inst.id !423
  %256 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %257 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %256, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %257, align 8, !tbaa !7103, !pdg.inst.id !427
  %258 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %259 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %258, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %259, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %260 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %249, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %258, %struct.kdnode** %260, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %593, !pdg.inst.id !6480

261:                                              ; preds = %229
  %262 = icmp sgt i32 %228, %231, !pdg.inst.id !371
  br i1 %262, label %265, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %261
  br label %278, !pdg.inst.id !6511

263:                                              ; preds = %233
  %264 = fcmp fast ogt double %239, %246, !pdg.inst.id !393
  br i1 %264, label %265, label %278, !pdg.inst.id !437

265:                                              ; preds = %263, %261
  %266 = phi i32* [ %.lcssa76, %263 ], [ %.lcssa76, %261 ], !pdg.inst.id !354
  %267 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %228, i32* %267, align 8, !tbaa !7093, !pdg.inst.id !367
  %268 = getelementptr inbounds i32, i32* %266, i64 %202, !pdg.inst.id !211
  %269 = load i32, i32* %268, align 4, !tbaa !7089, !pdg.inst.id !441
  %270 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %271 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %270, i64 0, i32 0, !pdg.inst.id !447
  store i32 %269, i32* %271, align 8, !tbaa !7093, !pdg.inst.id !443
  %272 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %270, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %272, align 8, !tbaa !7102, !pdg.inst.id !450
  %273 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %274 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %273, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %274, align 8, !tbaa !7103, !pdg.inst.id !454
  %275 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %276 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %275, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %276, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %277 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %275, %struct.kdnode** %277, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %593, !pdg.inst.id !6525

278:                                              ; preds = %._crit_edge9, %263
  %279 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %263 ], !pdg.inst.id !344
  %280 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %228, i32* %280, align 8, !tbaa !7093, !pdg.inst.id !369
  %281 = getelementptr inbounds i32, i32* %.lcssa76, i64 %202, !pdg.inst.id !209
  %282 = load i32, i32* %281, align 4, !tbaa !7089, !pdg.inst.id !465
  %283 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %284 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %283, i64 0, i32 0, !pdg.inst.id !471
  store i32 %282, i32* %284, align 8, !tbaa !7093, !pdg.inst.id !467
  %285 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %283, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %285, align 8, !tbaa !7102, !pdg.inst.id !474
  %286 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %287 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %286, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %287, align 8, !tbaa !7103, !pdg.inst.id !478
  %288 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %289 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %288, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %289, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %290 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %279, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %288, %struct.kdnode** %290, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %593, !pdg.inst.id !6572

291:                                              ; preds = %213
  %292 = add nsw i32 %216, %7, !pdg.inst.id !94
  %293 = sdiv i32 %292, 2, !pdg.inst.id !486
  %294 = icmp eq i32 %221, 0, !pdg.inst.id !327
  %295 = sext i32 %293 to i64, !pdg.inst.id !490
  %296 = getelementptr inbounds i32, i32* %220, i64 %295, !pdg.inst.id !311
  %297 = load i32, i32* %296, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %294, label %327, label %298, !prof !7104, !pdg.inst.id !500

298:                                              ; preds = %291
  %299 = mul nsw i32 %297, %12, !pdg.inst.id !176
  %300 = add nsw i32 %221, -1, !pdg.inst.id !325
  %301 = add i32 %300, %299, !pdg.inst.id !521
  %302 = sext i32 %301 to i64, !pdg.inst.id !526
  %303 = getelementptr inbounds double, double* %10, i64 %302, !pdg.inst.id !148
  %304 = load double, double* %303, align 8, !tbaa !7098, !pdg.inst.id !529
  %305 = sext i32 %216 to i64, !pdg.inst.id !254
  %306 = load i32, i32* @10
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %619, label %308

308:                                              ; preds = %298, %312
  %309 = phi i64 [ %310, %312 ], [ %295, %298 ], !pdg.inst.id !504
  %310 = add nsw i64 %309, -1, !pdg.inst.id !542
  %311 = icmp sgt i64 %309, %305, !pdg.inst.id !535
  br i1 %311, label %312, label %.loopexit1, !prof !7105, !pdg.inst.id !546

312:                                              ; preds = %308
  %313 = getelementptr inbounds i32, i32* %220, i64 %310, !pdg.inst.id !309
  %314 = load i32, i32* %313, align 4, !tbaa !7089, !pdg.inst.id !548
  %315 = mul nsw i32 %314, %12, !pdg.inst.id !174
  %316 = add i32 %300, %315, !pdg.inst.id !523
  %317 = sext i32 %316 to i64, !pdg.inst.id !552
  %318 = getelementptr inbounds double, double* %10, i64 %317, !pdg.inst.id !150
  %319 = load double, double* %318, align 8, !tbaa !7098, !pdg.inst.id !555
  %320 = fcmp fast olt double %319, %304, !pdg.inst.id !533
  br i1 %320, label %._crit_edge8, label %308, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %635, %312
  %.lcssa3 = phi i64 [ %309, %312 ], [ %634, %635 ], !pdg.inst.id !537
  br label %321, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %635, %308
  %.lcssa2 = phi i64 [ %309, %308 ], [ %634, %635 ], !pdg.inst.id !539
  br label %321, !pdg.inst.id !6633

321:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %322 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %323 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %324 = ashr exact i64 %323, 32, !pdg.inst.id !568
  %325 = getelementptr inbounds i32, i32* %220, i64 %324, !pdg.inst.id !303
  %326 = load i32, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %327, !pdg.inst.id !6614

327:                                              ; preds = %321, %291
  %328 = phi i32 [ %326, %321 ], [ %297, %291 ], !pdg.inst.id !509
  %329 = phi i64 [ %324, %321 ], [ %295, %291 ], !pdg.inst.id !502
  %330 = phi i32 [ %322, %321 ], [ %293, %291 ], !pdg.inst.id !488
  %331 = phi double [ %304, %321 ], [ 0.000000e+00, %291 ], !pdg.inst.id !531
  %332 = getelementptr inbounds i32, i32* %220, i64 %329, !pdg.inst.id !307
  %333 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %215, i64 0, i32 0, !pdg.inst.id !238
  store i32 %328, i32* %333, align 8, !tbaa !7093, !pdg.inst.id !575
  %334 = add nsw i32 %216, -1, !pdg.inst.id !262
  %335 = icmp sgt i32 %216, %7, !pdg.inst.id !92
  br i1 %335, label %506, label %336, !prof !7106, !pdg.inst.id !649

336:                                              ; preds = %327
  %337 = add i32 %221, -1, !pdg.inst.id !323
  %338 = sext i32 %216 to i64, !pdg.inst.id !252
  br i1 %294, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %336
  %339 = load i32, i32* @11
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %639, label %395

.preheader11:                                     ; preds = %336
  %341 = load i32, i32* @12
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %655, label %343

343:                                              ; preds = %.preheader11, %360
  %344 = phi i64 [ %363, %360 ], [ %338, %.preheader11 ], !pdg.inst.id !655
  %345 = phi i32 [ %362, %360 ], [ %330, %.preheader11 ], !pdg.inst.id !580
  %346 = phi i32 [ %361, %360 ], [ %334, %.preheader11 ], !pdg.inst.id !627
  %347 = getelementptr inbounds i32, i32* %1, i64 %344, !pdg.inst.id !59
  %348 = load i32, i32* %347, align 4, !tbaa !7089, !pdg.inst.id !673
  %349 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !614
  %350 = icmp eq i32 %348, %349, !pdg.inst.id !678
  br i1 %350, label %._crit_edge2, label %351, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %343
  br label %360, !pdg.inst.id !6674

351:                                              ; preds = %343
  %352 = icmp slt i32 %348, %297, !pdg.inst.id !517
  %353 = add nsw i32 %346, 1, !pdg.inst.id !671
  %354 = add nsw i32 %345, 1, !pdg.inst.id !665
  %355 = select i1 %352, i32 %353, i32 %354, !prof !7108, !pdg.inst.id !685
  %356 = select i1 %352, i32 %353, i32 %346, !prof !7108, !pdg.inst.id !667
  %357 = select i1 %352, i32 %345, i32 %354, !prof !7108, !pdg.inst.id !661
  %358 = sext i32 %355 to i64, !pdg.inst.id !691
  %359 = getelementptr inbounds i32, i32* %217, i64 %358, !pdg.inst.id !271
  store i32 %348, i32* %359, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %360, !pdg.inst.id !6685

360:                                              ; preds = %._crit_edge2, %351
  %361 = phi i32 [ %346, %._crit_edge2 ], [ %356, %351 ], !pdg.inst.id !669
  %362 = phi i32 [ %345, %._crit_edge2 ], [ %357, %351 ], !pdg.inst.id !663
  %363 = add nsw i64 %344, 1, !pdg.inst.id !659
  %364 = icmp slt i64 %344, %202, !pdg.inst.id !191
  br i1 %364, label %343, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %670, %360
  br label %365, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %654, %417
  br label %365, !pdg.inst.id !6697

365:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %335, label %506, label %366, !prof !7106, !pdg.inst.id !647

366:                                              ; preds = %365
  %367 = add i32 %221, -1, !pdg.inst.id !321
  %368 = sext i32 %216 to i64, !pdg.inst.id !250
  br i1 %294, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %366
  %369 = load i32, i32* @13
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %671, label %452

.preheader7:                                      ; preds = %366
  %371 = load i32, i32* @14
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %687, label %373

373:                                              ; preds = %.preheader7, %390
  %374 = phi i64 [ %393, %390 ], [ %368, %.preheader7 ], !pdg.inst.id !706
  %375 = phi i32 [ %392, %390 ], [ %330, %.preheader7 ], !pdg.inst.id !584
  %376 = phi i32 [ %391, %390 ], [ %334, %.preheader7 ], !pdg.inst.id !631
  %377 = getelementptr inbounds i32, i32* %2, i64 %374, !pdg.inst.id !71
  %378 = load i32, i32* %377, align 4, !tbaa !7089, !pdg.inst.id !724
  %379 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !612
  %380 = icmp eq i32 %378, %379, !pdg.inst.id !729
  br i1 %380, label %._crit_edge5, label %381, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %373
  br label %390, !pdg.inst.id !6724

381:                                              ; preds = %373
  %382 = icmp slt i32 %378, %297, !pdg.inst.id !515
  %383 = add nsw i32 %376, 1, !pdg.inst.id !722
  %384 = add nsw i32 %375, 1, !pdg.inst.id !716
  %385 = select i1 %382, i32 %383, i32 %384, !prof !7108, !pdg.inst.id !736
  %386 = select i1 %382, i32 %383, i32 %376, !prof !7108, !pdg.inst.id !718
  %387 = select i1 %382, i32 %375, i32 %384, !prof !7108, !pdg.inst.id !712
  %388 = sext i32 %385 to i64, !pdg.inst.id !742
  %389 = getelementptr inbounds i32, i32* %1, i64 %388, !pdg.inst.id !57
  store i32 %378, i32* %389, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %390, !pdg.inst.id !6735

390:                                              ; preds = %._crit_edge5, %381
  %391 = phi i32 [ %376, %._crit_edge5 ], [ %386, %381 ], !pdg.inst.id !720
  %392 = phi i32 [ %375, %._crit_edge5 ], [ %387, %381 ], !pdg.inst.id !714
  %393 = add nsw i64 %374, 1, !pdg.inst.id !710
  %394 = icmp slt i64 %374, %202, !pdg.inst.id !195
  br i1 %394, label %373, label %.loopexit8, !prof !7109, !pdg.inst.id !751

395:                                              ; preds = %.preheader13, %417
  %396 = phi i64 [ %420, %417 ], [ %338, %.preheader13 ], !pdg.inst.id !653
  %397 = phi i32 [ %419, %417 ], [ %330, %.preheader13 ], !pdg.inst.id !578
  %398 = phi i32 [ %418, %417 ], [ %334, %.preheader13 ], !pdg.inst.id !625
  %399 = getelementptr inbounds i32, i32* %1, i64 %396, !pdg.inst.id !61
  %400 = load i32, i32* %399, align 4, !tbaa !7089, !pdg.inst.id !769
  %401 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !622
  %402 = icmp eq i32 %400, %401, !pdg.inst.id !774
  br i1 %402, label %._crit_edge, label %403, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %395
  br label %417, !pdg.inst.id !6762

403:                                              ; preds = %395
  %404 = mul nsw i32 %400, %12, !pdg.inst.id !172
  %405 = add i32 %337, %404, !pdg.inst.id !651
  %406 = sext i32 %405 to i64, !pdg.inst.id !780
  %407 = getelementptr inbounds double, double* %10, i64 %406, !pdg.inst.id !152
  %408 = load double, double* %407, align 8, !tbaa !7098, !pdg.inst.id !783
  %409 = fcmp fast olt double %408, %331, !pdg.inst.id !606
  %410 = add nsw i32 %397, 1, !pdg.inst.id !761
  %411 = add nsw i32 %398, 1, !pdg.inst.id !767
  %412 = select i1 %409, i32 %411, i32 %410, !prof !7111, !pdg.inst.id !788
  %413 = select i1 %409, i32 %411, i32 %398, !prof !7111, !pdg.inst.id !763
  %414 = select i1 %409, i32 %397, i32 %410, !prof !7111, !pdg.inst.id !757
  %415 = sext i32 %412 to i64, !pdg.inst.id !794
  %416 = getelementptr inbounds i32, i32* %217, i64 %415, !pdg.inst.id !269
  store i32 %400, i32* %416, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %417, !pdg.inst.id !6778

417:                                              ; preds = %._crit_edge, %403
  %418 = phi i32 [ %398, %._crit_edge ], [ %413, %403 ], !pdg.inst.id !765
  %419 = phi i32 [ %397, %._crit_edge ], [ %414, %403 ], !pdg.inst.id !759
  %420 = add nsw i64 %396, 1, !pdg.inst.id !755
  %421 = icmp slt i64 %396, %202, !pdg.inst.id !189
  br i1 %421, label %395, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %702, %390
  br label %422, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %686, %474
  br label %422, !pdg.inst.id !6792

422:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %335, label %506, label %423, !prof !7106, !pdg.inst.id !645

423:                                              ; preds = %422
  %424 = add i32 %221, -1, !pdg.inst.id !319
  %425 = sext i32 %216 to i64, !pdg.inst.id !248
  br i1 %294, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %423
  %426 = load i32, i32* @15
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %703, label %479

.preheader3:                                      ; preds = %423
  %428 = load i32, i32* @16
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %721, label %430

430:                                              ; preds = %.preheader3, %447
  %431 = phi i64 [ %450, %447 ], [ %425, %.preheader3 ], !pdg.inst.id !809
  %432 = phi i32 [ %449, %447 ], [ %330, %.preheader3 ], !pdg.inst.id !588
  %433 = phi i32 [ %448, %447 ], [ %334, %.preheader3 ], !pdg.inst.id !635
  %434 = getelementptr inbounds i32, i32* %219, i64 %431, !pdg.inst.id !299
  %435 = load i32, i32* %434, align 4, !tbaa !7089, !pdg.inst.id !827
  %436 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !610
  %437 = icmp eq i32 %435, %436, !pdg.inst.id !832
  br i1 %437, label %._crit_edge7, label %438, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %430
  br label %447, !pdg.inst.id !6819

438:                                              ; preds = %430
  %439 = icmp slt i32 %435, %297, !pdg.inst.id !513
  %440 = add nsw i32 %433, 1, !pdg.inst.id !825
  %441 = add nsw i32 %432, 1, !pdg.inst.id !819
  %442 = select i1 %439, i32 %440, i32 %441, !prof !7108, !pdg.inst.id !839
  %443 = select i1 %439, i32 %440, i32 %433, !prof !7108, !pdg.inst.id !821
  %444 = select i1 %439, i32 %432, i32 %441, !prof !7108, !pdg.inst.id !815
  %445 = sext i32 %442 to i64, !pdg.inst.id !845
  %446 = getelementptr inbounds i32, i32* %2, i64 %445, !pdg.inst.id !69
  store i32 %435, i32* %446, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %447, !pdg.inst.id !6830

447:                                              ; preds = %._crit_edge7, %438
  %448 = phi i32 [ %433, %._crit_edge7 ], [ %443, %438 ], !pdg.inst.id !823
  %449 = phi i32 [ %432, %._crit_edge7 ], [ %444, %438 ], !pdg.inst.id !817
  %450 = add nsw i64 %431, 1, !pdg.inst.id !813
  %451 = icmp slt i64 %431, %202, !pdg.inst.id !199
  br i1 %451, label %430, label %.loopexit4, !prof !7109, !pdg.inst.id !858

452:                                              ; preds = %.preheader9, %474
  %453 = phi i64 [ %477, %474 ], [ %368, %.preheader9 ], !pdg.inst.id !704
  %454 = phi i32 [ %476, %474 ], [ %330, %.preheader9 ], !pdg.inst.id !582
  %455 = phi i32 [ %475, %474 ], [ %334, %.preheader9 ], !pdg.inst.id !629
  %456 = getelementptr inbounds i32, i32* %2, i64 %453, !pdg.inst.id !73
  %457 = load i32, i32* %456, align 4, !tbaa !7089, !pdg.inst.id !876
  %458 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !620
  %459 = icmp eq i32 %457, %458, !pdg.inst.id !881
  br i1 %459, label %._crit_edge4, label %460, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %452
  br label %474, !pdg.inst.id !6857

460:                                              ; preds = %452
  %461 = mul nsw i32 %457, %12, !pdg.inst.id !170
  %462 = add i32 %367, %461, !pdg.inst.id !702
  %463 = sext i32 %462 to i64, !pdg.inst.id !887
  %464 = getelementptr inbounds double, double* %10, i64 %463, !pdg.inst.id !154
  %465 = load double, double* %464, align 8, !tbaa !7098, !pdg.inst.id !890
  %466 = fcmp fast olt double %465, %331, !pdg.inst.id !604
  %467 = add nsw i32 %454, 1, !pdg.inst.id !868
  %468 = add nsw i32 %455, 1, !pdg.inst.id !874
  %469 = select i1 %466, i32 %468, i32 %467, !prof !7111, !pdg.inst.id !895
  %470 = select i1 %466, i32 %468, i32 %455, !prof !7111, !pdg.inst.id !870
  %471 = select i1 %466, i32 %454, i32 %467, !prof !7111, !pdg.inst.id !864
  %472 = sext i32 %469 to i64, !pdg.inst.id !901
  %473 = getelementptr inbounds i32, i32* %1, i64 %472, !pdg.inst.id !55
  store i32 %457, i32* %473, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %474, !pdg.inst.id !6873

474:                                              ; preds = %._crit_edge4, %460
  %475 = phi i32 [ %455, %._crit_edge4 ], [ %470, %460 ], !pdg.inst.id !872
  %476 = phi i32 [ %454, %._crit_edge4 ], [ %471, %460 ], !pdg.inst.id !866
  %477 = add nsw i64 %453, 1, !pdg.inst.id !862
  %478 = icmp slt i64 %453, %202, !pdg.inst.id !193
  br i1 %478, label %452, label %.loopexit10, !prof !7112, !pdg.inst.id !910

479:                                              ; preds = %.preheader5, %501
  %480 = phi i64 [ %504, %501 ], [ %425, %.preheader5 ], !pdg.inst.id !807
  %481 = phi i32 [ %503, %501 ], [ %330, %.preheader5 ], !pdg.inst.id !586
  %482 = phi i32 [ %502, %501 ], [ %334, %.preheader5 ], !pdg.inst.id !633
  %483 = getelementptr inbounds i32, i32* %219, i64 %480, !pdg.inst.id !297
  %484 = load i32, i32* %483, align 4, !tbaa !7089, !pdg.inst.id !928
  %485 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !618
  %486 = icmp eq i32 %484, %485, !pdg.inst.id !933
  br i1 %486, label %._crit_edge6, label %487, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %479
  br label %501, !pdg.inst.id !6899

487:                                              ; preds = %479
  %488 = mul nsw i32 %484, %12, !pdg.inst.id !168
  %489 = add i32 %424, %488, !pdg.inst.id !805
  %490 = sext i32 %489 to i64, !pdg.inst.id !939
  %491 = getelementptr inbounds double, double* %10, i64 %490, !pdg.inst.id !156
  %492 = load double, double* %491, align 8, !tbaa !7098, !pdg.inst.id !942
  %493 = fcmp fast olt double %492, %331, !pdg.inst.id !602
  %494 = add nsw i32 %481, 1, !pdg.inst.id !920
  %495 = add nsw i32 %482, 1, !pdg.inst.id !926
  %496 = select i1 %493, i32 %495, i32 %494, !prof !7111, !pdg.inst.id !947
  %497 = select i1 %493, i32 %495, i32 %482, !prof !7111, !pdg.inst.id !922
  %498 = select i1 %493, i32 %481, i32 %494, !prof !7111, !pdg.inst.id !916
  %499 = sext i32 %496 to i64, !pdg.inst.id !953
  %500 = getelementptr inbounds i32, i32* %2, i64 %499, !pdg.inst.id !67
  store i32 %484, i32* %500, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %501, !pdg.inst.id !6915

501:                                              ; preds = %._crit_edge6, %487
  %502 = phi i32 [ %482, %._crit_edge6 ], [ %497, %487 ], !pdg.inst.id !924
  %503 = phi i32 [ %481, %._crit_edge6 ], [ %498, %487 ], !pdg.inst.id !918
  %504 = add nsw i64 %480, 1, !pdg.inst.id !914
  %505 = icmp slt i64 %480, %202, !pdg.inst.id !197
  br i1 %505, label %479, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %738, %447
  %.lcssa68 = phi i32 [ %448, %447 ], [ %737, %738 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %449, %447 ], [ %736, %738 ], !pdg.inst.id !854
  br label %506, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %720, %501
  %.lcssa66 = phi i32 [ %502, %501 ], [ %718, %720 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %503, %501 ], [ %719, %720 ], !pdg.inst.id !962
  br label %506, !pdg.inst.id !6933

506:                                              ; preds = %.loopexit6, %.loopexit4, %327, %365, %422
  %507 = phi i32 [ %334, %422 ], [ %334, %365 ], [ %334, %327 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %508 = phi i32 [ %330, %422 ], [ %330, %365 ], [ %330, %327 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %204, label %509, label %562, !prof !7106, !pdg.inst.id !221

509:                                              ; preds = %506
  br i1 %335, label %.loopexit15, label %510, !pdg.inst.id !643

510:                                              ; preds = %509
  %511 = add i32 %221, -1, !pdg.inst.id !317
  %512 = sext i32 %216 to i64, !pdg.inst.id !246
  br i1 %294, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %510
  br label %535, !pdg.inst.id !6942

.preheader:                                       ; preds = %510
  br label %513, !pdg.inst.id !6944

513:                                              ; preds = %.preheader, %530
  %514 = phi i64 [ %533, %530 ], [ %512, %.preheader ], !pdg.inst.id !980
  %515 = phi i32 [ %532, %530 ], [ %330, %.preheader ], !pdg.inst.id !592
  %516 = phi i32 [ %531, %530 ], [ %334, %.preheader ], !pdg.inst.id !639
  %517 = getelementptr inbounds i32, i32* %218, i64 %514, !pdg.inst.id !287
  %518 = load i32, i32* %517, align 4, !tbaa !7089, !pdg.inst.id !998
  %519 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !608
  %520 = icmp eq i32 %518, %519, !pdg.inst.id !1003
  br i1 %520, label %._crit_edge3, label %521, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %513
  br label %530, !pdg.inst.id !6965

521:                                              ; preds = %513
  %522 = icmp slt i32 %518, %297, !pdg.inst.id !511
  %523 = add nsw i32 %516, 1, !pdg.inst.id !996
  %524 = add nsw i32 %515, 1, !pdg.inst.id !990
  %525 = select i1 %522, i32 %523, i32 %524, !pdg.inst.id !1010
  %526 = select i1 %522, i32 %523, i32 %516, !pdg.inst.id !992
  %527 = select i1 %522, i32 %515, i32 %524, !pdg.inst.id !986
  %528 = sext i32 %525 to i64, !pdg.inst.id !1016
  %529 = getelementptr inbounds i32, i32* %219, i64 %528, !pdg.inst.id !291
  store i32 %518, i32* %529, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %530, !pdg.inst.id !6976

530:                                              ; preds = %._crit_edge3, %521
  %531 = phi i32 [ %516, %._crit_edge3 ], [ %526, %521 ], !pdg.inst.id !994
  %532 = phi i32 [ %515, %._crit_edge3 ], [ %527, %521 ], !pdg.inst.id !988
  %533 = add nsw i64 %514, 1, !pdg.inst.id !984
  %534 = icmp slt i64 %514, %202, !pdg.inst.id !203
  br i1 %534, label %513, label %.loopexit, !pdg.inst.id !1029

535:                                              ; preds = %.preheader1, %557
  %536 = phi i64 [ %560, %557 ], [ %512, %.preheader1 ], !pdg.inst.id !978
  %537 = phi i32 [ %559, %557 ], [ %330, %.preheader1 ], !pdg.inst.id !590
  %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
  %539 = getelementptr inbounds i32, i32* %218, i64 %536, !pdg.inst.id !285
  %540 = load i32, i32* %539, align 4, !tbaa !7089, !pdg.inst.id !1047
  %541 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !616
  %542 = icmp eq i32 %540, %541, !pdg.inst.id !1053
  br i1 %542, label %._crit_edge1, label %543, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %535
  br label %557, !pdg.inst.id !7001

543:                                              ; preds = %535
  %544 = shl i32 %540, 2, !pdg.inst.id !1051
  %545 = add i32 %511, %544, !pdg.inst.id !976
  %546 = sext i32 %545 to i64, !pdg.inst.id !1059
  %547 = getelementptr inbounds double, double* %10, i64 %546, !pdg.inst.id !158
  %548 = load double, double* %547, align 8, !tbaa !7098, !pdg.inst.id !1062
  %549 = fcmp fast olt double %548, %331, !pdg.inst.id !600
  %550 = add nsw i32 %537, 1, !pdg.inst.id !1039
  %551 = add nsw i32 %538, 1, !pdg.inst.id !1045
  %552 = select i1 %549, i32 %551, i32 %550, !pdg.inst.id !1067
  %553 = select i1 %549, i32 %551, i32 %538, !pdg.inst.id !1041
  %554 = select i1 %549, i32 %537, i32 %550, !pdg.inst.id !1035
  %555 = sext i32 %552 to i64, !pdg.inst.id !1073
  %556 = getelementptr inbounds i32, i32* %219, i64 %555, !pdg.inst.id !289
  store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %557, !pdg.inst.id !7017

557:                                              ; preds = %._crit_edge1, %543
  %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
  %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
  %560 = add nsw i64 %536, 1, !pdg.inst.id !1033
  %561 = icmp slt i64 %536, %202, !pdg.inst.id !201
  br i1 %561, label %535, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %530
  %.lcssa72 = phi i32 [ %531, %530 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %532, %530 ], !pdg.inst.id !1025
  br label %562, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %557
  %.lcssa70 = phi i32 [ %558, %557 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %559, %557 ], !pdg.inst.id !1082
  br label %562, !pdg.inst.id !7035

562:                                              ; preds = %.loopexit2, %.loopexit, %506
  %563 = phi i32 [ %507, %506 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %564 = phi i32 [ %508, %506 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %565 = icmp slt i32 %563, %216, !pdg.inst.id !258
  br i1 %565, label %577, label %566, !prof !7106, !pdg.inst.id !1096

566:                                              ; preds = %562
  %567 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %568 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %567, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %568, align 8, !tbaa !7102, !pdg.inst.id !1100
  %569 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %570 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %569, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %570, align 8, !tbaa !7103, !pdg.inst.id !1104
  %571 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %572 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %571, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %572, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %573 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %215, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %571, %struct.kdnode** %573, align 8, !tbaa !7102, !pdg.inst.id !1108
  %574 = add nsw i32 %221, 1, !pdg.inst.id !329
  br i1 %204, label %575, label %576, !prof !7106, !pdg.inst.id !219

575:                                              ; preds = %566
  tail call fastcc void @buildkdtree(i32* %217, i32* %1, i32* %2, i32* %219, i32* nonnull %220, i32* %218, i32 %216, i32 %563, %struct.kdnode** nonnull %8, %struct.kdnode* %571, double* %10, i32 %574, i32 4), !pdg.inst.id !65
  br label %577, !pdg.inst.id !7059

576:                                              ; preds = %566
  tail call fastcc void @buildkdtree(i32* %217, i32* %1, i32* %2, i32* nonnull %220, i32* %218, i32* %219, i32 %216, i32 %563, %struct.kdnode** nonnull %8, %struct.kdnode* %571, double* %10, i32 %574, i32 %12), !pdg.inst.id !63
  br label %577, !pdg.inst.id !7062

577:                                              ; preds = %562, %575, %576
  %578 = icmp sgt i32 %564, %330, !pdg.inst.id !598
  br i1 %578, label %579, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

579:                                              ; preds = %577
  %580 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %581 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %580, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %581, align 8, !tbaa !7102, !pdg.inst.id !1120
  %582 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %583 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %582, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %583, align 8, !tbaa !7103, !pdg.inst.id !1124
  %584 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %585 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %584, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %585, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %586 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %215, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %584, %struct.kdnode** %586, align 8, !tbaa !7103, !pdg.inst.id !1128
  %587 = add nsw i32 %330, 1, !pdg.inst.id !596
  %588 = add nsw i32 %221, 1, !pdg.inst.id !331
  %589 = select i1 %204, i32* %219, i32* %220, !prof !7106, !pdg.inst.id !217
  %590 = select i1 %204, i32* %220, i32* %218, !prof !7106, !pdg.inst.id !215
  %591 = select i1 %204, i32* %218, i32* %219, !prof !7106, !pdg.inst.id !213
  %592 = icmp eq i32 %587, %7, !pdg.inst.id !89
  br i1 %592, label %.loopexit16, label %213, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %615, %615, %577, %509
  br label %593, !pdg.inst.id !7078

593:                                              ; preds = %.loopexit15, %265, %278, %248, %207
  ret void, !pdg.inst.id !7115

594:                                              ; preds = %203
  store i32 1, i32* @9
  store i32 %12, i32* %156
  store i32 %11, i32* %158
  store %struct.kdnode* %9, %struct.kdnode** %160
  store %struct.kdnode** %8, %struct.kdnode*** %162
  store i32 %6, i32* %164
  store i32* %5, i32** %166
  store i32 %7, i32* %168
  store i32* %0, i32** %170
  store i32 %200, i32* %172
  store i32* %2, i32** %174
  store i32* %1, i32** %176
  store i32* %3, i32** %178
  store i32* %4, i32** %180
  store i1 %204, i1* %182
  store i64 %202, i64* %191
  store double* %10, double** %193
  %595 = alloca [1 x i8*]
  %596 = getelementptr inbounds [1 x i8*], [1 x i8*]* %595, i64 0, i64 0
  %597 = bitcast i8** %596 to void (i8*, i8*)**
  store void (i8*, i8*)* @31, void (i8*, i8*)** %597
  %598 = bitcast [1 x i8*]* %595 to i8*
  %599 = alloca [8 x i64]
  %600 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 0
  store i64 64, i64* %600
  %601 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 1
  store i64 64, i64* %601
  %602 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 2
  store i64 64, i64* %602
  %603 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 3
  store i64 64, i64* %603
  %604 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 4
  store i64 64, i64* %604
  %605 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 5
  store i64 64, i64* %605
  %606 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 6
  store i64 64, i64* %606
  %607 = getelementptr inbounds [8 x i64], [8 x i64]* %599, i64 0, i64 7
  store i64 64, i64* %607
  %608 = bitcast [8 x i64]* %599 to i64*
  call void @stageDispatcher(i8* %154, i64* %608, i8* %598, i64 1, i64 8)
  %609 = load %struct.kdnode*, %struct.kdnode** %184
  %610 = load i32, i32* %186
  %611 = load i32, i32* %188
  %612 = load i32*, i32** %190
  %613 = load i32*, i32** %195
  %614 = load %struct.kdnode*, %struct.kdnode** %197
  br label %615

615:                                              ; preds = %594
  %616 = getelementptr inbounds [184 x i64], [184 x i64]* %153, i64 0, i64 176
  %617 = load i64, i64* %616
  %618 = trunc i64 %617 to i32
  store i32 0, i32* @9
  switch i32 %618, label %224 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

619:                                              ; preds = %298
  store i32 1, i32* @10
  store double* %10, double** %139
  store i32 %300, i32* %141
  store i64 %305, i64* %143
  store i32 %12, i32* %145
  store i32* %220, i32** %147
  store i64 %295, i64* %148
  store double %304, double* %150
  %620 = alloca [1 x i8*]
  %621 = getelementptr inbounds [1 x i8*], [1 x i8*]* %620, i64 0, i64 0
  %622 = bitcast i8** %621 to void (i8*, i8*)**
  store void (i8*, i8*)* @32, void (i8*, i8*)** %622
  %623 = bitcast [1 x i8*]* %620 to i8*
  %624 = alloca [8 x i64]
  %625 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 0
  store i64 64, i64* %625
  %626 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 1
  store i64 64, i64* %626
  %627 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 2
  store i64 64, i64* %627
  %628 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 3
  store i64 64, i64* %628
  %629 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 4
  store i64 64, i64* %629
  %630 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 5
  store i64 64, i64* %630
  %631 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 6
  store i64 64, i64* %631
  %632 = getelementptr inbounds [8 x i64], [8 x i64]* %624, i64 0, i64 7
  store i64 64, i64* %632
  %633 = bitcast [8 x i64]* %624 to i64*
  call void @stageDispatcher(i8* %137, i64* %633, i8* %623, i64 1, i64 8)
  %634 = load i64, i64* %142
  br label %635

635:                                              ; preds = %619
  %636 = getelementptr inbounds [72 x i64], [72 x i64]* %136, i64 0, i64 64
  %637 = load i64, i64* %636
  %638 = trunc i64 %637 to i32
  store i32 0, i32* @10
  switch i32 %638, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

639:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %117
  store i32 %334, i32* %119
  store double %331, double* %121
  store i32* %1, i32** %123
  store i32 %330, i32* %125
  store i32* %332, i32** %127
  store i32 %337, i32* %129
  store i32* %217, i32** %131
  store double* %10, double** %133
  store i64 %338, i64* %134
  store i64 %202, i64* %135
  %640 = alloca [1 x i8*]
  %641 = getelementptr inbounds [1 x i8*], [1 x i8*]* %640, i64 0, i64 0
  %642 = bitcast i8** %641 to void (i8*, i8*)**
  store void (i8*, i8*)* @33, void (i8*, i8*)** %642
  %643 = bitcast [1 x i8*]* %640 to i8*
  %644 = alloca [8 x i64]
  %645 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 0
  store i64 64, i64* %645
  %646 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 1
  store i64 64, i64* %646
  %647 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 2
  store i64 64, i64* %647
  %648 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 3
  store i64 64, i64* %648
  %649 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 4
  store i64 64, i64* %649
  %650 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 5
  store i64 64, i64* %650
  %651 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 6
  store i64 64, i64* %651
  %652 = getelementptr inbounds [8 x i64], [8 x i64]* %644, i64 0, i64 7
  store i64 64, i64* %652
  %653 = bitcast [8 x i64]* %644 to i64*
  call void @stageDispatcher(i8* %115, i64* %653, i8* %643, i64 1, i64 8)
  br label %654

654:                                              ; preds = %639
  store i32 0, i32* @11
  br label %.loopexit14

655:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %217, i32** %101
  store i32 %334, i32* %103
  store i32* %332, i32** %105
  store i32 %330, i32* %107
  store i32* %1, i32** %109
  store i32 %297, i32* %111
  store i64 %202, i64* %112
  store i64 %338, i64* %113
  %656 = alloca [1 x i8*]
  %657 = getelementptr inbounds [1 x i8*], [1 x i8*]* %656, i64 0, i64 0
  %658 = bitcast i8** %657 to void (i8*, i8*)**
  store void (i8*, i8*)* @34, void (i8*, i8*)** %658
  %659 = bitcast [1 x i8*]* %656 to i8*
  %660 = alloca [8 x i64]
  %661 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 0
  store i64 64, i64* %661
  %662 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 1
  store i64 64, i64* %662
  %663 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 2
  store i64 64, i64* %663
  %664 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 3
  store i64 64, i64* %664
  %665 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 4
  store i64 64, i64* %665
  %666 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 5
  store i64 64, i64* %666
  %667 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 6
  store i64 64, i64* %667
  %668 = getelementptr inbounds [8 x i64], [8 x i64]* %660, i64 0, i64 7
  store i64 64, i64* %668
  %669 = bitcast [8 x i64]* %660 to i64*
  call void @stageDispatcher(i8* %99, i64* %669, i8* %659, i64 1, i64 8)
  br label %670

670:                                              ; preds = %655
  store i32 0, i32* @12
  br label %.loopexit12

671:                                              ; preds = %.preheader9
  store i32 1, i32* @13
  store i32 %12, i32* %79
  store i32 %334, i32* %81
  store i32 %330, i32* %83
  store i32* %1, i32** %85
  store double %331, double* %87
  store i32* %332, i32** %89
  store i32* %2, i32** %91
  store i32 %367, i32* %93
  store double* %10, double** %95
  store i64 %368, i64* %96
  store i64 %202, i64* %97
  %672 = alloca [1 x i8*]
  %673 = getelementptr inbounds [1 x i8*], [1 x i8*]* %672, i64 0, i64 0
  %674 = bitcast i8** %673 to void (i8*, i8*)**
  store void (i8*, i8*)* @35, void (i8*, i8*)** %674
  %675 = bitcast [1 x i8*]* %672 to i8*
  %676 = alloca [8 x i64]
  %677 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 0
  store i64 64, i64* %677
  %678 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 1
  store i64 64, i64* %678
  %679 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 2
  store i64 64, i64* %679
  %680 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 3
  store i64 64, i64* %680
  %681 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 4
  store i64 64, i64* %681
  %682 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 5
  store i64 64, i64* %682
  %683 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 6
  store i64 64, i64* %683
  %684 = getelementptr inbounds [8 x i64], [8 x i64]* %676, i64 0, i64 7
  store i64 64, i64* %684
  %685 = bitcast [8 x i64]* %676 to i64*
  call void @stageDispatcher(i8* %77, i64* %685, i8* %675, i64 1, i64 8)
  br label %686

686:                                              ; preds = %671
  store i32 0, i32* @13
  br label %.loopexit10

687:                                              ; preds = %.preheader7
  store i32 1, i32* @14
  store i32 %334, i32* %63
  store i64 %368, i64* %64
  store i32* %332, i32** %66
  store i32 %330, i32* %68
  store i32* %1, i32** %70
  store i32 %297, i32* %72
  store i32* %2, i32** %74
  store i64 %202, i64* %75
  %688 = alloca [1 x i8*]
  %689 = getelementptr inbounds [1 x i8*], [1 x i8*]* %688, i64 0, i64 0
  %690 = bitcast i8** %689 to void (i8*, i8*)**
  store void (i8*, i8*)* @36, void (i8*, i8*)** %690
  %691 = bitcast [1 x i8*]* %688 to i8*
  %692 = alloca [8 x i64]
  %693 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 0
  store i64 64, i64* %693
  %694 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 1
  store i64 64, i64* %694
  %695 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 2
  store i64 64, i64* %695
  %696 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 3
  store i64 64, i64* %696
  %697 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 4
  store i64 64, i64* %697
  %698 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 5
  store i64 64, i64* %698
  %699 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 6
  store i64 64, i64* %699
  %700 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 7
  store i64 64, i64* %700
  %701 = bitcast [8 x i64]* %692 to i64*
  call void @stageDispatcher(i8* %61, i64* %701, i8* %691, i64 1, i64 8)
  br label %702

702:                                              ; preds = %687
  store i32 0, i32* @14
  br label %.loopexit8

703:                                              ; preds = %.preheader5
  store i32 1, i32* @15
  store i32 %334, i32* %37
  store double %331, double* %39
  store i32 %330, i32* %41
  store i32* %219, i32** %43
  store i32 %12, i32* %45
  store i32* %2, i32** %47
  store i32* %332, i32** %49
  store i32 %424, i32* %51
  store i64 %202, i64* %54
  store double* %10, double** %58
  store i64 %425, i64* %59
  %704 = alloca [1 x i8*]
  %705 = getelementptr inbounds [1 x i8*], [1 x i8*]* %704, i64 0, i64 0
  %706 = bitcast i8** %705 to void (i8*, i8*)**
  store void (i8*, i8*)* @37, void (i8*, i8*)** %706
  %707 = bitcast [1 x i8*]* %704 to i8*
  %708 = alloca [8 x i64]
  %709 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 0
  store i64 64, i64* %709
  %710 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 1
  store i64 64, i64* %710
  %711 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 2
  store i64 64, i64* %711
  %712 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 3
  store i64 64, i64* %712
  %713 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 4
  store i64 64, i64* %713
  %714 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 5
  store i64 64, i64* %714
  %715 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 6
  store i64 64, i64* %715
  %716 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 7
  store i64 64, i64* %716
  %717 = bitcast [8 x i64]* %708 to i64*
  call void @stageDispatcher(i8* %35, i64* %717, i8* %707, i64 1, i64 8)
  %718 = load i32, i32* %53
  %719 = load i32, i32* %56
  br label %720

720:                                              ; preds = %703
  store i32 0, i32* @15
  br label %.loopexit6

721:                                              ; preds = %.preheader3
  store i32 1, i32* @16
  store i32* %332, i32** %17
  store i32 %330, i32* %19
  store i32* %219, i32** %21
  store i32* %2, i32** %23
  store i32 %297, i32* %25
  store i32 %334, i32* %27
  store i64 %425, i64* %28
  store i64 %202, i64* %33
  %722 = alloca [1 x i8*]
  %723 = getelementptr inbounds [1 x i8*], [1 x i8*]* %722, i64 0, i64 0
  %724 = bitcast i8** %723 to void (i8*, i8*)**
  store void (i8*, i8*)* @38, void (i8*, i8*)** %724
  %725 = bitcast [1 x i8*]* %722 to i8*
  %726 = alloca [8 x i64]
  %727 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 0
  store i64 64, i64* %727
  %728 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 1
  store i64 64, i64* %728
  %729 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 2
  store i64 64, i64* %729
  %730 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 3
  store i64 64, i64* %730
  %731 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 4
  store i64 64, i64* %731
  %732 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 5
  store i64 64, i64* %732
  %733 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 6
  store i64 64, i64* %733
  %734 = getelementptr inbounds [8 x i64], [8 x i64]* %726, i64 0, i64 7
  store i64 64, i64* %734
  %735 = bitcast [8 x i64]* %726 to i64*
  call void @stageDispatcher(i8* %15, i64* %735, i8* %725, i64 1, i64 8)
  %736 = load i32, i32* %30
  %737 = load i32, i32* %32
  br label %738

738:                                              ; preds = %721
  store i32 0, i32* @16
  br label %.loopexit4
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 26 = "  %539 = getelementptr inbounds i32, i32* %218, i64 %536, !pdg.inst.id !285"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %539 = getelementptr inbounds i32, i32* %218, i64 %536, !pdg.inst.id !285
DSWP:       %548 = load double, double* %547, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:       %547 = getelementptr inbounds double, double* %10, i64 %546, !pdg.inst.id !158
DSWP:       %540 = load i32, i32* %539, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:       %546 = sext i32 %545 to i64, !pdg.inst.id !1059
DSWP:       %549 = fcmp fast olt double %548, %331, !pdg.inst.id !600
DSWP:       %544 = shl i32 %540, 2, !pdg.inst.id !1051
DSWP:       br i1 %542, label %._crit_edge1, label %543, !pdg.inst.id !1056
DSWP:       %555 = sext i32 %552 to i64, !pdg.inst.id !1073
DSWP:       %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
DSWP:       %545 = add i32 %511, %544, !pdg.inst.id !976
DSWP:       %550 = add nsw i32 %537, 1, !pdg.inst.id !1039
DSWP:       %551 = add nsw i32 %538, 1, !pdg.inst.id !1045
DSWP:       br label %557, !pdg.inst.id !7001
DSWP:       store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:       %556 = getelementptr inbounds i32, i32* %219, i64 %555, !pdg.inst.id !289
DSWP:       %554 = select i1 %549, i32 %537, i32 %550, !pdg.inst.id !1035
DSWP:       br label %557, !pdg.inst.id !7017
DSWP:       %553 = select i1 %549, i32 %551, i32 %538, !pdg.inst.id !1041
DSWP:       %552 = select i1 %549, i32 %551, i32 %550, !pdg.inst.id !1067
DSWP:       %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
DSWP:       %541 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:       %537 = phi i32 [ %559, %557 ], [ %330, %.preheader1 ], !pdg.inst.id !590
DSWP:       %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
DSWP:       %542 = icmp eq i32 %540, %541, !pdg.inst.id !1053
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %539 = getelementptr inbounds i32, i32* %218, i64 %536, !pdg.inst.id !285
DSWP:       %548 = load double, double* %547, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:       %547 = getelementptr inbounds double, double* %10, i64 %546, !pdg.inst.id !158
DSWP:       %540 = load i32, i32* %539, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:       %546 = sext i32 %545 to i64, !pdg.inst.id !1059
DSWP:       %549 = fcmp fast olt double %548, %331, !pdg.inst.id !600
DSWP:       %544 = shl i32 %540, 2, !pdg.inst.id !1051
DSWP:       br i1 %542, label %._crit_edge1, label %543, !pdg.inst.id !1056
DSWP:       %555 = sext i32 %552 to i64, !pdg.inst.id !1073
DSWP:       %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
DSWP:       %545 = add i32 %511, %544, !pdg.inst.id !976
DSWP:       %550 = add nsw i32 %537, 1, !pdg.inst.id !1039
DSWP:       %551 = add nsw i32 %538, 1, !pdg.inst.id !1045
DSWP:       br label %557, !pdg.inst.id !7001
DSWP:       store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:       %556 = getelementptr inbounds i32, i32* %219, i64 %555, !pdg.inst.id !289
DSWP:       %554 = select i1 %549, i32 %537, i32 %550, !pdg.inst.id !1035
DSWP:       br label %557, !pdg.inst.id !7017
DSWP:       %553 = select i1 %549, i32 %551, i32 %538, !pdg.inst.id !1041
DSWP:       %552 = select i1 %549, i32 %551, i32 %550, !pdg.inst.id !1067
DSWP:       %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
DSWP:       %541 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:       %537 = phi i32 [ %559, %557 ], [ %330, %.preheader1 ], !pdg.inst.id !590
DSWP:       %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
DSWP:       %542 = icmp eq i32 %540, %541, !pdg.inst.id !1053
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 25
DSWP:     	  %539 = getelementptr inbounds i32, i32* %218, i64 %536, !pdg.inst.id !285
DSWP:     	  %548 = load double, double* %547, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:     	  %547 = getelementptr inbounds double, double* %10, i64 %546, !pdg.inst.id !158
DSWP:     	  %540 = load i32, i32* %539, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:     	  %546 = sext i32 %545 to i64, !pdg.inst.id !1059
DSWP:     	  %549 = fcmp fast olt double %548, %331, !pdg.inst.id !600
DSWP:     	  %544 = shl i32 %540, 2, !pdg.inst.id !1051
DSWP:     	  br i1 %542, label %._crit_edge1, label %543, !pdg.inst.id !1056
DSWP:     	  %555 = sext i32 %552 to i64, !pdg.inst.id !1073
DSWP:     	  %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
DSWP:     	  %545 = add i32 %511, %544, !pdg.inst.id !976
DSWP:     	  %550 = add nsw i32 %537, 1, !pdg.inst.id !1039
DSWP:     	  %551 = add nsw i32 %538, 1, !pdg.inst.id !1045
DSWP:     	  br label %557, !pdg.inst.id !7001
DSWP:     	  store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:     	  %556 = getelementptr inbounds i32, i32* %219, i64 %555, !pdg.inst.id !289
DSWP:     	  %554 = select i1 %549, i32 %537, i32 %550, !pdg.inst.id !1035
DSWP:     	  br label %557, !pdg.inst.id !7017
DSWP:     	  %553 = select i1 %549, i32 %551, i32 %538, !pdg.inst.id !1041
DSWP:     	  %552 = select i1 %549, i32 %551, i32 %550, !pdg.inst.id !1067
DSWP:     	  %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
DSWP:     	  %541 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:     	  %537 = phi i32 [ %559, %557 ], [ %330, %.preheader1 ], !pdg.inst.id !590
DSWP:     	  %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
DSWP:     	  %542 = icmp eq i32 %540, %541, !pdg.inst.id !1053
DSWP:     External nodes: 2
DSWP:     	  %536 = phi i64 [ %560, %557 ], [ %512, %.preheader1 ], !pdg.inst.id !978
DSWP:     	  br i1 %561, label %535, label %.loopexit2, !pdg.inst.id !1086
DSWP:     Edges: 63
DSWP:     	From:	  %556 = getelementptr inbounds i32, i32* %219, i64 %555, !pdg.inst.id !289
DSWP:     	To:	  store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:     	To:	  %541 = load i32, i32* %332, align 4, !tbaa !7089, !pdg.inst.id !616
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:     	To:	  %540 = load i32, i32* %539, align 4, !tbaa !7089, !pdg.inst.id !1047
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %540, i32* %556, align 4, !tbaa !7089, !pdg.inst.id !1049
DSWP:     	To:	  %548 = load double, double* %547, align 8, !tbaa !7098, !pdg.inst.id !1062
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
DSWP:     	To:	  %537 = phi i32 [ %559, %557 ], [ %330, %.preheader1 ], !pdg.inst.id !590
DSWP:     	RAW (must)
DSWP:     	From:	  %555 = sext i32 %552 to i64, !pdg.inst.id !1073
DSWP:     	To:	  %556 = getelementptr inbounds i32, i32* %219, i64 %555, !pdg.inst.id !289
DSWP:     	RAW (must)
DSWP:     	From:	  %554 = select i1 %549, i32 %537, i32 %550, !pdg.inst.id !1035
DSWP:     	To:	  %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
DSWP:     	RAW (must)
DSWP:     	From:	  %553 = select i1 %549, i32 %551, i32 %538, !pdg.inst.id !1041
DSWP:     	To:	  %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
DSWP:     	RAW (must)
DSWP:     	From:	  %545 = add i32 %511, %544, !pdg.inst.id !976
DSWP:     	To:	  %546 = sext i32 %545 to i64, !pdg.inst.id !1059
DSWP:     	RAW (must)
DSWP:     	From:	  %550 = add nsw i32 %537, 1, !pdg.inst.id !1039
DSWP:     	To:	  %554 = select i1 %549, i32 %537, i32 %550, !pdg.inst.id !1035
DSWP:     	RAW (must)
DSWP:     	From:	  %550 = add nsw i32 %537, 1, !pdg.inst.id !1039
DSWP:     	To:	  %552 = select i1 %549, i32 %551, i32 %550, !pdg.inst.id !1067
DSWP:     	RAW (must)
DSWP:     	From:	  %552 = select i1 %549, i32 %551, i32 %550, !pdg.inst.id !1067
DSWP:     	To:	  %555 = sext i32 %552 to i64, !pdg.inst.id !1073
DSWP:     	RAW (must)
DSWP:     	From:	  %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
DSWP:     	To:	  %553 = select i1 %549, i32 %551, i32 %538, !pdg.inst.id !1041
DSWP:     	RAW (must)
DSWP:     	From:	  %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
DSWP:     	To:	  %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
DSWP:     	RAW (must)
DSWP:     	From:	  %538 = phi i32 [ %558, %557 ], [ %334, %.preheader1 ], !pdg.inst.id !637
DSWP:     	To:	  %551 = add nsw i32 %538, 1, !pdg.inst.id !1045
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %334 = add nsw i32 %216, -1, !pdg.inst.id !262
DSWP:    Pre loop env 2, producer:	  %331 = phi double [ %304, %321 ], [ 0.000000e+00, %291 ], !pdg.inst.id !531
DSWP:    Pre loop env 3, producer:	  %219 = phi i32* [ %589, %579 ], [ %3, %203 ], !pdg.inst.id !77
DSWP:    Pre loop env 4, producer:	  %330 = phi i32 [ %322, %321 ], [ %293, %291 ], !pdg.inst.id !488
DSWP:    Pre loop env 5, producer:	  %218 = phi i32* [ %590, %579 ], [ %4, %203 ], !pdg.inst.id !79
DSWP:    Pre loop env 6, producer:	  %332 = getelementptr inbounds i32, i32* %220, i64 %329, !pdg.inst.id !307
DSWP:    Pre loop env 7, producer:	  %512 = sext i32 %216 to i64, !pdg.inst.id !246
DSWP:    Pre loop env 8, producer:	  %511 = add i32 %221, -1, !pdg.inst.id !317
DSWP:    Pre loop env 9, producer:	double* %10
DSWP:    Pre loop env 10, producer:	  %202 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:    Post loop env 11, producer:	  %559 = phi i32 [ %537, %._crit_edge1 ], [ %554, %543 ], !pdg.inst.id !1037
DSWP:    Post loop env 12, producer:	  %558 = phi i32 [ %538, %._crit_edge1 ], [ %553, %543 ], !pdg.inst.id !1043
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @39(i8*, i8*) {
  %3 = bitcast i8* %0 to [96 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to double*
  %10 = load double, double* %9
  %11 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32**
  %13 = load i32*, i32** %12
  %14 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32*
  %16 = load i32, i32* %15
  %17 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 40
  %18 = bitcast i64* %17 to i32**
  %19 = load i32*, i32** %18
  %20 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 48
  %21 = bitcast i64* %20 to i32**
  %22 = load i32*, i32** %21
  %23 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 56
  %24 = load i64, i64* %23
  %25 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 64
  %26 = bitcast i64* %25 to i32*
  %27 = load i32, i32* %26
  %28 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 80
  %29 = bitcast i64* %28 to double**
  %30 = load double*, double** %29
  %31 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 88
  %32 = load i64, i64* %31
  %33 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 32
  %34 = bitcast i64* %33 to i32*
  %35 = getelementptr inbounds [96 x i64], [96 x i64]* %3, i64 0, i64 72
  %36 = bitcast i64* %35 to i32*
  br label %39

37:                                               ; preds = %38
  ret void

38:                                               ; preds = %62
  br label %37

39:                                               ; preds = %2, %62
  %40 = phi i64 [ %65, %62 ], [ %24, %2 ], !pdg.inst.id !30
  %41 = phi i32 [ %64, %62 ], [ %16, %2 ], !pdg.inst.id !31
  %42 = phi i32 [ %63, %62 ], [ %7, %2 ], !pdg.inst.id !32
  %43 = getelementptr inbounds i32, i32* %19, i64 %40, !pdg.inst.id !33
  %44 = load i32, i32* %43, align 4, !tbaa !34, !pdg.inst.id !38
  %45 = load i32, i32* %22, align 4, !tbaa !34, !pdg.inst.id !39
  %46 = icmp eq i32 %44, %45, !pdg.inst.id !40
  br i1 %46, label %47, label %48, !pdg.inst.id !41

47:                                               ; preds = %39
  br label %62, !pdg.inst.id !42

48:                                               ; preds = %39
  %49 = shl i32 %44, 2, !pdg.inst.id !43
  %50 = add i32 %27, %49, !pdg.inst.id !44
  %51 = sext i32 %50 to i64, !pdg.inst.id !45
  %52 = getelementptr inbounds double, double* %30, i64 %51, !pdg.inst.id !46
  %53 = load double, double* %52, align 8, !tbaa !47, !pdg.inst.id !49
  %54 = fcmp fast olt double %53, %10, !pdg.inst.id !50
  %55 = add nsw i32 %41, 1, !pdg.inst.id !51
  %56 = add nsw i32 %42, 1, !pdg.inst.id !52
  %57 = select i1 %54, i32 %56, i32 %55, !pdg.inst.id !53
  %58 = select i1 %54, i32 %56, i32 %42, !pdg.inst.id !54
  %59 = select i1 %54, i32 %41, i32 %55, !pdg.inst.id !55
  %60 = sext i32 %57 to i64, !pdg.inst.id !56
  %61 = getelementptr inbounds i32, i32* %13, i64 %60, !pdg.inst.id !57
  store i32 %44, i32* %61, align 4, !tbaa !34, !pdg.inst.id !58
  br label %62, !pdg.inst.id !59

62:                                               ; preds = %47, %48
  %63 = phi i32 [ %42, %47 ], [ %58, %48 ], !pdg.inst.id !60
  %64 = phi i32 [ %41, %47 ], [ %59, %48 ], !pdg.inst.id !61
  %65 = add nsw i64 %40, 1, !pdg.inst.id !62
  %66 = icmp slt i64 %40, %32, !pdg.inst.id !63
  store i32 %64, i32* %34
  store i32 %63, i32* %36
  br i1 %66, label %39, label %38, !pdg.inst.id !64
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [96 x i64]
  %15 = bitcast [96 x i64]* %14 to i8*
  %16 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to double*
  %20 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32**
  %22 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32*
  %24 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32*
  %26 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 40
  %27 = bitcast i64* %26 to i32**
  %28 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 48
  %29 = bitcast i64* %28 to i32**
  %30 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 56
  %31 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 64
  %32 = bitcast i64* %31 to i32*
  %33 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 72
  %34 = bitcast i64* %33 to i32*
  %35 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 80
  %36 = bitcast i64* %35 to double**
  %37 = getelementptr inbounds [96 x i64], [96 x i64]* %14, i64 0, i64 88
  %38 = alloca [80 x i64]
  %39 = bitcast [80 x i64]* %38 to i8*
  %40 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 0
  %41 = bitcast i64* %40 to i32**
  %42 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 8
  %43 = bitcast i64* %42 to i32*
  %44 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 16
  %45 = bitcast i64* %44 to i32**
  %46 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 24
  %47 = bitcast i64* %46 to i32**
  %48 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 32
  %49 = bitcast i64* %48 to i32*
  %50 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 40
  %51 = bitcast i64* %50 to i32*
  %52 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 48
  %53 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 56
  %54 = bitcast i64* %53 to i32*
  %55 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 64
  %56 = bitcast i64* %55 to i32*
  %57 = getelementptr inbounds [80 x i64], [80 x i64]* %38, i64 0, i64 72
  %58 = alloca [104 x i64]
  %59 = bitcast [104 x i64]* %58 to i8*
  %60 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 0
  %61 = bitcast i64* %60 to i32*
  %62 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 8
  %63 = bitcast i64* %62 to double*
  %64 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 16
  %65 = bitcast i64* %64 to i32*
  %66 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 24
  %67 = bitcast i64* %66 to i32**
  %68 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 32
  %69 = bitcast i64* %68 to i32*
  %70 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 40
  %71 = bitcast i64* %70 to i32**
  %72 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 48
  %73 = bitcast i64* %72 to i32**
  %74 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 56
  %75 = bitcast i64* %74 to i32*
  %76 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 64
  %77 = bitcast i64* %76 to i32*
  %78 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 72
  %79 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 80
  %80 = bitcast i64* %79 to i32*
  %81 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 88
  %82 = bitcast i64* %81 to double**
  %83 = getelementptr inbounds [104 x i64], [104 x i64]* %58, i64 0, i64 96
  %84 = alloca [64 x i64]
  %85 = bitcast [64 x i64]* %84 to i8*
  %86 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 0
  %87 = bitcast i64* %86 to i32*
  %88 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 8
  %89 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 16
  %90 = bitcast i64* %89 to i32**
  %91 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 24
  %92 = bitcast i64* %91 to i32*
  %93 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 32
  %94 = bitcast i64* %93 to i32**
  %95 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 40
  %96 = bitcast i64* %95 to i32*
  %97 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 48
  %98 = bitcast i64* %97 to i32**
  %99 = getelementptr inbounds [64 x i64], [64 x i64]* %84, i64 0, i64 56
  %100 = alloca [88 x i64]
  %101 = bitcast [88 x i64]* %100 to i8*
  %102 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 0
  %103 = bitcast i64* %102 to i32*
  %104 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 8
  %105 = bitcast i64* %104 to i32*
  %106 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 16
  %107 = bitcast i64* %106 to i32*
  %108 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 24
  %109 = bitcast i64* %108 to i32**
  %110 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 32
  %111 = bitcast i64* %110 to double*
  %112 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 40
  %113 = bitcast i64* %112 to i32**
  %114 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 48
  %115 = bitcast i64* %114 to i32**
  %116 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 56
  %117 = bitcast i64* %116 to i32*
  %118 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 64
  %119 = bitcast i64* %118 to double**
  %120 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 72
  %121 = getelementptr inbounds [88 x i64], [88 x i64]* %100, i64 0, i64 80
  %122 = alloca [64 x i64]
  %123 = bitcast [64 x i64]* %122 to i8*
  %124 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 0
  %125 = bitcast i64* %124 to i32**
  %126 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 8
  %127 = bitcast i64* %126 to i32*
  %128 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 16
  %129 = bitcast i64* %128 to i32**
  %130 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 24
  %131 = bitcast i64* %130 to i32*
  %132 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 32
  %133 = bitcast i64* %132 to i32**
  %134 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 40
  %135 = bitcast i64* %134 to i32*
  %136 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 48
  %137 = getelementptr inbounds [64 x i64], [64 x i64]* %122, i64 0, i64 56
  %138 = alloca [88 x i64]
  %139 = bitcast [88 x i64]* %138 to i8*
  %140 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 0
  %141 = bitcast i64* %140 to i32*
  %142 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 8
  %143 = bitcast i64* %142 to i32*
  %144 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 16
  %145 = bitcast i64* %144 to double*
  %146 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 24
  %147 = bitcast i64* %146 to i32**
  %148 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 32
  %149 = bitcast i64* %148 to i32*
  %150 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 40
  %151 = bitcast i64* %150 to i32**
  %152 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 48
  %153 = bitcast i64* %152 to i32*
  %154 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 56
  %155 = bitcast i64* %154 to i32**
  %156 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 64
  %157 = bitcast i64* %156 to double**
  %158 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 72
  %159 = getelementptr inbounds [88 x i64], [88 x i64]* %138, i64 0, i64 80
  %160 = alloca [72 x i64]
  %161 = bitcast [72 x i64]* %160 to i8*
  %162 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 0
  %163 = bitcast i64* %162 to double**
  %164 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 8
  %165 = bitcast i64* %164 to i32*
  %166 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 16
  %167 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 24
  %168 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 32
  %169 = bitcast i64* %168 to i32*
  %170 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 40
  %171 = bitcast i64* %170 to i32**
  %172 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 48
  %173 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 56
  %174 = bitcast i64* %173 to double*
  %175 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 64
  %176 = bitcast i64* %175 to i32*
  %177 = alloca [184 x i64]
  %178 = bitcast [184 x i64]* %177 to i8*
  %179 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 0
  %180 = bitcast i64* %179 to i32*
  %181 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 8
  %182 = bitcast i64* %181 to i32*
  %183 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 16
  %184 = bitcast i64* %183 to %struct.kdnode**
  %185 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 24
  %186 = bitcast i64* %185 to %struct.kdnode***
  %187 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 32
  %188 = bitcast i64* %187 to i32*
  %189 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 40
  %190 = bitcast i64* %189 to i32**
  %191 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 48
  %192 = bitcast i64* %191 to i32*
  %193 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 56
  %194 = bitcast i64* %193 to i32**
  %195 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 64
  %196 = bitcast i64* %195 to i32*
  %197 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 72
  %198 = bitcast i64* %197 to i32**
  %199 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 80
  %200 = bitcast i64* %199 to i32**
  %201 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 88
  %202 = bitcast i64* %201 to i32**
  %203 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 96
  %204 = bitcast i64* %203 to i32**
  %205 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 104
  %206 = bitcast i64* %205 to i1*
  %207 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 112
  %208 = bitcast i64* %207 to %struct.kdnode**
  %209 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 120
  %210 = bitcast i64* %209 to i32*
  %211 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 128
  %212 = bitcast i64* %211 to i32*
  %213 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 136
  %214 = bitcast i64* %213 to i32**
  %215 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 144
  %216 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 152
  %217 = bitcast i64* %216 to double**
  %218 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 160
  %219 = bitcast i64* %218 to i32**
  %220 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 168
  %221 = bitcast i64* %220 to %struct.kdnode**
  %222 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 176
  %223 = bitcast i64* %222 to i32*
  %224 = add nsw i32 %12, 1, !pdg.inst.id !181
  %225 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %226 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %225, label %231, label %227, !prof !7088, !pdg.inst.id !185

227:                                              ; preds = %13
  %228 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %229 = load i32, i32* @9
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %620, label %237

.loopexit16:                                      ; preds = %641, %605
  %.lcssa88 = phi %struct.kdnode* [ %610, %605 ], [ %640, %641 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %241, %605 ], [ %638, %641 ], !pdg.inst.id !225
  br label %231, !pdg.inst.id !6401

231:                                              ; preds = %.loopexit16, %13
  %232 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %233 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %234 = getelementptr inbounds i32, i32* %232, i64 %226, !pdg.inst.id !187
  %235 = load i32, i32* %234, align 4, !tbaa !7089, !pdg.inst.id !230
  %236 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %233, i64 0, i32 0, !pdg.inst.id !228
  store i32 %235, i32* %236, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %619, !pdg.inst.id !6410

237:                                              ; preds = %227, %605
  %238 = phi i32 [ %614, %605 ], [ %11, %227 ], !pdg.inst.id !162
  %239 = phi %struct.kdnode* [ %610, %605 ], [ %9, %227 ], !pdg.inst.id !142
  %240 = phi i32 [ %613, %605 ], [ %6, %227 ], !pdg.inst.id !83
  %241 = phi i32* [ %617, %605 ], [ %5, %227 ], !pdg.inst.id !81
  %242 = phi i32* [ %616, %605 ], [ %4, %227 ], !pdg.inst.id !79
  %243 = phi i32* [ %615, %605 ], [ %3, %227 ], !pdg.inst.id !77
  %244 = phi i32* [ %241, %605 ], [ %0, %227 ], !pdg.inst.id !53
  %245 = srem i32 %238, %224, !pdg.inst.id !183
  %246 = add nsw i32 %240, 1, !pdg.inst.id !264
  %247 = icmp eq i32 %246, %7, !pdg.inst.id !96
  br i1 %247, label %248, label %315, !prof !7096, !pdg.inst.id !334

248:                                              ; preds = %641, %237
  %.lcssa85 = phi %struct.kdnode* [ %239, %237 ], [ %635, %641 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %240, %237 ], [ %636, %641 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %244, %237 ], [ %639, %641 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %245, %237 ], [ %637, %641 ], !pdg.inst.id !315
  %249 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %250 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %251 = getelementptr inbounds i32, i32* %.lcssa76, i64 %250, !pdg.inst.id !352
  %252 = load i32, i32* %251, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %249, label %253, label %257, !prof !7097, !pdg.inst.id !361

253:                                              ; preds = %248
  %254 = getelementptr inbounds i32, i32* %.lcssa76, i64 %226, !pdg.inst.id !207
  %255 = load i32, i32* %254, align 4, !tbaa !7089, !pdg.inst.id !376
  %256 = icmp slt i32 %252, %255, !pdg.inst.id !374
  br i1 %256, label %272, label %285, !pdg.inst.id !382

257:                                              ; preds = %248
  %258 = mul nsw i32 %252, %12, !pdg.inst.id !166
  %259 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %260 = add i32 %259, %258, !pdg.inst.id !384
  %261 = sext i32 %260 to i64, !pdg.inst.id !389
  %262 = getelementptr inbounds double, double* %10, i64 %261, !pdg.inst.id !144
  %263 = load double, double* %262, align 8, !tbaa !7098, !pdg.inst.id !283
  %264 = getelementptr inbounds i32, i32* %.lcssa76, i64 %226, !pdg.inst.id !205
  %265 = load i32, i32* %264, align 4, !tbaa !7089, !pdg.inst.id !397
  %266 = mul nsw i32 %265, %12, !pdg.inst.id !164
  %267 = add i32 %259, %266, !pdg.inst.id !386
  %268 = sext i32 %267 to i64, !pdg.inst.id !402
  %269 = getelementptr inbounds double, double* %10, i64 %268, !pdg.inst.id !146
  %270 = load double, double* %269, align 8, !tbaa !7098, !pdg.inst.id !405
  %271 = fcmp fast olt double %263, %270, !pdg.inst.id !395
  br i1 %271, label %272, label %287, !prof !7100, !pdg.inst.id !409

272:                                              ; preds = %257, %253
  %273 = phi %struct.kdnode* [ %.lcssa85, %257 ], [ %.lcssa85, %253 ], !pdg.inst.id !342
  %274 = phi i32 [ %265, %257 ], [ %255, %253 ], !pdg.inst.id !378
  %275 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %274, i32* %275, align 8, !tbaa !7093, !pdg.inst.id !413
  %276 = load i32, i32* %251, align 4, !tbaa !7089, !pdg.inst.id !364
  %277 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %278 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %277, i64 0, i32 0, !pdg.inst.id !420
  store i32 %276, i32* %278, align 8, !tbaa !7093, !pdg.inst.id !416
  %279 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %277, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %279, align 8, !tbaa !7102, !pdg.inst.id !423
  %280 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %281 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %280, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %281, align 8, !tbaa !7103, !pdg.inst.id !427
  %282 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %283 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %282, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %283, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %284 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %273, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %282, %struct.kdnode** %284, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %619, !pdg.inst.id !6480

285:                                              ; preds = %253
  %286 = icmp sgt i32 %252, %255, !pdg.inst.id !371
  br i1 %286, label %289, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %285
  br label %302, !pdg.inst.id !6511

287:                                              ; preds = %257
  %288 = fcmp fast ogt double %263, %270, !pdg.inst.id !393
  br i1 %288, label %289, label %302, !pdg.inst.id !437

289:                                              ; preds = %287, %285
  %290 = phi i32* [ %.lcssa76, %287 ], [ %.lcssa76, %285 ], !pdg.inst.id !354
  %291 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %252, i32* %291, align 8, !tbaa !7093, !pdg.inst.id !367
  %292 = getelementptr inbounds i32, i32* %290, i64 %226, !pdg.inst.id !211
  %293 = load i32, i32* %292, align 4, !tbaa !7089, !pdg.inst.id !441
  %294 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %295 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %294, i64 0, i32 0, !pdg.inst.id !447
  store i32 %293, i32* %295, align 8, !tbaa !7093, !pdg.inst.id !443
  %296 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %294, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %296, align 8, !tbaa !7102, !pdg.inst.id !450
  %297 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %298 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %297, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %298, align 8, !tbaa !7103, !pdg.inst.id !454
  %299 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %300 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %299, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %300, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %301 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %299, %struct.kdnode** %301, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %619, !pdg.inst.id !6525

302:                                              ; preds = %._crit_edge9, %287
  %303 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %287 ], !pdg.inst.id !344
  %304 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %252, i32* %304, align 8, !tbaa !7093, !pdg.inst.id !369
  %305 = getelementptr inbounds i32, i32* %.lcssa76, i64 %226, !pdg.inst.id !209
  %306 = load i32, i32* %305, align 4, !tbaa !7089, !pdg.inst.id !465
  %307 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %308 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %307, i64 0, i32 0, !pdg.inst.id !471
  store i32 %306, i32* %308, align 8, !tbaa !7093, !pdg.inst.id !467
  %309 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %307, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %309, align 8, !tbaa !7102, !pdg.inst.id !474
  %310 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %311 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %310, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %311, align 8, !tbaa !7103, !pdg.inst.id !478
  %312 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %313 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %312, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %313, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %314 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %303, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %312, %struct.kdnode** %314, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %619, !pdg.inst.id !6572

315:                                              ; preds = %237
  %316 = add nsw i32 %240, %7, !pdg.inst.id !94
  %317 = sdiv i32 %316, 2, !pdg.inst.id !486
  %318 = icmp eq i32 %245, 0, !pdg.inst.id !327
  %319 = sext i32 %317 to i64, !pdg.inst.id !490
  %320 = getelementptr inbounds i32, i32* %244, i64 %319, !pdg.inst.id !311
  %321 = load i32, i32* %320, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %318, label %351, label %322, !prof !7104, !pdg.inst.id !500

322:                                              ; preds = %315
  %323 = mul nsw i32 %321, %12, !pdg.inst.id !176
  %324 = add nsw i32 %245, -1, !pdg.inst.id !325
  %325 = add i32 %324, %323, !pdg.inst.id !521
  %326 = sext i32 %325 to i64, !pdg.inst.id !526
  %327 = getelementptr inbounds double, double* %10, i64 %326, !pdg.inst.id !148
  %328 = load double, double* %327, align 8, !tbaa !7098, !pdg.inst.id !529
  %329 = sext i32 %240 to i64, !pdg.inst.id !254
  %330 = load i32, i32* @10
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %645, label %332

332:                                              ; preds = %322, %336
  %333 = phi i64 [ %334, %336 ], [ %319, %322 ], !pdg.inst.id !504
  %334 = add nsw i64 %333, -1, !pdg.inst.id !542
  %335 = icmp sgt i64 %333, %329, !pdg.inst.id !535
  br i1 %335, label %336, label %.loopexit1, !prof !7105, !pdg.inst.id !546

336:                                              ; preds = %332
  %337 = getelementptr inbounds i32, i32* %244, i64 %334, !pdg.inst.id !309
  %338 = load i32, i32* %337, align 4, !tbaa !7089, !pdg.inst.id !548
  %339 = mul nsw i32 %338, %12, !pdg.inst.id !174
  %340 = add i32 %324, %339, !pdg.inst.id !523
  %341 = sext i32 %340 to i64, !pdg.inst.id !552
  %342 = getelementptr inbounds double, double* %10, i64 %341, !pdg.inst.id !150
  %343 = load double, double* %342, align 8, !tbaa !7098, !pdg.inst.id !555
  %344 = fcmp fast olt double %343, %328, !pdg.inst.id !533
  br i1 %344, label %._crit_edge8, label %332, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %661, %336
  %.lcssa3 = phi i64 [ %333, %336 ], [ %660, %661 ], !pdg.inst.id !537
  br label %345, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %661, %332
  %.lcssa2 = phi i64 [ %333, %332 ], [ %660, %661 ], !pdg.inst.id !539
  br label %345, !pdg.inst.id !6633

345:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %346 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %347 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %348 = ashr exact i64 %347, 32, !pdg.inst.id !568
  %349 = getelementptr inbounds i32, i32* %244, i64 %348, !pdg.inst.id !303
  %350 = load i32, i32* %349, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %351, !pdg.inst.id !6614

351:                                              ; preds = %345, %315
  %352 = phi i32 [ %350, %345 ], [ %321, %315 ], !pdg.inst.id !509
  %353 = phi i64 [ %348, %345 ], [ %319, %315 ], !pdg.inst.id !502
  %354 = phi i32 [ %346, %345 ], [ %317, %315 ], !pdg.inst.id !488
  %355 = phi double [ %328, %345 ], [ 0.000000e+00, %315 ], !pdg.inst.id !531
  %356 = getelementptr inbounds i32, i32* %244, i64 %353, !pdg.inst.id !307
  %357 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %239, i64 0, i32 0, !pdg.inst.id !238
  store i32 %352, i32* %357, align 8, !tbaa !7093, !pdg.inst.id !575
  %358 = add nsw i32 %240, -1, !pdg.inst.id !262
  %359 = icmp sgt i32 %240, %7, !pdg.inst.id !92
  br i1 %359, label %530, label %360, !prof !7106, !pdg.inst.id !649

360:                                              ; preds = %351
  %361 = add i32 %245, -1, !pdg.inst.id !323
  %362 = sext i32 %240 to i64, !pdg.inst.id !252
  br i1 %318, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %360
  %363 = load i32, i32* @11
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %665, label %419

.preheader11:                                     ; preds = %360
  %365 = load i32, i32* @12
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %681, label %367

367:                                              ; preds = %.preheader11, %384
  %368 = phi i64 [ %387, %384 ], [ %362, %.preheader11 ], !pdg.inst.id !655
  %369 = phi i32 [ %386, %384 ], [ %354, %.preheader11 ], !pdg.inst.id !580
  %370 = phi i32 [ %385, %384 ], [ %358, %.preheader11 ], !pdg.inst.id !627
  %371 = getelementptr inbounds i32, i32* %1, i64 %368, !pdg.inst.id !59
  %372 = load i32, i32* %371, align 4, !tbaa !7089, !pdg.inst.id !673
  %373 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !614
  %374 = icmp eq i32 %372, %373, !pdg.inst.id !678
  br i1 %374, label %._crit_edge2, label %375, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %367
  br label %384, !pdg.inst.id !6674

375:                                              ; preds = %367
  %376 = icmp slt i32 %372, %321, !pdg.inst.id !517
  %377 = add nsw i32 %370, 1, !pdg.inst.id !671
  %378 = add nsw i32 %369, 1, !pdg.inst.id !665
  %379 = select i1 %376, i32 %377, i32 %378, !prof !7108, !pdg.inst.id !685
  %380 = select i1 %376, i32 %377, i32 %370, !prof !7108, !pdg.inst.id !667
  %381 = select i1 %376, i32 %369, i32 %378, !prof !7108, !pdg.inst.id !661
  %382 = sext i32 %379 to i64, !pdg.inst.id !691
  %383 = getelementptr inbounds i32, i32* %241, i64 %382, !pdg.inst.id !271
  store i32 %372, i32* %383, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %384, !pdg.inst.id !6685

384:                                              ; preds = %._crit_edge2, %375
  %385 = phi i32 [ %370, %._crit_edge2 ], [ %380, %375 ], !pdg.inst.id !669
  %386 = phi i32 [ %369, %._crit_edge2 ], [ %381, %375 ], !pdg.inst.id !663
  %387 = add nsw i64 %368, 1, !pdg.inst.id !659
  %388 = icmp slt i64 %368, %226, !pdg.inst.id !191
  br i1 %388, label %367, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %696, %384
  br label %389, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %680, %441
  br label %389, !pdg.inst.id !6697

389:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %359, label %530, label %390, !prof !7106, !pdg.inst.id !647

390:                                              ; preds = %389
  %391 = add i32 %245, -1, !pdg.inst.id !321
  %392 = sext i32 %240 to i64, !pdg.inst.id !250
  br i1 %318, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %390
  %393 = load i32, i32* @13
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %697, label %476

.preheader7:                                      ; preds = %390
  %395 = load i32, i32* @14
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %713, label %397

397:                                              ; preds = %.preheader7, %414
  %398 = phi i64 [ %417, %414 ], [ %392, %.preheader7 ], !pdg.inst.id !706
  %399 = phi i32 [ %416, %414 ], [ %354, %.preheader7 ], !pdg.inst.id !584
  %400 = phi i32 [ %415, %414 ], [ %358, %.preheader7 ], !pdg.inst.id !631
  %401 = getelementptr inbounds i32, i32* %2, i64 %398, !pdg.inst.id !71
  %402 = load i32, i32* %401, align 4, !tbaa !7089, !pdg.inst.id !724
  %403 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !612
  %404 = icmp eq i32 %402, %403, !pdg.inst.id !729
  br i1 %404, label %._crit_edge5, label %405, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %397
  br label %414, !pdg.inst.id !6724

405:                                              ; preds = %397
  %406 = icmp slt i32 %402, %321, !pdg.inst.id !515
  %407 = add nsw i32 %400, 1, !pdg.inst.id !722
  %408 = add nsw i32 %399, 1, !pdg.inst.id !716
  %409 = select i1 %406, i32 %407, i32 %408, !prof !7108, !pdg.inst.id !736
  %410 = select i1 %406, i32 %407, i32 %400, !prof !7108, !pdg.inst.id !718
  %411 = select i1 %406, i32 %399, i32 %408, !prof !7108, !pdg.inst.id !712
  %412 = sext i32 %409 to i64, !pdg.inst.id !742
  %413 = getelementptr inbounds i32, i32* %1, i64 %412, !pdg.inst.id !57
  store i32 %402, i32* %413, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %414, !pdg.inst.id !6735

414:                                              ; preds = %._crit_edge5, %405
  %415 = phi i32 [ %400, %._crit_edge5 ], [ %410, %405 ], !pdg.inst.id !720
  %416 = phi i32 [ %399, %._crit_edge5 ], [ %411, %405 ], !pdg.inst.id !714
  %417 = add nsw i64 %398, 1, !pdg.inst.id !710
  %418 = icmp slt i64 %398, %226, !pdg.inst.id !195
  br i1 %418, label %397, label %.loopexit8, !prof !7109, !pdg.inst.id !751

419:                                              ; preds = %.preheader13, %441
  %420 = phi i64 [ %444, %441 ], [ %362, %.preheader13 ], !pdg.inst.id !653
  %421 = phi i32 [ %443, %441 ], [ %354, %.preheader13 ], !pdg.inst.id !578
  %422 = phi i32 [ %442, %441 ], [ %358, %.preheader13 ], !pdg.inst.id !625
  %423 = getelementptr inbounds i32, i32* %1, i64 %420, !pdg.inst.id !61
  %424 = load i32, i32* %423, align 4, !tbaa !7089, !pdg.inst.id !769
  %425 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !622
  %426 = icmp eq i32 %424, %425, !pdg.inst.id !774
  br i1 %426, label %._crit_edge, label %427, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %419
  br label %441, !pdg.inst.id !6762

427:                                              ; preds = %419
  %428 = mul nsw i32 %424, %12, !pdg.inst.id !172
  %429 = add i32 %361, %428, !pdg.inst.id !651
  %430 = sext i32 %429 to i64, !pdg.inst.id !780
  %431 = getelementptr inbounds double, double* %10, i64 %430, !pdg.inst.id !152
  %432 = load double, double* %431, align 8, !tbaa !7098, !pdg.inst.id !783
  %433 = fcmp fast olt double %432, %355, !pdg.inst.id !606
  %434 = add nsw i32 %421, 1, !pdg.inst.id !761
  %435 = add nsw i32 %422, 1, !pdg.inst.id !767
  %436 = select i1 %433, i32 %435, i32 %434, !prof !7111, !pdg.inst.id !788
  %437 = select i1 %433, i32 %435, i32 %422, !prof !7111, !pdg.inst.id !763
  %438 = select i1 %433, i32 %421, i32 %434, !prof !7111, !pdg.inst.id !757
  %439 = sext i32 %436 to i64, !pdg.inst.id !794
  %440 = getelementptr inbounds i32, i32* %241, i64 %439, !pdg.inst.id !269
  store i32 %424, i32* %440, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %441, !pdg.inst.id !6778

441:                                              ; preds = %._crit_edge, %427
  %442 = phi i32 [ %422, %._crit_edge ], [ %437, %427 ], !pdg.inst.id !765
  %443 = phi i32 [ %421, %._crit_edge ], [ %438, %427 ], !pdg.inst.id !759
  %444 = add nsw i64 %420, 1, !pdg.inst.id !755
  %445 = icmp slt i64 %420, %226, !pdg.inst.id !189
  br i1 %445, label %419, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %728, %414
  br label %446, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %712, %498
  br label %446, !pdg.inst.id !6792

446:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %359, label %530, label %447, !prof !7106, !pdg.inst.id !645

447:                                              ; preds = %446
  %448 = add i32 %245, -1, !pdg.inst.id !319
  %449 = sext i32 %240 to i64, !pdg.inst.id !248
  br i1 %318, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %447
  %450 = load i32, i32* @15
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %729, label %503

.preheader3:                                      ; preds = %447
  %452 = load i32, i32* @16
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %747, label %454

454:                                              ; preds = %.preheader3, %471
  %455 = phi i64 [ %474, %471 ], [ %449, %.preheader3 ], !pdg.inst.id !809
  %456 = phi i32 [ %473, %471 ], [ %354, %.preheader3 ], !pdg.inst.id !588
  %457 = phi i32 [ %472, %471 ], [ %358, %.preheader3 ], !pdg.inst.id !635
  %458 = getelementptr inbounds i32, i32* %243, i64 %455, !pdg.inst.id !299
  %459 = load i32, i32* %458, align 4, !tbaa !7089, !pdg.inst.id !827
  %460 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !610
  %461 = icmp eq i32 %459, %460, !pdg.inst.id !832
  br i1 %461, label %._crit_edge7, label %462, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %454
  br label %471, !pdg.inst.id !6819

462:                                              ; preds = %454
  %463 = icmp slt i32 %459, %321, !pdg.inst.id !513
  %464 = add nsw i32 %457, 1, !pdg.inst.id !825
  %465 = add nsw i32 %456, 1, !pdg.inst.id !819
  %466 = select i1 %463, i32 %464, i32 %465, !prof !7108, !pdg.inst.id !839
  %467 = select i1 %463, i32 %464, i32 %457, !prof !7108, !pdg.inst.id !821
  %468 = select i1 %463, i32 %456, i32 %465, !prof !7108, !pdg.inst.id !815
  %469 = sext i32 %466 to i64, !pdg.inst.id !845
  %470 = getelementptr inbounds i32, i32* %2, i64 %469, !pdg.inst.id !69
  store i32 %459, i32* %470, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %471, !pdg.inst.id !6830

471:                                              ; preds = %._crit_edge7, %462
  %472 = phi i32 [ %457, %._crit_edge7 ], [ %467, %462 ], !pdg.inst.id !823
  %473 = phi i32 [ %456, %._crit_edge7 ], [ %468, %462 ], !pdg.inst.id !817
  %474 = add nsw i64 %455, 1, !pdg.inst.id !813
  %475 = icmp slt i64 %455, %226, !pdg.inst.id !199
  br i1 %475, label %454, label %.loopexit4, !prof !7109, !pdg.inst.id !858

476:                                              ; preds = %.preheader9, %498
  %477 = phi i64 [ %501, %498 ], [ %392, %.preheader9 ], !pdg.inst.id !704
  %478 = phi i32 [ %500, %498 ], [ %354, %.preheader9 ], !pdg.inst.id !582
  %479 = phi i32 [ %499, %498 ], [ %358, %.preheader9 ], !pdg.inst.id !629
  %480 = getelementptr inbounds i32, i32* %2, i64 %477, !pdg.inst.id !73
  %481 = load i32, i32* %480, align 4, !tbaa !7089, !pdg.inst.id !876
  %482 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !620
  %483 = icmp eq i32 %481, %482, !pdg.inst.id !881
  br i1 %483, label %._crit_edge4, label %484, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %476
  br label %498, !pdg.inst.id !6857

484:                                              ; preds = %476
  %485 = mul nsw i32 %481, %12, !pdg.inst.id !170
  %486 = add i32 %391, %485, !pdg.inst.id !702
  %487 = sext i32 %486 to i64, !pdg.inst.id !887
  %488 = getelementptr inbounds double, double* %10, i64 %487, !pdg.inst.id !154
  %489 = load double, double* %488, align 8, !tbaa !7098, !pdg.inst.id !890
  %490 = fcmp fast olt double %489, %355, !pdg.inst.id !604
  %491 = add nsw i32 %478, 1, !pdg.inst.id !868
  %492 = add nsw i32 %479, 1, !pdg.inst.id !874
  %493 = select i1 %490, i32 %492, i32 %491, !prof !7111, !pdg.inst.id !895
  %494 = select i1 %490, i32 %492, i32 %479, !prof !7111, !pdg.inst.id !870
  %495 = select i1 %490, i32 %478, i32 %491, !prof !7111, !pdg.inst.id !864
  %496 = sext i32 %493 to i64, !pdg.inst.id !901
  %497 = getelementptr inbounds i32, i32* %1, i64 %496, !pdg.inst.id !55
  store i32 %481, i32* %497, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %498, !pdg.inst.id !6873

498:                                              ; preds = %._crit_edge4, %484
  %499 = phi i32 [ %479, %._crit_edge4 ], [ %494, %484 ], !pdg.inst.id !872
  %500 = phi i32 [ %478, %._crit_edge4 ], [ %495, %484 ], !pdg.inst.id !866
  %501 = add nsw i64 %477, 1, !pdg.inst.id !862
  %502 = icmp slt i64 %477, %226, !pdg.inst.id !193
  br i1 %502, label %476, label %.loopexit10, !prof !7112, !pdg.inst.id !910

503:                                              ; preds = %.preheader5, %525
  %504 = phi i64 [ %528, %525 ], [ %449, %.preheader5 ], !pdg.inst.id !807
  %505 = phi i32 [ %527, %525 ], [ %354, %.preheader5 ], !pdg.inst.id !586
  %506 = phi i32 [ %526, %525 ], [ %358, %.preheader5 ], !pdg.inst.id !633
  %507 = getelementptr inbounds i32, i32* %243, i64 %504, !pdg.inst.id !297
  %508 = load i32, i32* %507, align 4, !tbaa !7089, !pdg.inst.id !928
  %509 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !618
  %510 = icmp eq i32 %508, %509, !pdg.inst.id !933
  br i1 %510, label %._crit_edge6, label %511, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %503
  br label %525, !pdg.inst.id !6899

511:                                              ; preds = %503
  %512 = mul nsw i32 %508, %12, !pdg.inst.id !168
  %513 = add i32 %448, %512, !pdg.inst.id !805
  %514 = sext i32 %513 to i64, !pdg.inst.id !939
  %515 = getelementptr inbounds double, double* %10, i64 %514, !pdg.inst.id !156
  %516 = load double, double* %515, align 8, !tbaa !7098, !pdg.inst.id !942
  %517 = fcmp fast olt double %516, %355, !pdg.inst.id !602
  %518 = add nsw i32 %505, 1, !pdg.inst.id !920
  %519 = add nsw i32 %506, 1, !pdg.inst.id !926
  %520 = select i1 %517, i32 %519, i32 %518, !prof !7111, !pdg.inst.id !947
  %521 = select i1 %517, i32 %519, i32 %506, !prof !7111, !pdg.inst.id !922
  %522 = select i1 %517, i32 %505, i32 %518, !prof !7111, !pdg.inst.id !916
  %523 = sext i32 %520 to i64, !pdg.inst.id !953
  %524 = getelementptr inbounds i32, i32* %2, i64 %523, !pdg.inst.id !67
  store i32 %508, i32* %524, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %525, !pdg.inst.id !6915

525:                                              ; preds = %._crit_edge6, %511
  %526 = phi i32 [ %506, %._crit_edge6 ], [ %521, %511 ], !pdg.inst.id !924
  %527 = phi i32 [ %505, %._crit_edge6 ], [ %522, %511 ], !pdg.inst.id !918
  %528 = add nsw i64 %504, 1, !pdg.inst.id !914
  %529 = icmp slt i64 %504, %226, !pdg.inst.id !197
  br i1 %529, label %503, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %764, %471
  %.lcssa68 = phi i32 [ %472, %471 ], [ %763, %764 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %473, %471 ], [ %762, %764 ], !pdg.inst.id !854
  br label %530, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %746, %525
  %.lcssa66 = phi i32 [ %526, %525 ], [ %744, %746 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %527, %525 ], [ %745, %746 ], !pdg.inst.id !962
  br label %530, !pdg.inst.id !6933

530:                                              ; preds = %.loopexit6, %.loopexit4, %351, %389, %446
  %531 = phi i32 [ %358, %446 ], [ %358, %389 ], [ %358, %351 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %532 = phi i32 [ %354, %446 ], [ %354, %389 ], [ %354, %351 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %228, label %533, label %588, !prof !7106, !pdg.inst.id !221

533:                                              ; preds = %530
  br i1 %359, label %.loopexit15, label %534, !pdg.inst.id !643

534:                                              ; preds = %533
  %535 = add i32 %245, -1, !pdg.inst.id !317
  %536 = sext i32 %240 to i64, !pdg.inst.id !246
  br i1 %318, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %534
  %537 = load i32, i32* @17
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %765, label %561

.preheader:                                       ; preds = %534
  br label %539, !pdg.inst.id !6944

539:                                              ; preds = %.preheader, %556
  %540 = phi i64 [ %559, %556 ], [ %536, %.preheader ], !pdg.inst.id !980
  %541 = phi i32 [ %558, %556 ], [ %354, %.preheader ], !pdg.inst.id !592
  %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
  %543 = getelementptr inbounds i32, i32* %242, i64 %540, !pdg.inst.id !287
  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
  %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
  %546 = icmp eq i32 %544, %545, !pdg.inst.id !1003
  br i1 %546, label %._crit_edge3, label %547, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %539
  br label %556, !pdg.inst.id !6965

547:                                              ; preds = %539
  %548 = icmp slt i32 %544, %321, !pdg.inst.id !511
  %549 = add nsw i32 %542, 1, !pdg.inst.id !996
  %550 = add nsw i32 %541, 1, !pdg.inst.id !990
  %551 = select i1 %548, i32 %549, i32 %550, !pdg.inst.id !1010
  %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
  %553 = select i1 %548, i32 %541, i32 %550, !pdg.inst.id !986
  %554 = sext i32 %551 to i64, !pdg.inst.id !1016
  %555 = getelementptr inbounds i32, i32* %243, i64 %554, !pdg.inst.id !291
  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %556, !pdg.inst.id !6976

556:                                              ; preds = %._crit_edge3, %547
  %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
  %558 = phi i32 [ %541, %._crit_edge3 ], [ %553, %547 ], !pdg.inst.id !988
  %559 = add nsw i64 %540, 1, !pdg.inst.id !984
  %560 = icmp slt i64 %540, %226, !pdg.inst.id !203
  br i1 %560, label %539, label %.loopexit, !pdg.inst.id !1029

561:                                              ; preds = %.preheader1, %583
  %562 = phi i64 [ %586, %583 ], [ %536, %.preheader1 ], !pdg.inst.id !978
  %563 = phi i32 [ %585, %583 ], [ %354, %.preheader1 ], !pdg.inst.id !590
  %564 = phi i32 [ %584, %583 ], [ %358, %.preheader1 ], !pdg.inst.id !637
  %565 = getelementptr inbounds i32, i32* %242, i64 %562, !pdg.inst.id !285
  %566 = load i32, i32* %565, align 4, !tbaa !7089, !pdg.inst.id !1047
  %567 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !616
  %568 = icmp eq i32 %566, %567, !pdg.inst.id !1053
  br i1 %568, label %._crit_edge1, label %569, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %561
  br label %583, !pdg.inst.id !7001

569:                                              ; preds = %561
  %570 = shl i32 %566, 2, !pdg.inst.id !1051
  %571 = add i32 %535, %570, !pdg.inst.id !976
  %572 = sext i32 %571 to i64, !pdg.inst.id !1059
  %573 = getelementptr inbounds double, double* %10, i64 %572, !pdg.inst.id !158
  %574 = load double, double* %573, align 8, !tbaa !7098, !pdg.inst.id !1062
  %575 = fcmp fast olt double %574, %355, !pdg.inst.id !600
  %576 = add nsw i32 %563, 1, !pdg.inst.id !1039
  %577 = add nsw i32 %564, 1, !pdg.inst.id !1045
  %578 = select i1 %575, i32 %577, i32 %576, !pdg.inst.id !1067
  %579 = select i1 %575, i32 %577, i32 %564, !pdg.inst.id !1041
  %580 = select i1 %575, i32 %563, i32 %576, !pdg.inst.id !1035
  %581 = sext i32 %578 to i64, !pdg.inst.id !1073
  %582 = getelementptr inbounds i32, i32* %243, i64 %581, !pdg.inst.id !289
  store i32 %566, i32* %582, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %583, !pdg.inst.id !7017

583:                                              ; preds = %._crit_edge1, %569
  %584 = phi i32 [ %564, %._crit_edge1 ], [ %579, %569 ], !pdg.inst.id !1043
  %585 = phi i32 [ %563, %._crit_edge1 ], [ %580, %569 ], !pdg.inst.id !1037
  %586 = add nsw i64 %562, 1, !pdg.inst.id !1033
  %587 = icmp slt i64 %562, %226, !pdg.inst.id !201
  br i1 %587, label %561, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %556
  %.lcssa72 = phi i32 [ %557, %556 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %558, %556 ], !pdg.inst.id !1025
  br label %588, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %782, %583
  %.lcssa70 = phi i32 [ %584, %583 ], [ %781, %782 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %585, %583 ], [ %780, %782 ], !pdg.inst.id !1082
  br label %588, !pdg.inst.id !7035

588:                                              ; preds = %.loopexit2, %.loopexit, %530
  %589 = phi i32 [ %531, %530 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %590 = phi i32 [ %532, %530 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %591 = icmp slt i32 %589, %240, !pdg.inst.id !258
  br i1 %591, label %603, label %592, !prof !7106, !pdg.inst.id !1096

592:                                              ; preds = %588
  %593 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %594 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %593, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %594, align 8, !tbaa !7102, !pdg.inst.id !1100
  %595 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %596 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %595, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %596, align 8, !tbaa !7103, !pdg.inst.id !1104
  %597 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %598 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %597, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %598, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %599 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %239, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %597, %struct.kdnode** %599, align 8, !tbaa !7102, !pdg.inst.id !1108
  %600 = add nsw i32 %245, 1, !pdg.inst.id !329
  br i1 %228, label %601, label %602, !prof !7106, !pdg.inst.id !219

601:                                              ; preds = %592
  tail call fastcc void @buildkdtree(i32* %241, i32* %1, i32* %2, i32* %243, i32* nonnull %244, i32* %242, i32 %240, i32 %589, %struct.kdnode** nonnull %8, %struct.kdnode* %597, double* %10, i32 %600, i32 4), !pdg.inst.id !65
  br label %603, !pdg.inst.id !7059

602:                                              ; preds = %592
  tail call fastcc void @buildkdtree(i32* %241, i32* %1, i32* %2, i32* nonnull %244, i32* %242, i32* %243, i32 %240, i32 %589, %struct.kdnode** nonnull %8, %struct.kdnode* %597, double* %10, i32 %600, i32 %12), !pdg.inst.id !63
  br label %603, !pdg.inst.id !7062

603:                                              ; preds = %588, %601, %602
  %604 = icmp sgt i32 %590, %354, !pdg.inst.id !598
  br i1 %604, label %605, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

605:                                              ; preds = %603
  %606 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %607 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %606, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %607, align 8, !tbaa !7102, !pdg.inst.id !1120
  %608 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %609 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %608, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %609, align 8, !tbaa !7103, !pdg.inst.id !1124
  %610 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %611 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %610, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %611, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %612 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %239, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %610, %struct.kdnode** %612, align 8, !tbaa !7103, !pdg.inst.id !1128
  %613 = add nsw i32 %354, 1, !pdg.inst.id !596
  %614 = add nsw i32 %245, 1, !pdg.inst.id !331
  %615 = select i1 %228, i32* %243, i32* %244, !prof !7106, !pdg.inst.id !217
  %616 = select i1 %228, i32* %244, i32* %242, !prof !7106, !pdg.inst.id !215
  %617 = select i1 %228, i32* %242, i32* %243, !prof !7106, !pdg.inst.id !213
  %618 = icmp eq i32 %613, %7, !pdg.inst.id !89
  br i1 %618, label %.loopexit16, label %237, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %641, %641, %603, %533
  br label %619, !pdg.inst.id !7078

619:                                              ; preds = %.loopexit15, %289, %302, %272, %231
  ret void, !pdg.inst.id !7115

620:                                              ; preds = %227
  store i32 1, i32* @9
  store i32 %12, i32* %180
  store i32 %11, i32* %182
  store %struct.kdnode* %9, %struct.kdnode** %184
  store %struct.kdnode** %8, %struct.kdnode*** %186
  store i32 %6, i32* %188
  store i32* %5, i32** %190
  store i32 %7, i32* %192
  store i32* %0, i32** %194
  store i32 %224, i32* %196
  store i32* %2, i32** %198
  store i32* %1, i32** %200
  store i32* %3, i32** %202
  store i32* %4, i32** %204
  store i1 %228, i1* %206
  store i64 %226, i64* %215
  store double* %10, double** %217
  %621 = alloca [1 x i8*]
  %622 = getelementptr inbounds [1 x i8*], [1 x i8*]* %621, i64 0, i64 0
  %623 = bitcast i8** %622 to void (i8*, i8*)**
  store void (i8*, i8*)* @32, void (i8*, i8*)** %623
  %624 = bitcast [1 x i8*]* %621 to i8*
  %625 = alloca [8 x i64]
  %626 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 0
  store i64 64, i64* %626
  %627 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 1
  store i64 64, i64* %627
  %628 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 2
  store i64 64, i64* %628
  %629 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 3
  store i64 64, i64* %629
  %630 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 4
  store i64 64, i64* %630
  %631 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 5
  store i64 64, i64* %631
  %632 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 6
  store i64 64, i64* %632
  %633 = getelementptr inbounds [8 x i64], [8 x i64]* %625, i64 0, i64 7
  store i64 64, i64* %633
  %634 = bitcast [8 x i64]* %625 to i64*
  call void @stageDispatcher(i8* %178, i64* %634, i8* %624, i64 1, i64 8)
  %635 = load %struct.kdnode*, %struct.kdnode** %208
  %636 = load i32, i32* %210
  %637 = load i32, i32* %212
  %638 = load i32*, i32** %214
  %639 = load i32*, i32** %219
  %640 = load %struct.kdnode*, %struct.kdnode** %221
  br label %641

641:                                              ; preds = %620
  %642 = getelementptr inbounds [184 x i64], [184 x i64]* %177, i64 0, i64 176
  %643 = load i64, i64* %642
  %644 = trunc i64 %643 to i32
  store i32 0, i32* @9
  switch i32 %644, label %248 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

645:                                              ; preds = %322
  store i32 1, i32* @10
  store double* %10, double** %163
  store i32 %324, i32* %165
  store i64 %329, i64* %167
  store i32 %12, i32* %169
  store i32* %244, i32** %171
  store i64 %319, i64* %172
  store double %328, double* %174
  %646 = alloca [1 x i8*]
  %647 = getelementptr inbounds [1 x i8*], [1 x i8*]* %646, i64 0, i64 0
  %648 = bitcast i8** %647 to void (i8*, i8*)**
  store void (i8*, i8*)* @33, void (i8*, i8*)** %648
  %649 = bitcast [1 x i8*]* %646 to i8*
  %650 = alloca [8 x i64]
  %651 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 0
  store i64 64, i64* %651
  %652 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 1
  store i64 64, i64* %652
  %653 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 2
  store i64 64, i64* %653
  %654 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 3
  store i64 64, i64* %654
  %655 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 4
  store i64 64, i64* %655
  %656 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 5
  store i64 64, i64* %656
  %657 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 6
  store i64 64, i64* %657
  %658 = getelementptr inbounds [8 x i64], [8 x i64]* %650, i64 0, i64 7
  store i64 64, i64* %658
  %659 = bitcast [8 x i64]* %650 to i64*
  call void @stageDispatcher(i8* %161, i64* %659, i8* %649, i64 1, i64 8)
  %660 = load i64, i64* %166
  br label %661

661:                                              ; preds = %645
  %662 = getelementptr inbounds [72 x i64], [72 x i64]* %160, i64 0, i64 64
  %663 = load i64, i64* %662
  %664 = trunc i64 %663 to i32
  store i32 0, i32* @10
  switch i32 %664, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

665:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %141
  store i32 %358, i32* %143
  store double %355, double* %145
  store i32* %1, i32** %147
  store i32 %354, i32* %149
  store i32* %356, i32** %151
  store i32 %361, i32* %153
  store i32* %241, i32** %155
  store double* %10, double** %157
  store i64 %362, i64* %158
  store i64 %226, i64* %159
  %666 = alloca [1 x i8*]
  %667 = getelementptr inbounds [1 x i8*], [1 x i8*]* %666, i64 0, i64 0
  %668 = bitcast i8** %667 to void (i8*, i8*)**
  store void (i8*, i8*)* @34, void (i8*, i8*)** %668
  %669 = bitcast [1 x i8*]* %666 to i8*
  %670 = alloca [8 x i64]
  %671 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 0
  store i64 64, i64* %671
  %672 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 1
  store i64 64, i64* %672
  %673 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 2
  store i64 64, i64* %673
  %674 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 3
  store i64 64, i64* %674
  %675 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 4
  store i64 64, i64* %675
  %676 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 5
  store i64 64, i64* %676
  %677 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 6
  store i64 64, i64* %677
  %678 = getelementptr inbounds [8 x i64], [8 x i64]* %670, i64 0, i64 7
  store i64 64, i64* %678
  %679 = bitcast [8 x i64]* %670 to i64*
  call void @stageDispatcher(i8* %139, i64* %679, i8* %669, i64 1, i64 8)
  br label %680

680:                                              ; preds = %665
  store i32 0, i32* @11
  br label %.loopexit14

681:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %241, i32** %125
  store i32 %358, i32* %127
  store i32* %356, i32** %129
  store i32 %354, i32* %131
  store i32* %1, i32** %133
  store i32 %321, i32* %135
  store i64 %226, i64* %136
  store i64 %362, i64* %137
  %682 = alloca [1 x i8*]
  %683 = getelementptr inbounds [1 x i8*], [1 x i8*]* %682, i64 0, i64 0
  %684 = bitcast i8** %683 to void (i8*, i8*)**
  store void (i8*, i8*)* @35, void (i8*, i8*)** %684
  %685 = bitcast [1 x i8*]* %682 to i8*
  %686 = alloca [8 x i64]
  %687 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 0
  store i64 64, i64* %687
  %688 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 1
  store i64 64, i64* %688
  %689 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 2
  store i64 64, i64* %689
  %690 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 3
  store i64 64, i64* %690
  %691 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 4
  store i64 64, i64* %691
  %692 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 5
  store i64 64, i64* %692
  %693 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 6
  store i64 64, i64* %693
  %694 = getelementptr inbounds [8 x i64], [8 x i64]* %686, i64 0, i64 7
  store i64 64, i64* %694
  %695 = bitcast [8 x i64]* %686 to i64*
  call void @stageDispatcher(i8* %123, i64* %695, i8* %685, i64 1, i64 8)
  br label %696

696:                                              ; preds = %681
  store i32 0, i32* @12
  br label %.loopexit12

697:                                              ; preds = %.preheader9
  store i32 1, i32* @13
  store i32 %12, i32* %103
  store i32 %358, i32* %105
  store i32 %354, i32* %107
  store i32* %1, i32** %109
  store double %355, double* %111
  store i32* %356, i32** %113
  store i32* %2, i32** %115
  store i32 %391, i32* %117
  store double* %10, double** %119
  store i64 %392, i64* %120
  store i64 %226, i64* %121
  %698 = alloca [1 x i8*]
  %699 = getelementptr inbounds [1 x i8*], [1 x i8*]* %698, i64 0, i64 0
  %700 = bitcast i8** %699 to void (i8*, i8*)**
  store void (i8*, i8*)* @36, void (i8*, i8*)** %700
  %701 = bitcast [1 x i8*]* %698 to i8*
  %702 = alloca [8 x i64]
  %703 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 0
  store i64 64, i64* %703
  %704 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 1
  store i64 64, i64* %704
  %705 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 2
  store i64 64, i64* %705
  %706 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 3
  store i64 64, i64* %706
  %707 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 4
  store i64 64, i64* %707
  %708 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 5
  store i64 64, i64* %708
  %709 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 6
  store i64 64, i64* %709
  %710 = getelementptr inbounds [8 x i64], [8 x i64]* %702, i64 0, i64 7
  store i64 64, i64* %710
  %711 = bitcast [8 x i64]* %702 to i64*
  call void @stageDispatcher(i8* %101, i64* %711, i8* %701, i64 1, i64 8)
  br label %712

712:                                              ; preds = %697
  store i32 0, i32* @13
  br label %.loopexit10

713:                                              ; preds = %.preheader7
  store i32 1, i32* @14
  store i32 %358, i32* %87
  store i64 %392, i64* %88
  store i32* %356, i32** %90
  store i32 %354, i32* %92
  store i32* %1, i32** %94
  store i32 %321, i32* %96
  store i32* %2, i32** %98
  store i64 %226, i64* %99
  %714 = alloca [1 x i8*]
  %715 = getelementptr inbounds [1 x i8*], [1 x i8*]* %714, i64 0, i64 0
  %716 = bitcast i8** %715 to void (i8*, i8*)**
  store void (i8*, i8*)* @37, void (i8*, i8*)** %716
  %717 = bitcast [1 x i8*]* %714 to i8*
  %718 = alloca [8 x i64]
  %719 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 0
  store i64 64, i64* %719
  %720 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 1
  store i64 64, i64* %720
  %721 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 2
  store i64 64, i64* %721
  %722 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 3
  store i64 64, i64* %722
  %723 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 4
  store i64 64, i64* %723
  %724 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 5
  store i64 64, i64* %724
  %725 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 6
  store i64 64, i64* %725
  %726 = getelementptr inbounds [8 x i64], [8 x i64]* %718, i64 0, i64 7
  store i64 64, i64* %726
  %727 = bitcast [8 x i64]* %718 to i64*
  call void @stageDispatcher(i8* %85, i64* %727, i8* %717, i64 1, i64 8)
  br label %728

728:                                              ; preds = %713
  store i32 0, i32* @14
  br label %.loopexit8

729:                                              ; preds = %.preheader5
  store i32 1, i32* @15
  store i32 %358, i32* %61
  store double %355, double* %63
  store i32 %354, i32* %65
  store i32* %243, i32** %67
  store i32 %12, i32* %69
  store i32* %2, i32** %71
  store i32* %356, i32** %73
  store i32 %448, i32* %75
  store i64 %226, i64* %78
  store double* %10, double** %82
  store i64 %449, i64* %83
  %730 = alloca [1 x i8*]
  %731 = getelementptr inbounds [1 x i8*], [1 x i8*]* %730, i64 0, i64 0
  %732 = bitcast i8** %731 to void (i8*, i8*)**
  store void (i8*, i8*)* @38, void (i8*, i8*)** %732
  %733 = bitcast [1 x i8*]* %730 to i8*
  %734 = alloca [8 x i64]
  %735 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 0
  store i64 64, i64* %735
  %736 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 1
  store i64 64, i64* %736
  %737 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 2
  store i64 64, i64* %737
  %738 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 3
  store i64 64, i64* %738
  %739 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 4
  store i64 64, i64* %739
  %740 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 5
  store i64 64, i64* %740
  %741 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 6
  store i64 64, i64* %741
  %742 = getelementptr inbounds [8 x i64], [8 x i64]* %734, i64 0, i64 7
  store i64 64, i64* %742
  %743 = bitcast [8 x i64]* %734 to i64*
  call void @stageDispatcher(i8* %59, i64* %743, i8* %733, i64 1, i64 8)
  %744 = load i32, i32* %77
  %745 = load i32, i32* %80
  br label %746

746:                                              ; preds = %729
  store i32 0, i32* @15
  br label %.loopexit6

747:                                              ; preds = %.preheader3
  store i32 1, i32* @16
  store i32* %356, i32** %41
  store i32 %354, i32* %43
  store i32* %243, i32** %45
  store i32* %2, i32** %47
  store i32 %321, i32* %49
  store i32 %358, i32* %51
  store i64 %449, i64* %52
  store i64 %226, i64* %57
  %748 = alloca [1 x i8*]
  %749 = getelementptr inbounds [1 x i8*], [1 x i8*]* %748, i64 0, i64 0
  %750 = bitcast i8** %749 to void (i8*, i8*)**
  store void (i8*, i8*)* @39, void (i8*, i8*)** %750
  %751 = bitcast [1 x i8*]* %748 to i8*
  %752 = alloca [8 x i64]
  %753 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 0
  store i64 64, i64* %753
  %754 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 1
  store i64 64, i64* %754
  %755 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 2
  store i64 64, i64* %755
  %756 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 3
  store i64 64, i64* %756
  %757 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 4
  store i64 64, i64* %757
  %758 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 5
  store i64 64, i64* %758
  %759 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 6
  store i64 64, i64* %759
  %760 = getelementptr inbounds [8 x i64], [8 x i64]* %752, i64 0, i64 7
  store i64 64, i64* %760
  %761 = bitcast [8 x i64]* %752 to i64*
  call void @stageDispatcher(i8* %39, i64* %761, i8* %751, i64 1, i64 8)
  %762 = load i32, i32* %54
  %763 = load i32, i32* %56
  br label %764

764:                                              ; preds = %747
  store i32 0, i32* @16
  br label %.loopexit4

765:                                              ; preds = %.preheader1
  store i32 1, i32* @17
  store i32 %358, i32* %17
  store double %355, double* %19
  store i32* %243, i32** %21
  store i32 %354, i32* %23
  store i32* %242, i32** %27
  store i32* %356, i32** %29
  store i64 %536, i64* %30
  store i32 %535, i32* %32
  store double* %10, double** %36
  store i64 %226, i64* %37
  %766 = alloca [1 x i8*]
  %767 = getelementptr inbounds [1 x i8*], [1 x i8*]* %766, i64 0, i64 0
  %768 = bitcast i8** %767 to void (i8*, i8*)**
  store void (i8*, i8*)* @40, void (i8*, i8*)** %768
  %769 = bitcast [1 x i8*]* %766 to i8*
  %770 = alloca [8 x i64]
  %771 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 0
  store i64 64, i64* %771
  %772 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 1
  store i64 64, i64* %772
  %773 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 2
  store i64 64, i64* %773
  %774 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 3
  store i64 64, i64* %774
  %775 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 4
  store i64 64, i64* %775
  %776 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 5
  store i64 64, i64* %776
  %777 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 6
  store i64 64, i64* %777
  %778 = getelementptr inbounds [8 x i64], [8 x i64]* %770, i64 0, i64 7
  store i64 64, i64* %778
  %779 = bitcast [8 x i64]* %770 to i64*
  call void @stageDispatcher(i8* %15, i64* %779, i8* %769, i64 1, i64 8)
  %780 = load i32, i32* %25
  %781 = load i32, i32* %34
  br label %782

782:                                              ; preds = %765
  store i32 0, i32* @17
  br label %.loopexit2
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "buildkdtree"
Parallelizer:  Loop 27 = "  %543 = getelementptr inbounds i32, i32* %242, i64 %540, !pdg.inst.id !287"
Parallelizer:  Nesting level = 2
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %543 = getelementptr inbounds i32, i32* %242, i64 %540, !pdg.inst.id !287
DSWP:       %555 = getelementptr inbounds i32, i32* %243, i64 %554, !pdg.inst.id !291
DSWP:       %554 = sext i32 %551 to i64, !pdg.inst.id !1016
DSWP:       %558 = phi i32 [ %541, %._crit_edge3 ], [ %553, %547 ], !pdg.inst.id !988
DSWP:       store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:       %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:       %550 = add nsw i32 %541, 1, !pdg.inst.id !990
DSWP:       %551 = select i1 %548, i32 %549, i32 %550, !pdg.inst.id !1010
DSWP:       %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:       %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:       br label %556, !pdg.inst.id !6965
DSWP:       %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:       %549 = add nsw i32 %542, 1, !pdg.inst.id !996
DSWP:       br label %556, !pdg.inst.id !6976
DSWP:       %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
DSWP:       %546 = icmp eq i32 %544, %545, !pdg.inst.id !1003
DSWP:       br i1 %546, label %._crit_edge3, label %547, !pdg.inst.id !1006
DSWP:       %548 = icmp slt i32 %544, %321, !pdg.inst.id !511
DSWP:       %541 = phi i32 [ %558, %556 ], [ %354, %.preheader ], !pdg.inst.id !592
DSWP:       %553 = select i1 %548, i32 %541, i32 %550, !pdg.inst.id !986
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %543 = getelementptr inbounds i32, i32* %242, i64 %540, !pdg.inst.id !287
DSWP:       %555 = getelementptr inbounds i32, i32* %243, i64 %554, !pdg.inst.id !291
DSWP:       %554 = sext i32 %551 to i64, !pdg.inst.id !1016
DSWP:       %558 = phi i32 [ %541, %._crit_edge3 ], [ %553, %547 ], !pdg.inst.id !988
DSWP:       store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:       %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:       %550 = add nsw i32 %541, 1, !pdg.inst.id !990
DSWP:       %551 = select i1 %548, i32 %549, i32 %550, !pdg.inst.id !1010
DSWP:       %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:       %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:       br label %556, !pdg.inst.id !6965
DSWP:       %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:       %549 = add nsw i32 %542, 1, !pdg.inst.id !996
DSWP:       br label %556, !pdg.inst.id !6976
DSWP:       %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
DSWP:       %546 = icmp eq i32 %544, %545, !pdg.inst.id !1003
DSWP:       br i1 %546, label %._crit_edge3, label %547, !pdg.inst.id !1006
DSWP:       %548 = icmp slt i32 %544, %321, !pdg.inst.id !511
DSWP:       %541 = phi i32 [ %558, %556 ], [ %354, %.preheader ], !pdg.inst.id !592
DSWP:       %553 = select i1 %548, i32 %541, i32 %550, !pdg.inst.id !986
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 20
DSWP:     	  %543 = getelementptr inbounds i32, i32* %242, i64 %540, !pdg.inst.id !287
DSWP:     	  %555 = getelementptr inbounds i32, i32* %243, i64 %554, !pdg.inst.id !291
DSWP:     	  %554 = sext i32 %551 to i64, !pdg.inst.id !1016
DSWP:     	  %558 = phi i32 [ %541, %._crit_edge3 ], [ %553, %547 ], !pdg.inst.id !988
DSWP:     	  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	  %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:     	  %550 = add nsw i32 %541, 1, !pdg.inst.id !990
DSWP:     	  %551 = select i1 %548, i32 %549, i32 %550, !pdg.inst.id !1010
DSWP:     	  %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:     	  %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:     	  br label %556, !pdg.inst.id !6965
DSWP:     	  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	  %549 = add nsw i32 %542, 1, !pdg.inst.id !996
DSWP:     	  br label %556, !pdg.inst.id !6976
DSWP:     	  %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
DSWP:     	  %546 = icmp eq i32 %544, %545, !pdg.inst.id !1003
DSWP:     	  br i1 %546, label %._crit_edge3, label %547, !pdg.inst.id !1006
DSWP:     	  %548 = icmp slt i32 %544, %321, !pdg.inst.id !511
DSWP:     	  %541 = phi i32 [ %558, %556 ], [ %354, %.preheader ], !pdg.inst.id !592
DSWP:     	  %553 = select i1 %548, i32 %541, i32 %550, !pdg.inst.id !986
DSWP:     External nodes: 2
DSWP:     	  %540 = phi i64 [ %559, %556 ], [ %536, %.preheader ], !pdg.inst.id !980
DSWP:     	  br i1 %560, label %539, label %.loopexit, !pdg.inst.id !1029
DSWP:     Edges: 51
DSWP:     	From:	  %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:     	To:	  %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	To:	  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	To:	  %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:     	To:	  %546 = icmp eq i32 %544, %545, !pdg.inst.id !1003
DSWP:     	RAW (must)
DSWP:     	From:	  %545 = load i32, i32* %356, align 4, !tbaa !7089, !pdg.inst.id !608
DSWP:     	To:	  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:     	To:	  %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
DSWP:     	RAW (must)
DSWP:     	From:	  %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:     	To:	  %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:     	RAW (must)
DSWP:     	From:	  %542 = phi i32 [ %557, %556 ], [ %358, %.preheader ], !pdg.inst.id !639
DSWP:     	To:	  %549 = add nsw i32 %542, 1, !pdg.inst.id !996
DSWP:     	RAW (must)
DSWP:     	From:	  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	To:	  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	RAW (must)
DSWP:     	From:	  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	To:	  %548 = icmp slt i32 %544, %321, !pdg.inst.id !511
DSWP:     	RAW (must)
DSWP:     	From:	  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	To:	  %546 = icmp eq i32 %544, %545, !pdg.inst.id !1003
DSWP:     	RAW (must)
DSWP:     	From:	  %544 = load i32, i32* %543, align 4, !tbaa !7089, !pdg.inst.id !998
DSWP:     	To:	  store i32 %544, i32* %555, align 4, !tbaa !7089, !pdg.inst.id !1000
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %549 = add nsw i32 %542, 1, !pdg.inst.id !996
DSWP:     	To:	  %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
DSWP:     	RAW (must)
DSWP:     	From:	  %549 = add nsw i32 %542, 1, !pdg.inst.id !996
DSWP:     	To:	  %551 = select i1 %548, i32 %549, i32 %550, !pdg.inst.id !1010
DSWP:     	RAW (must)
DSWP:     	From:	  %552 = select i1 %548, i32 %549, i32 %542, !pdg.inst.id !992
DSWP:     	To:	  %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:     	RAW (must)
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %358 = add nsw i32 %240, -1, !pdg.inst.id !262
DSWP:    Pre loop env 2, producer:	  %354 = phi i32 [ %346, %345 ], [ %317, %315 ], !pdg.inst.id !488
DSWP:    Pre loop env 3, producer:	  %243 = phi i32* [ %615, %605 ], [ %3, %227 ], !pdg.inst.id !77
DSWP:    Pre loop env 4, producer:	  %321 = load i32, i32* %320, align 4, !tbaa !7089, !pdg.inst.id !507
DSWP:    Pre loop env 5, producer:	  %356 = getelementptr inbounds i32, i32* %244, i64 %353, !pdg.inst.id !307
DSWP:    Pre loop env 6, producer:	  %536 = sext i32 %240 to i64, !pdg.inst.id !246
DSWP:    Pre loop env 7, producer:	  %242 = phi i32* [ %616, %605 ], [ %4, %227 ], !pdg.inst.id !79
DSWP:    Pre loop env 8, producer:	  %226 = sext i32 %7 to i64, !pdg.inst.id !87
DSWP:    Post loop env 9, producer:	  %557 = phi i32 [ %542, %._crit_edge3 ], [ %552, %547 ], !pdg.inst.id !994
DSWP:    Post loop env 10, producer:	  %558 = phi i32 [ %541, %._crit_edge3 ], [ %553, %547 ], !pdg.inst.id !988
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @41(i8*, i8*) {
  %3 = bitcast i8* %0 to [80 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32*
  %7 = load i32, i32* %6
  %8 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to i32*
  %10 = load i32, i32* %9
  %11 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to i32**
  %13 = load i32*, i32** %12
  %14 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 24
  %15 = bitcast i64* %14 to i32*
  %16 = load i32, i32* %15
  %17 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 32
  %18 = bitcast i64* %17 to i32**
  %19 = load i32*, i32** %18
  %20 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 40
  %21 = load i64, i64* %20
  %22 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 48
  %23 = bitcast i64* %22 to i32**
  %24 = load i32*, i32** %23
  %25 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 64
  %26 = load i64, i64* %25
  %27 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 56
  %28 = bitcast i64* %27 to i32*
  %29 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 72
  %30 = bitcast i64* %29 to i32*
  br label %33

31:                                               ; preds = %32
  ret void

32:                                               ; preds = %51
  br label %31

33:                                               ; preds = %2, %51
  %34 = phi i64 [ %54, %51 ], [ %21, %2 ], !pdg.inst.id !30
  %35 = phi i32 [ %53, %51 ], [ %10, %2 ], !pdg.inst.id !31
  %36 = phi i32 [ %52, %51 ], [ %7, %2 ], !pdg.inst.id !32
  %37 = getelementptr inbounds i32, i32* %24, i64 %34, !pdg.inst.id !33
  %38 = load i32, i32* %37, align 4, !tbaa !34, !pdg.inst.id !38
  %39 = load i32, i32* %19, align 4, !tbaa !34, !pdg.inst.id !39
  %40 = icmp eq i32 %38, %39, !pdg.inst.id !40
  br i1 %40, label %41, label %42, !pdg.inst.id !41

41:                                               ; preds = %33
  br label %51, !pdg.inst.id !42

42:                                               ; preds = %33
  %43 = icmp slt i32 %38, %16, !pdg.inst.id !43
  %44 = add nsw i32 %36, 1, !pdg.inst.id !44
  %45 = add nsw i32 %35, 1, !pdg.inst.id !45
  %46 = select i1 %43, i32 %44, i32 %45, !pdg.inst.id !46
  %47 = select i1 %43, i32 %44, i32 %36, !pdg.inst.id !47
  %48 = select i1 %43, i32 %35, i32 %45, !pdg.inst.id !48
  %49 = sext i32 %46 to i64, !pdg.inst.id !49
  %50 = getelementptr inbounds i32, i32* %13, i64 %49, !pdg.inst.id !50
  store i32 %38, i32* %50, align 4, !tbaa !34, !pdg.inst.id !51
  br label %51, !pdg.inst.id !52

51:                                               ; preds = %41, %42
  %52 = phi i32 [ %36, %41 ], [ %47, %42 ], !pdg.inst.id !53
  %53 = phi i32 [ %35, %41 ], [ %48, %42 ], !pdg.inst.id !54
  %54 = add nsw i64 %34, 1, !pdg.inst.id !55
  %55 = icmp slt i64 %34, %26, !pdg.inst.id !56
  store i32 %52, i32* %28
  store i32 %53, i32* %30
  br i1 %55, label %33, label %32, !pdg.inst.id !57
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @buildkdtree(i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, %struct.kdnode**, %struct.kdnode* nocapture, double* readonly, i32, i32) unnamed_addr #13 !prof !30 !PGOFuncName !31 !pdg.args.id !32 !pdg.edges !46 {
  %14 = alloca [80 x i64]
  %15 = bitcast [80 x i64]* %14 to i8*
  %16 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32**
  %22 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 24
  %23 = bitcast i64* %22 to i32*
  %24 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 32
  %25 = bitcast i64* %24 to i32**
  %26 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 40
  %27 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 48
  %28 = bitcast i64* %27 to i32**
  %29 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 56
  %30 = bitcast i64* %29 to i32*
  %31 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 64
  %32 = getelementptr inbounds [80 x i64], [80 x i64]* %14, i64 0, i64 72
  %33 = bitcast i64* %32 to i32*
  %34 = alloca [96 x i64]
  %35 = bitcast [96 x i64]* %34 to i8*
  %36 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 0
  %37 = bitcast i64* %36 to i32*
  %38 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 8
  %39 = bitcast i64* %38 to double*
  %40 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 16
  %41 = bitcast i64* %40 to i32**
  %42 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 24
  %43 = bitcast i64* %42 to i32*
  %44 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 32
  %45 = bitcast i64* %44 to i32*
  %46 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 40
  %47 = bitcast i64* %46 to i32**
  %48 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 48
  %49 = bitcast i64* %48 to i32**
  %50 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 56
  %51 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 64
  %52 = bitcast i64* %51 to i32*
  %53 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 72
  %54 = bitcast i64* %53 to i32*
  %55 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 80
  %56 = bitcast i64* %55 to double**
  %57 = getelementptr inbounds [96 x i64], [96 x i64]* %34, i64 0, i64 88
  %58 = alloca [80 x i64]
  %59 = bitcast [80 x i64]* %58 to i8*
  %60 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 0
  %61 = bitcast i64* %60 to i32**
  %62 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 8
  %63 = bitcast i64* %62 to i32*
  %64 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 16
  %65 = bitcast i64* %64 to i32**
  %66 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 24
  %67 = bitcast i64* %66 to i32**
  %68 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 32
  %69 = bitcast i64* %68 to i32*
  %70 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 40
  %71 = bitcast i64* %70 to i32*
  %72 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 48
  %73 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 56
  %74 = bitcast i64* %73 to i32*
  %75 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 64
  %76 = bitcast i64* %75 to i32*
  %77 = getelementptr inbounds [80 x i64], [80 x i64]* %58, i64 0, i64 72
  %78 = alloca [104 x i64]
  %79 = bitcast [104 x i64]* %78 to i8*
  %80 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 0
  %81 = bitcast i64* %80 to i32*
  %82 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 8
  %83 = bitcast i64* %82 to double*
  %84 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 16
  %85 = bitcast i64* %84 to i32*
  %86 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 24
  %87 = bitcast i64* %86 to i32**
  %88 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 32
  %89 = bitcast i64* %88 to i32*
  %90 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 40
  %91 = bitcast i64* %90 to i32**
  %92 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 48
  %93 = bitcast i64* %92 to i32**
  %94 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 56
  %95 = bitcast i64* %94 to i32*
  %96 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 64
  %97 = bitcast i64* %96 to i32*
  %98 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 72
  %99 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 80
  %100 = bitcast i64* %99 to i32*
  %101 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 88
  %102 = bitcast i64* %101 to double**
  %103 = getelementptr inbounds [104 x i64], [104 x i64]* %78, i64 0, i64 96
  %104 = alloca [64 x i64]
  %105 = bitcast [64 x i64]* %104 to i8*
  %106 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 0
  %107 = bitcast i64* %106 to i32*
  %108 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 8
  %109 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 16
  %110 = bitcast i64* %109 to i32**
  %111 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 24
  %112 = bitcast i64* %111 to i32*
  %113 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 32
  %114 = bitcast i64* %113 to i32**
  %115 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 40
  %116 = bitcast i64* %115 to i32*
  %117 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 48
  %118 = bitcast i64* %117 to i32**
  %119 = getelementptr inbounds [64 x i64], [64 x i64]* %104, i64 0, i64 56
  %120 = alloca [88 x i64]
  %121 = bitcast [88 x i64]* %120 to i8*
  %122 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 0
  %123 = bitcast i64* %122 to i32*
  %124 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 8
  %125 = bitcast i64* %124 to i32*
  %126 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 16
  %127 = bitcast i64* %126 to i32*
  %128 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 24
  %129 = bitcast i64* %128 to i32**
  %130 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 32
  %131 = bitcast i64* %130 to double*
  %132 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 40
  %133 = bitcast i64* %132 to i32**
  %134 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 48
  %135 = bitcast i64* %134 to i32**
  %136 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 56
  %137 = bitcast i64* %136 to i32*
  %138 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 64
  %139 = bitcast i64* %138 to double**
  %140 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 72
  %141 = getelementptr inbounds [88 x i64], [88 x i64]* %120, i64 0, i64 80
  %142 = alloca [64 x i64]
  %143 = bitcast [64 x i64]* %142 to i8*
  %144 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 0
  %145 = bitcast i64* %144 to i32**
  %146 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 8
  %147 = bitcast i64* %146 to i32*
  %148 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 16
  %149 = bitcast i64* %148 to i32**
  %150 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 24
  %151 = bitcast i64* %150 to i32*
  %152 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 32
  %153 = bitcast i64* %152 to i32**
  %154 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 40
  %155 = bitcast i64* %154 to i32*
  %156 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 48
  %157 = getelementptr inbounds [64 x i64], [64 x i64]* %142, i64 0, i64 56
  %158 = alloca [88 x i64]
  %159 = bitcast [88 x i64]* %158 to i8*
  %160 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 0
  %161 = bitcast i64* %160 to i32*
  %162 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 8
  %163 = bitcast i64* %162 to i32*
  %164 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 16
  %165 = bitcast i64* %164 to double*
  %166 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 24
  %167 = bitcast i64* %166 to i32**
  %168 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 32
  %169 = bitcast i64* %168 to i32*
  %170 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 40
  %171 = bitcast i64* %170 to i32**
  %172 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 48
  %173 = bitcast i64* %172 to i32*
  %174 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 56
  %175 = bitcast i64* %174 to i32**
  %176 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 64
  %177 = bitcast i64* %176 to double**
  %178 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 72
  %179 = getelementptr inbounds [88 x i64], [88 x i64]* %158, i64 0, i64 80
  %180 = alloca [72 x i64]
  %181 = bitcast [72 x i64]* %180 to i8*
  %182 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 0
  %183 = bitcast i64* %182 to double**
  %184 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 8
  %185 = bitcast i64* %184 to i32*
  %186 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 16
  %187 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 24
  %188 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 32
  %189 = bitcast i64* %188 to i32*
  %190 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 40
  %191 = bitcast i64* %190 to i32**
  %192 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 48
  %193 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 56
  %194 = bitcast i64* %193 to double*
  %195 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 64
  %196 = bitcast i64* %195 to i32*
  %197 = alloca [184 x i64]
  %198 = bitcast [184 x i64]* %197 to i8*
  %199 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 0
  %200 = bitcast i64* %199 to i32*
  %201 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 8
  %202 = bitcast i64* %201 to i32*
  %203 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 16
  %204 = bitcast i64* %203 to %struct.kdnode**
  %205 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 24
  %206 = bitcast i64* %205 to %struct.kdnode***
  %207 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 32
  %208 = bitcast i64* %207 to i32*
  %209 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 40
  %210 = bitcast i64* %209 to i32**
  %211 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 48
  %212 = bitcast i64* %211 to i32*
  %213 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 56
  %214 = bitcast i64* %213 to i32**
  %215 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 64
  %216 = bitcast i64* %215 to i32*
  %217 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 72
  %218 = bitcast i64* %217 to i32**
  %219 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 80
  %220 = bitcast i64* %219 to i32**
  %221 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 88
  %222 = bitcast i64* %221 to i32**
  %223 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 96
  %224 = bitcast i64* %223 to i32**
  %225 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 104
  %226 = bitcast i64* %225 to i1*
  %227 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 112
  %228 = bitcast i64* %227 to %struct.kdnode**
  %229 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 120
  %230 = bitcast i64* %229 to i32*
  %231 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 128
  %232 = bitcast i64* %231 to i32*
  %233 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 136
  %234 = bitcast i64* %233 to i32**
  %235 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 144
  %236 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 152
  %237 = bitcast i64* %236 to double**
  %238 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 160
  %239 = bitcast i64* %238 to i32**
  %240 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 168
  %241 = bitcast i64* %240 to %struct.kdnode**
  %242 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 176
  %243 = bitcast i64* %242 to i32*
  %244 = add nsw i32 %12, 1, !pdg.inst.id !181
  %245 = icmp eq i32 %7, %6, !pdg.inst.id !85
  %246 = sext i32 %7 to i64, !pdg.inst.id !87
  br i1 %245, label %251, label %247, !prof !7088, !pdg.inst.id !185

247:                                              ; preds = %13
  %248 = icmp eq i32 %12, 4, !pdg.inst.id !179
  %249 = load i32, i32* @9
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %642, label %257

.loopexit16:                                      ; preds = %663, %627
  %.lcssa88 = phi %struct.kdnode* [ %632, %627 ], [ %662, %663 ], !pdg.inst.id !223
  %.lcssa81 = phi i32* [ %261, %627 ], [ %660, %663 ], !pdg.inst.id !225
  br label %251, !pdg.inst.id !6401

251:                                              ; preds = %.loopexit16, %13
  %252 = phi i32* [ %0, %13 ], [ %.lcssa81, %.loopexit16 ], !pdg.inst.id !48
  %253 = phi %struct.kdnode* [ %9, %13 ], [ %.lcssa88, %.loopexit16 ], !pdg.inst.id !140
  %254 = getelementptr inbounds i32, i32* %252, i64 %246, !pdg.inst.id !187
  %255 = load i32, i32* %254, align 4, !tbaa !7089, !pdg.inst.id !230
  %256 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %253, i64 0, i32 0, !pdg.inst.id !228
  store i32 %255, i32* %256, align 8, !tbaa !7093, !pdg.inst.id !232
  br label %641, !pdg.inst.id !6410

257:                                              ; preds = %247, %627
  %258 = phi i32 [ %636, %627 ], [ %11, %247 ], !pdg.inst.id !162
  %259 = phi %struct.kdnode* [ %632, %627 ], [ %9, %247 ], !pdg.inst.id !142
  %260 = phi i32 [ %635, %627 ], [ %6, %247 ], !pdg.inst.id !83
  %261 = phi i32* [ %639, %627 ], [ %5, %247 ], !pdg.inst.id !81
  %262 = phi i32* [ %638, %627 ], [ %4, %247 ], !pdg.inst.id !79
  %263 = phi i32* [ %637, %627 ], [ %3, %247 ], !pdg.inst.id !77
  %264 = phi i32* [ %261, %627 ], [ %0, %247 ], !pdg.inst.id !53
  %265 = srem i32 %258, %244, !pdg.inst.id !183
  %266 = add nsw i32 %260, 1, !pdg.inst.id !264
  %267 = icmp eq i32 %266, %7, !pdg.inst.id !96
  br i1 %267, label %268, label %335, !prof !7096, !pdg.inst.id !334

268:                                              ; preds = %663, %257
  %.lcssa85 = phi %struct.kdnode* [ %259, %257 ], [ %657, %663 ], !pdg.inst.id !236
  %.lcssa82 = phi i32 [ %260, %257 ], [ %658, %663 ], !pdg.inst.id !244
  %.lcssa76 = phi i32* [ %264, %257 ], [ %661, %663 ], !pdg.inst.id !301
  %.lcssa73 = phi i32 [ %265, %257 ], [ %659, %663 ], !pdg.inst.id !315
  %269 = icmp eq i32 %.lcssa73, 0, !pdg.inst.id !359
  %270 = sext i32 %.lcssa82 to i64, !pdg.inst.id !348
  %271 = getelementptr inbounds i32, i32* %.lcssa76, i64 %270, !pdg.inst.id !352
  %272 = load i32, i32* %271, align 4, !tbaa !7089, !pdg.inst.id !275
  br i1 %269, label %273, label %277, !prof !7097, !pdg.inst.id !361

273:                                              ; preds = %268
  %274 = getelementptr inbounds i32, i32* %.lcssa76, i64 %246, !pdg.inst.id !207
  %275 = load i32, i32* %274, align 4, !tbaa !7089, !pdg.inst.id !376
  %276 = icmp slt i32 %272, %275, !pdg.inst.id !374
  br i1 %276, label %292, label %305, !pdg.inst.id !382

277:                                              ; preds = %268
  %278 = mul nsw i32 %272, %12, !pdg.inst.id !166
  %279 = add nsw i32 %.lcssa73, -1, !pdg.inst.id !357
  %280 = add i32 %279, %278, !pdg.inst.id !384
  %281 = sext i32 %280 to i64, !pdg.inst.id !389
  %282 = getelementptr inbounds double, double* %10, i64 %281, !pdg.inst.id !144
  %283 = load double, double* %282, align 8, !tbaa !7098, !pdg.inst.id !283
  %284 = getelementptr inbounds i32, i32* %.lcssa76, i64 %246, !pdg.inst.id !205
  %285 = load i32, i32* %284, align 4, !tbaa !7089, !pdg.inst.id !397
  %286 = mul nsw i32 %285, %12, !pdg.inst.id !164
  %287 = add i32 %279, %286, !pdg.inst.id !386
  %288 = sext i32 %287 to i64, !pdg.inst.id !402
  %289 = getelementptr inbounds double, double* %10, i64 %288, !pdg.inst.id !146
  %290 = load double, double* %289, align 8, !tbaa !7098, !pdg.inst.id !405
  %291 = fcmp fast olt double %283, %290, !pdg.inst.id !395
  br i1 %291, label %292, label %307, !prof !7100, !pdg.inst.id !409

292:                                              ; preds = %277, %273
  %293 = phi %struct.kdnode* [ %.lcssa85, %277 ], [ %.lcssa85, %273 ], !pdg.inst.id !342
  %294 = phi i32 [ %285, %277 ], [ %275, %273 ], !pdg.inst.id !378
  %295 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !336
  store i32 %294, i32* %295, align 8, !tbaa !7093, !pdg.inst.id !413
  %296 = load i32, i32* %271, align 4, !tbaa !7089, !pdg.inst.id !364
  %297 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !138
  %298 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %297, i64 0, i32 0, !pdg.inst.id !420
  store i32 %296, i32* %298, align 8, !tbaa !7093, !pdg.inst.id !416
  %299 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %297, i64 0, i32 1, !pdg.inst.id !418
  store %struct.kdnode* null, %struct.kdnode** %299, align 8, !tbaa !7102, !pdg.inst.id !423
  %300 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !136
  %301 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %300, i64 0, i32 2, !pdg.inst.id !425
  store %struct.kdnode* null, %struct.kdnode** %301, align 8, !tbaa !7103, !pdg.inst.id !427
  %302 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !116
  %303 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %302, i64 1, !pdg.inst.id !431
  store %struct.kdnode* %303, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !118
  %304 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %293, i64 0, i32 1, !pdg.inst.id !411
  store %struct.kdnode* %302, %struct.kdnode** %304, align 8, !tbaa !7102, !pdg.inst.id !429
  br label %641, !pdg.inst.id !6480

305:                                              ; preds = %273
  %306 = icmp sgt i32 %272, %275, !pdg.inst.id !371
  br i1 %306, label %309, label %._crit_edge9, !pdg.inst.id !435

._crit_edge9:                                     ; preds = %305
  br label %322, !pdg.inst.id !6511

307:                                              ; preds = %277
  %308 = fcmp fast ogt double %283, %290, !pdg.inst.id !393
  br i1 %308, label %309, label %322, !pdg.inst.id !437

309:                                              ; preds = %307, %305
  %310 = phi i32* [ %.lcssa76, %307 ], [ %.lcssa76, %305 ], !pdg.inst.id !354
  %311 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !338
  store i32 %272, i32* %311, align 8, !tbaa !7093, !pdg.inst.id !367
  %312 = getelementptr inbounds i32, i32* %310, i64 %246, !pdg.inst.id !211
  %313 = load i32, i32* %312, align 4, !tbaa !7089, !pdg.inst.id !441
  %314 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !110
  %315 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %314, i64 0, i32 0, !pdg.inst.id !447
  store i32 %313, i32* %315, align 8, !tbaa !7093, !pdg.inst.id !443
  %316 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %314, i64 0, i32 1, !pdg.inst.id !445
  store %struct.kdnode* null, %struct.kdnode** %316, align 8, !tbaa !7102, !pdg.inst.id !450
  %317 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !134
  %318 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %317, i64 0, i32 2, !pdg.inst.id !452
  store %struct.kdnode* null, %struct.kdnode** %318, align 8, !tbaa !7103, !pdg.inst.id !454
  %319 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !132
  %320 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %319, i64 1, !pdg.inst.id !458
  store %struct.kdnode* %320, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !130
  %321 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 1, !pdg.inst.id !346
  store %struct.kdnode* %319, %struct.kdnode** %321, align 8, !tbaa !7102, !pdg.inst.id !456
  br label %641, !pdg.inst.id !6525

322:                                              ; preds = %._crit_edge9, %307
  %323 = phi %struct.kdnode* [ %.lcssa85, %._crit_edge9 ], [ %.lcssa85, %307 ], !pdg.inst.id !344
  %324 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %.lcssa85, i64 0, i32 0, !pdg.inst.id !340
  store i32 %272, i32* %324, align 8, !tbaa !7093, !pdg.inst.id !369
  %325 = getelementptr inbounds i32, i32* %.lcssa76, i64 %246, !pdg.inst.id !209
  %326 = load i32, i32* %325, align 4, !tbaa !7089, !pdg.inst.id !465
  %327 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !128
  %328 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %327, i64 0, i32 0, !pdg.inst.id !471
  store i32 %326, i32* %328, align 8, !tbaa !7093, !pdg.inst.id !467
  %329 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %327, i64 0, i32 1, !pdg.inst.id !469
  store %struct.kdnode* null, %struct.kdnode** %329, align 8, !tbaa !7102, !pdg.inst.id !474
  %330 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !98
  %331 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %330, i64 0, i32 2, !pdg.inst.id !476
  store %struct.kdnode* null, %struct.kdnode** %331, align 8, !tbaa !7103, !pdg.inst.id !478
  %332 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !126
  %333 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %332, i64 1, !pdg.inst.id !482
  store %struct.kdnode* %333, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !124
  %334 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %323, i64 0, i32 2, !pdg.inst.id !462
  store %struct.kdnode* %332, %struct.kdnode** %334, align 8, !tbaa !7103, !pdg.inst.id !480
  br label %641, !pdg.inst.id !6572

335:                                              ; preds = %257
  %336 = add nsw i32 %260, %7, !pdg.inst.id !94
  %337 = sdiv i32 %336, 2, !pdg.inst.id !486
  %338 = icmp eq i32 %265, 0, !pdg.inst.id !327
  %339 = sext i32 %337 to i64, !pdg.inst.id !490
  %340 = getelementptr inbounds i32, i32* %264, i64 %339, !pdg.inst.id !311
  %341 = load i32, i32* %340, align 4, !tbaa !7089, !pdg.inst.id !507
  br i1 %338, label %371, label %342, !prof !7104, !pdg.inst.id !500

342:                                              ; preds = %335
  %343 = mul nsw i32 %341, %12, !pdg.inst.id !176
  %344 = add nsw i32 %265, -1, !pdg.inst.id !325
  %345 = add i32 %344, %343, !pdg.inst.id !521
  %346 = sext i32 %345 to i64, !pdg.inst.id !526
  %347 = getelementptr inbounds double, double* %10, i64 %346, !pdg.inst.id !148
  %348 = load double, double* %347, align 8, !tbaa !7098, !pdg.inst.id !529
  %349 = sext i32 %260 to i64, !pdg.inst.id !254
  %350 = load i32, i32* @10
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %667, label %352

352:                                              ; preds = %342, %356
  %353 = phi i64 [ %354, %356 ], [ %339, %342 ], !pdg.inst.id !504
  %354 = add nsw i64 %353, -1, !pdg.inst.id !542
  %355 = icmp sgt i64 %353, %349, !pdg.inst.id !535
  br i1 %355, label %356, label %.loopexit1, !prof !7105, !pdg.inst.id !546

356:                                              ; preds = %352
  %357 = getelementptr inbounds i32, i32* %264, i64 %354, !pdg.inst.id !309
  %358 = load i32, i32* %357, align 4, !tbaa !7089, !pdg.inst.id !548
  %359 = mul nsw i32 %358, %12, !pdg.inst.id !174
  %360 = add i32 %344, %359, !pdg.inst.id !523
  %361 = sext i32 %360 to i64, !pdg.inst.id !552
  %362 = getelementptr inbounds double, double* %10, i64 %361, !pdg.inst.id !150
  %363 = load double, double* %362, align 8, !tbaa !7098, !pdg.inst.id !555
  %364 = fcmp fast olt double %363, %348, !pdg.inst.id !533
  br i1 %364, label %._crit_edge8, label %352, !prof !7105, !pdg.inst.id !558

._crit_edge8:                                     ; preds = %683, %356
  %.lcssa3 = phi i64 [ %353, %356 ], [ %682, %683 ], !pdg.inst.id !537
  br label %365, !pdg.inst.id !6630

.loopexit1:                                       ; preds = %683, %352
  %.lcssa2 = phi i64 [ %353, %352 ], [ %682, %683 ], !pdg.inst.id !539
  br label %365, !pdg.inst.id !6633

365:                                              ; preds = %.loopexit1, %._crit_edge8
  %.lcssa = phi i64 [ %.lcssa3, %._crit_edge8 ], [ %.lcssa2, %.loopexit1 ], !pdg.inst.id !560
  %366 = trunc i64 %.lcssa to i32, !pdg.inst.id !565
  %367 = shl i64 %.lcssa, 32, !pdg.inst.id !563
  %368 = ashr exact i64 %367, 32, !pdg.inst.id !568
  %369 = getelementptr inbounds i32, i32* %264, i64 %368, !pdg.inst.id !303
  %370 = load i32, i32* %369, align 4, !tbaa !7089, !pdg.inst.id !572
  br label %371, !pdg.inst.id !6614

371:                                              ; preds = %365, %335
  %372 = phi i32 [ %370, %365 ], [ %341, %335 ], !pdg.inst.id !509
  %373 = phi i64 [ %368, %365 ], [ %339, %335 ], !pdg.inst.id !502
  %374 = phi i32 [ %366, %365 ], [ %337, %335 ], !pdg.inst.id !488
  %375 = phi double [ %348, %365 ], [ 0.000000e+00, %335 ], !pdg.inst.id !531
  %376 = getelementptr inbounds i32, i32* %264, i64 %373, !pdg.inst.id !307
  %377 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %259, i64 0, i32 0, !pdg.inst.id !238
  store i32 %372, i32* %377, align 8, !tbaa !7093, !pdg.inst.id !575
  %378 = add nsw i32 %260, -1, !pdg.inst.id !262
  %379 = icmp sgt i32 %260, %7, !pdg.inst.id !92
  br i1 %379, label %550, label %380, !prof !7106, !pdg.inst.id !649

380:                                              ; preds = %371
  %381 = add i32 %265, -1, !pdg.inst.id !323
  %382 = sext i32 %260 to i64, !pdg.inst.id !252
  br i1 %338, label %.preheader11, label %.preheader13, !prof !7104, !pdg.inst.id !498

.preheader13:                                     ; preds = %380
  %383 = load i32, i32* @11
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %687, label %439

.preheader11:                                     ; preds = %380
  %385 = load i32, i32* @12
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %703, label %387

387:                                              ; preds = %.preheader11, %404
  %388 = phi i64 [ %407, %404 ], [ %382, %.preheader11 ], !pdg.inst.id !655
  %389 = phi i32 [ %406, %404 ], [ %374, %.preheader11 ], !pdg.inst.id !580
  %390 = phi i32 [ %405, %404 ], [ %378, %.preheader11 ], !pdg.inst.id !627
  %391 = getelementptr inbounds i32, i32* %1, i64 %388, !pdg.inst.id !59
  %392 = load i32, i32* %391, align 4, !tbaa !7089, !pdg.inst.id !673
  %393 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !614
  %394 = icmp eq i32 %392, %393, !pdg.inst.id !678
  br i1 %394, label %._crit_edge2, label %395, !prof !7107, !pdg.inst.id !681

._crit_edge2:                                     ; preds = %387
  br label %404, !pdg.inst.id !6674

395:                                              ; preds = %387
  %396 = icmp slt i32 %392, %341, !pdg.inst.id !517
  %397 = add nsw i32 %390, 1, !pdg.inst.id !671
  %398 = add nsw i32 %389, 1, !pdg.inst.id !665
  %399 = select i1 %396, i32 %397, i32 %398, !prof !7108, !pdg.inst.id !685
  %400 = select i1 %396, i32 %397, i32 %390, !prof !7108, !pdg.inst.id !667
  %401 = select i1 %396, i32 %389, i32 %398, !prof !7108, !pdg.inst.id !661
  %402 = sext i32 %399 to i64, !pdg.inst.id !691
  %403 = getelementptr inbounds i32, i32* %261, i64 %402, !pdg.inst.id !271
  store i32 %392, i32* %403, align 4, !tbaa !7089, !pdg.inst.id !675
  br label %404, !pdg.inst.id !6685

404:                                              ; preds = %._crit_edge2, %395
  %405 = phi i32 [ %390, %._crit_edge2 ], [ %400, %395 ], !pdg.inst.id !669
  %406 = phi i32 [ %389, %._crit_edge2 ], [ %401, %395 ], !pdg.inst.id !663
  %407 = add nsw i64 %388, 1, !pdg.inst.id !659
  %408 = icmp slt i64 %388, %246, !pdg.inst.id !191
  br i1 %408, label %387, label %.loopexit12, !prof !7109, !pdg.inst.id !700

.loopexit12:                                      ; preds = %718, %404
  br label %409, !pdg.inst.id !6665

.loopexit14:                                      ; preds = %702, %461
  br label %409, !pdg.inst.id !6697

409:                                              ; preds = %.loopexit14, %.loopexit12
  br i1 %379, label %550, label %410, !prof !7106, !pdg.inst.id !647

410:                                              ; preds = %409
  %411 = add i32 %265, -1, !pdg.inst.id !321
  %412 = sext i32 %260 to i64, !pdg.inst.id !250
  br i1 %338, label %.preheader7, label %.preheader9, !prof !7104, !pdg.inst.id !496

.preheader9:                                      ; preds = %410
  %413 = load i32, i32* @13
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %719, label %496

.preheader7:                                      ; preds = %410
  %415 = load i32, i32* @14
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %735, label %417

417:                                              ; preds = %.preheader7, %434
  %418 = phi i64 [ %437, %434 ], [ %412, %.preheader7 ], !pdg.inst.id !706
  %419 = phi i32 [ %436, %434 ], [ %374, %.preheader7 ], !pdg.inst.id !584
  %420 = phi i32 [ %435, %434 ], [ %378, %.preheader7 ], !pdg.inst.id !631
  %421 = getelementptr inbounds i32, i32* %2, i64 %418, !pdg.inst.id !71
  %422 = load i32, i32* %421, align 4, !tbaa !7089, !pdg.inst.id !724
  %423 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !612
  %424 = icmp eq i32 %422, %423, !pdg.inst.id !729
  br i1 %424, label %._crit_edge5, label %425, !prof !7107, !pdg.inst.id !732

._crit_edge5:                                     ; preds = %417
  br label %434, !pdg.inst.id !6724

425:                                              ; preds = %417
  %426 = icmp slt i32 %422, %341, !pdg.inst.id !515
  %427 = add nsw i32 %420, 1, !pdg.inst.id !722
  %428 = add nsw i32 %419, 1, !pdg.inst.id !716
  %429 = select i1 %426, i32 %427, i32 %428, !prof !7108, !pdg.inst.id !736
  %430 = select i1 %426, i32 %427, i32 %420, !prof !7108, !pdg.inst.id !718
  %431 = select i1 %426, i32 %419, i32 %428, !prof !7108, !pdg.inst.id !712
  %432 = sext i32 %429 to i64, !pdg.inst.id !742
  %433 = getelementptr inbounds i32, i32* %1, i64 %432, !pdg.inst.id !57
  store i32 %422, i32* %433, align 4, !tbaa !7089, !pdg.inst.id !726
  br label %434, !pdg.inst.id !6735

434:                                              ; preds = %._crit_edge5, %425
  %435 = phi i32 [ %420, %._crit_edge5 ], [ %430, %425 ], !pdg.inst.id !720
  %436 = phi i32 [ %419, %._crit_edge5 ], [ %431, %425 ], !pdg.inst.id !714
  %437 = add nsw i64 %418, 1, !pdg.inst.id !710
  %438 = icmp slt i64 %418, %246, !pdg.inst.id !195
  br i1 %438, label %417, label %.loopexit8, !prof !7109, !pdg.inst.id !751

439:                                              ; preds = %.preheader13, %461
  %440 = phi i64 [ %464, %461 ], [ %382, %.preheader13 ], !pdg.inst.id !653
  %441 = phi i32 [ %463, %461 ], [ %374, %.preheader13 ], !pdg.inst.id !578
  %442 = phi i32 [ %462, %461 ], [ %378, %.preheader13 ], !pdg.inst.id !625
  %443 = getelementptr inbounds i32, i32* %1, i64 %440, !pdg.inst.id !61
  %444 = load i32, i32* %443, align 4, !tbaa !7089, !pdg.inst.id !769
  %445 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !622
  %446 = icmp eq i32 %444, %445, !pdg.inst.id !774
  br i1 %446, label %._crit_edge, label %447, !prof !7110, !pdg.inst.id !777

._crit_edge:                                      ; preds = %439
  br label %461, !pdg.inst.id !6762

447:                                              ; preds = %439
  %448 = mul nsw i32 %444, %12, !pdg.inst.id !172
  %449 = add i32 %381, %448, !pdg.inst.id !651
  %450 = sext i32 %449 to i64, !pdg.inst.id !780
  %451 = getelementptr inbounds double, double* %10, i64 %450, !pdg.inst.id !152
  %452 = load double, double* %451, align 8, !tbaa !7098, !pdg.inst.id !783
  %453 = fcmp fast olt double %452, %375, !pdg.inst.id !606
  %454 = add nsw i32 %441, 1, !pdg.inst.id !761
  %455 = add nsw i32 %442, 1, !pdg.inst.id !767
  %456 = select i1 %453, i32 %455, i32 %454, !prof !7111, !pdg.inst.id !788
  %457 = select i1 %453, i32 %455, i32 %442, !prof !7111, !pdg.inst.id !763
  %458 = select i1 %453, i32 %441, i32 %454, !prof !7111, !pdg.inst.id !757
  %459 = sext i32 %456 to i64, !pdg.inst.id !794
  %460 = getelementptr inbounds i32, i32* %261, i64 %459, !pdg.inst.id !269
  store i32 %444, i32* %460, align 4, !tbaa !7089, !pdg.inst.id !771
  br label %461, !pdg.inst.id !6778

461:                                              ; preds = %._crit_edge, %447
  %462 = phi i32 [ %442, %._crit_edge ], [ %457, %447 ], !pdg.inst.id !765
  %463 = phi i32 [ %441, %._crit_edge ], [ %458, %447 ], !pdg.inst.id !759
  %464 = add nsw i64 %440, 1, !pdg.inst.id !755
  %465 = icmp slt i64 %440, %246, !pdg.inst.id !189
  br i1 %465, label %439, label %.loopexit14, !prof !7112, !pdg.inst.id !803

.loopexit8:                                       ; preds = %750, %434
  br label %466, !pdg.inst.id !6790

.loopexit10:                                      ; preds = %734, %518
  br label %466, !pdg.inst.id !6792

466:                                              ; preds = %.loopexit10, %.loopexit8
  br i1 %379, label %550, label %467, !prof !7106, !pdg.inst.id !645

467:                                              ; preds = %466
  %468 = add i32 %265, -1, !pdg.inst.id !319
  %469 = sext i32 %260 to i64, !pdg.inst.id !248
  br i1 %338, label %.preheader3, label %.preheader5, !prof !7104, !pdg.inst.id !494

.preheader5:                                      ; preds = %467
  %470 = load i32, i32* @15
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %751, label %523

.preheader3:                                      ; preds = %467
  %472 = load i32, i32* @16
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %769, label %474

474:                                              ; preds = %.preheader3, %491
  %475 = phi i64 [ %494, %491 ], [ %469, %.preheader3 ], !pdg.inst.id !809
  %476 = phi i32 [ %493, %491 ], [ %374, %.preheader3 ], !pdg.inst.id !588
  %477 = phi i32 [ %492, %491 ], [ %378, %.preheader3 ], !pdg.inst.id !635
  %478 = getelementptr inbounds i32, i32* %263, i64 %475, !pdg.inst.id !299
  %479 = load i32, i32* %478, align 4, !tbaa !7089, !pdg.inst.id !827
  %480 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !610
  %481 = icmp eq i32 %479, %480, !pdg.inst.id !832
  br i1 %481, label %._crit_edge7, label %482, !prof !7107, !pdg.inst.id !835

._crit_edge7:                                     ; preds = %474
  br label %491, !pdg.inst.id !6819

482:                                              ; preds = %474
  %483 = icmp slt i32 %479, %341, !pdg.inst.id !513
  %484 = add nsw i32 %477, 1, !pdg.inst.id !825
  %485 = add nsw i32 %476, 1, !pdg.inst.id !819
  %486 = select i1 %483, i32 %484, i32 %485, !prof !7108, !pdg.inst.id !839
  %487 = select i1 %483, i32 %484, i32 %477, !prof !7108, !pdg.inst.id !821
  %488 = select i1 %483, i32 %476, i32 %485, !prof !7108, !pdg.inst.id !815
  %489 = sext i32 %486 to i64, !pdg.inst.id !845
  %490 = getelementptr inbounds i32, i32* %2, i64 %489, !pdg.inst.id !69
  store i32 %479, i32* %490, align 4, !tbaa !7089, !pdg.inst.id !829
  br label %491, !pdg.inst.id !6830

491:                                              ; preds = %._crit_edge7, %482
  %492 = phi i32 [ %477, %._crit_edge7 ], [ %487, %482 ], !pdg.inst.id !823
  %493 = phi i32 [ %476, %._crit_edge7 ], [ %488, %482 ], !pdg.inst.id !817
  %494 = add nsw i64 %475, 1, !pdg.inst.id !813
  %495 = icmp slt i64 %475, %246, !pdg.inst.id !199
  br i1 %495, label %474, label %.loopexit4, !prof !7109, !pdg.inst.id !858

496:                                              ; preds = %.preheader9, %518
  %497 = phi i64 [ %521, %518 ], [ %412, %.preheader9 ], !pdg.inst.id !704
  %498 = phi i32 [ %520, %518 ], [ %374, %.preheader9 ], !pdg.inst.id !582
  %499 = phi i32 [ %519, %518 ], [ %378, %.preheader9 ], !pdg.inst.id !629
  %500 = getelementptr inbounds i32, i32* %2, i64 %497, !pdg.inst.id !73
  %501 = load i32, i32* %500, align 4, !tbaa !7089, !pdg.inst.id !876
  %502 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !620
  %503 = icmp eq i32 %501, %502, !pdg.inst.id !881
  br i1 %503, label %._crit_edge4, label %504, !prof !7110, !pdg.inst.id !884

._crit_edge4:                                     ; preds = %496
  br label %518, !pdg.inst.id !6857

504:                                              ; preds = %496
  %505 = mul nsw i32 %501, %12, !pdg.inst.id !170
  %506 = add i32 %411, %505, !pdg.inst.id !702
  %507 = sext i32 %506 to i64, !pdg.inst.id !887
  %508 = getelementptr inbounds double, double* %10, i64 %507, !pdg.inst.id !154
  %509 = load double, double* %508, align 8, !tbaa !7098, !pdg.inst.id !890
  %510 = fcmp fast olt double %509, %375, !pdg.inst.id !604
  %511 = add nsw i32 %498, 1, !pdg.inst.id !868
  %512 = add nsw i32 %499, 1, !pdg.inst.id !874
  %513 = select i1 %510, i32 %512, i32 %511, !prof !7111, !pdg.inst.id !895
  %514 = select i1 %510, i32 %512, i32 %499, !prof !7111, !pdg.inst.id !870
  %515 = select i1 %510, i32 %498, i32 %511, !prof !7111, !pdg.inst.id !864
  %516 = sext i32 %513 to i64, !pdg.inst.id !901
  %517 = getelementptr inbounds i32, i32* %1, i64 %516, !pdg.inst.id !55
  store i32 %501, i32* %517, align 4, !tbaa !7089, !pdg.inst.id !878
  br label %518, !pdg.inst.id !6873

518:                                              ; preds = %._crit_edge4, %504
  %519 = phi i32 [ %499, %._crit_edge4 ], [ %514, %504 ], !pdg.inst.id !872
  %520 = phi i32 [ %498, %._crit_edge4 ], [ %515, %504 ], !pdg.inst.id !866
  %521 = add nsw i64 %497, 1, !pdg.inst.id !862
  %522 = icmp slt i64 %497, %246, !pdg.inst.id !193
  br i1 %522, label %496, label %.loopexit10, !prof !7112, !pdg.inst.id !910

523:                                              ; preds = %.preheader5, %545
  %524 = phi i64 [ %548, %545 ], [ %469, %.preheader5 ], !pdg.inst.id !807
  %525 = phi i32 [ %547, %545 ], [ %374, %.preheader5 ], !pdg.inst.id !586
  %526 = phi i32 [ %546, %545 ], [ %378, %.preheader5 ], !pdg.inst.id !633
  %527 = getelementptr inbounds i32, i32* %263, i64 %524, !pdg.inst.id !297
  %528 = load i32, i32* %527, align 4, !tbaa !7089, !pdg.inst.id !928
  %529 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !618
  %530 = icmp eq i32 %528, %529, !pdg.inst.id !933
  br i1 %530, label %._crit_edge6, label %531, !prof !7110, !pdg.inst.id !936

._crit_edge6:                                     ; preds = %523
  br label %545, !pdg.inst.id !6899

531:                                              ; preds = %523
  %532 = mul nsw i32 %528, %12, !pdg.inst.id !168
  %533 = add i32 %468, %532, !pdg.inst.id !805
  %534 = sext i32 %533 to i64, !pdg.inst.id !939
  %535 = getelementptr inbounds double, double* %10, i64 %534, !pdg.inst.id !156
  %536 = load double, double* %535, align 8, !tbaa !7098, !pdg.inst.id !942
  %537 = fcmp fast olt double %536, %375, !pdg.inst.id !602
  %538 = add nsw i32 %525, 1, !pdg.inst.id !920
  %539 = add nsw i32 %526, 1, !pdg.inst.id !926
  %540 = select i1 %537, i32 %539, i32 %538, !prof !7111, !pdg.inst.id !947
  %541 = select i1 %537, i32 %539, i32 %526, !prof !7111, !pdg.inst.id !922
  %542 = select i1 %537, i32 %525, i32 %538, !prof !7111, !pdg.inst.id !916
  %543 = sext i32 %540 to i64, !pdg.inst.id !953
  %544 = getelementptr inbounds i32, i32* %2, i64 %543, !pdg.inst.id !67
  store i32 %528, i32* %544, align 4, !tbaa !7089, !pdg.inst.id !930
  br label %545, !pdg.inst.id !6915

545:                                              ; preds = %._crit_edge6, %531
  %546 = phi i32 [ %526, %._crit_edge6 ], [ %541, %531 ], !pdg.inst.id !924
  %547 = phi i32 [ %525, %._crit_edge6 ], [ %542, %531 ], !pdg.inst.id !918
  %548 = add nsw i64 %524, 1, !pdg.inst.id !914
  %549 = icmp slt i64 %524, %246, !pdg.inst.id !197
  br i1 %549, label %523, label %.loopexit6, !prof !7112, !pdg.inst.id !966

.loopexit4:                                       ; preds = %786, %491
  %.lcssa68 = phi i32 [ %492, %491 ], [ %785, %786 ], !pdg.inst.id !851
  %.lcssa67 = phi i32 [ %493, %491 ], [ %784, %786 ], !pdg.inst.id !854
  br label %550, !pdg.inst.id !6929

.loopexit6:                                       ; preds = %768, %545
  %.lcssa66 = phi i32 [ %546, %545 ], [ %766, %768 ], !pdg.inst.id !959
  %.lcssa65 = phi i32 [ %547, %545 ], [ %767, %768 ], !pdg.inst.id !962
  br label %550, !pdg.inst.id !6933

550:                                              ; preds = %.loopexit6, %.loopexit4, %371, %409, %466
  %551 = phi i32 [ %378, %466 ], [ %378, %409 ], [ %378, %371 ], [ %.lcssa68, %.loopexit4 ], [ %.lcssa66, %.loopexit6 ], !pdg.inst.id !641
  %552 = phi i32 [ %374, %466 ], [ %374, %409 ], [ %374, %371 ], [ %.lcssa67, %.loopexit4 ], [ %.lcssa65, %.loopexit6 ], !pdg.inst.id !594
  br i1 %248, label %553, label %610, !prof !7106, !pdg.inst.id !221

553:                                              ; preds = %550
  br i1 %379, label %.loopexit15, label %554, !pdg.inst.id !643

554:                                              ; preds = %553
  %555 = add i32 %265, -1, !pdg.inst.id !317
  %556 = sext i32 %260 to i64, !pdg.inst.id !246
  br i1 %338, label %.preheader, label %.preheader1, !pdg.inst.id !492

.preheader1:                                      ; preds = %554
  %557 = load i32, i32* @17
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %787, label %583

.preheader:                                       ; preds = %554
  %559 = load i32, i32* @18
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %805, label %561

561:                                              ; preds = %.preheader, %578
  %562 = phi i64 [ %581, %578 ], [ %556, %.preheader ], !pdg.inst.id !980
  %563 = phi i32 [ %580, %578 ], [ %374, %.preheader ], !pdg.inst.id !592
  %564 = phi i32 [ %579, %578 ], [ %378, %.preheader ], !pdg.inst.id !639
  %565 = getelementptr inbounds i32, i32* %262, i64 %562, !pdg.inst.id !287
  %566 = load i32, i32* %565, align 4, !tbaa !7089, !pdg.inst.id !998
  %567 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !608
  %568 = icmp eq i32 %566, %567, !pdg.inst.id !1003
  br i1 %568, label %._crit_edge3, label %569, !pdg.inst.id !1006

._crit_edge3:                                     ; preds = %561
  br label %578, !pdg.inst.id !6965

569:                                              ; preds = %561
  %570 = icmp slt i32 %566, %341, !pdg.inst.id !511
  %571 = add nsw i32 %564, 1, !pdg.inst.id !996
  %572 = add nsw i32 %563, 1, !pdg.inst.id !990
  %573 = select i1 %570, i32 %571, i32 %572, !pdg.inst.id !1010
  %574 = select i1 %570, i32 %571, i32 %564, !pdg.inst.id !992
  %575 = select i1 %570, i32 %563, i32 %572, !pdg.inst.id !986
  %576 = sext i32 %573 to i64, !pdg.inst.id !1016
  %577 = getelementptr inbounds i32, i32* %263, i64 %576, !pdg.inst.id !291
  store i32 %566, i32* %577, align 4, !tbaa !7089, !pdg.inst.id !1000
  br label %578, !pdg.inst.id !6976

578:                                              ; preds = %._crit_edge3, %569
  %579 = phi i32 [ %564, %._crit_edge3 ], [ %574, %569 ], !pdg.inst.id !994
  %580 = phi i32 [ %563, %._crit_edge3 ], [ %575, %569 ], !pdg.inst.id !988
  %581 = add nsw i64 %562, 1, !pdg.inst.id !984
  %582 = icmp slt i64 %562, %246, !pdg.inst.id !203
  br i1 %582, label %561, label %.loopexit, !pdg.inst.id !1029

583:                                              ; preds = %.preheader1, %605
  %584 = phi i64 [ %608, %605 ], [ %556, %.preheader1 ], !pdg.inst.id !978
  %585 = phi i32 [ %607, %605 ], [ %374, %.preheader1 ], !pdg.inst.id !590
  %586 = phi i32 [ %606, %605 ], [ %378, %.preheader1 ], !pdg.inst.id !637
  %587 = getelementptr inbounds i32, i32* %262, i64 %584, !pdg.inst.id !285
  %588 = load i32, i32* %587, align 4, !tbaa !7089, !pdg.inst.id !1047
  %589 = load i32, i32* %376, align 4, !tbaa !7089, !pdg.inst.id !616
  %590 = icmp eq i32 %588, %589, !pdg.inst.id !1053
  br i1 %590, label %._crit_edge1, label %591, !pdg.inst.id !1056

._crit_edge1:                                     ; preds = %583
  br label %605, !pdg.inst.id !7001

591:                                              ; preds = %583
  %592 = shl i32 %588, 2, !pdg.inst.id !1051
  %593 = add i32 %555, %592, !pdg.inst.id !976
  %594 = sext i32 %593 to i64, !pdg.inst.id !1059
  %595 = getelementptr inbounds double, double* %10, i64 %594, !pdg.inst.id !158
  %596 = load double, double* %595, align 8, !tbaa !7098, !pdg.inst.id !1062
  %597 = fcmp fast olt double %596, %375, !pdg.inst.id !600
  %598 = add nsw i32 %585, 1, !pdg.inst.id !1039
  %599 = add nsw i32 %586, 1, !pdg.inst.id !1045
  %600 = select i1 %597, i32 %599, i32 %598, !pdg.inst.id !1067
  %601 = select i1 %597, i32 %599, i32 %586, !pdg.inst.id !1041
  %602 = select i1 %597, i32 %585, i32 %598, !pdg.inst.id !1035
  %603 = sext i32 %600 to i64, !pdg.inst.id !1073
  %604 = getelementptr inbounds i32, i32* %263, i64 %603, !pdg.inst.id !289
  store i32 %588, i32* %604, align 4, !tbaa !7089, !pdg.inst.id !1049
  br label %605, !pdg.inst.id !7017

605:                                              ; preds = %._crit_edge1, %591
  %606 = phi i32 [ %586, %._crit_edge1 ], [ %601, %591 ], !pdg.inst.id !1043
  %607 = phi i32 [ %585, %._crit_edge1 ], [ %602, %591 ], !pdg.inst.id !1037
  %608 = add nsw i64 %584, 1, !pdg.inst.id !1033
  %609 = icmp slt i64 %584, %246, !pdg.inst.id !201
  br i1 %609, label %583, label %.loopexit2, !pdg.inst.id !1086

.loopexit:                                        ; preds = %822, %578
  %.lcssa72 = phi i32 [ %579, %578 ], [ %820, %822 ], !pdg.inst.id !1022
  %.lcssa71 = phi i32 [ %580, %578 ], [ %821, %822 ], !pdg.inst.id !1025
  br label %610, !pdg.inst.id !7031

.loopexit2:                                       ; preds = %804, %605
  %.lcssa70 = phi i32 [ %606, %605 ], [ %803, %804 ], !pdg.inst.id !1079
  %.lcssa69 = phi i32 [ %607, %605 ], [ %802, %804 ], !pdg.inst.id !1082
  br label %610, !pdg.inst.id !7035

610:                                              ; preds = %.loopexit2, %.loopexit, %550
  %611 = phi i32 [ %551, %550 ], [ %.lcssa72, %.loopexit ], [ %.lcssa70, %.loopexit2 ], !pdg.inst.id !972
  %612 = phi i32 [ %552, %550 ], [ %.lcssa71, %.loopexit ], [ %.lcssa69, %.loopexit2 ], !pdg.inst.id !974
  %613 = icmp slt i32 %611, %260, !pdg.inst.id !258
  br i1 %613, label %625, label %614, !prof !7106, !pdg.inst.id !1096

614:                                              ; preds = %610
  %615 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !122
  %616 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %615, i64 0, i32 1, !pdg.inst.id !1098
  store %struct.kdnode* null, %struct.kdnode** %616, align 8, !tbaa !7102, !pdg.inst.id !1100
  %617 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !120
  %618 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %617, i64 0, i32 2, !pdg.inst.id !1102
  store %struct.kdnode* null, %struct.kdnode** %618, align 8, !tbaa !7103, !pdg.inst.id !1104
  %619 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !114
  %620 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %619, i64 1, !pdg.inst.id !1110
  store %struct.kdnode* %620, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !112
  %621 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %259, i64 0, i32 1, !pdg.inst.id !240
  store %struct.kdnode* %619, %struct.kdnode** %621, align 8, !tbaa !7102, !pdg.inst.id !1108
  %622 = add nsw i32 %265, 1, !pdg.inst.id !329
  br i1 %248, label %623, label %624, !prof !7106, !pdg.inst.id !219

623:                                              ; preds = %614
  tail call fastcc void @buildkdtree(i32* %261, i32* %1, i32* %2, i32* %263, i32* nonnull %264, i32* %262, i32 %260, i32 %611, %struct.kdnode** nonnull %8, %struct.kdnode* %619, double* %10, i32 %622, i32 4), !pdg.inst.id !65
  br label %625, !pdg.inst.id !7059

624:                                              ; preds = %614
  tail call fastcc void @buildkdtree(i32* %261, i32* %1, i32* %2, i32* nonnull %264, i32* %262, i32* %263, i32 %260, i32 %611, %struct.kdnode** nonnull %8, %struct.kdnode* %619, double* %10, i32 %622, i32 %12), !pdg.inst.id !63
  br label %625, !pdg.inst.id !7062

625:                                              ; preds = %610, %623, %624
  %626 = icmp sgt i32 %612, %374, !pdg.inst.id !598
  br i1 %626, label %627, label %.loopexit15, !prof !7113, !pdg.inst.id !1116

627:                                              ; preds = %625
  %628 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !106
  %629 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %628, i64 0, i32 1, !pdg.inst.id !1118
  store %struct.kdnode* null, %struct.kdnode** %629, align 8, !tbaa !7102, !pdg.inst.id !1120
  %630 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !104
  %631 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %630, i64 0, i32 2, !pdg.inst.id !1122
  store %struct.kdnode* null, %struct.kdnode** %631, align 8, !tbaa !7103, !pdg.inst.id !1124
  %632 = load %struct.kdnode*, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !102
  %633 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %632, i64 1, !pdg.inst.id !1130
  store %struct.kdnode* %633, %struct.kdnode** %8, align 8, !tbaa !7101, !pdg.inst.id !100
  %634 = getelementptr inbounds %struct.kdnode, %struct.kdnode* %259, i64 0, i32 2, !pdg.inst.id !242
  store %struct.kdnode* %632, %struct.kdnode** %634, align 8, !tbaa !7103, !pdg.inst.id !1128
  %635 = add nsw i32 %374, 1, !pdg.inst.id !596
  %636 = add nsw i32 %265, 1, !pdg.inst.id !331
  %637 = select i1 %248, i32* %263, i32* %264, !prof !7106, !pdg.inst.id !217
  %638 = select i1 %248, i32* %264, i32* %262, !prof !7106, !pdg.inst.id !215
  %639 = select i1 %248, i32* %262, i32* %263, !prof !7106, !pdg.inst.id !213
  %640 = icmp eq i32 %635, %7, !pdg.inst.id !89
  br i1 %640, label %.loopexit16, label %257, !prof !7114, !pdg.inst.id !1140

.loopexit15:                                      ; preds = %663, %663, %625, %553
  br label %641, !pdg.inst.id !7078

641:                                              ; preds = %.loopexit15, %309, %322, %292, %251
  ret void, !pdg.inst.id !7115

642:                                              ; preds = %247
  store i32 1, i32* @9
  store i32 %12, i32* %200
  store i32 %11, i32* %202
  store %struct.kdnode* %9, %struct.kdnode** %204
  store %struct.kdnode** %8, %struct.kdnode*** %206
  store i32 %6, i32* %208
  store i32* %5, i32** %210
  store i32 %7, i32* %212
  store i32* %0, i32** %214
  store i32 %244, i32* %216
  store i32* %2, i32** %218
  store i32* %1, i32** %220
  store i32* %3, i32** %222
  store i32* %4, i32** %224
  store i1 %248, i1* %226
  store i64 %246, i64* %235
  store double* %10, double** %237
  %643 = alloca [1 x i8*]
  %644 = getelementptr inbounds [1 x i8*], [1 x i8*]* %643, i64 0, i64 0
  %645 = bitcast i8** %644 to void (i8*, i8*)**
  store void (i8*, i8*)* @33, void (i8*, i8*)** %645
  %646 = bitcast [1 x i8*]* %643 to i8*
  %647 = alloca [8 x i64]
  %648 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 0
  store i64 64, i64* %648
  %649 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 1
  store i64 64, i64* %649
  %650 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 2
  store i64 64, i64* %650
  %651 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 3
  store i64 64, i64* %651
  %652 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 4
  store i64 64, i64* %652
  %653 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 5
  store i64 64, i64* %653
  %654 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 6
  store i64 64, i64* %654
  %655 = getelementptr inbounds [8 x i64], [8 x i64]* %647, i64 0, i64 7
  store i64 64, i64* %655
  %656 = bitcast [8 x i64]* %647 to i64*
  call void @stageDispatcher(i8* %198, i64* %656, i8* %646, i64 1, i64 8)
  %657 = load %struct.kdnode*, %struct.kdnode** %228
  %658 = load i32, i32* %230
  %659 = load i32, i32* %232
  %660 = load i32*, i32** %234
  %661 = load i32*, i32** %239
  %662 = load %struct.kdnode*, %struct.kdnode** %241
  br label %663

663:                                              ; preds = %642
  %664 = getelementptr inbounds [184 x i64], [184 x i64]* %197, i64 0, i64 176
  %665 = load i64, i64* %664
  %666 = trunc i64 %665 to i32
  store i32 0, i32* @9
  switch i32 %666, label %268 [
    i32 1, label %.loopexit15
    i32 2, label %.loopexit15
    i32 3, label %.loopexit16
  ]

667:                                              ; preds = %342
  store i32 1, i32* @10
  store double* %10, double** %183
  store i32 %344, i32* %185
  store i64 %349, i64* %187
  store i32 %12, i32* %189
  store i32* %264, i32** %191
  store i64 %339, i64* %192
  store double %348, double* %194
  %668 = alloca [1 x i8*]
  %669 = getelementptr inbounds [1 x i8*], [1 x i8*]* %668, i64 0, i64 0
  %670 = bitcast i8** %669 to void (i8*, i8*)**
  store void (i8*, i8*)* @34, void (i8*, i8*)** %670
  %671 = bitcast [1 x i8*]* %668 to i8*
  %672 = alloca [8 x i64]
  %673 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 0
  store i64 64, i64* %673
  %674 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 1
  store i64 64, i64* %674
  %675 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 2
  store i64 64, i64* %675
  %676 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 3
  store i64 64, i64* %676
  %677 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 4
  store i64 64, i64* %677
  %678 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 5
  store i64 64, i64* %678
  %679 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 6
  store i64 64, i64* %679
  %680 = getelementptr inbounds [8 x i64], [8 x i64]* %672, i64 0, i64 7
  store i64 64, i64* %680
  %681 = bitcast [8 x i64]* %672 to i64*
  call void @stageDispatcher(i8* %181, i64* %681, i8* %671, i64 1, i64 8)
  %682 = load i64, i64* %186
  br label %683

683:                                              ; preds = %667
  %684 = getelementptr inbounds [72 x i64], [72 x i64]* %180, i64 0, i64 64
  %685 = load i64, i64* %684
  %686 = trunc i64 %685 to i32
  store i32 0, i32* @10
  switch i32 %686, label %.loopexit1 [
    i32 1, label %._crit_edge8
  ]

687:                                              ; preds = %.preheader13
  store i32 1, i32* @11
  store i32 %12, i32* %161
  store i32 %378, i32* %163
  store double %375, double* %165
  store i32* %1, i32** %167
  store i32 %374, i32* %169
  store i32* %376, i32** %171
  store i32 %381, i32* %173
  store i32* %261, i32** %175
  store double* %10, double** %177
  store i64 %382, i64* %178
  store i64 %246, i64* %179
  %688 = alloca [1 x i8*]
  %689 = getelementptr inbounds [1 x i8*], [1 x i8*]* %688, i64 0, i64 0
  %690 = bitcast i8** %689 to void (i8*, i8*)**
  store void (i8*, i8*)* @35, void (i8*, i8*)** %690
  %691 = bitcast [1 x i8*]* %688 to i8*
  %692 = alloca [8 x i64]
  %693 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 0
  store i64 64, i64* %693
  %694 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 1
  store i64 64, i64* %694
  %695 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 2
  store i64 64, i64* %695
  %696 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 3
  store i64 64, i64* %696
  %697 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 4
  store i64 64, i64* %697
  %698 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 5
  store i64 64, i64* %698
  %699 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 6
  store i64 64, i64* %699
  %700 = getelementptr inbounds [8 x i64], [8 x i64]* %692, i64 0, i64 7
  store i64 64, i64* %700
  %701 = bitcast [8 x i64]* %692 to i64*
  call void @stageDispatcher(i8* %159, i64* %701, i8* %691, i64 1, i64 8)
  br label %702

702:                                              ; preds = %687
  store i32 0, i32* @11
  br label %.loopexit14

703:                                              ; preds = %.preheader11
  store i32 1, i32* @12
  store i32* %261, i32** %145
  store i32 %378, i32* %147
  store i32* %376, i32** %149
  store i32 %374, i32* %151
  store i32* %1, i32** %153
  store i32 %341, i32* %155
  store i64 %246, i64* %156
  store i64 %382, i64* %157
  %704 = alloca [1 x i8*]
  %705 = getelementptr inbounds [1 x i8*], [1 x i8*]* %704, i64 0, i64 0
  %706 = bitcast i8** %705 to void (i8*, i8*)**
  store void (i8*, i8*)* @36, void (i8*, i8*)** %706
  %707 = bitcast [1 x i8*]* %704 to i8*
  %708 = alloca [8 x i64]
  %709 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 0
  store i64 64, i64* %709
  %710 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 1
  store i64 64, i64* %710
  %711 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 2
  store i64 64, i64* %711
  %712 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 3
  store i64 64, i64* %712
  %713 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 4
  store i64 64, i64* %713
  %714 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 5
  store i64 64, i64* %714
  %715 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 6
  store i64 64, i64* %715
  %716 = getelementptr inbounds [8 x i64], [8 x i64]* %708, i64 0, i64 7
  store i64 64, i64* %716
  %717 = bitcast [8 x i64]* %708 to i64*
  call void @stageDispatcher(i8* %143, i64* %717, i8* %707, i64 1, i64 8)
  br label %718

718:                                              ; preds = %703
  store i32 0, i32* @12
  br label %.loopexit12

719:                                              ; preds = %.preheader9
  store i32 1, i32* @13
  store i32 %12, i32* %123
  store i32 %378, i32* %125
  store i32 %374, i32* %127
  store i32* %1, i32** %129
  store double %375, double* %131
  store i32* %376, i32** %133
  store i32* %2, i32** %135
  store i32 %411, i32* %137
  store double* %10, double** %139
  store i64 %412, i64* %140
  store i64 %246, i64* %141
  %720 = alloca [1 x i8*]
  %721 = getelementptr inbounds [1 x i8*], [1 x i8*]* %720, i64 0, i64 0
  %722 = bitcast i8** %721 to void (i8*, i8*)**
  store void (i8*, i8*)* @37, void (i8*, i8*)** %722
  %723 = bitcast [1 x i8*]* %720 to i8*
  %724 = alloca [8 x i64]
  %725 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 0
  store i64 64, i64* %725
  %726 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 1
  store i64 64, i64* %726
  %727 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 2
  store i64 64, i64* %727
  %728 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 3
  store i64 64, i64* %728
  %729 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 4
  store i64 64, i64* %729
  %730 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 5
  store i64 64, i64* %730
  %731 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 6
  store i64 64, i64* %731
  %732 = getelementptr inbounds [8 x i64], [8 x i64]* %724, i64 0, i64 7
  store i64 64, i64* %732
  %733 = bitcast [8 x i64]* %724 to i64*
  call void @stageDispatcher(i8* %121, i64* %733, i8* %723, i64 1, i64 8)
  br label %734

734:                                              ; preds = %719
  store i32 0, i32* @13
  br label %.loopexit10

735:                                              ; preds = %.preheader7
  store i32 1, i32* @14
  store i32 %378, i32* %107
  store i64 %412, i64* %108
  store i32* %376, i32** %110
  store i32 %374, i32* %112
  store i32* %1, i32** %114
  store i32 %341, i32* %116
  store i32* %2, i32** %118
  store i64 %246, i64* %119
  %736 = alloca [1 x i8*]
  %737 = getelementptr inbounds [1 x i8*], [1 x i8*]* %736, i64 0, i64 0
  %738 = bitcast i8** %737 to void (i8*, i8*)**
  store void (i8*, i8*)* @38, void (i8*, i8*)** %738
  %739 = bitcast [1 x i8*]* %736 to i8*
  %740 = alloca [8 x i64]
  %741 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 0
  store i64 64, i64* %741
  %742 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 1
  store i64 64, i64* %742
  %743 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 2
  store i64 64, i64* %743
  %744 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 3
  store i64 64, i64* %744
  %745 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 4
  store i64 64, i64* %745
  %746 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 5
  store i64 64, i64* %746
  %747 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 6
  store i64 64, i64* %747
  %748 = getelementptr inbounds [8 x i64], [8 x i64]* %740, i64 0, i64 7
  store i64 64, i64* %748
  %749 = bitcast [8 x i64]* %740 to i64*
  call void @stageDispatcher(i8* %105, i64* %749, i8* %739, i64 1, i64 8)
  br label %750

750:                                              ; preds = %735
  store i32 0, i32* @14
  br label %.loopexit8

751:                                              ; preds = %.preheader5
  store i32 1, i32* @15
  store i32 %378, i32* %81
  store double %375, double* %83
  store i32 %374, i32* %85
  store i32* %263, i32** %87
  store i32 %12, i32* %89
  store i32* %2, i32** %91
  store i32* %376, i32** %93
  store i32 %468, i32* %95
  store i64 %246, i64* %98
  store double* %10, double** %102
  store i64 %469, i64* %103
  %752 = alloca [1 x i8*]
  %753 = getelementptr inbounds [1 x i8*], [1 x i8*]* %752, i64 0, i64 0
  %754 = bitcast i8** %753 to void (i8*, i8*)**
  store void (i8*, i8*)* @39, void (i8*, i8*)** %754
  %755 = bitcast [1 x i8*]* %752 to i8*
  %756 = alloca [8 x i64]
  %757 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 0
  store i64 64, i64* %757
  %758 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 1
  store i64 64, i64* %758
  %759 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 2
  store i64 64, i64* %759
  %760 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 3
  store i64 64, i64* %760
  %761 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 4
  store i64 64, i64* %761
  %762 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 5
  store i64 64, i64* %762
  %763 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 6
  store i64 64, i64* %763
  %764 = getelementptr inbounds [8 x i64], [8 x i64]* %756, i64 0, i64 7
  store i64 64, i64* %764
  %765 = bitcast [8 x i64]* %756 to i64*
  call void @stageDispatcher(i8* %79, i64* %765, i8* %755, i64 1, i64 8)
  %766 = load i32, i32* %97
  %767 = load i32, i32* %100
  br label %768

768:                                              ; preds = %751
  store i32 0, i32* @15
  br label %.loopexit6

769:                                              ; preds = %.preheader3
  store i32 1, i32* @16
  store i32* %376, i32** %61
  store i32 %374, i32* %63
  store i32* %263, i32** %65
  store i32* %2, i32** %67
  store i32 %341, i32* %69
  store i32 %378, i32* %71
  store i64 %469, i64* %72
  store i64 %246, i64* %77
  %770 = alloca [1 x i8*]
  %771 = getelementptr inbounds [1 x i8*], [1 x i8*]* %770, i64 0, i64 0
  %772 = bitcast i8** %771 to void (i8*, i8*)**
  store void (i8*, i8*)* @40, void (i8*, i8*)** %772
  %773 = bitcast [1 x i8*]* %770 to i8*
  %774 = alloca [8 x i64]
  %775 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 0
  store i64 64, i64* %775
  %776 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 1
  store i64 64, i64* %776
  %777 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 2
  store i64 64, i64* %777
  %778 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 3
  store i64 64, i64* %778
  %779 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 4
  store i64 64, i64* %779
  %780 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 5
  store i64 64, i64* %780
  %781 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 6
  store i64 64, i64* %781
  %782 = getelementptr inbounds [8 x i64], [8 x i64]* %774, i64 0, i64 7
  store i64 64, i64* %782
  %783 = bitcast [8 x i64]* %774 to i64*
  call void @stageDispatcher(i8* %59, i64* %783, i8* %773, i64 1, i64 8)
  %784 = load i32, i32* %74
  %785 = load i32, i32* %76
  br label %786

786:                                              ; preds = %769
  store i32 0, i32* @16
  br label %.loopexit4

787:                                              ; preds = %.preheader1
  store i32 1, i32* @17
  store i32 %378, i32* %37
  store double %375, double* %39
  store i32* %263, i32** %41
  store i32 %374, i32* %43
  store i32* %262, i32** %47
  store i32* %376, i32** %49
  store i64 %556, i64* %50
  store i32 %555, i32* %52
  store double* %10, double** %56
  store i64 %246, i64* %57
  %788 = alloca [1 x i8*]
  %789 = getelementptr inbounds [1 x i8*], [1 x i8*]* %788, i64 0, i64 0
  %790 = bitcast i8** %789 to void (i8*, i8*)**
  store void (i8*, i8*)* @41, void (i8*, i8*)** %790
  %791 = bitcast [1 x i8*]* %788 to i8*
  %792 = alloca [8 x i64]
  %793 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 0
  store i64 64, i64* %793
  %794 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 1
  store i64 64, i64* %794
  %795 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 2
  store i64 64, i64* %795
  %796 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 3
  store i64 64, i64* %796
  %797 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 4
  store i64 64, i64* %797
  %798 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 5
  store i64 64, i64* %798
  %799 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 6
  store i64 64, i64* %799
  %800 = getelementptr inbounds [8 x i64], [8 x i64]* %792, i64 0, i64 7
  store i64 64, i64* %800
  %801 = bitcast [8 x i64]* %792 to i64*
  call void @stageDispatcher(i8* %35, i64* %801, i8* %791, i64 1, i64 8)
  %802 = load i32, i32* %45
  %803 = load i32, i32* %54
  br label %804

804:                                              ; preds = %787
  store i32 0, i32* @17
  br label %.loopexit2

805:                                              ; preds = %.preheader
  store i32 1, i32* @18
  store i32 %378, i32* %17
  store i32 %374, i32* %19
  store i32* %263, i32** %21
  store i32 %341, i32* %23
  store i32* %376, i32** %25
  store i64 %556, i64* %26
  store i32* %262, i32** %28
  store i64 %246, i64* %31
  %806 = alloca [1 x i8*]
  %807 = getelementptr inbounds [1 x i8*], [1 x i8*]* %806, i64 0, i64 0
  %808 = bitcast i8** %807 to void (i8*, i8*)**
  store void (i8*, i8*)* @42, void (i8*, i8*)** %808
  %809 = bitcast [1 x i8*]* %806 to i8*
  %810 = alloca [8 x i64]
  %811 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 0
  store i64 64, i64* %811
  %812 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 1
  store i64 64, i64* %812
  %813 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 2
  store i64 64, i64* %813
  %814 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 3
  store i64 64, i64* %814
  %815 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 4
  store i64 64, i64* %815
  %816 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 5
  store i64 64, i64* %816
  %817 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 6
  store i64 64, i64* %817
  %818 = getelementptr inbounds [8 x i64], [8 x i64]* %810, i64 0, i64 7
  store i64 64, i64* %818
  %819 = bitcast [8 x i64]* %810 to i64*
  call void @stageDispatcher(i8* %15, i64* %819, i8* %809, i64 1, i64 8)
  %820 = load i32, i32* %30
  %821 = load i32, i32* %33
  br label %822

822:                                              ; preds = %805
  store i32 0, i32* @18
  br label %.loopexit
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "checkpoint"
Parallelizer:  Loop 28 = "  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:       %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:   SCC: 1 Internal nodes:
DSWP:       br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:       %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:       %13 = sdiv i32 %11, 10, !pdg.inst.id !87
DSWP:       br label %9, !pdg.inst.id !870
DSWP:       %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  1
DSWP:    Children: Set:  0; 
DSWP:    Parents: 
Heuristic:   PCA: Checking: Set:  1 Set:  0 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 2
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:       %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:   SCC: 1 Internal nodes:
DSWP:       br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:       %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:       %13 = sdiv i32 %11, 10, !pdg.inst.id !87
DSWP:       br label %9, !pdg.inst.id !870
DSWP:       %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  1
DSWP:    Children: Set:  0; 
DSWP:    Parents: 
DSWP:  There are 2 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 5
DSWP:     	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	  %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:     	  %13 = sdiv i32 %11, 10, !pdg.inst.id !87
DSWP:     	  br label %9, !pdg.inst.id !870
DSWP:     	  %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:     External nodes: 2
DSWP:     	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:     	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:     Edges: 11
DSWP:     	From:	  %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:     	To:	  %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:     	RAW (must)
DSWP:     	From:	  %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:     	To:	  %13 = sdiv i32 %11, 10, !pdg.inst.id !87
DSWP:     	RAW (must)
DSWP:     	From:	  %13 = sdiv i32 %11, 10, !pdg.inst.id !87
DSWP:     	To:	  %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:     	RAW (must)
DSWP:     	From:	  %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:     	To:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %13 = sdiv i32 %11, 10, !pdg.inst.id !87
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %11 = phi i32 [ %13, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  br label %9, !pdg.inst.id !870
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 1
DSWP:     Internal nodes: 2
DSWP:     	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:     	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:     External nodes: 1
DSWP:     	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     Edges: 4
DSWP:     	From:	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:     	To:	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:     	RAW (must)
DSWP:     	From:	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:     	To:	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:     	CTRL
DSWP:     	From:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:     	To:	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:     	CTRL
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 8 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 
DSWP:      Pop value queues: 8 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %14 = icmp sgt i32 %11, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %14, label %._crit_edge, label %15, !pdg.inst.id !93
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	i32 %3
DSWP:    Post loop env 2, producer:	  %10 = phi i32 [ %12, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
DSWP:    Post loop env 3, producer:	  %12 = add nuw nsw i32 %10, 1, !pdg.inst.id !83
DSWP:  Create 2 pipeline stages
Pipeline stage 0:

define void @43(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [9 x i8*]*
  %5 = getelementptr inbounds [9 x i8*], [9 x i8*]* %4, i64 0, i64 8
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.27"**
  %7 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %6
  %8 = alloca i1
  %9 = bitcast i1* %8 to i8*
  %10 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %11 = bitcast i64* %10 to i32*
  %12 = load i32, i32* %11
  br label %15

13:                                               ; preds = %14
  ret void

14:                                               ; preds = %15
  br label %13

15:                                               ; preds = %2, %24
  %16 = phi i32 [ %17, %24 ], [ %12, %2 ], !pdg.inst.id !30
  %17 = sdiv i32 %16, 10, !pdg.inst.id !31
  %18 = icmp sgt i32 %16, 9, !pdg.inst.id !32
  store i1 %18, i1* %8
  %19 = load i8, i8* %9, align 1, !tbaa !33, !pdg.inst.id !36
  %20 = bitcast %"class.MARC::ThreadSafeQueue.27"* %7 to void (%"class.MARC::ThreadSafeQueue.27"*, i8)***, !pdg.inst.id !37
  %21 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)**, void (%"class.MARC::ThreadSafeQueue.27"*, i8)*** %20, align 8, !tbaa !38, !pdg.inst.id !40
  %22 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %21, i64 3, !pdg.inst.id !41
  %23 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %22, align 8, !pdg.inst.id !42
  call void %23(%"class.MARC::ThreadSafeQueue.27"* %7, i8 signext %19), !pdg.inst.id !43
  br i1 %18, label %24, label %14, !pdg.inst.id !44

24:                                               ; preds = %15
  br label %15, !pdg.inst.id !45
}

Pipeline stage 1:

define void @44(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [9 x i8*]*
  %5 = getelementptr inbounds [9 x i8*], [9 x i8*]* %4, i64 0, i64 8
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.27"**
  %7 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %6
  %8 = alloca i1
  %9 = bitcast i1* %8 to i8*
  %10 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %11 = bitcast i64* %10 to i32*
  %12 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %13 = bitcast i64* %12 to i32*
  br label %16

14:                                               ; preds = %15
  ret void

15:                                               ; preds = %16
  store i32 %17, i32* %11
  store i32 %18, i32* %13
  br label %14

16:                                               ; preds = %2, %25
  %17 = phi i32 [ %18, %25 ], [ 0, %2 ], !pdg.inst.id !30
  %18 = add nuw nsw i32 %17, 1, !pdg.inst.id !31
  %19 = bitcast %"class.MARC::ThreadSafeQueue.27"* %7 to i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)***, !pdg.inst.id !32
  %20 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)**, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*** %19, align 8, !tbaa !33, !pdg.inst.id !36
  %21 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %20, i64 1, !pdg.inst.id !37
  %22 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %21, align 8, !pdg.inst.id !38
  %23 = call zeroext i1 %22(%"class.MARC::ThreadSafeQueue.27"* %7, i8* dereferenceable(1) %9), !pdg.inst.id !39
  %24 = load i1, i1* %8
  br i1 %24, label %25, label %15, !pdg.inst.id !40

25:                                               ; preds = %16
  br label %16
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local void @checkpoint(i8* nocapture readonly, i32, double* nocapture readonly, i32) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !36 {
  %5 = alloca [24 x i64]
  %6 = bitcast [24 x i64]* %5 to i8*
  %7 = getelementptr inbounds [24 x i64], [24 x i64]* %5, i64 0, i64 0
  %8 = bitcast i64* %7 to i32*
  %9 = getelementptr inbounds [24 x i64], [24 x i64]* %5, i64 0, i64 8
  %10 = bitcast i64* %9 to i32*
  %11 = getelementptr inbounds [24 x i64], [24 x i64]* %5, i64 0, i64 16
  %12 = bitcast i64* %11 to i32*
  %13 = alloca i32, align 4, !pdg.inst.id !63
  %14 = alloca i8*, align 8, !pdg.inst.id !66
  store i32 %1, i32* %13, align 4, !tbaa !985, !pdg.inst.id !53
  %15 = bitcast i8** %14 to i8*, !pdg.inst.id !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #48, !pdg.inst.id !76
  %16 = icmp slt i32 %3, 0, !pdg.inst.id !61
  br i1 %16, label %89, label %.preheader1, !pdg.inst.id !78

.preheader1:                                      ; preds = %4
  %17 = load i32, i32* @19
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %94, label %19

19:                                               ; preds = %.preheader1, %._crit_edge
  %20 = phi i32 [ %22, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
  %21 = phi i32 [ %23, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
  %22 = add nuw nsw i32 %20, 1, !pdg.inst.id !83
  %23 = sdiv i32 %21, 10, !pdg.inst.id !87
  %24 = icmp sgt i32 %21, 9, !pdg.inst.id !85
  br i1 %24, label %._crit_edge, label %25, !pdg.inst.id !93

._crit_edge:                                      ; preds = %19
  br label %19, !pdg.inst.id !870

25:                                               ; preds = %114, %19
  %.lcssa10 = phi i32 [ %20, %19 ], [ %112, %114 ], !pdg.inst.id !81
  %.lcssa9 = phi i32 [ %22, %19 ], [ %113, %114 ], !pdg.inst.id !89
  %26 = add nuw nsw i32 %.lcssa10, 2, !pdg.inst.id !95
  %27 = zext i32 %26 to i64, !pdg.inst.id !109
  %28 = tail call noalias i8* @malloc(i64 %27) #48, !pdg.inst.id !111
  %29 = getelementptr [3 x i8], [3 x i8]* @.str.3, i64 0, i64 0, !pdg.inst.id !120
  %30 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* %29, i32 %3) #48, !pdg.inst.id !59
  %31 = tail call i64 @strlen(i8* %0) #49, !pdg.inst.id !45
  %32 = trunc i64 %31 to i32, !pdg.inst.id !126
  %33 = load i8, i8* %0, align 1, !tbaa !989, !pdg.inst.id !43
  %34 = icmp eq i8 %33, 0, !pdg.inst.id !133
  br i1 %34, label %46, label %.preheader, !pdg.inst.id !135

.preheader:                                       ; preds = %25
  br label %35, !pdg.inst.id !875

35:                                               ; preds = %.preheader, %44
  %36 = phi i8 [ %41, %44 ], [ %33, %.preheader ], !pdg.inst.id !131
  %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
  %38 = icmp eq i8 %36, 37, !pdg.inst.id !137
  %39 = add nuw i64 %37, 1, !pdg.inst.id !142
  %40 = getelementptr inbounds i8, i8* %0, i64 %39, !pdg.inst.id !38
  %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
  %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
  %43 = and i1 %38, %42, !pdg.inst.id !144
  br i1 %43, label %90, label %44, !pdg.inst.id !156

44:                                               ; preds = %35
  %45 = icmp eq i8 %41, 0, !pdg.inst.id !151
  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158

.loopexit:                                        ; preds = %44
  br label %46, !pdg.inst.id !906

46:                                               ; preds = %.loopexit, %25
  %47 = add nsw i32 %.lcssa9, %32, !pdg.inst.id !103
  br label %48, !pdg.inst.id !909

48:                                               ; preds = %46, %90
  %49 = phi i32 [ %47, %46 ], [ %93, %90 ], !pdg.inst.id !160
  %50 = add nsw i32 %49, 1, !pdg.inst.id !164
  %51 = sext i32 %50 to i64, !pdg.inst.id !166
  %52 = tail call noalias i8* @malloc(i64 %51) #48, !pdg.inst.id !168
  store i8* %52, i8** %14, align 8, !tbaa !990, !pdg.inst.id !70
  %53 = shl i64 %31, 32, !pdg.inst.id !124
  %54 = ashr exact i64 %53, 32, !pdg.inst.id !176
  %55 = tail call i8* @strncpy(i8* %52, i8* nonnull %0, i64 %54) #48, !pdg.inst.id !47
  %56 = getelementptr inbounds i8, i8* %52, i64 %54, !pdg.inst.id !172
  %57 = zext i32 %.lcssa9 to i64, !pdg.inst.id !101
  %58 = tail call i8* @strncpy(i8* %56, i8* %28, i64 %57) #48, !pdg.inst.id !114
  br label %81, !pdg.inst.id !927

59:                                               ; preds = %90
  %60 = add i32 %.lcssa10, %32, !pdg.inst.id !97
  %61 = sext i32 %60 to i64, !pdg.inst.id !182
  %62 = tail call noalias i8* @malloc(i64 %61) #48, !pdg.inst.id !184
  store i8* %62, i8** %14, align 8, !tbaa !990, !pdg.inst.id !68
  %63 = shl i64 %.lcssa, 32, !pdg.inst.id !193
  %64 = ashr exact i64 %63, 32, !pdg.inst.id !196
  %65 = tail call i8* @strncpy(i8* %62, i8* nonnull %0, i64 %64) #48, !pdg.inst.id !49
  %66 = getelementptr inbounds i8, i8* %62, i64 %64, !pdg.inst.id !189
  %67 = zext i32 %.lcssa9 to i64, !pdg.inst.id !99
  %68 = tail call i8* @strncpy(i8* %66, i8* %28, i64 %67) #48, !pdg.inst.id !116
  %69 = add nsw i32 %.lcssa9, %91, !pdg.inst.id !107
  %70 = sext i32 %69 to i64, !pdg.inst.id !202
  %71 = getelementptr inbounds i8, i8* %62, i64 %70, !pdg.inst.id !187
  %72 = add i64 %63, 8589934592, !pdg.inst.id !194
  %73 = ashr exact i64 %72, 32, !pdg.inst.id !207
  %74 = getelementptr inbounds i8, i8* %0, i64 %73, !pdg.inst.id !51
  %75 = sub i64 %31, %.lcssa, !pdg.inst.id !122
  %76 = shl i64 %75, 32, !pdg.inst.id !211
  %77 = add i64 %76, -8589934592, !pdg.inst.id !213
  %78 = ashr exact i64 %77, 32, !pdg.inst.id !215
  %79 = tail call i8* @strncpy(i8* %71, i8* %74, i64 %78) #48, !pdg.inst.id !205
  %80 = add nsw i32 %93, -2, !pdg.inst.id !218
  br label %81, !pdg.inst.id !967

81:                                               ; preds = %59, %48
  %82 = phi i32 [ %80, %59 ], [ %49, %48 ], !pdg.inst.id !162
  %83 = phi i8* [ %62, %59 ], [ %52, %48 ], !pdg.inst.id !170
  %84 = sext i32 %82 to i64, !pdg.inst.id !220
  %85 = getelementptr inbounds i8, i8* %83, i64 %84, !pdg.inst.id !224
  store i8 0, i8* %85, align 1, !tbaa !989, !pdg.inst.id !227
  %86 = load i1, i1* @dim, align 4, !pdg.inst.id !229
  %87 = select i1 %86, i32 4, i32 3, !pdg.inst.id !230
  %88 = call i32 @putxyzw(i8** nonnull %14, i32* nonnull %13, double* %2, i32 %87) #48, !pdg.inst.id !55
  tail call void @free(i8* %83) #48, !pdg.inst.id !222
  tail call void @free(i8* %28) #48, !pdg.inst.id !118
  br label %89, !pdg.inst.id !979

89:                                               ; preds = %4, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #48, !pdg.inst.id !74
  ret void, !pdg.inst.id !992

90:                                               ; preds = %35
  %.lcssa = phi i64 [ %37, %35 ], !pdg.inst.id !140
  %91 = trunc i64 %.lcssa to i32, !pdg.inst.id !233
  %92 = icmp slt i32 %91, 0, !pdg.inst.id !238
  %93 = add nsw i32 %.lcssa9, %32, !pdg.inst.id !105
  br i1 %92, label %48, label %59, !pdg.inst.id !240

94:                                               ; preds = %.preheader1
  store i32 1, i32* @19
  store i32 %3, i32* %10
  %95 = alloca [2 x i8*]
  %96 = getelementptr inbounds [2 x i8*], [2 x i8*]* %95, i64 0, i64 0
  %97 = bitcast i8** %96 to void (i8*, i8*)**
  store void (i8*, i8*)* @44, void (i8*, i8*)** %97
  %98 = getelementptr inbounds [2 x i8*], [2 x i8*]* %95, i64 0, i64 1
  %99 = bitcast i8** %98 to void (i8*, i8*)**
  store void (i8*, i8*)* @45, void (i8*, i8*)** %99
  %100 = bitcast [2 x i8*]* %95 to i8*
  %101 = alloca [9 x i64]
  %102 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 0
  store i64 64, i64* %102
  %103 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 1
  store i64 64, i64* %103
  %104 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 2
  store i64 64, i64* %104
  %105 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 3
  store i64 64, i64* %105
  %106 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 4
  store i64 64, i64* %106
  %107 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 5
  store i64 64, i64* %107
  %108 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 6
  store i64 64, i64* %108
  %109 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 7
  store i64 64, i64* %109
  %110 = getelementptr inbounds [9 x i64], [9 x i64]* %101, i64 0, i64 8
  store i64 1, i64* %110
  %111 = bitcast [9 x i64]* %101 to i64*
  call void @stageDispatcher(i8* %6, i64* %111, i8* %100, i64 2, i64 9)
  %112 = load i32, i32* %8
  %113 = load i32, i32* %12
  br label %114

114:                                              ; preds = %94
  store i32 0, i32* @19
  br label %25
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "checkpoint"
Parallelizer:  Loop 29 = "  %38 = icmp eq i8 %36, 37, !pdg.inst.id !137"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %40 = getelementptr inbounds i8, i8* %0, i64 %39, !pdg.inst.id !38
DSWP:       %36 = phi i8 [ %41, %44 ], [ %33, %.preheader ], !pdg.inst.id !131
DSWP:       %39 = add nuw i64 %37, 1, !pdg.inst.id !142
DSWP:       %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
DSWP:       %38 = icmp eq i8 %36, 37, !pdg.inst.id !137
DSWP:       %45 = icmp eq i8 %41, 0, !pdg.inst.id !151
DSWP:       br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:       %43 = and i1 %38, %42, !pdg.inst.id !144
DSWP:       br i1 %43, label %90, label %44, !pdg.inst.id !156
DSWP:       %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
DSWP:       %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %40 = getelementptr inbounds i8, i8* %0, i64 %39, !pdg.inst.id !38
DSWP:       %36 = phi i8 [ %41, %44 ], [ %33, %.preheader ], !pdg.inst.id !131
DSWP:       %39 = add nuw i64 %37, 1, !pdg.inst.id !142
DSWP:       %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
DSWP:       %38 = icmp eq i8 %36, 37, !pdg.inst.id !137
DSWP:       %45 = icmp eq i8 %41, 0, !pdg.inst.id !151
DSWP:       br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:       %43 = and i1 %38, %42, !pdg.inst.id !144
DSWP:       br i1 %43, label %90, label %44, !pdg.inst.id !156
DSWP:       %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
DSWP:       %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 11
DSWP:     	  %40 = getelementptr inbounds i8, i8* %0, i64 %39, !pdg.inst.id !38
DSWP:     	  %36 = phi i8 [ %41, %44 ], [ %33, %.preheader ], !pdg.inst.id !131
DSWP:     	  %39 = add nuw i64 %37, 1, !pdg.inst.id !142
DSWP:     	  %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
DSWP:     	  %38 = icmp eq i8 %36, 37, !pdg.inst.id !137
DSWP:     	  %45 = icmp eq i8 %41, 0, !pdg.inst.id !151
DSWP:     	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	  %43 = and i1 %38, %42, !pdg.inst.id !144
DSWP:     	  br i1 %43, label %90, label %44, !pdg.inst.id !156
DSWP:     	  %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
DSWP:     	  %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:     External nodes: 0
DSWP:     Edges: 23
DSWP:     	From:	  br i1 %43, label %90, label %44, !pdg.inst.id !156
DSWP:     	To:	  %45 = icmp eq i8 %41, 0, !pdg.inst.id !151
DSWP:     	CTRL
DSWP:     	From:	  br i1 %43, label %90, label %44, !pdg.inst.id !156
DSWP:     	To:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	CTRL
DSWP:     	From:	  %43 = and i1 %38, %42, !pdg.inst.id !144
DSWP:     	To:	  br i1 %43, label %90, label %44, !pdg.inst.id !156
DSWP:     	RAW (must)
DSWP:     	From:	  %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
DSWP:     	To:	  %43 = and i1 %38, %42, !pdg.inst.id !144
DSWP:     	RAW (must)
DSWP:     	From:	  %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
DSWP:     	To:	  %39 = add nuw i64 %37, 1, !pdg.inst.id !142
DSWP:     	RAW (must)
DSWP:     	From:	  %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:     	To:	  %36 = phi i8 [ %41, %44 ], [ %33, %.preheader ], !pdg.inst.id !131
DSWP:     	RAW (must)
DSWP:     	From:	  %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:     	To:	  %45 = icmp eq i8 %41, 0, !pdg.inst.id !151
DSWP:     	RAW (must)
DSWP:     	From:	  %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:     	To:	  %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %36 = phi i8 [ %41, %44 ], [ %33, %.preheader ], !pdg.inst.id !131
DSWP:     	CTRL
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
DSWP:     	CTRL
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %38 = icmp eq i8 %36, 37, !pdg.inst.id !137
DSWP:     	CTRL
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %39 = add nuw i64 %37, 1, !pdg.inst.id !142
DSWP:     	CTRL
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %40 = getelementptr inbounds i8, i8* %0, i64 %39, !pdg.inst.id !38
DSWP:     	CTRL
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %41 = load i8, i8* %40, align 1, !tbaa !989, !pdg.inst.id !148
DSWP:     	CTRL
DSWP:     	From:	  br i1 %45, label %.loopexit, label %35, !pdg.inst.id !158
DSWP:     	To:	  %42 = icmp eq i8 %41, 100, !pdg.inst.id !153
DSWP:     	CTRL
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %24 = icmp sgt i32 %21, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %24, label %._crit_edge, label %25, !pdg.inst.id !93
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %33 = load i8, i8* %0, align 1, !tbaa !989, !pdg.inst.id !43
DSWP:    Pre loop env 2, producer:	i8* %0
DSWP:    Post loop env 3, producer:	  %37 = phi i64 [ %39, %44 ], [ 0, %.preheader ], !pdg.inst.id !139
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @46(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [9 x i8*]*
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %6 = bitcast i64* %5 to i8*
  %7 = load i8, i8* %6
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %9 = bitcast i64* %8 to i8**
  %10 = load i8*, i8** %9
  %11 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %13 = bitcast i64* %12 to i32*
  br label %17

14:                                               ; preds = %16, %15
  ret void

15:                                               ; preds = %17
  store i64 %19, i64* %11
  store i32 0, i32* %13
  br label %14

16:                                               ; preds = %26
  store i64 %19, i64* %11
  store i32 1, i32* %13
  br label %14

17:                                               ; preds = %2, %26
  %18 = phi i8 [ %23, %26 ], [ %7, %2 ], !pdg.inst.id !30
  %19 = phi i64 [ %21, %26 ], [ 0, %2 ], !pdg.inst.id !31
  %20 = icmp eq i8 %18, 37, !pdg.inst.id !32
  %21 = add nuw i64 %19, 1, !pdg.inst.id !33
  %22 = getelementptr inbounds i8, i8* %10, i64 %21, !pdg.inst.id !34
  %23 = load i8, i8* %22, align 1, !tbaa !35, !pdg.inst.id !38
  %24 = icmp eq i8 %23, 100, !pdg.inst.id !39
  %25 = and i1 %20, %24, !pdg.inst.id !40
  br i1 %25, label %15, label %26, !pdg.inst.id !41

26:                                               ; preds = %17
  %27 = icmp eq i8 %23, 0, !pdg.inst.id !42
  br i1 %27, label %16, label %17, !pdg.inst.id !43
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local void @checkpoint(i8* nocapture readonly, i32, double* nocapture readonly, i32) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !36 {
  %5 = alloca [32 x i64]
  %6 = bitcast [32 x i64]* %5 to i8*
  %7 = getelementptr inbounds [32 x i64], [32 x i64]* %5, i64 0, i64 0
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %5, i64 0, i64 8
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds [32 x i64], [32 x i64]* %5, i64 0, i64 16
  %11 = bitcast i64* %10 to i8**
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %5, i64 0, i64 24
  %13 = bitcast i64* %12 to i32*
  %14 = alloca [24 x i64]
  %15 = bitcast [24 x i64]* %14 to i8*
  %16 = getelementptr inbounds [24 x i64], [24 x i64]* %14, i64 0, i64 0
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds [24 x i64], [24 x i64]* %14, i64 0, i64 8
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds [24 x i64], [24 x i64]* %14, i64 0, i64 16
  %21 = bitcast i64* %20 to i32*
  %22 = alloca i32, align 4, !pdg.inst.id !63
  %23 = alloca i8*, align 8, !pdg.inst.id !66
  store i32 %1, i32* %22, align 4, !tbaa !985, !pdg.inst.id !53
  %24 = bitcast i8** %23 to i8*, !pdg.inst.id !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #48, !pdg.inst.id !76
  %25 = icmp slt i32 %3, 0, !pdg.inst.id !61
  br i1 %25, label %100, label %.preheader1, !pdg.inst.id !78

.preheader1:                                      ; preds = %4
  %26 = load i32, i32* @19
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %105, label %28

28:                                               ; preds = %.preheader1, %._crit_edge
  %29 = phi i32 [ %31, %._crit_edge ], [ 0, %.preheader1 ], !pdg.inst.id !80
  %30 = phi i32 [ %32, %._crit_edge ], [ %3, %.preheader1 ], !pdg.inst.id !57
  %31 = add nuw nsw i32 %29, 1, !pdg.inst.id !83
  %32 = sdiv i32 %30, 10, !pdg.inst.id !87
  %33 = icmp sgt i32 %30, 9, !pdg.inst.id !85
  br i1 %33, label %._crit_edge, label %34, !pdg.inst.id !93

._crit_edge:                                      ; preds = %28
  br label %28, !pdg.inst.id !870

34:                                               ; preds = %125, %28
  %.lcssa10 = phi i32 [ %29, %28 ], [ %123, %125 ], !pdg.inst.id !81
  %.lcssa9 = phi i32 [ %31, %28 ], [ %124, %125 ], !pdg.inst.id !89
  %35 = add nuw nsw i32 %.lcssa10, 2, !pdg.inst.id !95
  %36 = zext i32 %35 to i64, !pdg.inst.id !109
  %37 = tail call noalias i8* @malloc(i64 %36) #48, !pdg.inst.id !111
  %38 = getelementptr [3 x i8], [3 x i8]* @.str.3, i64 0, i64 0, !pdg.inst.id !120
  %39 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* %38, i32 %3) #48, !pdg.inst.id !59
  %40 = tail call i64 @strlen(i8* %0) #49, !pdg.inst.id !45
  %41 = trunc i64 %40 to i32, !pdg.inst.id !126
  %42 = load i8, i8* %0, align 1, !tbaa !989, !pdg.inst.id !43
  %43 = icmp eq i8 %42, 0, !pdg.inst.id !133
  br i1 %43, label %57, label %.preheader, !pdg.inst.id !135

.preheader:                                       ; preds = %34
  %44 = load i32, i32* @20
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %126, label %46

46:                                               ; preds = %.preheader, %55
  %47 = phi i8 [ %52, %55 ], [ %42, %.preheader ], !pdg.inst.id !131
  %48 = phi i64 [ %50, %55 ], [ 0, %.preheader ], !pdg.inst.id !139
  %49 = icmp eq i8 %47, 37, !pdg.inst.id !137
  %50 = add nuw i64 %48, 1, !pdg.inst.id !142
  %51 = getelementptr inbounds i8, i8* %0, i64 %50, !pdg.inst.id !38
  %52 = load i8, i8* %51, align 1, !tbaa !989, !pdg.inst.id !148
  %53 = icmp eq i8 %52, 100, !pdg.inst.id !153
  %54 = and i1 %49, %53, !pdg.inst.id !144
  br i1 %54, label %101, label %55, !pdg.inst.id !156

55:                                               ; preds = %46
  %56 = icmp eq i8 %52, 0, !pdg.inst.id !151
  br i1 %56, label %.loopexit, label %46, !pdg.inst.id !158

.loopexit:                                        ; preds = %143, %55
  br label %57, !pdg.inst.id !906

57:                                               ; preds = %.loopexit, %34
  %58 = add nsw i32 %.lcssa9, %41, !pdg.inst.id !103
  br label %59, !pdg.inst.id !909

59:                                               ; preds = %57, %101
  %60 = phi i32 [ %58, %57 ], [ %104, %101 ], !pdg.inst.id !160
  %61 = add nsw i32 %60, 1, !pdg.inst.id !164
  %62 = sext i32 %61 to i64, !pdg.inst.id !166
  %63 = tail call noalias i8* @malloc(i64 %62) #48, !pdg.inst.id !168
  store i8* %63, i8** %23, align 8, !tbaa !990, !pdg.inst.id !70
  %64 = shl i64 %40, 32, !pdg.inst.id !124
  %65 = ashr exact i64 %64, 32, !pdg.inst.id !176
  %66 = tail call i8* @strncpy(i8* %63, i8* nonnull %0, i64 %65) #48, !pdg.inst.id !47
  %67 = getelementptr inbounds i8, i8* %63, i64 %65, !pdg.inst.id !172
  %68 = zext i32 %.lcssa9 to i64, !pdg.inst.id !101
  %69 = tail call i8* @strncpy(i8* %67, i8* %37, i64 %68) #48, !pdg.inst.id !114
  br label %92, !pdg.inst.id !927

70:                                               ; preds = %101
  %71 = add i32 %.lcssa10, %41, !pdg.inst.id !97
  %72 = sext i32 %71 to i64, !pdg.inst.id !182
  %73 = tail call noalias i8* @malloc(i64 %72) #48, !pdg.inst.id !184
  store i8* %73, i8** %23, align 8, !tbaa !990, !pdg.inst.id !68
  %74 = shl i64 %.lcssa, 32, !pdg.inst.id !193
  %75 = ashr exact i64 %74, 32, !pdg.inst.id !196
  %76 = tail call i8* @strncpy(i8* %73, i8* nonnull %0, i64 %75) #48, !pdg.inst.id !49
  %77 = getelementptr inbounds i8, i8* %73, i64 %75, !pdg.inst.id !189
  %78 = zext i32 %.lcssa9 to i64, !pdg.inst.id !99
  %79 = tail call i8* @strncpy(i8* %77, i8* %37, i64 %78) #48, !pdg.inst.id !116
  %80 = add nsw i32 %.lcssa9, %102, !pdg.inst.id !107
  %81 = sext i32 %80 to i64, !pdg.inst.id !202
  %82 = getelementptr inbounds i8, i8* %73, i64 %81, !pdg.inst.id !187
  %83 = add i64 %74, 8589934592, !pdg.inst.id !194
  %84 = ashr exact i64 %83, 32, !pdg.inst.id !207
  %85 = getelementptr inbounds i8, i8* %0, i64 %84, !pdg.inst.id !51
  %86 = sub i64 %40, %.lcssa, !pdg.inst.id !122
  %87 = shl i64 %86, 32, !pdg.inst.id !211
  %88 = add i64 %87, -8589934592, !pdg.inst.id !213
  %89 = ashr exact i64 %88, 32, !pdg.inst.id !215
  %90 = tail call i8* @strncpy(i8* %82, i8* %85, i64 %89) #48, !pdg.inst.id !205
  %91 = add nsw i32 %104, -2, !pdg.inst.id !218
  br label %92, !pdg.inst.id !967

92:                                               ; preds = %70, %59
  %93 = phi i32 [ %91, %70 ], [ %60, %59 ], !pdg.inst.id !162
  %94 = phi i8* [ %73, %70 ], [ %63, %59 ], !pdg.inst.id !170
  %95 = sext i32 %93 to i64, !pdg.inst.id !220
  %96 = getelementptr inbounds i8, i8* %94, i64 %95, !pdg.inst.id !224
  store i8 0, i8* %96, align 1, !tbaa !989, !pdg.inst.id !227
  %97 = load i1, i1* @dim, align 4, !pdg.inst.id !229
  %98 = select i1 %97, i32 4, i32 3, !pdg.inst.id !230
  %99 = call i32 @putxyzw(i8** nonnull %23, i32* nonnull %22, double* %2, i32 %98) #48, !pdg.inst.id !55
  tail call void @free(i8* %94) #48, !pdg.inst.id !222
  tail call void @free(i8* %37) #48, !pdg.inst.id !118
  br label %100, !pdg.inst.id !979

100:                                              ; preds = %4, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #48, !pdg.inst.id !74
  ret void, !pdg.inst.id !992

101:                                              ; preds = %143, %46
  %.lcssa = phi i64 [ %48, %46 ], [ %142, %143 ], !pdg.inst.id !140
  %102 = trunc i64 %.lcssa to i32, !pdg.inst.id !233
  %103 = icmp slt i32 %102, 0, !pdg.inst.id !238
  %104 = add nsw i32 %.lcssa9, %41, !pdg.inst.id !105
  br i1 %103, label %59, label %70, !pdg.inst.id !240

105:                                              ; preds = %.preheader1
  store i32 1, i32* @19
  store i32 %3, i32* %19
  %106 = alloca [2 x i8*]
  %107 = getelementptr inbounds [2 x i8*], [2 x i8*]* %106, i64 0, i64 0
  %108 = bitcast i8** %107 to void (i8*, i8*)**
  store void (i8*, i8*)* @45, void (i8*, i8*)** %108
  %109 = getelementptr inbounds [2 x i8*], [2 x i8*]* %106, i64 0, i64 1
  %110 = bitcast i8** %109 to void (i8*, i8*)**
  store void (i8*, i8*)* @46, void (i8*, i8*)** %110
  %111 = bitcast [2 x i8*]* %106 to i8*
  %112 = alloca [9 x i64]
  %113 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 0
  store i64 64, i64* %113
  %114 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 1
  store i64 64, i64* %114
  %115 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 2
  store i64 64, i64* %115
  %116 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 3
  store i64 64, i64* %116
  %117 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 4
  store i64 64, i64* %117
  %118 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 5
  store i64 64, i64* %118
  %119 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 6
  store i64 64, i64* %119
  %120 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 7
  store i64 64, i64* %120
  %121 = getelementptr inbounds [9 x i64], [9 x i64]* %112, i64 0, i64 8
  store i64 1, i64* %121
  %122 = bitcast [9 x i64]* %112 to i64*
  call void @stageDispatcher(i8* %15, i64* %122, i8* %111, i64 2, i64 9)
  %123 = load i32, i32* %17
  %124 = load i32, i32* %21
  br label %125

125:                                              ; preds = %105
  store i32 0, i32* @19
  br label %34

126:                                              ; preds = %.preheader
  store i32 1, i32* @20
  store i8 %42, i8* %9
  store i8* %0, i8** %11
  %127 = alloca [1 x i8*]
  %128 = getelementptr inbounds [1 x i8*], [1 x i8*]* %127, i64 0, i64 0
  %129 = bitcast i8** %128 to void (i8*, i8*)**
  store void (i8*, i8*)* @47, void (i8*, i8*)** %129
  %130 = bitcast [1 x i8*]* %127 to i8*
  %131 = alloca [9 x i64]
  %132 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 0
  store i64 64, i64* %132
  %133 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 1
  store i64 64, i64* %133
  %134 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 2
  store i64 64, i64* %134
  %135 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 3
  store i64 64, i64* %135
  %136 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 4
  store i64 64, i64* %136
  %137 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 5
  store i64 64, i64* %137
  %138 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 6
  store i64 64, i64* %138
  %139 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 7
  store i64 64, i64* %139
  %140 = getelementptr inbounds [9 x i64], [9 x i64]* %131, i64 0, i64 8
  store i64 1, i64* %140
  %141 = bitcast [9 x i64]* %131 to i64*
  call void @stageDispatcher(i8* %6, i64* %141, i8* %130, i64 1, i64 9)
  %142 = load i64, i64* %7
  br label %143

143:                                              ; preds = %126
  %144 = getelementptr inbounds [32 x i64], [32 x i64]* %5, i64 0, i64 24
  %145 = load i64, i64* %144
  %146 = trunc i64 %145 to i32
  store i32 0, i32* @20
  switch i32 %146, label %101 [
    i32 1, label %.loopexit
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "copyextbonds"
Parallelizer:  Loop 30 = "  %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   More than 1 loop exit blocks
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %25 = load i32, i32* %24, align 4, !tbaa !334, !pdg.inst.id !107
DSWP:       %39 = load %struct.extbond_t*, %struct.extbond_t** %38, align 8, !tbaa !325, !pdg.inst.id !81
DSWP:       %24 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 2, !pdg.inst.id !50
DSWP:       %38 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 0, !pdg.inst.id !54
DSWP:       %23 = bitcast i8* %22 to i32*, !pdg.inst.id !104
DSWP:       %22 = getelementptr inbounds i8, i8* %9, i64 8, !pdg.inst.id !73
DSWP:       %21 = load i32, i32* %20, align 8, !tbaa !333, !pdg.inst.id !100
DSWP:       store %struct.extbond_t* null, %struct.extbond_t** %19, align 8, !tbaa !330, !pdg.inst.id !98
DSWP:       br i1 %34, label %37, label %35, !pdg.inst.id !125
DSWP:       %20 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 1, !pdg.inst.id !48
DSWP:       %19 = bitcast i8* %9 to %struct.extbond_t**, !pdg.inst.id !75
DSWP:       %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:       store i32 %21, i32* %23, align 8, !tbaa !333, !pdg.inst.id !102
DSWP:       %6 = phi %struct.extbond_t* [ %39, %37 ], [ %3, %.preheader ], !pdg.inst.id !42
DSWP:       %8 = phi %struct.extbond_t* [ %10, %37 ], [ null, %.preheader ], !pdg.inst.id !61
DSWP:       %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
DSWP:       %31 = bitcast i8* %30 to i32*, !pdg.inst.id !118
DSWP:       store i32 %25, i32* %27, align 4, !tbaa !334, !pdg.inst.id !109
DSWP:       %34 = icmp eq %struct.extbond_t* %8, null, !pdg.inst.id !62
DSWP:       store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:       %36 = bitcast %struct.extbond_t* %8 to i8**, !pdg.inst.id !64
DSWP:       br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:       br label %37, !pdg.inst.id !317
DSWP:       %29 = load i32, i32* %28, align 8, !tbaa !335, !pdg.inst.id !114
DSWP:       %40 = icmp eq %struct.extbond_t* %39, null, !pdg.inst.id !130
DSWP:       %26 = getelementptr inbounds i8, i8* %9, i64 12, !pdg.inst.id !71
DSWP:       %28 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 3, !pdg.inst.id !52
DSWP:       %27 = bitcast i8* %26 to i32*, !pdg.inst.id !111
DSWP:       %11 = icmp eq i8* %9, null, !pdg.inst.id !77
DSWP:       %30 = getelementptr inbounds i8, i8* %9, i64 16, !pdg.inst.id !69
DSWP:       br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:       store i8* %9, i8** %36, align 8, !tbaa !330, !pdg.inst.id !67
DSWP:   SCC: 1 Internal nodes:
DSWP:       %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:       %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:       %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:   Set:  0
DSWP:    Children: Set:  1; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; 
Heuristic:   PCA: Checking: Set:  0 Set:  1 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 2
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %25 = load i32, i32* %24, align 4, !tbaa !334, !pdg.inst.id !107
DSWP:       %39 = load %struct.extbond_t*, %struct.extbond_t** %38, align 8, !tbaa !325, !pdg.inst.id !81
DSWP:       %24 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 2, !pdg.inst.id !50
DSWP:       %38 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 0, !pdg.inst.id !54
DSWP:       %23 = bitcast i8* %22 to i32*, !pdg.inst.id !104
DSWP:       %22 = getelementptr inbounds i8, i8* %9, i64 8, !pdg.inst.id !73
DSWP:       %21 = load i32, i32* %20, align 8, !tbaa !333, !pdg.inst.id !100
DSWP:       store %struct.extbond_t* null, %struct.extbond_t** %19, align 8, !tbaa !330, !pdg.inst.id !98
DSWP:       br i1 %34, label %37, label %35, !pdg.inst.id !125
DSWP:       %20 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 1, !pdg.inst.id !48
DSWP:       %19 = bitcast i8* %9 to %struct.extbond_t**, !pdg.inst.id !75
DSWP:       %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:       store i32 %21, i32* %23, align 8, !tbaa !333, !pdg.inst.id !102
DSWP:       %6 = phi %struct.extbond_t* [ %39, %37 ], [ %3, %.preheader ], !pdg.inst.id !42
DSWP:       %8 = phi %struct.extbond_t* [ %10, %37 ], [ null, %.preheader ], !pdg.inst.id !61
DSWP:       %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
DSWP:       %31 = bitcast i8* %30 to i32*, !pdg.inst.id !118
DSWP:       store i32 %25, i32* %27, align 4, !tbaa !334, !pdg.inst.id !109
DSWP:       %34 = icmp eq %struct.extbond_t* %8, null, !pdg.inst.id !62
DSWP:       store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:       %36 = bitcast %struct.extbond_t* %8 to i8**, !pdg.inst.id !64
DSWP:       br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:       br label %37, !pdg.inst.id !317
DSWP:       %29 = load i32, i32* %28, align 8, !tbaa !335, !pdg.inst.id !114
DSWP:       %40 = icmp eq %struct.extbond_t* %39, null, !pdg.inst.id !130
DSWP:       %26 = getelementptr inbounds i8, i8* %9, i64 12, !pdg.inst.id !71
DSWP:       %28 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 3, !pdg.inst.id !52
DSWP:       %27 = bitcast i8* %26 to i32*, !pdg.inst.id !111
DSWP:       %11 = icmp eq i8* %9, null, !pdg.inst.id !77
DSWP:       %30 = getelementptr inbounds i8, i8* %9, i64 16, !pdg.inst.id !69
DSWP:       br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:       store i8* %9, i8** %36, align 8, !tbaa !330, !pdg.inst.id !67
DSWP:   SCC: 1 Internal nodes:
DSWP:       %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:       %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:       %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:   Set:  0
DSWP:    Children: Set:  1; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; 
DSWP:  There are 2 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 32
DSWP:     	  %25 = load i32, i32* %24, align 4, !tbaa !334, !pdg.inst.id !107
DSWP:     	  %39 = load %struct.extbond_t*, %struct.extbond_t** %38, align 8, !tbaa !325, !pdg.inst.id !81
DSWP:     	  %24 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 2, !pdg.inst.id !50
DSWP:     	  %38 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 0, !pdg.inst.id !54
DSWP:     	  %23 = bitcast i8* %22 to i32*, !pdg.inst.id !104
DSWP:     	  %22 = getelementptr inbounds i8, i8* %9, i64 8, !pdg.inst.id !73
DSWP:     	  %21 = load i32, i32* %20, align 8, !tbaa !333, !pdg.inst.id !100
DSWP:     	  store %struct.extbond_t* null, %struct.extbond_t** %19, align 8, !tbaa !330, !pdg.inst.id !98
DSWP:     	  br i1 %34, label %37, label %35, !pdg.inst.id !125
DSWP:     	  %20 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 1, !pdg.inst.id !48
DSWP:     	  %19 = bitcast i8* %9 to %struct.extbond_t**, !pdg.inst.id !75
DSWP:     	  %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     	  store i32 %21, i32* %23, align 8, !tbaa !333, !pdg.inst.id !102
DSWP:     	  %6 = phi %struct.extbond_t* [ %39, %37 ], [ %3, %.preheader ], !pdg.inst.id !42
DSWP:     	  %8 = phi %struct.extbond_t* [ %10, %37 ], [ null, %.preheader ], !pdg.inst.id !61
DSWP:     	  %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
DSWP:     	  %31 = bitcast i8* %30 to i32*, !pdg.inst.id !118
DSWP:     	  store i32 %25, i32* %27, align 4, !tbaa !334, !pdg.inst.id !109
DSWP:     	  %34 = icmp eq %struct.extbond_t* %8, null, !pdg.inst.id !62
DSWP:     	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	  %36 = bitcast %struct.extbond_t* %8 to i8**, !pdg.inst.id !64
DSWP:     	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	  br label %37, !pdg.inst.id !317
DSWP:     	  %29 = load i32, i32* %28, align 8, !tbaa !335, !pdg.inst.id !114
DSWP:     	  %40 = icmp eq %struct.extbond_t* %39, null, !pdg.inst.id !130
DSWP:     	  %26 = getelementptr inbounds i8, i8* %9, i64 12, !pdg.inst.id !71
DSWP:     	  %28 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %6, i64 0, i32 3, !pdg.inst.id !52
DSWP:     	  %27 = bitcast i8* %26 to i32*, !pdg.inst.id !111
DSWP:     	  %11 = icmp eq i8* %9, null, !pdg.inst.id !77
DSWP:     	  %30 = getelementptr inbounds i8, i8* %9, i64 16, !pdg.inst.id !69
DSWP:     	  br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:     	  store i8* %9, i8** %36, align 8, !tbaa !330, !pdg.inst.id !67
DSWP:     External nodes: 3
DSWP:     	  %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:     	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	  %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:     Edges: 158
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     	CTRL
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  %8 = phi %struct.extbond_t* [ %10, %37 ], [ null, %.preheader ], !pdg.inst.id !61
DSWP:     	CTRL
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
DSWP:     	CTRL
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  %11 = icmp eq i8* %9, null, !pdg.inst.id !77
DSWP:     	CTRL
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:     	CTRL
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  %6 = phi %struct.extbond_t* [ %39, %37 ], [ %3, %.preheader ], !pdg.inst.id !42
DSWP:     	CTRL
DSWP:     	From:	  %36 = bitcast %struct.extbond_t* %8 to i8**, !pdg.inst.id !64
DSWP:     	To:	  store i8* %9, i8** %36, align 8, !tbaa !330, !pdg.inst.id !67
DSWP:     	RAW (must)
DSWP:     	From:	  %34 = icmp eq %struct.extbond_t* %8, null, !pdg.inst.id !62
DSWP:     	To:	  br i1 %34, label %37, label %35, !pdg.inst.id !125
DSWP:     	RAW (must)
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  %9 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
DSWP:     	WAW (may) from memory 
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  %21 = load i32, i32* %20, align 8, !tbaa !333, !pdg.inst.id !100
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  %25 = load i32, i32* %24, align 4, !tbaa !334, !pdg.inst.id !107
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  %29 = load i32, i32* %28, align 8, !tbaa !335, !pdg.inst.id !114
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  store i8* %9, i8** %36, align 8, !tbaa !330, !pdg.inst.id !67
DSWP:     	WAW (may) from memory 
DSWP:     	From:	  store i32 %29, i32* %31, align 8, !tbaa !335, !pdg.inst.id !116
DSWP:     	To:	  %39 = load %struct.extbond_t*, %struct.extbond_t** %38, align 8, !tbaa !325, !pdg.inst.id !81
DSWP:     	RAW (may) from memory 
DSWP:     	....
DSWP:    
DSWP:    Stage: 1
DSWP:     Internal nodes: 3
DSWP:     	  %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:     	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	  %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:     External nodes: 3
DSWP:     	  %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	  br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:     Edges: 8
DSWP:     	From:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	To:	  %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:     	RAW (must)
DSWP:     	From:	  %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:     	To:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	RAW (must)
DSWP:     	From:	  %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:     	To:	  %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:     	RAW (must)
DSWP:     	From:	  %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:     	To:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	RAW (must)
DSWP:     	From:	  %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     	To:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:     	To:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:     	CTRL
DSWP:     	From:	  br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:     	To:	  %32 = icmp eq %struct.extbond_t* %7, null, !pdg.inst.id !57
DSWP:     	CTRL
DSWP:     	From:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:     	To:	  %7 = phi %struct.extbond_t* [ %33, %37 ], [ null, %.preheader ], !pdg.inst.id !56
DSWP:     	CTRL
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 9 10 11 12 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 
DSWP:      Pop value queues: 9 10 11 12 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %33 = icmp sgt i32 %30, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %33, label %._crit_edge, label %34, !pdg.inst.id !93
DSWP:    Queue: 9
DSWP:     Producer:	  %10 = bitcast i8* %9 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     Consumer:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:    Queue: 10
DSWP:     Producer:	  %40 = icmp eq %struct.extbond_t* %39, null, !pdg.inst.id !130
DSWP:     Consumer:	  br i1 %40, label %.loopexit, label %5, !pdg.inst.id !132
DSWP:    Queue: 11
DSWP:     Producer:	  %11 = icmp eq i8* %9, null, !pdg.inst.id !77
DSWP:     Consumer:	  br i1 %11, label %12, label %18, !pdg.inst.id !86
DSWP:    Queue: 12
DSWP:     Producer:	  %34 = icmp eq %struct.extbond_t* %8, null, !pdg.inst.id !62
DSWP:     Consumer:	  br i1 %34, label %37, label %35, !pdg.inst.id !125
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %3 = load %struct.extbond_t*, %struct.extbond_t** %2, align 8, !tbaa !325, !pdg.inst.id !40
DSWP:    Post loop env 2, producer:	  %33 = select i1 %32, %struct.extbond_t* %10, %struct.extbond_t* %7, !pdg.inst.id !59
DSWP:  Create 2 pipeline stages
Pipeline stage 0:

define void @48(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [13 x i8*]*
  %5 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 9
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca %struct.extbond_t*
  %9 = bitcast %struct.extbond_t** %8 to i64*
  %10 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 10
  %11 = bitcast i8** %10 to %"class.MARC::ThreadSafeQueue.27"**
  %12 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %11
  %13 = alloca i1
  %14 = bitcast i1* %13 to i8*
  %15 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 11
  %16 = bitcast i8** %15 to %"class.MARC::ThreadSafeQueue.27"**
  %17 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %16
  %18 = alloca i1
  %19 = bitcast i1* %18 to i8*
  %20 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 12
  %21 = bitcast i8** %20 to %"class.MARC::ThreadSafeQueue.27"**
  %22 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %21
  %23 = alloca i1
  %24 = bitcast i1* %23 to i8*
  %25 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %26 = bitcast i64* %25 to %struct.extbond_t**
  %27 = load %struct.extbond_t*, %struct.extbond_t** %26
  %28 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %29 = bitcast i64* %28 to i32*
  br label %33

30:                                               ; preds = %32, %31
  ret void

31:                                               ; preds = %33
  store i32 0, i32* %29
  br label %30

32:                                               ; preds = %71
  store i32 1, i32* %29
  br label %30

33:                                               ; preds = %2, %71
  %34 = phi %struct.extbond_t* [ %73, %71 ], [ %27, %2 ], !pdg.inst.id !30
  %35 = phi %struct.extbond_t* [ %37, %71 ], [ null, %2 ], !pdg.inst.id !31
  %36 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !32
  %37 = bitcast i8* %36 to %struct.extbond_t*, !pdg.inst.id !33
  store %struct.extbond_t* %37, %struct.extbond_t** %8
  %38 = load i64, i64* %9, align 8, !tbaa !34, !pdg.inst.id !38
  %39 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !39
  %40 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %39, align 8, !tbaa !40, !pdg.inst.id !42
  %41 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %40, i64 3, !pdg.inst.id !43
  %42 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %41, align 8, !pdg.inst.id !44
  call void %42(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %38), !pdg.inst.id !45
  %43 = icmp eq i8* %36, null, !pdg.inst.id !46
  store i1 %43, i1* %18
  %44 = load i8, i8* %19, align 1, !tbaa !47, !pdg.inst.id !48
  %45 = bitcast %"class.MARC::ThreadSafeQueue.27"* %17 to void (%"class.MARC::ThreadSafeQueue.27"*, i8)***, !pdg.inst.id !49
  %46 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)**, void (%"class.MARC::ThreadSafeQueue.27"*, i8)*** %45, align 8, !tbaa !40, !pdg.inst.id !50
  %47 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %46, i64 3, !pdg.inst.id !51
  %48 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %47, align 8, !pdg.inst.id !52
  call void %48(%"class.MARC::ThreadSafeQueue.27"* %17, i8 signext %44), !pdg.inst.id !53
  br i1 %43, label %31, label %49, !pdg.inst.id !54

49:                                               ; preds = %33
  %50 = bitcast i8* %36 to %struct.extbond_t**, !pdg.inst.id !55
  store %struct.extbond_t* null, %struct.extbond_t** %50, align 8, !tbaa !56, !pdg.inst.id !62
  %51 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %34, i64 0, i32 1, !pdg.inst.id !63
  %52 = load i32, i32* %51, align 8, !tbaa !64, !pdg.inst.id !65
  %53 = getelementptr inbounds i8, i8* %36, i64 8, !pdg.inst.id !66
  %54 = bitcast i8* %53 to i32*, !pdg.inst.id !67
  store i32 %52, i32* %54, align 8, !tbaa !64, !pdg.inst.id !68
  %55 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %34, i64 0, i32 2, !pdg.inst.id !69
  %56 = load i32, i32* %55, align 4, !tbaa !70, !pdg.inst.id !71
  %57 = getelementptr inbounds i8, i8* %36, i64 12, !pdg.inst.id !72
  %58 = bitcast i8* %57 to i32*, !pdg.inst.id !73
  store i32 %56, i32* %58, align 4, !tbaa !70, !pdg.inst.id !74
  %59 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %34, i64 0, i32 3, !pdg.inst.id !75
  %60 = load i32, i32* %59, align 8, !tbaa !76, !pdg.inst.id !77
  %61 = getelementptr inbounds i8, i8* %36, i64 16, !pdg.inst.id !78
  %62 = bitcast i8* %61 to i32*, !pdg.inst.id !79
  store i32 %60, i32* %62, align 8, !tbaa !76, !pdg.inst.id !80
  %63 = icmp eq %struct.extbond_t* %35, null, !pdg.inst.id !81
  store i1 %63, i1* %23
  %64 = load i8, i8* %24, align 1, !tbaa !47, !pdg.inst.id !48
  %65 = bitcast %"class.MARC::ThreadSafeQueue.27"* %22 to void (%"class.MARC::ThreadSafeQueue.27"*, i8)***, !pdg.inst.id !49
  %66 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)**, void (%"class.MARC::ThreadSafeQueue.27"*, i8)*** %65, align 8, !tbaa !40, !pdg.inst.id !50
  %67 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %66, i64 3, !pdg.inst.id !51
  %68 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %67, align 8, !pdg.inst.id !52
  call void %68(%"class.MARC::ThreadSafeQueue.27"* %22, i8 signext %64), !pdg.inst.id !53
  br i1 %63, label %71, label %69, !pdg.inst.id !82

69:                                               ; preds = %49
  %70 = bitcast %struct.extbond_t* %35 to i8**, !pdg.inst.id !83
  store i8* %36, i8** %70, align 8, !tbaa !56, !pdg.inst.id !84
  br label %71, !pdg.inst.id !85

71:                                               ; preds = %49, %69
  %72 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %34, i64 0, i32 0, !pdg.inst.id !86
  %73 = load %struct.extbond_t*, %struct.extbond_t** %72, align 8, !tbaa !87, !pdg.inst.id !88
  %74 = icmp eq %struct.extbond_t* %73, null, !pdg.inst.id !89
  store i1 %74, i1* %13
  %75 = load i8, i8* %14, align 1, !tbaa !47, !pdg.inst.id !48
  %76 = bitcast %"class.MARC::ThreadSafeQueue.27"* %12 to void (%"class.MARC::ThreadSafeQueue.27"*, i8)***, !pdg.inst.id !49
  %77 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)**, void (%"class.MARC::ThreadSafeQueue.27"*, i8)*** %76, align 8, !tbaa !40, !pdg.inst.id !50
  %78 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %77, i64 3, !pdg.inst.id !51
  %79 = load void (%"class.MARC::ThreadSafeQueue.27"*, i8)*, void (%"class.MARC::ThreadSafeQueue.27"*, i8)** %78, align 8, !pdg.inst.id !52
  call void %79(%"class.MARC::ThreadSafeQueue.27"* %12, i8 signext %75), !pdg.inst.id !53
  br i1 %74, label %32, label %33, !pdg.inst.id !90
}

Pipeline stage 1:

define void @49(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [13 x i8*]*
  %5 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 9
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca %struct.extbond_t*
  %9 = bitcast %struct.extbond_t** %8 to i64*
  %10 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 10
  %11 = bitcast i8** %10 to %"class.MARC::ThreadSafeQueue.27"**
  %12 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %11
  %13 = alloca i1
  %14 = bitcast i1* %13 to i8*
  %15 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 11
  %16 = bitcast i8** %15 to %"class.MARC::ThreadSafeQueue.27"**
  %17 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %16
  %18 = alloca i1
  %19 = bitcast i1* %18 to i8*
  %20 = getelementptr inbounds [13 x i8*], [13 x i8*]* %4, i64 0, i64 12
  %21 = bitcast i8** %20 to %"class.MARC::ThreadSafeQueue.27"**
  %22 = load %"class.MARC::ThreadSafeQueue.27"*, %"class.MARC::ThreadSafeQueue.27"** %21
  %23 = alloca i1
  %24 = bitcast i1* %23 to i8*
  %25 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %26 = bitcast i64* %25 to %struct.extbond_t**
  %27 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %28 = bitcast i64* %27 to i32*
  br label %32

29:                                               ; preds = %31, %30
  ret void

30:                                               ; preds = %32
  store i32 0, i32* %28
  br label %29

31:                                               ; preds = %55
  store i32 1, i32* %28
  br label %29

32:                                               ; preds = %2, %55
  %33 = phi %struct.extbond_t* [ %48, %55 ], [ null, %2 ], !pdg.inst.id !30
  %34 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %35 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %34, align 8, !tbaa !32, !pdg.inst.id !35
  %36 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %35, i64 1, !pdg.inst.id !36
  %37 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %36, align 8, !pdg.inst.id !37
  %38 = call zeroext i1 %37(%"class.MARC::ThreadSafeQueue.54"* %7, i64* dereferenceable(8) %9), !pdg.inst.id !38
  %39 = load %struct.extbond_t*, %struct.extbond_t** %8
  %40 = bitcast %"class.MARC::ThreadSafeQueue.27"* %17 to i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)***, !pdg.inst.id !39
  %41 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)**, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*** %40, align 8, !tbaa !32, !pdg.inst.id !40
  %42 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %41, i64 1, !pdg.inst.id !41
  %43 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %42, align 8, !pdg.inst.id !42
  %44 = call zeroext i1 %43(%"class.MARC::ThreadSafeQueue.27"* %17, i8* dereferenceable(1) %19), !pdg.inst.id !43
  %45 = load i1, i1* %18
  br i1 %45, label %30, label %46, !pdg.inst.id !44

46:                                               ; preds = %32
  %47 = icmp eq %struct.extbond_t* %33, null, !pdg.inst.id !45
  %48 = select i1 %47, %struct.extbond_t* %39, %struct.extbond_t* %33, !pdg.inst.id !46
  %49 = bitcast %"class.MARC::ThreadSafeQueue.27"* %22 to i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)***, !pdg.inst.id !39
  %50 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)**, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*** %49, align 8, !tbaa !32, !pdg.inst.id !40
  %51 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %50, i64 1, !pdg.inst.id !41
  %52 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %51, align 8, !pdg.inst.id !42
  %53 = call zeroext i1 %52(%"class.MARC::ThreadSafeQueue.27"* %22, i8* dereferenceable(1) %24), !pdg.inst.id !43
  %54 = load i1, i1* %23
  store %struct.extbond_t* %48, %struct.extbond_t** %26
  br i1 %54, label %55, label %62, !pdg.inst.id !47

55:                                               ; preds = %46, %62
  %56 = bitcast %"class.MARC::ThreadSafeQueue.27"* %12 to i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)***, !pdg.inst.id !39
  %57 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)**, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*** %56, align 8, !tbaa !32, !pdg.inst.id !40
  %58 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %57, i64 1, !pdg.inst.id !41
  %59 = load i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.27"*, i8*)** %58, align 8, !pdg.inst.id !42
  %60 = call zeroext i1 %59(%"class.MARC::ThreadSafeQueue.27"* %12, i8* dereferenceable(1) %14), !pdg.inst.id !43
  %61 = load i1, i1* %13
  br i1 %61, label %31, label %32, !pdg.inst.id !48

62:                                               ; preds = %46
  br label %55
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local %struct.extbond_t* @copyextbonds(%struct.residue_t* nocapture readonly) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !33 {
  %2 = alloca [24 x i64]
  %3 = bitcast [24 x i64]* %2 to i8*
  %4 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 0
  %5 = bitcast i64* %4 to %struct.extbond_t**
  %6 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 8
  %7 = bitcast i64* %6 to %struct.extbond_t**
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 16
  %9 = bitcast i64* %8 to i32*
  %10 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 10, !pdg.inst.id !35
  %11 = load %struct.extbond_t*, %struct.extbond_t** %10, align 8, !tbaa !325, !pdg.inst.id !40
  %12 = icmp eq %struct.extbond_t* %11, null, !pdg.inst.id !44
  br i1 %12, label %51, label %.preheader, !prof !329, !pdg.inst.id !46

.preheader:                                       ; preds = %1
  %13 = load i32, i32* @21
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %53, label %15

15:                                               ; preds = %.preheader, %47
  %16 = phi %struct.extbond_t* [ %49, %47 ], [ %11, %.preheader ], !pdg.inst.id !42
  %17 = phi %struct.extbond_t* [ %43, %47 ], [ null, %.preheader ], !pdg.inst.id !56
  %18 = phi %struct.extbond_t* [ %20, %47 ], [ null, %.preheader ], !pdg.inst.id !61
  %19 = tail call noalias i8* @malloc(i64 24) #48, !pdg.inst.id !66
  %20 = bitcast i8* %19 to %struct.extbond_t*, !pdg.inst.id !79
  %21 = icmp eq i8* %19, null, !pdg.inst.id !77
  br i1 %21, label %22, label %28, !pdg.inst.id !86

22:                                               ; preds = %76, %15
  %23 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !88
  %24 = getelementptr [22 x i8], [22 x i8]* @.str.20.244, i64 0, i64 0, !pdg.inst.id !91
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %23, i8* align 1 %24, i64 22, i1 false), !pdg.inst.id !89
  %25 = getelementptr [34 x i8], [34 x i8]* @.str.203, i64 0, i64 0, !pdg.inst.id !93
  %26 = getelementptr [256 x i8], [256 x i8]* @e_msg.208, i64 0, i64 0, !pdg.inst.id !96
  %27 = tail call i32 @rt_errormsg_s(i32 1, i8* %25, i8* %26) #48, !pdg.inst.id !94
  br label %51, !pdg.inst.id !293

28:                                               ; preds = %15
  %29 = bitcast i8* %19 to %struct.extbond_t**, !pdg.inst.id !75
  store %struct.extbond_t* null, %struct.extbond_t** %29, align 8, !tbaa !330, !pdg.inst.id !98
  %30 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %16, i64 0, i32 1, !pdg.inst.id !48
  %31 = load i32, i32* %30, align 8, !tbaa !333, !pdg.inst.id !100
  %32 = getelementptr inbounds i8, i8* %19, i64 8, !pdg.inst.id !73
  %33 = bitcast i8* %32 to i32*, !pdg.inst.id !104
  store i32 %31, i32* %33, align 8, !tbaa !333, !pdg.inst.id !102
  %34 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %16, i64 0, i32 2, !pdg.inst.id !50
  %35 = load i32, i32* %34, align 4, !tbaa !334, !pdg.inst.id !107
  %36 = getelementptr inbounds i8, i8* %19, i64 12, !pdg.inst.id !71
  %37 = bitcast i8* %36 to i32*, !pdg.inst.id !111
  store i32 %35, i32* %37, align 4, !tbaa !334, !pdg.inst.id !109
  %38 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %16, i64 0, i32 3, !pdg.inst.id !52
  %39 = load i32, i32* %38, align 8, !tbaa !335, !pdg.inst.id !114
  %40 = getelementptr inbounds i8, i8* %19, i64 16, !pdg.inst.id !69
  %41 = bitcast i8* %40 to i32*, !pdg.inst.id !118
  store i32 %39, i32* %41, align 8, !tbaa !335, !pdg.inst.id !116
  %42 = icmp eq %struct.extbond_t* %17, null, !pdg.inst.id !57
  %43 = select i1 %42, %struct.extbond_t* %20, %struct.extbond_t* %17, !pdg.inst.id !59
  %44 = icmp eq %struct.extbond_t* %18, null, !pdg.inst.id !62
  br i1 %44, label %47, label %45, !pdg.inst.id !125

45:                                               ; preds = %28
  %46 = bitcast %struct.extbond_t* %18 to i8**, !pdg.inst.id !64
  store i8* %19, i8** %46, align 8, !tbaa !330, !pdg.inst.id !67
  br label %47, !pdg.inst.id !317

47:                                               ; preds = %28, %45
  %48 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %16, i64 0, i32 0, !pdg.inst.id !54
  %49 = load %struct.extbond_t*, %struct.extbond_t** %48, align 8, !tbaa !325, !pdg.inst.id !81
  %50 = icmp eq %struct.extbond_t* %49, null, !pdg.inst.id !130
  br i1 %50, label %.loopexit, label %15, !pdg.inst.id !132

.loopexit:                                        ; preds = %76, %47
  %.lcssa = phi %struct.extbond_t* [ %43, %47 ], [ %75, %76 ], !pdg.inst.id !122
  br label %51, !pdg.inst.id !324

51:                                               ; preds = %.loopexit, %1, %22
  %52 = phi %struct.extbond_t* [ null, %22 ], [ null, %1 ], [ %.lcssa, %.loopexit ], !pdg.inst.id !134
  ret %struct.extbond_t* %52, !pdg.inst.id !136

53:                                               ; preds = %.preheader
  store i32 1, i32* @21
  store %struct.extbond_t* %11, %struct.extbond_t** %7
  %54 = alloca [2 x i8*]
  %55 = getelementptr inbounds [2 x i8*], [2 x i8*]* %54, i64 0, i64 0
  %56 = bitcast i8** %55 to void (i8*, i8*)**
  store void (i8*, i8*)* @49, void (i8*, i8*)** %56
  %57 = getelementptr inbounds [2 x i8*], [2 x i8*]* %54, i64 0, i64 1
  %58 = bitcast i8** %57 to void (i8*, i8*)**
  store void (i8*, i8*)* @50, void (i8*, i8*)** %58
  %59 = bitcast [2 x i8*]* %54 to i8*
  %60 = alloca [13 x i64]
  %61 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 0
  store i64 64, i64* %61
  %62 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 1
  store i64 64, i64* %62
  %63 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 2
  store i64 64, i64* %63
  %64 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 3
  store i64 64, i64* %64
  %65 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 4
  store i64 64, i64* %65
  %66 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 5
  store i64 64, i64* %66
  %67 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 6
  store i64 64, i64* %67
  %68 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 7
  store i64 64, i64* %68
  %69 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 8
  store i64 1, i64* %69
  %70 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 9
  store i64 64, i64* %70
  %71 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 10
  store i64 1, i64* %71
  %72 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 11
  store i64 1, i64* %72
  %73 = getelementptr inbounds [13 x i64], [13 x i64]* %60, i64 0, i64 12
  store i64 1, i64* %73
  %74 = bitcast [13 x i64]* %60 to i64*
  call void @stageDispatcher(i8* %3, i64* %74, i8* %59, i64 2, i64 13)
  %75 = load %struct.extbond_t*, %struct.extbond_t** %5
  br label %76

76:                                               ; preds = %53
  %77 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 16
  %78 = load i64, i64* %77
  %79 = trunc i64 %78 to i32
  store i32 0, i32* @21
  switch i32 %79, label %22 [
    i32 1, label %.loopexit
  ]
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "copyresidue"
Parallelizer:  Loop 31 = "  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 3
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:       %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:   SCC: 1 Internal nodes:
DSWP:       %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456
DSWP:       %151 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 1, !pdg.inst.id !454
DSWP:       %160 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 1, !pdg.inst.id !292
DSWP:       %157 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 0, !pdg.inst.id !294
DSWP:       store i32 %156, i32* %157, align 4, !tbaa !25636, !pdg.inst.id !498
DSWP:       store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:       %150 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 0, !pdg.inst.id !302
DSWP:       %153 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 1, !pdg.inst.id !300
DSWP:       store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:       store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:       %158 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 1, !pdg.inst.id !446
DSWP:       %155 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 0, !pdg.inst.id !448
DSWP:       %149 = load i32, i32* %148, align 4, !tbaa !25636, !pdg.inst.id !482
DSWP:       %152 = load i32, i32* %151, align 4, !tbaa !25636, !pdg.inst.id !487
DSWP:       %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:       %156 = load i32, i32* %155, align 4, !tbaa !25636, !pdg.inst.id !496
DSWP:   SCC: 2 Internal nodes:
DSWP:       %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:   Set:  0
DSWP:    Children: Set:  1; Set:  2; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; Set:  2; 
DSWP:   Set:  2
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
Heuristic:   PCA: Checking: Set:  0 Set:  1
 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  2 Is possible
Heuristic:   PCA: Checking: Set:  2 Set:  1 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 3
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:       %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:   SCC: 1 Internal nodes:
DSWP:       %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456
DSWP:       %151 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 1, !pdg.inst.id !454
DSWP:       %160 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 1, !pdg.inst.id !292
DSWP:       %157 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 0, !pdg.inst.id !294
DSWP:       store i32 %156, i32* %157, align 4, !tbaa !25636, !pdg.inst.id !498
DSWP:       store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:       %150 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 0, !pdg.inst.id !302
DSWP:       %153 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 1, !pdg.inst.id !300
DSWP:       store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:       store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:       %158 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 1, !pdg.inst.id !446
DSWP:       %155 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 0, !pdg.inst.id !448
DSWP:       %149 = load i32, i32* %148, align 4, !tbaa !25636, !pdg.inst.id !482
DSWP:       %152 = load i32, i32* %151, align 4, !tbaa !25636, !pdg.inst.id !487
DSWP:       %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:       %156 = load i32, i32* %155, align 4, !tbaa !25636, !pdg.inst.id !496
DSWP:   SCC: 2 Internal nodes:
DSWP:       %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:   Set:  0
DSWP:    Children: Set:  1; Set:  2; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; Set:  2; 
DSWP:   Set:  2
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:  There are 3 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 2
DSWP:     	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	  %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:     External nodes: 6
DSWP:     	  %151 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 1, !pdg.inst.id !454
DSWP:     	  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456
DSWP:     	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 1, !pdg.inst.id !300
DSWP:     	  br i1 %163, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512
DSWP:     	  %150 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 0, !pdg.inst.id !302
DSWP:     Edges: 9
DSWP:     	From:	  %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:     	To:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	RAW (must)
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %163, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512
DSWP:     	To:	  %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:     	CTRL
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	RAW (must)
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456
DSWP:     	RAW (must)
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %150 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 0, !pdg.inst.id !302
DSWP:     	RAW (must)
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %151 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 1, !pdg.inst.id !454
DSWP:     	RAW (must)
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 1, !pdg.inst.id !300
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %163, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512
DSWP:     	To:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 1
DSWP:     Internal nodes: 1
DSWP:     	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     External nodes: 6
DSWP:     	  %157 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 0, !pdg.inst.id !294
DSWP:     	  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 1, !pdg.inst.id !446
DSWP:     	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 0, !pdg.inst.id !448
DSWP:     	  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 1, !pdg.inst.id !292
DSWP:     	  br i1 %163, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512
DSWP:     Edges: 6
DSWP:     	From:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	To:	  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 0, !pdg.inst.id !448
DSWP:     	RAW (must)
DSWP:     	From:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	To:	  %157 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 0, !pdg.inst.id !294
DSWP:     	RAW (must)
DSWP:     	From:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	To:	  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 1, !pdg.inst.id !446
DSWP:     	RAW (must)
DSWP:     	From:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	To:	  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 1, !pdg.inst.id !292
DSWP:     	RAW (must)
DSWP:     	From:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     	To:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %163, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512
DSWP:     	To:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 2
DSWP:     Internal nodes: 16
DSWP:     	  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456
DSWP:     	  %151 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 1, !pdg.inst.id !454
DSWP:     	  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 1, !pdg.inst.id !292
DSWP:     	  %157 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 0, !pdg.inst.id !294
DSWP:     	  store i32 %156, i32* %157, align 4, !tbaa !25636, !pdg.inst.id !498
DSWP:     	  store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:     	  %150 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 0, !pdg.inst.id !302
DSWP:     	  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 1, !pdg.inst.id !300
DSWP:     	  store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:     	  store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:     	  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 1, !pdg.inst.id !446
DSWP:     	  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 0, !pdg.inst.id !448
DSWP:     	  %149 = load i32, i32* %148, align 4, !tbaa !25636, !pdg.inst.id !482
DSWP:     	  %152 = load i32, i32* %151, align 4, !tbaa !25636, !pdg.inst.id !487
DSWP:     	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	  %156 = load i32, i32* %155, align 4, !tbaa !25636, !pdg.inst.id !496
DSWP:     External nodes: 3
DSWP:     	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     	  br i1 %163, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512
DSWP:     	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Edges: 68
DSWP:     	From:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	To:	  store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:     	RAW (must)
DSWP:     	From:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	To:	  store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	To:	  store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	To:	  store i32 %156, i32* %157, align 4, !tbaa !25636, !pdg.inst.id !498
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	To:	  store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:     	To:	  %149 = load i32, i32* %148, align 4, !tbaa !25636, !pdg.inst.id !482
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:     	To:	  %152 = load i32, i32* %151, align 4, !tbaa !25636, !pdg.inst.id !487
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:     	To:	  %156 = load i32, i32* %155, align 4, !tbaa !25636, !pdg.inst.id !496
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %149, i32* %150, align 4, !tbaa !25636, !pdg.inst.id !484
DSWP:     	To:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:     	To:	  %149 = load i32, i32* %148, align 4, !tbaa !25636, !pdg.inst.id !482
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:     	To:	  %152 = load i32, i32* %151, align 4, !tbaa !25636, !pdg.inst.id !487
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:     	To:	  %156 = load i32, i32* %155, align 4, !tbaa !25636, !pdg.inst.id !496
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %152, i32* %153, align 4, !tbaa !25636, !pdg.inst.id !489
DSWP:     	To:	  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !501
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:     	To:	  %149 = load i32, i32* %148, align 4, !tbaa !25636, !pdg.inst.id !482
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !503
DSWP:     	To:	  %152 = load i32, i32* %151, align 4, !tbaa !25636, !pdg.inst.id !487
DSWP:     	RAW (may) from memory 
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 13 14 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 15 
DSWP:      Pop value queues: 13 
DSWP:    Stage: 2
DSWP:      Push value queues: 
DSWP:      Pop value queues: 14 15 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %33 = icmp sgt i32 %30, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %33, label %._crit_edge, label %34, !pdg.inst.id !93
DSWP:    Queue: 9
DSWP:     Producer:	  %20 = bitcast i8* %19 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     Consumer:	  %43 = select i1 %42, %struct.extbond_t* %20, %struct.extbond_t* %17, !pdg.inst.id !59
DSWP:    Queue: 10
DSWP:     Producer:	  %50 = icmp eq %struct.extbond_t* %49, null, !pdg.inst.id !130
DSWP:     Consumer:	  br i1 %50, label %.loopexit, label %15, !pdg.inst.id !132
DSWP:    Queue: 11
DSWP:     Producer:	  %21 = icmp eq i8* %19, null, !pdg.inst.id !77
DSWP:     Consumer:	  br i1 %21, label %22, label %28, !pdg.inst.id !86
DSWP:    Queue: 12
DSWP:     Producer:	  %44 = icmp eq %struct.extbond_t* %18, null, !pdg.inst.id !62
DSWP:     Consumer:	  br i1 %44, label %47, label %45, !pdg.inst.id !125
DSWP:    Queue: 13
DSWP:     Producer:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:    Queue: 14
DSWP:     Producer:	  %146 = phi i64 [ 0, %143 ], [ %161, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 0, !pdg.inst.id !456
DSWP:     Consumer:	  %150 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 0, !pdg.inst.id !302
DSWP:     Consumer:	  %151 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %146, i64 1, !pdg.inst.id !454
DSWP:     Consumer:	  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %146, i64 1, !pdg.inst.id !300
DSWP:    Queue: 15
DSWP:     Producer:	  %154 = or i64 %146, 1, !pdg.inst.id !472
DSWP:     Consumer:	  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 0, !pdg.inst.id !448
DSWP:     Consumer:	  %157 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 0, !pdg.inst.id !294
DSWP:     Consumer:	  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %139, i64 %154, i64 1, !pdg.inst.id !446
DSWP:     Consumer:	  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 %154, i64 1, !pdg.inst.id !292
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %144 = sub nsw i64 %140, %141, !pdg.inst.id !460
DSWP:    Pre loop env 2, producer:	  %64 = phi [2 x i32]* [ %52, %48 ], [ null, %44 ], !pdg.inst.id !275
DSWP:    Pre loop env 3, producer:	  %139 = load [2 x i32]*, [2 x i32]** %138, align 8, !tbaa !25635, !pdg.inst.id !444
DSWP:    Post loop env 4, producer:	  %161 = add nuw nsw i64 %146, 2, !pdg.inst.id !474
DSWP:  Create 3 pipeline stages
Pipeline stage 0:

define void @51(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [16 x i8*]*
  %5 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 13
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 14
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  br label %18

16:                                               ; preds = %17
  ret void

17:                                               ; preds = %18
  store i64 %31, i64* %15
  br label %16

18:                                               ; preds = %2, %34
  %19 = phi i64 [ 0, %2 ], [ %31, %34 ], !pdg.inst.id !30
  %20 = phi i64 [ %14, %2 ], [ %32, %34 ], !pdg.inst.id !31
  store i64 %19, i64* %12
  %21 = load i64, i64* %12, align 8, !tbaa !32, !pdg.inst.id !36
  %22 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %23 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %22, align 8, !tbaa !38, !pdg.inst.id !40
  %24 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %23, i64 3, !pdg.inst.id !41
  %25 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %24, align 8, !pdg.inst.id !42
  call void %25(%"class.MARC::ThreadSafeQueue.54"* %11, i64 %21), !pdg.inst.id !43
  store i64 %19, i64* %8
  %26 = load i64, i64* %8, align 8, !tbaa !32, !pdg.inst.id !36
  %27 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %28 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %27, align 8, !tbaa !38, !pdg.inst.id !40
  %29 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %28, i64 3, !pdg.inst.id !41
  %30 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %29, align 8, !pdg.inst.id !42
  call void %30(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %26), !pdg.inst.id !43
  %31 = add nuw nsw i64 %19, 2, !pdg.inst.id !44
  %32 = add i64 %20, -2, !pdg.inst.id !45
  %33 = icmp eq i64 %32, 0, !pdg.inst.id !46
  br i1 %33, label %17, label %34, !pdg.inst.id !47

34:                                               ; preds = %18
  br label %18, !pdg.inst.id !48
}

Pipeline stage 1:

define void @52(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [16 x i8*]*
  %5 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 15
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 13
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = load i64, i64* %13
  br label %17

15:                                               ; preds = %16
  ret void

16:                                               ; preds = %17
  br label %15

17:                                               ; preds = %2, %33
  %18 = phi i64 [ %14, %2 ], [ %31, %33 ], !pdg.inst.id !30
  %19 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %20 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %19, align 8, !tbaa !32, !pdg.inst.id !35
  %21 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %20, i64 1, !pdg.inst.id !36
  %22 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %21, align 8, !pdg.inst.id !37
  %23 = call zeroext i1 %22(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %24 = load i64, i64* %12
  %25 = or i64 %24, 1, !pdg.inst.id !39
  store i64 %25, i64* %8
  %26 = load i64, i64* %8, align 8, !tbaa !40, !pdg.inst.id !43
  %27 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !44
  %28 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %27, align 8, !tbaa !32, !pdg.inst.id !45
  %29 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %28, i64 3, !pdg.inst.id !46
  %30 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %29, align 8, !pdg.inst.id !47
  call void %30(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %26), !pdg.inst.id !48
  %31 = add i64 %18, -2, !pdg.inst.id !49
  %32 = icmp eq i64 %31, 0, !pdg.inst.id !50
  br i1 %32, label %16, label %33, !pdg.inst.id !51

33:                                               ; preds = %17
  br label %17, !pdg.inst.id !52
}

Pipeline stage 2:

define void @53(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [16 x i8*]*
  %5 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 14
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 15
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %16 = bitcast i64* %15 to [2 x i32]**
  %17 = load [2 x i32]*, [2 x i32]** %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %19 = bitcast i64* %18 to [2 x i32]**
  %20 = load [2 x i32]*, [2 x i32]** %19
  br label %23

21:                                               ; preds = %22
  ret void

22:                                               ; preds = %23
  br label %21

23:                                               ; preds = %2, %51
  %24 = phi i64 [ %14, %2 ], [ %49, %51 ], !pdg.inst.id !30
  %25 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %26 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %25, align 8, !tbaa !32, !pdg.inst.id !35
  %27 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %26, i64 1, !pdg.inst.id !36
  %28 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %27, align 8, !pdg.inst.id !37
  %29 = call zeroext i1 %28(%"class.MARC::ThreadSafeQueue.54"* %7, i64* dereferenceable(8) %8), !pdg.inst.id !38
  %30 = load i64, i64* %8
  %31 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 %30, i64 0, !pdg.inst.id !39
  %32 = load i32, i32* %31, align 4, !tbaa !40, !pdg.inst.id !44
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %30, i64 0, !pdg.inst.id !45
  store i32 %32, i32* %33, align 4, !tbaa !40, !pdg.inst.id !46
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 %30, i64 1, !pdg.inst.id !47
  %35 = load i32, i32* %34, align 4, !tbaa !40, !pdg.inst.id !48
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %30, i64 1, !pdg.inst.id !49
  store i32 %35, i32* %36, align 4, !tbaa !40, !pdg.inst.id !50
  %37 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %38 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %37, align 8, !tbaa !32, !pdg.inst.id !35
  %39 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %38, i64 1, !pdg.inst.id !36
  %40 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %39, align 8, !pdg.inst.id !37
  %41 = call zeroext i1 %40(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %42 = load i64, i64* %12
  %43 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 %42, i64 0, !pdg.inst.id !51
  %44 = load i32, i32* %43, align 4, !tbaa !40, !pdg.inst.id !52
  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %42, i64 0, !pdg.inst.id !53
  store i32 %44, i32* %45, align 4, !tbaa !40, !pdg.inst.id !54
  %46 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 %42, i64 1, !pdg.inst.id !55
  %47 = load i32, i32* %46, align 4, !tbaa !40, !pdg.inst.id !56
  %48 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %42, i64 1, !pdg.inst.id !57
  store i32 %47, i32* %48, align 4, !tbaa !40, !pdg.inst.id !58
  %49 = add i64 %24, -2, !pdg.inst.id !59
  %50 = icmp eq i64 %49, 0, !pdg.inst.id !60
  br i1 %50, label %22, label %51, !pdg.inst.id !61

51:                                               ; preds = %23
  br label %23, !pdg.inst.id !62
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local %struct.residue_t* @copyresidue(%struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !33 {
  %2 = alloca [32 x i64]
  %3 = bitcast [32 x i64]* %2 to i8*
  %4 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 0
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 8
  %6 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 16
  %7 = bitcast i64* %6 to [2 x i32]**
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 24
  %9 = bitcast i64* %8 to [2 x i32]**
  %10 = tail call noalias i8* @malloc(i64 128) #48, !pdg.inst.id !58
  %11 = bitcast i8* %10 to %struct.residue_t*, !pdg.inst.id !122
  %12 = icmp eq i8* %10, null, !pdg.inst.id !120
  br i1 %12, label %13, label %22, !prof !25616, !pdg.inst.id !126

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !46
  %15 = load i8*, i8** %14, align 8, !tbaa !25617, !pdg.inst.id !128
  %16 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !132
  %17 = getelementptr [15 x i8], [15 x i8]* @.str.25.394, i64 0, i64 0, !pdg.inst.id !134
  %18 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %16, i8* %17, i8* %15) #48, !pdg.inst.id !130
  %19 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !136
  %20 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !139
  %21 = tail call i32 @rt_errormsg_s(i32 1, i8* %19, i8* %20) #48, !pdg.inst.id !137
  br label %527, !pdg.inst.id !24743

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 15, !pdg.inst.id !44
  %24 = load i32, i32* %23, align 8, !tbaa !25623, !pdg.inst.id !145
  %25 = sext i32 %24 to i64, !pdg.inst.id !147
  %26 = mul nsw i64 %25, 176, !pdg.inst.id !151
  %27 = tail call noalias i8* @malloc(i64 %26) #48, !pdg.inst.id !153
  %28 = bitcast i8* %27 to %struct.atom_t*, !pdg.inst.id !161
  %29 = icmp eq i8* %27, null, !pdg.inst.id !159
  br i1 %29, label %30, label %39, !prof !25616, !pdg.inst.id !215

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !48
  %32 = load i8*, i8** %31, align 8, !tbaa !25617, !pdg.inst.id !217
  %33 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !221
  %34 = getelementptr [24 x i8], [24 x i8]* @.str.27.395, i64 0, i64 0, !pdg.inst.id !223
  %35 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %33, i8* %34, i8* %32) #48, !pdg.inst.id !219
  %36 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !225
  %37 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !228
  %38 = tail call i32 @rt_errormsg_s(i32 1, i8* %36, i8* %37) #48, !pdg.inst.id !226
  br label %527, !pdg.inst.id !24761

39:                                               ; preds = %22
  %40 = shl nsw i64 %25, 2, !pdg.inst.id !149
  %41 = tail call noalias i8* @malloc(i64 %40) #48, !pdg.inst.id !230
  %42 = icmp eq i8* %41, null, !pdg.inst.id !240
  br i1 %42, label %43, label %52, !prof !25616, !pdg.inst.id !242

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !54
  %45 = load i8*, i8** %44, align 8, !tbaa !25617, !pdg.inst.id !244
  %46 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !248
  %47 = getelementptr [29 x i8], [29 x i8]* @.str.28.396, i64 0, i64 0, !pdg.inst.id !250
  %48 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %46, i8* %47, i8* %45) #48, !pdg.inst.id !246
  %49 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !252
  %50 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !255
  %51 = tail call i32 @rt_errormsg_s(i32 1, i8* %49, i8* %50) #48, !pdg.inst.id !253
  br label %527, !pdg.inst.id !24776

52:                                               ; preds = %39
  %53 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 11, !pdg.inst.id !50
  %54 = load i32, i32* %53, align 8, !tbaa !25624, !pdg.inst.id !259
  %55 = icmp sgt i32 %54, 0, !pdg.inst.id !263
  br i1 %55, label %56, label %71, !prof !25616, !pdg.inst.id !265

56:                                               ; preds = %52
  %57 = sext i32 %54 to i64, !pdg.inst.id !261
  %58 = shl nsw i64 %57, 3, !pdg.inst.id !267
  %59 = tail call noalias i8* @malloc(i64 %58) #48, !pdg.inst.id !269
  %60 = bitcast i8* %59 to [2 x i32]*, !pdg.inst.id !273
  %61 = icmp eq i8* %59, null, !pdg.inst.id !271
  br i1 %61, label %62, label %71, !pdg.inst.id !277

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !56
  %64 = load i8*, i8** %63, align 8, !tbaa !25617, !pdg.inst.id !279
  %65 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !283
  %66 = getelementptr [24 x i8], [24 x i8]* @.str.29.397, i64 0, i64 0, !pdg.inst.id !285
  %67 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %65, i8* %66, i8* %64) #48, !pdg.inst.id !281
  %68 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !287
  %69 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !290
  %70 = tail call i32 @rt_errormsg_s(i32 1, i8* %68, i8* %69) #48, !pdg.inst.id !288
  br label %527, !pdg.inst.id !24797

71:                                               ; preds = %52, %56
  %72 = phi [2 x i32]* [ %60, %56 ], [ null, %52 ], !pdg.inst.id !275
  %73 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 13, !pdg.inst.id !63
  %74 = load i32, i32* %73, align 8, !tbaa !25625, !pdg.inst.id !310
  %75 = icmp sgt i32 %74, 0, !pdg.inst.id !314
  br i1 %75, label %76, label %91, !prof !25616, !pdg.inst.id !316

76:                                               ; preds = %71
  %77 = sext i32 %74 to i64, !pdg.inst.id !312
  %78 = mul nsw i64 %77, 24, !pdg.inst.id !318
  %79 = tail call noalias i8* @malloc(i64 %78) #48, !pdg.inst.id !320
  %80 = bitcast i8* %79 to %struct.chiral_t*, !pdg.inst.id !324
  %81 = icmp eq i8* %79, null, !pdg.inst.id !322
  br i1 %81, label %82, label %91, !pdg.inst.id !328

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !65
  %84 = load i8*, i8** %83, align 8, !tbaa !25617, !pdg.inst.id !330
  %85 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !334
  %86 = getelementptr [24 x i8], [24 x i8]* @.str.30.398, i64 0, i64 0, !pdg.inst.id !336
  %87 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %85, i8* %86, i8* %84) #48, !pdg.inst.id !332
  %88 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !338
  %89 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !340
  %90 = tail call i32 @rt_errormsg_s(i32 1, i8* %88, i8* %89) #48, !pdg.inst.id !117
  br label %527, !pdg.inst.id !24825

91:                                               ; preds = %71, %76
  %92 = phi %struct.chiral_t* [ %80, %76 ], [ null, %71 ], !pdg.inst.id !326
  %93 = bitcast i8* %10 to %struct.residue_t**, !pdg.inst.id !97
  store %struct.residue_t* null, %struct.residue_t** %93, align 8, !tbaa !25626, !pdg.inst.id !346
  %94 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !67
  %95 = load i8*, i8** %94, align 8, !tbaa !25617, !pdg.inst.id !348
  %96 = tail call i64 @strlen(i8* %95) #49, !pdg.inst.id !352
  %97 = add i64 %96, 1, !pdg.inst.id !354
  %98 = tail call noalias i8* @malloc(i64 %97) #48, !pdg.inst.id !356
  %99 = icmp eq i8* %98, null, !pdg.inst.id !361
  br i1 %99, label %100, label %104, !prof !25616, !pdg.inst.id !363

100:                                              ; preds = %91
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !365
  %102 = getelementptr [44 x i8], [44 x i8]* @.str.31.399, i64 0, i64 0, !pdg.inst.id !368
  %103 = tail call i64 @fwrite(i8* %102, i64 43, i64 1, %struct._IO_FILE* %101) #50, !pdg.inst.id !366
  tail call void @exit(i32 1) #51, !pdg.inst.id !1459
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24850

104:                                              ; preds = %91
  %105 = tail call i8* @strcpy(i8* nonnull %98, i8* %95) #48, !pdg.inst.id !350
  %106 = getelementptr inbounds i8, i8* %10, i64 24, !pdg.inst.id !99
  %107 = bitcast i8* %106 to i8**, !pdg.inst.id !370
  store i8* %98, i8** %107, align 8, !tbaa !25617, !pdg.inst.id !359
  %108 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 5, !pdg.inst.id !69
  %109 = load i8*, i8** %108, align 8, !tbaa !25628, !pdg.inst.id !373
  %110 = tail call i64 @strlen(i8* %109) #49, !pdg.inst.id !377
  %111 = add i64 %110, 1, !pdg.inst.id !379
  %112 = tail call noalias i8* @malloc(i64 %111) #48, !pdg.inst.id !381
  %113 = icmp eq i8* %112, null, !pdg.inst.id !386
  br i1 %113, label %114, label %118, !prof !25616, !pdg.inst.id !388

114:                                              ; preds = %104
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !118
  %116 = getelementptr [42 x i8], [42 x i8]* @.str.32.400, i64 0, i64 0, !pdg.inst.id !392
  %117 = tail call i64 @fwrite(i8* %116, i64 41, i64 1, %struct._IO_FILE* %115) #50, !pdg.inst.id !390
  tail call void @exit(i32 1) #51, !pdg.inst.id !1484
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24866

118:                                              ; preds = %104
  %119 = tail call i8* @strcpy(i8* nonnull %112, i8* %109) #48, !pdg.inst.id !375
  %120 = getelementptr inbounds i8, i8* %10, i64 32, !pdg.inst.id !91
  %121 = bitcast i8* %120 to i8**, !pdg.inst.id !394
  store i8* %112, i8** %121, align 8, !tbaa !25628, !pdg.inst.id !384
  %122 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 1, !pdg.inst.id !71
  %123 = load i32, i32* %122, align 8, !tbaa !25629, !pdg.inst.id !397
  %124 = getelementptr inbounds i8, i8* %10, i64 8, !pdg.inst.id !115
  %125 = bitcast i8* %124 to i32*, !pdg.inst.id !401
  store i32 %123, i32* %125, align 8, !tbaa !25629, !pdg.inst.id !399
  %126 = getelementptr inbounds i8, i8* %10, i64 12, !pdg.inst.id !113
  %127 = bitcast i8* %126 to i32*, !pdg.inst.id !404
  store i32 0, i32* %127, align 4, !tbaa !25630, !pdg.inst.id !406
  %128 = getelementptr inbounds i8, i8* %10, i64 16, !pdg.inst.id !111
  %129 = bitcast i8* %128 to i32*, !pdg.inst.id !408
  store i32 0, i32* %129, align 8, !tbaa !25631, !pdg.inst.id !410
  %130 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 6, !pdg.inst.id !73
  %131 = load i32, i32* %130, align 8, !tbaa !25632, !pdg.inst.id !412
  %132 = getelementptr inbounds i8, i8* %10, i64 40, !pdg.inst.id !109
  %133 = bitcast i8* %132 to i32*, !pdg.inst.id !416
  store i32 %131, i32* %133, align 8, !tbaa !25632, !pdg.inst.id !414
  %134 = getelementptr inbounds i8, i8* %10, i64 56, !pdg.inst.id !107
  %135 = bitcast i8* %134 to %struct.strand_t**, !pdg.inst.id !419
  store %struct.strand_t* null, %struct.strand_t** %135, align 8, !tbaa !25633, !pdg.inst.id !421
  %136 = tail call %struct.extbond_t* @copyextbonds(%struct.residue_t* nonnull %0) #48, !pdg.inst.id !35
  %137 = getelementptr inbounds i8, i8* %10, i64 64, !pdg.inst.id !105
  %138 = bitcast i8* %137 to %struct.extbond_t**, !pdg.inst.id !425
  store %struct.extbond_t* %136, %struct.extbond_t** %138, align 8, !tbaa !25634, !pdg.inst.id !423
  %139 = load i32, i32* %53, align 8, !tbaa !25624, !pdg.inst.id !257
  %140 = getelementptr inbounds i8, i8* %10, i64 72, !pdg.inst.id !103
  %141 = bitcast i8* %140 to i32*, !pdg.inst.id !436
  store i32 %139, i32* %141, align 8, !tbaa !25624, !pdg.inst.id !434
  %142 = getelementptr inbounds i8, i8* %10, i64 80, !pdg.inst.id !101
  %143 = bitcast i8* %142 to [2 x i32]**, !pdg.inst.id !439
  store [2 x i32]* %72, [2 x i32]** %143, align 8, !tbaa !25635, !pdg.inst.id !304
  %144 = icmp sgt i32 %139, 0, !pdg.inst.id !432
  br i1 %144, label %145, label %184, !prof !25616, !pdg.inst.id !442

145:                                              ; preds = %118
  %146 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 12, !pdg.inst.id !75
  %147 = load [2 x i32]*, [2 x i32]** %146, align 8, !tbaa !25635, !pdg.inst.id !444
  %148 = sext i32 %139 to i64, !pdg.inst.id !430
  %149 = and i64 %148, 1, !pdg.inst.id !462
  %150 = icmp eq i32 %139, 1, !pdg.inst.id !428
  br i1 %150, label %174, label %151, !pdg.inst.id !467

151:                                              ; preds = %145
  %152 = sub nsw i64 %148, %149, !pdg.inst.id !460
  %153 = load i32, i32* @22
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %529, label %155

155:                                              ; preds = %151, %._crit_edge2
  %156 = phi i64 [ 0, %151 ], [ %171, %._crit_edge2 ], !pdg.inst.id !471
  %157 = phi i64 [ %152, %151 ], [ %172, %._crit_edge2 ], !pdg.inst.id !469
  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %156, i64 0, !pdg.inst.id !456
  %159 = load i32, i32* %158, align 4, !tbaa !25636, !pdg.inst.id !482
  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %156, i64 0, !pdg.inst.id !302
  store i32 %159, i32* %160, align 4, !tbaa !25636, !pdg.inst.id !484
  %161 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %156, i64 1, !pdg.inst.id !454
  %162 = load i32, i32* %161, align 4, !tbaa !25636, !pdg.inst.id !487
  %163 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %156, i64 1, !pdg.inst.id !300
  store i32 %162, i32* %163, align 4, !tbaa !25636, !pdg.inst.id !489
  %164 = or i64 %156, 1, !pdg.inst.id !472
  %165 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %164, i64 0, !pdg.inst.id !448
  %166 = load i32, i32* %165, align 4, !tbaa !25636, !pdg.inst.id !496
  %167 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %164, i64 0, !pdg.inst.id !294
  store i32 %166, i32* %167, align 4, !tbaa !25636, !pdg.inst.id !498
  %168 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %164, i64 1, !pdg.inst.id !446
  %169 = load i32, i32* %168, align 4, !tbaa !25636, !pdg.inst.id !501
  %170 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %164, i64 1, !pdg.inst.id !292
  store i32 %169, i32* %170, align 4, !tbaa !25636, !pdg.inst.id !503
  %171 = add nuw nsw i64 %156, 2, !pdg.inst.id !474
  %172 = add i64 %157, -2, !pdg.inst.id !480
  %173 = icmp eq i64 %172, 0, !pdg.inst.id !509
  br i1 %173, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512

._crit_edge2:                                     ; preds = %155
  br label %155, !pdg.inst.id !24953

.loopexit6:                                       ; preds = %557, %155
  %.lcssa15 = phi i64 [ %171, %155 ], [ %556, %557 ], !pdg.inst.id !506
  br label %174, !pdg.inst.id !24956

174:                                              ; preds = %.loopexit6, %145
  %175 = phi i64 [ 0, %145 ], [ %.lcssa15, %.loopexit6 ], !pdg.inst.id !514
  %176 = icmp eq i64 %149, 0, !pdg.inst.id !465
  br i1 %176, label %184, label %177, !pdg.inst.id !520

177:                                              ; preds = %174
  %178 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %175, i64 0, !pdg.inst.id !452
  %179 = load i32, i32* %178, align 4, !tbaa !25636, !pdg.inst.id !522
  %180 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %175, i64 0, !pdg.inst.id !298
  store i32 %179, i32* %180, align 4, !tbaa !25636, !pdg.inst.id !524
  %181 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %175, i64 1, !pdg.inst.id !450
  %182 = load i32, i32* %181, align 4, !tbaa !25636, !pdg.inst.id !527
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %175, i64 1, !pdg.inst.id !296
  store i32 %182, i32* %183, align 4, !tbaa !25636, !pdg.inst.id !529
  br label %184, !pdg.inst.id !24969

184:                                              ; preds = %177, %174, %118
  %185 = load i32, i32* %73, align 8, !tbaa !25625, !pdg.inst.id !308
  %186 = getelementptr inbounds i8, i8* %10, i64 88, !pdg.inst.id !95
  %187 = bitcast i8* %186 to i32*, !pdg.inst.id !536
  store i32 %185, i32* %187, align 8, !tbaa !25625, !pdg.inst.id !534
  %188 = getelementptr inbounds i8, i8* %10, i64 96, !pdg.inst.id !93
  %189 = bitcast i8* %188 to %struct.chiral_t**, !pdg.inst.id !539
  store %struct.chiral_t* %92, %struct.chiral_t** %189, align 8, !tbaa !25637, !pdg.inst.id !344
  %190 = icmp sgt i32 %185, 0, !pdg.inst.id !532
  br i1 %190, label %191, label %219, !prof !25616, !pdg.inst.id !542

191:                                              ; preds = %184
  %192 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 14, !pdg.inst.id !77
  %193 = load %struct.chiral_t*, %struct.chiral_t** %192, align 8, !tbaa !25637, !pdg.inst.id !544
  br label %194, !pdg.inst.id !24980

194:                                              ; preds = %._crit_edge, %191
  %195 = phi i64 [ 0, %191 ], [ %214, %._crit_edge ], !pdg.inst.id !556
  %196 = phi %struct.chiral_t* [ %92, %191 ], [ %215, %._crit_edge ], !pdg.inst.id !342
  %197 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 0, !pdg.inst.id !554
  %198 = load i32, i32* %197, align 4, !tbaa !25636, !pdg.inst.id !576
  %199 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 0, !pdg.inst.id !574
  store i32 %198, i32* %199, align 4, !tbaa !25636, !pdg.inst.id !578
  %200 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 1, !pdg.inst.id !550
  %201 = load i32, i32* %200, align 4, !tbaa !25636, !pdg.inst.id !581
  %202 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 1, !pdg.inst.id !568
  store i32 %201, i32* %202, align 4, !tbaa !25636, !pdg.inst.id !583
  %203 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 2, !pdg.inst.id !548
  %204 = load i32, i32* %203, align 4, !tbaa !25636, !pdg.inst.id !586
  %205 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 2, !pdg.inst.id !566
  store i32 %204, i32* %205, align 4, !tbaa !25636, !pdg.inst.id !588
  %206 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 3, !pdg.inst.id !546
  %207 = load i32, i32* %206, align 4, !tbaa !25636, !pdg.inst.id !591
  %208 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 3, !pdg.inst.id !564
  store i32 %207, i32* %208, align 4, !tbaa !25636, !pdg.inst.id !593
  %209 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 1, !pdg.inst.id !552
  %210 = bitcast double* %209 to i64*, !pdg.inst.id !596
  %211 = load i64, i64* %210, align 8, !tbaa !25638, !pdg.inst.id !598
  %212 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 1, !pdg.inst.id !570
  %213 = bitcast double* %212 to i64*, !pdg.inst.id !602
  store i64 %211, i64* %213, align 8, !tbaa !25638, !pdg.inst.id !600
  %214 = add nuw nsw i64 %195, 1, !pdg.inst.id !562
  %215 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 1, !pdg.inst.id !572
  %216 = load i32, i32* %73, align 8, !tbaa !25625, !pdg.inst.id !306
  %217 = sext i32 %216 to i64, !pdg.inst.id !609
  %218 = icmp slt i64 %214, %217, !pdg.inst.id !605
  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612

._crit_edge:                                      ; preds = %194
  br label %194, !pdg.inst.id !25042

.loopexit5:                                       ; preds = %194
  br label %219, !pdg.inst.id !25044

219:                                              ; preds = %.loopexit5, %184
  %220 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 7, !pdg.inst.id !52
  %221 = load i32, i32* %220, align 4, !tbaa !25641, !pdg.inst.id !614
  %222 = getelementptr inbounds i8, i8* %10, i64 44, !pdg.inst.id !89
  %223 = bitcast i8* %222 to i32*, !pdg.inst.id !618
  store i32 %221, i32* %223, align 4, !tbaa !25641, !pdg.inst.id !616
  %224 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 8, !pdg.inst.id !61
  %225 = load i32, i32* %224, align 8, !tbaa !25642, !pdg.inst.id !621
  %226 = getelementptr inbounds i8, i8* %10, i64 48, !pdg.inst.id !87
  %227 = bitcast i8* %226 to i32*, !pdg.inst.id !625
  store i32 %225, i32* %227, align 8, !tbaa !25642, !pdg.inst.id !623
  %228 = load i32, i32* %23, align 8, !tbaa !25623, !pdg.inst.id !143
  %229 = getelementptr inbounds i8, i8* %10, i64 104, !pdg.inst.id !85
  %230 = bitcast i8* %229 to i32*, !pdg.inst.id !641
  store i32 %228, i32* %230, align 8, !tbaa !25623, !pdg.inst.id !638
  %231 = getelementptr inbounds i8, i8* %10, i64 112, !pdg.inst.id !83
  %232 = bitcast i8* %231 to i8**, !pdg.inst.id !644
  store i8* %41, i8** %232, align 8, !tbaa !25643, !pdg.inst.id !238
  %233 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 16, !pdg.inst.id !40
  %234 = load i32*, i32** %233, align 8, !tbaa !25643, !pdg.inst.id !647
  %235 = bitcast i32* %234 to i8*, !pdg.inst.id !657
  %236 = icmp eq i32* %234, null, !pdg.inst.id !662
  %237 = icmp sgt i32 %228, 0, !pdg.inst.id !636
  %238 = bitcast i8* %41 to i32*, !pdg.inst.id !236
  br i1 %236, label %335, label %239, !prof !25644, !pdg.inst.id !666

239:                                              ; preds = %219
  br i1 %237, label %240, label %413, !pdg.inst.id !670

240:                                              ; preds = %239
  %241 = sext i32 %228 to i64, !pdg.inst.id !634
  %242 = icmp ult i32 %228, 32, !pdg.inst.id !630
  br i1 %242, label %243, label %245, !pdg.inst.id !699

243:                                              ; preds = %333, %245, %240
  %244 = phi i64 [ 0, %245 ], [ 0, %240 ], [ %254, %333 ], !pdg.inst.id !701
  br label %400, !pdg.inst.id !25071

245:                                              ; preds = %240
  %246 = shl nsw i64 %241, 2, !pdg.inst.id !695
  %247 = getelementptr i8, i8* %41, i64 %246, !pdg.inst.id !234
  %248 = getelementptr i32, i32* %234, i64 %241, !pdg.inst.id !655
  %249 = bitcast i32* %248 to i8*, !pdg.inst.id !706
  %250 = icmp ult i8* %41, %249, !pdg.inst.id !232
  %251 = icmp ugt i8* %247, %235, !pdg.inst.id !664
  %252 = and i1 %250, %251, !pdg.inst.id !709
  br i1 %252, label %243, label %253, !pdg.inst.id !712

253:                                              ; preds = %245
  %254 = and i64 %241, -32, !pdg.inst.id !692
  %255 = add nsw i64 %254, -32, !pdg.inst.id !714
  %256 = lshr exact i64 %255, 5, !pdg.inst.id !720
  %257 = add nuw nsw i64 %256, 1, !pdg.inst.id !722
  %258 = and i64 %257, 1, !pdg.inst.id !726
  %259 = icmp eq i64 %255, 0, !pdg.inst.id !718
  br i1 %259, label %309, label %260, !pdg.inst.id !731

260:                                              ; preds = %253
  %261 = sub nuw nsw i64 %257, %258, !pdg.inst.id !724
  br label %262, !pdg.inst.id !25099

262:                                              ; preds = %._crit_edge5, %260
  %263 = phi i64 [ 0, %260 ], [ %306, %._crit_edge5 ], !pdg.inst.id !735
  %264 = phi i64 [ %261, %260 ], [ %307, %._crit_edge5 ], !pdg.inst.id !733
  %265 = getelementptr inbounds i32, i32* %234, i64 %263, !pdg.inst.id !653
  %266 = bitcast i32* %265 to <8 x i32>*, !pdg.inst.id !744
  %267 = load <8 x i32>, <8 x i32>* %266, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
  %268 = getelementptr inbounds i32, i32* %265, i64 8, !pdg.inst.id !750
  %269 = bitcast i32* %268 to <8 x i32>*, !pdg.inst.id !756
  %270 = load <8 x i32>, <8 x i32>* %269, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
  %271 = getelementptr inbounds i32, i32* %265, i64 16, !pdg.inst.id !748
  %272 = bitcast i32* %271 to <8 x i32>*, !pdg.inst.id !762
  %273 = load <8 x i32>, <8 x i32>* %272, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
  %274 = getelementptr inbounds i32, i32* %265, i64 24, !pdg.inst.id !746
  %275 = bitcast i32* %274 to <8 x i32>*, !pdg.inst.id !768
  %276 = load <8 x i32>, <8 x i32>* %275, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
  %277 = getelementptr inbounds i32, i32* %238, i64 %263, !pdg.inst.id !684
  %278 = bitcast i32* %277 to <8 x i32>*, !pdg.inst.id !774
  store <8 x i32> %267, <8 x i32>* %278, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
  %279 = getelementptr inbounds i32, i32* %277, i64 8, !pdg.inst.id !780
  %280 = bitcast i32* %279 to <8 x i32>*, !pdg.inst.id !783
  store <8 x i32> %270, <8 x i32>* %280, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
  %281 = getelementptr inbounds i32, i32* %277, i64 16, !pdg.inst.id !778
  %282 = bitcast i32* %281 to <8 x i32>*, !pdg.inst.id !786
  store <8 x i32> %273, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
  %283 = getelementptr inbounds i32, i32* %277, i64 24, !pdg.inst.id !776
  %284 = bitcast i32* %283 to <8 x i32>*, !pdg.inst.id !789
  store <8 x i32> %276, <8 x i32>* %284, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
  %285 = or i64 %263, 32, !pdg.inst.id !736
  %286 = getelementptr inbounds i32, i32* %234, i64 %285, !pdg.inst.id !649
  %287 = bitcast i32* %286 to <8 x i32>*, !pdg.inst.id !800
  %288 = load <8 x i32>, <8 x i32>* %287, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
  %289 = getelementptr inbounds i32, i32* %286, i64 8, !pdg.inst.id !798
  %290 = bitcast i32* %289 to <8 x i32>*, !pdg.inst.id !806
  %291 = load <8 x i32>, <8 x i32>* %290, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
  %292 = getelementptr inbounds i32, i32* %286, i64 16, !pdg.inst.id !796
  %293 = bitcast i32* %292 to <8 x i32>*, !pdg.inst.id !812
  %294 = load <8 x i32>, <8 x i32>* %293, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
  %295 = getelementptr inbounds i32, i32* %286, i64 24, !pdg.inst.id !794
  %296 = bitcast i32* %295 to <8 x i32>*, !pdg.inst.id !818
  %297 = load <8 x i32>, <8 x i32>* %296, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
  %298 = getelementptr inbounds i32, i32* %238, i64 %285, !pdg.inst.id !674
  %299 = bitcast i32* %298 to <8 x i32>*, !pdg.inst.id !830
  store <8 x i32> %288, <8 x i32>* %299, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
  %300 = getelementptr inbounds i32, i32* %298, i64 8, !pdg.inst.id !828
  %301 = bitcast i32* %300 to <8 x i32>*, !pdg.inst.id !833
  store <8 x i32> %291, <8 x i32>* %301, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
  %302 = getelementptr inbounds i32, i32* %298, i64 16, !pdg.inst.id !826
  %303 = bitcast i32* %302 to <8 x i32>*, !pdg.inst.id !836
  store <8 x i32> %294, <8 x i32>* %303, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
  %304 = getelementptr inbounds i32, i32* %298, i64 24, !pdg.inst.id !824
  %305 = bitcast i32* %304 to <8 x i32>*, !pdg.inst.id !839
  store <8 x i32> %297, <8 x i32>* %305, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
  %306 = add i64 %263, 64, !pdg.inst.id !738
  %307 = add i64 %264, -2, !pdg.inst.id !742
  %308 = icmp eq i64 %307, 0, !pdg.inst.id !845
  br i1 %308, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848

._crit_edge5:                                     ; preds = %262
  br label %262, !pdg.inst.id !25211

.loopexit4:                                       ; preds = %262
  %.lcssa14 = phi i64 [ %306, %262 ], !pdg.inst.id !842
  br label %309, !pdg.inst.id !25214

309:                                              ; preds = %.loopexit4, %253
  %310 = phi i64 [ 0, %253 ], [ %.lcssa14, %.loopexit4 ], !pdg.inst.id !850
  %311 = icmp eq i64 %258, 0, !pdg.inst.id !729
  br i1 %311, label %333, label %312, !pdg.inst.id !854

312:                                              ; preds = %309
  %313 = getelementptr inbounds i32, i32* %234, i64 %310, !pdg.inst.id !651
  %314 = bitcast i32* %313 to <8 x i32>*, !pdg.inst.id !862
  %315 = load <8 x i32>, <8 x i32>* %314, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !864
  %316 = getelementptr inbounds i32, i32* %313, i64 8, !pdg.inst.id !860
  %317 = bitcast i32* %316 to <8 x i32>*, !pdg.inst.id !868
  %318 = load <8 x i32>, <8 x i32>* %317, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !870
  %319 = getelementptr inbounds i32, i32* %313, i64 16, !pdg.inst.id !858
  %320 = bitcast i32* %319 to <8 x i32>*, !pdg.inst.id !874
  %321 = load <8 x i32>, <8 x i32>* %320, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !876
  %322 = getelementptr inbounds i32, i32* %313, i64 24, !pdg.inst.id !856
  %323 = bitcast i32* %322 to <8 x i32>*, !pdg.inst.id !880
  %324 = load <8 x i32>, <8 x i32>* %323, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !882
  %325 = getelementptr inbounds i32, i32* %238, i64 %310, !pdg.inst.id !676
  %326 = bitcast i32* %325 to <8 x i32>*, !pdg.inst.id !892
  store <8 x i32> %315, <8 x i32>* %326, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !866
  %327 = getelementptr inbounds i32, i32* %325, i64 8, !pdg.inst.id !890
  %328 = bitcast i32* %327 to <8 x i32>*, !pdg.inst.id !895
  store <8 x i32> %318, <8 x i32>* %328, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !872
  %329 = getelementptr inbounds i32, i32* %325, i64 16, !pdg.inst.id !888
  %330 = bitcast i32* %329 to <8 x i32>*, !pdg.inst.id !898
  store <8 x i32> %321, <8 x i32>* %330, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !878
  %331 = getelementptr inbounds i32, i32* %325, i64 24, !pdg.inst.id !886
  %332 = bitcast i32* %331 to <8 x i32>*, !pdg.inst.id !901
  store <8 x i32> %324, <8 x i32>* %332, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !884
  br label %333, !pdg.inst.id !25243

333:                                              ; preds = %309, %312
  %334 = icmp eq i64 %254, %241, !pdg.inst.id !690
  br i1 %334, label %416, label %243, !pdg.inst.id !904

335:                                              ; preds = %219
  br i1 %237, label %336, label %413, !prof !25644, !pdg.inst.id !672

336:                                              ; preds = %335
  %337 = sext i32 %228 to i64, !pdg.inst.id !632
  %338 = icmp ult i32 %228, 32, !pdg.inst.id !628
  br i1 %338, label %339, label %341, !prof !25644, !pdg.inst.id !912

339:                                              ; preds = %398, %336
  %340 = phi i64 [ 0, %336 ], [ %342, %398 ], !pdg.inst.id !914
  br label %407, !pdg.inst.id !25252

341:                                              ; preds = %336
  %342 = and i64 %337, -32, !pdg.inst.id !908
  %343 = add nsw i64 %342, -32, !pdg.inst.id !917
  %344 = lshr exact i64 %343, 5, !pdg.inst.id !923
  %345 = add nuw nsw i64 %344, 1, !pdg.inst.id !925
  %346 = and i64 %345, 1, !pdg.inst.id !929
  %347 = icmp eq i64 %343, 0, !pdg.inst.id !921
  br i1 %347, label %382, label %348, !pdg.inst.id !934

348:                                              ; preds = %341
  %349 = sub nuw nsw i64 %345, %346, !pdg.inst.id !927
  br label %350, !pdg.inst.id !25267

350:                                              ; preds = %._crit_edge4, %348
  %351 = phi i64 [ 0, %348 ], [ %378, %._crit_edge4 ], !pdg.inst.id !938
  %352 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %348 ], [ %379, %._crit_edge4 ], !pdg.inst.id !944
  %353 = phi i64 [ %349, %348 ], [ %380, %._crit_edge4 ], !pdg.inst.id !936
  %354 = getelementptr inbounds i32, i32* %238, i64 %351, !pdg.inst.id !682
  %355 = add <8 x i32> %352, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !961
  %356 = add <8 x i32> %352, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !957
  %357 = add <8 x i32> %352, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !955
  %358 = bitcast i32* %354 to <8 x i32>*, !pdg.inst.id !965
  store <8 x i32> %352, <8 x i32>* %358, align 4, !tbaa !25636, !pdg.inst.id !959
  %359 = getelementptr inbounds i32, i32* %354, i64 8, !pdg.inst.id !971
  %360 = bitcast i32* %359 to <8 x i32>*, !pdg.inst.id !980
  store <8 x i32> %355, <8 x i32>* %360, align 4, !tbaa !25636, !pdg.inst.id !973
  %361 = getelementptr inbounds i32, i32* %354, i64 16, !pdg.inst.id !969
  %362 = bitcast i32* %361 to <8 x i32>*, !pdg.inst.id !983
  store <8 x i32> %356, <8 x i32>* %362, align 4, !tbaa !25636, !pdg.inst.id !975
  %363 = getelementptr inbounds i32, i32* %354, i64 24, !pdg.inst.id !967
  %364 = bitcast i32* %363 to <8 x i32>*, !pdg.inst.id !986
  store <8 x i32> %357, <8 x i32>* %364, align 4, !tbaa !25636, !pdg.inst.id !977
  %365 = or i64 %351, 32, !pdg.inst.id !939
  %366 = add <8 x i32> %352, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !pdg.inst.id !953
  %367 = getelementptr inbounds i32, i32* %238, i64 %365, !pdg.inst.id !678
  %368 = add <8 x i32> %352, <i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40>, !pdg.inst.id !951
  %369 = add <8 x i32> %352, <i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48>, !pdg.inst.id !949
  %370 = add <8 x i32> %352, <i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56>, !pdg.inst.id !947
  %371 = bitcast i32* %367 to <8 x i32>*, !pdg.inst.id !998
  store <8 x i32> %366, <8 x i32>* %371, align 4, !tbaa !25636, !pdg.inst.id !990
  %372 = getelementptr inbounds i32, i32* %367, i64 8, !pdg.inst.id !996
  %373 = bitcast i32* %372 to <8 x i32>*, !pdg.inst.id !1007
  store <8 x i32> %368, <8 x i32>* %373, align 4, !tbaa !25636, !pdg.inst.id !1000
  %374 = getelementptr inbounds i32, i32* %367, i64 16, !pdg.inst.id !994
  %375 = bitcast i32* %374 to <8 x i32>*, !pdg.inst.id !1010
  store <8 x i32> %369, <8 x i32>* %375, align 4, !tbaa !25636, !pdg.inst.id !1002
  %376 = getelementptr inbounds i32, i32* %367, i64 24, !pdg.inst.id !992
  %377 = bitcast i32* %376 to <8 x i32>*, !pdg.inst.id !1013
  store <8 x i32> %370, <8 x i32>* %377, align 4, !tbaa !25636, !pdg.inst.id !1004
  %378 = add i64 %351, 64, !pdg.inst.id !941
  %379 = add <8 x i32> %352, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>, !pdg.inst.id !945
  %380 = add i64 %353, -2, !pdg.inst.id !963
  %381 = icmp eq i64 %380, 0, !pdg.inst.id !1022
  br i1 %381, label %.loopexit2, label %._crit_edge4, !llvm.loop !25652, !pdg.inst.id !1025

._crit_edge4:                                     ; preds = %350
  br label %350, !pdg.inst.id !25349

.loopexit2:                                       ; preds = %350
  %.lcssa13 = phi i64 [ %378, %350 ], !pdg.inst.id !1016
  %.lcssa = phi <8 x i32> [ %379, %350 ], !pdg.inst.id !1019
  br label %382, !pdg.inst.id !25353

382:                                              ; preds = %.loopexit2, %341
  %383 = phi i64 [ 0, %341 ], [ %.lcssa13, %.loopexit2 ], !pdg.inst.id !1027
  %384 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %341 ], [ %.lcssa, %.loopexit2 ], !pdg.inst.id !1029
  %385 = icmp eq i64 %346, 0, !pdg.inst.id !932
  br i1 %385, label %398, label %386, !pdg.inst.id !1040

386:                                              ; preds = %382
  %387 = getelementptr inbounds i32, i32* %238, i64 %383, !pdg.inst.id !680
  %388 = add <8 x i32> %384, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !1032
  %389 = add <8 x i32> %384, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !1034
  %390 = add <8 x i32> %384, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !1036
  %391 = bitcast i32* %387 to <8 x i32>*, !pdg.inst.id !1048
  store <8 x i32> %384, <8 x i32>* %391, align 4, !tbaa !25636, !pdg.inst.id !1038
  %392 = getelementptr inbounds i32, i32* %387, i64 8, !pdg.inst.id !1046
  %393 = bitcast i32* %392 to <8 x i32>*, !pdg.inst.id !1057
  store <8 x i32> %388, <8 x i32>* %393, align 4, !tbaa !25636, !pdg.inst.id !1050
  %394 = getelementptr inbounds i32, i32* %387, i64 16, !pdg.inst.id !1044
  %395 = bitcast i32* %394 to <8 x i32>*, !pdg.inst.id !1060
  store <8 x i32> %389, <8 x i32>* %395, align 4, !tbaa !25636, !pdg.inst.id !1052
  %396 = getelementptr inbounds i32, i32* %387, i64 24, !pdg.inst.id !1042
  %397 = bitcast i32* %396 to <8 x i32>*, !pdg.inst.id !1063
  store <8 x i32> %390, <8 x i32>* %397, align 4, !tbaa !25636, !pdg.inst.id !1054
  br label %398, !pdg.inst.id !25364

398:                                              ; preds = %382, %386
  %399 = icmp eq i64 %342, %337, !pdg.inst.id !906
  br i1 %399, label %416, label %339, !pdg.inst.id !1066

400:                                              ; preds = %._crit_edge1, %243
  %401 = phi i64 [ %405, %._crit_edge1 ], [ %244, %243 ], !pdg.inst.id !702
  %402 = getelementptr inbounds i32, i32* %234, i64 %401, !pdg.inst.id !659
  %403 = load i32, i32* %402, align 4, !tbaa !25636, !pdg.inst.id !1072
  %404 = getelementptr inbounds i32, i32* %238, i64 %401, !pdg.inst.id !688
  store i32 %403, i32* %404, align 4, !tbaa !25636, !pdg.inst.id !1074
  %405 = add nuw nsw i64 %401, 1, !pdg.inst.id !1070
  %406 = icmp slt i64 %405, %241, !pdg.inst.id !697
  br i1 %406, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079

._crit_edge1:                                     ; preds = %400
  br label %400, !pdg.inst.id !25085

407:                                              ; preds = %._crit_edge3, %339
  %408 = phi i64 [ %411, %._crit_edge3 ], [ %340, %339 ], !pdg.inst.id !915
  %409 = getelementptr inbounds i32, i32* %238, i64 %408, !pdg.inst.id !686
  %410 = trunc i64 %408 to i32, !pdg.inst.id !1081
  store i32 %410, i32* %409, align 4, !tbaa !25636, !pdg.inst.id !1086
  %411 = add nuw nsw i64 %408, 1, !pdg.inst.id !1084
  %412 = icmp slt i64 %411, %337, !pdg.inst.id !910
  br i1 %412, label %._crit_edge3, label %.loopexit1, !prof !25654, !llvm.loop !25655, !pdg.inst.id !1091

._crit_edge3:                                     ; preds = %407
  br label %407, !pdg.inst.id !25424

413:                                              ; preds = %239, %335
  %414 = getelementptr inbounds i8, i8* %10, i64 120, !pdg.inst.id !59
  %415 = bitcast i8* %414 to i8**, !pdg.inst.id !1093
  store i8* %27, i8** %415, align 8, !tbaa !25657, !pdg.inst.id !155
  br label %527, !pdg.inst.id !25429

.loopexit1:                                       ; preds = %407
  br label %416, !pdg.inst.id !25435

.loopexit3:                                       ; preds = %400
  br label %416, !pdg.inst.id !25438

416:                                              ; preds = %.loopexit3, %.loopexit1, %333, %398
  %417 = getelementptr inbounds i8, i8* %10, i64 120, !pdg.inst.id !81
  %418 = bitcast i8* %417 to i8**, !pdg.inst.id !1096
  store i8* %27, i8** %418, align 8, !tbaa !25657, !pdg.inst.id !157
  br i1 %237, label %419, label %527, !prof !25644, !pdg.inst.id !668

419:                                              ; preds = %416
  %420 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 17, !pdg.inst.id !42
  br label %421, !pdg.inst.id !25451

421:                                              ; preds = %419, %434
  %422 = phi i64 [ 0, %419 ], [ %523, %434 ], !pdg.inst.id !1103
  %423 = load %struct.atom_t*, %struct.atom_t** %420, align 8, !tbaa !25657, !pdg.inst.id !1101
  %424 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %423, i64 %422, i32 0, !pdg.inst.id !1104
  %425 = load i8*, i8** %424, align 8, !tbaa !25658, !pdg.inst.id !1179
  %426 = tail call i64 @strlen(i8* %425) #49, !pdg.inst.id !1181
  %427 = add i64 %426, 1, !pdg.inst.id !1183
  %428 = tail call noalias i8* @malloc(i64 %427) #48, !pdg.inst.id !1185
  %429 = icmp eq i8* %428, null, !pdg.inst.id !1191
  br i1 %429, label %430, label %434, !prof !25660, !pdg.inst.id !1193

430:                                              ; preds = %421
  %431 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !1195
  %432 = getelementptr [34 x i8], [34 x i8]* @.str.33.401, i64 0, i64 0, !pdg.inst.id !1198
  %433 = tail call i64 @fwrite(i8* %432, i64 33, i64 1, %struct._IO_FILE* %431) #50, !pdg.inst.id !1196
  tail call void @exit(i32 1) #51, !pdg.inst.id !1647
  br label %UnifiedUnreachableBlock, !pdg.inst.id !25476

434:                                              ; preds = %421
  %435 = load i8*, i8** %424, align 8, !tbaa !25658, !pdg.inst.id !1177
  %436 = tail call i8* @strcpy(i8* nonnull %428, i8* %435) #48, !pdg.inst.id !1187
  %437 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 0, !pdg.inst.id !179
  store i8* %428, i8** %437, align 8, !tbaa !25658, !pdg.inst.id !1189
  %438 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 1, !pdg.inst.id !213
  store i8* null, i8** %438, align 8, !tbaa !25661, !pdg.inst.id !1202
  %439 = load %struct.atom_t*, %struct.atom_t** %420, align 8, !tbaa !25657, !pdg.inst.id !1099
  %440 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 2, !pdg.inst.id !1107
  %441 = load i32, i32* %440, align 8, !tbaa !25662, !pdg.inst.id !1225
  %442 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 2, !pdg.inst.id !211
  store i32 %441, i32* %442, align 8, !tbaa !25662, !pdg.inst.id !1227
  %443 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 3, !pdg.inst.id !1110
  %444 = load i32, i32* %443, align 4, !tbaa !25663, !pdg.inst.id !1230
  %445 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 3, !pdg.inst.id !209
  store i32 %444, i32* %445, align 4, !tbaa !25663, !pdg.inst.id !1232
  %446 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 0, !pdg.inst.id !1149
  %447 = load i32, i32* %446, align 4, !tbaa !25636, !pdg.inst.id !1235
  %448 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 0, !pdg.inst.id !181
  store i32 %447, i32* %448, align 4, !tbaa !25636, !pdg.inst.id !1237
  %449 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 1, !pdg.inst.id !1153
  %450 = load i32, i32* %449, align 4, !tbaa !25636, !pdg.inst.id !1240
  %451 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 1, !pdg.inst.id !177
  store i32 %450, i32* %451, align 4, !tbaa !25636, !pdg.inst.id !1242
  %452 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 2, !pdg.inst.id !1156
  %453 = load i32, i32* %452, align 4, !tbaa !25636, !pdg.inst.id !1245
  %454 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 2, !pdg.inst.id !173
  store i32 %453, i32* %454, align 4, !tbaa !25636, !pdg.inst.id !1247
  %455 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 3, !pdg.inst.id !1159
  %456 = load i32, i32* %455, align 4, !tbaa !25636, !pdg.inst.id !1250
  %457 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 3, !pdg.inst.id !171
  store i32 %456, i32* %457, align 4, !tbaa !25636, !pdg.inst.id !1252
  %458 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 4, !pdg.inst.id !1162
  %459 = load i32, i32* %458, align 4, !tbaa !25636, !pdg.inst.id !1255
  %460 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 4, !pdg.inst.id !169
  store i32 %459, i32* %460, align 4, !tbaa !25636, !pdg.inst.id !1257
  %461 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 5, !pdg.inst.id !1165
  %462 = load i32, i32* %461, align 4, !tbaa !25636, !pdg.inst.id !1260
  %463 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 5, !pdg.inst.id !167
  store i32 %462, i32* %463, align 4, !tbaa !25636, !pdg.inst.id !1262
  %464 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 6, !pdg.inst.id !1168
  %465 = load i32, i32* %464, align 4, !tbaa !25636, !pdg.inst.id !1265
  %466 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 6, !pdg.inst.id !165
  store i32 %465, i32* %466, align 4, !tbaa !25636, !pdg.inst.id !1267
  %467 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 4, i64 7, !pdg.inst.id !1171
  %468 = load i32, i32* %467, align 4, !tbaa !25636, !pdg.inst.id !1270
  %469 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 4, i64 7, !pdg.inst.id !163
  store i32 %468, i32* %469, align 4, !tbaa !25636, !pdg.inst.id !1272
  %470 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 5, !pdg.inst.id !207
  %471 = bitcast %struct.residue_t** %470 to i8**, !pdg.inst.id !1275
  store i8* %10, i8** %471, align 8, !tbaa !25664, !pdg.inst.id !79
  %472 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 6, !pdg.inst.id !1115
  %473 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 6, !pdg.inst.id !205
  %474 = bitcast double* %472 to <2 x i64>*, !pdg.inst.id !1278
  %475 = load <2 x i64>, <2 x i64>* %474, align 8, !tbaa !25665, !pdg.inst.id !1282
  %476 = bitcast double* %473 to <2 x i64>*, !pdg.inst.id !1280
  store <2 x i64> %475, <2 x i64>* %476, align 8, !tbaa !25665, !pdg.inst.id !1284
  %477 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 8, !pdg.inst.id !1121
  %478 = bitcast double* %477 to i64*, !pdg.inst.id !1287
  %479 = load i64, i64* %478, align 8, !tbaa !25666, !pdg.inst.id !1289
  %480 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 8, !pdg.inst.id !203
  %481 = bitcast double* %480 to i64*, !pdg.inst.id !1293
  store i64 %479, i64* %481, align 8, !tbaa !25666, !pdg.inst.id !1291
  %482 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 9, !pdg.inst.id !1124
  %483 = bitcast double* %482 to i64*, !pdg.inst.id !1296
  %484 = load i64, i64* %483, align 8, !tbaa !25667, !pdg.inst.id !1298
  %485 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 9, !pdg.inst.id !201
  %486 = bitcast double* %485 to i64*, !pdg.inst.id !1302
  store i64 %484, i64* %486, align 8, !tbaa !25667, !pdg.inst.id !1300
  %487 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 10, !pdg.inst.id !183
  store i8* null, i8** %487, align 8, !tbaa !25668, !pdg.inst.id !1305
  %488 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 11, !pdg.inst.id !1128
  %489 = load i32, i32* %488, align 8, !tbaa !25669, !pdg.inst.id !1307
  %490 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 11, !pdg.inst.id !185
  store i32 %489, i32* %490, align 8, !tbaa !25669, !pdg.inst.id !1309
  %491 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 12, !pdg.inst.id !1131
  %492 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 12, !pdg.inst.id !175
  %493 = bitcast double* %491 to <2 x i64>*, !pdg.inst.id !1312
  %494 = load <2 x i64>, <2 x i64>* %493, align 8, !tbaa !25665, !pdg.inst.id !1316
  %495 = bitcast double* %492 to <2 x i64>*, !pdg.inst.id !1314
  store <2 x i64> %494, <2 x i64>* %495, align 8, !tbaa !25665, !pdg.inst.id !1318
  %496 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 14, !pdg.inst.id !1119
  %497 = load i32, i32* %496, align 8, !tbaa !25670, !pdg.inst.id !1321
  %498 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 14, !pdg.inst.id !199
  store i32 %497, i32* %498, align 8, !tbaa !25670, !pdg.inst.id !1323
  %499 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 15, !pdg.inst.id !1133
  %500 = load i32, i32* %499, align 4, !tbaa !25671, !pdg.inst.id !1326
  %501 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 15, !pdg.inst.id !197
  store i32 %500, i32* %501, align 4, !tbaa !25671, !pdg.inst.id !1328
  %502 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 16, !pdg.inst.id !195
  store i8* null, i8** %502, align 8, !tbaa !25672, !pdg.inst.id !1331
  %503 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 17, i64 0, !pdg.inst.id !1137
  %504 = bitcast double* %503 to i64*, !pdg.inst.id !1333
  %505 = load i64, i64* %504, align 8, !tbaa !25665, !pdg.inst.id !1335
  %506 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 17, !pdg.inst.id !193
  %507 = bitcast [3 x double]* %506 to i64*, !pdg.inst.id !1339
  store i64 %505, i64* %507, align 8, !tbaa !25665, !pdg.inst.id !1337
  %508 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 17, i64 1, !pdg.inst.id !1140
  %509 = bitcast double* %508 to i64*, !pdg.inst.id !1342
  %510 = load i64, i64* %509, align 8, !tbaa !25665, !pdg.inst.id !1344
  %511 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 17, i64 1, !pdg.inst.id !191
  %512 = bitcast double* %511 to i64*, !pdg.inst.id !1348
  store i64 %510, i64* %512, align 8, !tbaa !25665, !pdg.inst.id !1346
  %513 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 17, i64 2, !pdg.inst.id !1143
  %514 = bitcast double* %513 to i64*, !pdg.inst.id !1351
  %515 = load i64, i64* %514, align 8, !tbaa !25665, !pdg.inst.id !1353
  %516 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 17, i64 2, !pdg.inst.id !189
  %517 = bitcast double* %516 to i64*, !pdg.inst.id !1357
  store i64 %515, i64* %517, align 8, !tbaa !25665, !pdg.inst.id !1355
  %518 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %439, i64 %422, i32 18, !pdg.inst.id !1146
  %519 = bitcast double* %518 to i64*, !pdg.inst.id !1360
  %520 = load i64, i64* %519, align 8, !tbaa !25673, !pdg.inst.id !1362
  %521 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %28, i64 %422, i32 18, !pdg.inst.id !187
  %522 = bitcast double* %521 to i64*, !pdg.inst.id !1366
  store i64 %520, i64* %522, align 8, !tbaa !25673, !pdg.inst.id !1364
  %523 = add nuw nsw i64 %422, 1, !pdg.inst.id !1174
  %524 = load i32, i32* %23, align 8, !tbaa !25623, !pdg.inst.id !141
  %525 = sext i32 %524 to i64, !pdg.inst.id !1372
  %526 = icmp slt i64 %523, %525, !pdg.inst.id !1369
  br i1 %526, label %421, label %.loopexit, !prof !25654, !pdg.inst.id !1375

.loopexit:                                        ; preds = %434
  br label %527, !pdg.inst.id !25596

527:                                              ; preds = %.loopexit, %413, %416, %82, %62, %43, %30, %13
  %528 = phi %struct.residue_t* [ null, %13 ], [ null, %30 ], [ null, %43 ], [ null, %62 ], [ null, %82 ], [ %11, %416 ], [ %11, %413 ], [ %11, %.loopexit ], !pdg.inst.id !124
  ret %struct.residue_t* %528, !pdg.inst.id !1377

UnifiedUnreachableBlock:                          ; preds = %430, %114, %100
  unreachable, !pdg.inst.id !25613

529:                                              ; preds = %151
  store i32 1, i32* @22
  store i64 %152, i64* %5
  store [2 x i32]* %72, [2 x i32]** %7
  store [2 x i32]* %147, [2 x i32]** %9
  %530 = alloca [3 x i8*]
  %531 = getelementptr inbounds [3 x i8*], [3 x i8*]* %530, i64 0, i64 0
  %532 = bitcast i8** %531 to void (i8*, i8*)**
  store void (i8*, i8*)* @52, void (i8*, i8*)** %532
  %533 = getelementptr inbounds [3 x i8*], [3 x i8*]* %530, i64 0, i64 1
  %534 = bitcast i8** %533 to void (i8*, i8*)**
  store void (i8*, i8*)* @53, void (i8*, i8*)** %534
  %535 = getelementptr inbounds [3 x i8*], [3 x i8*]* %530, i64 0, i64 2
  %536 = bitcast i8** %535 to void (i8*, i8*)**
  store void (i8*, i8*)* @54, void (i8*, i8*)** %536
  %537 = bitcast [3 x i8*]* %530 to i8*
  %538 = alloca [16 x i64]
  %539 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 0
  store i64 64, i64* %539
  %540 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 1
  store i64 64, i64* %540
  %541 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 2
  store i64 64, i64* %541
  %542 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 3
  store i64 64, i64* %542
  %543 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 4
  store i64 64, i64* %543
  %544 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 5
  store i64 64, i64* %544
  %545 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 6
  store i64 64, i64* %545
  %546 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 7
  store i64 64, i64* %546
  %547 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 8
  store i64 1, i64* %547
  %548 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 9
  store i64 64, i64* %548
  %549 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 10
  store i64 1, i64* %549
  %550 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 11
  store i64 1, i64* %550
  %551 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 12
  store i64 1, i64* %551
  %552 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 13
  store i64 64, i64* %552
  %553 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 14
  store i64 64, i64* %553
  %554 = getelementptr inbounds [16 x i64], [16 x i64]* %538, i64 0, i64 15
  store i64 64, i64* %554
  %555 = bitcast [16 x i64]* %538 to i64*
  call void @stageDispatcher(i8* %3, i64* %555, i8* %537, i64 3, i64 16)
  %556 = load i64, i64* %4
  br label %557

557:                                              ; preds = %529
  store i32 0, i32* @22
  br label %.loopexit6
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "copyresidue"
Parallelizer:  Loop 32 = "  %197 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 0, !pdg.inst.id !554"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %206 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 3, !pdg.inst.id !546
DSWP:       %216 = load i32, i32* %73, align 8, !tbaa !25625, !pdg.inst.id !306
DSWP:       store i32 %204, i32* %205, align 4, !tbaa !25636, !pdg.inst.id !588
DSWP:       %204 = load i32, i32* %203, align 4, !tbaa !25636, !pdg.inst.id !586
DSWP:       %207 = load i32, i32* %206, align 4, !tbaa !25636, !pdg.inst.id !591
DSWP:       store i32 %207, i32* %208, align 4, !tbaa !25636, !pdg.inst.id !593
DSWP:       %205 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 2, !pdg.inst.id !566
DSWP:       %203 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 2, !pdg.inst.id !548
DSWP:       %212 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 1, !pdg.inst.id !570
DSWP:       store i32 %201, i32* %202, align 4, !tbaa !25636, !pdg.inst.id !583
DSWP:       %201 = load i32, i32* %200, align 4, !tbaa !25636, !pdg.inst.id !581
DSWP:       %202 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 1, !pdg.inst.id !568
DSWP:       %200 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 1, !pdg.inst.id !550
DSWP:       %196 = phi %struct.chiral_t* [ %92, %191 ], [ %215, %._crit_edge ], !pdg.inst.id !342
DSWP:       %197 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 0, !pdg.inst.id !554
DSWP:       %214 = add nuw nsw i64 %195, 1, !pdg.inst.id !562
DSWP:       %199 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 0, !pdg.inst.id !574
DSWP:       %215 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 1, !pdg.inst.id !572
DSWP:       %217 = sext i32 %216 to i64, !pdg.inst.id !609
DSWP:       %211 = load i64, i64* %210, align 8, !tbaa !25638, !pdg.inst.id !598
DSWP:       %218 = icmp slt i64 %214, %217, !pdg.inst.id !605
DSWP:       br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:       %213 = bitcast double* %212 to i64*, !pdg.inst.id !602
DSWP:       store i64 %211, i64* %213, align 8, !tbaa !25638, !pdg.inst.id !600
DSWP:       %210 = bitcast double* %209 to i64*, !pdg.inst.id !596
DSWP:       %209 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 1, !pdg.inst.id !552
DSWP:       %208 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 3, !pdg.inst.id !564
DSWP:       br label %194, !pdg.inst.id !25042
DSWP:       %198 = load i32, i32* %197, align 4, !tbaa !25636, !pdg.inst.id !576
DSWP:       store i32 %198, i32* %199, align 4, !tbaa !25636, !pdg.inst.id !578
DSWP:       %195 = phi i64 [ 0, %191 ], [ %214, %._crit_edge ], !pdg.inst.id !556
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %206 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 3, !pdg.inst.id !546
DSWP:       %216 = load i32, i32* %73, align 8, !tbaa !25625, !pdg.inst.id !306
DSWP:       store i32 %204, i32* %205, align 4, !tbaa !25636, !pdg.inst.id !588
DSWP:       %204 = load i32, i32* %203, align 4, !tbaa !25636, !pdg.inst.id !586
DSWP:       %207 = load i32, i32* %206, align 4, !tbaa !25636, !pdg.inst.id !591
DSWP:       store i32 %207, i32* %208, align 4, !tbaa !25636, !pdg.inst.id !593
DSWP:       %205 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 2, !pdg.inst.id !566
DSWP:       %203 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 2, !pdg.inst.id !548
DSWP:       %212 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 1, !pdg.inst.id !570
DSWP:       store i32 %201, i32* %202, align 4, !tbaa !25636, !pdg.inst.id !583
DSWP:       %201 = load i32, i32* %200, align 4, !tbaa !25636, !pdg.inst.id !581
DSWP:       %202 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 1, !pdg.inst.id !568
DSWP:       %200 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 1, !pdg.inst.id !550
DSWP:       %196 = phi %struct.chiral_t* [ %92, %191 ], [ %215, %._crit_edge ], !pdg.inst.id !342
DSWP:       %197 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 0, !pdg.inst.id !554
DSWP:       %214 = add nuw nsw i64 %195, 1, !pdg.inst.id !562
DSWP:       %199 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 0, !pdg.inst.id !574
DSWP:       %215 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 1, !pdg.inst.id !572
DSWP:       %217 = sext i32 %216 to i64, !pdg.inst.id !609
DSWP:       %211 = load i64, i64* %210, align 8, !tbaa !25638, !pdg.inst.id !598
DSWP:       %218 = icmp slt i64 %214, %217, !pdg.inst.id !605
DSWP:       br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:       %213 = bitcast double* %212 to i64*, !pdg.inst.id !602
DSWP:       store i64 %211, i64* %213, align 8, !tbaa !25638, !pdg.inst.id !600
DSWP:       %210 = bitcast double* %209 to i64*, !pdg.inst.id !596
DSWP:       %209 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 1, !pdg.inst.id !552
DSWP:       %208 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 3, !pdg.inst.id !564
DSWP:       br label %194, !pdg.inst.id !25042
DSWP:       %198 = load i32, i32* %197, align 4, !tbaa !25636, !pdg.inst.id !576
DSWP:       store i32 %198, i32* %199, align 4, !tbaa !25636, !pdg.inst.id !578
DSWP:       %195 = phi i64 [ 0, %191 ], [ %214, %._crit_edge ], !pdg.inst.id !556
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 31
DSWP:     	  %206 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 3, !pdg.inst.id !546
DSWP:     	  %216 = load i32, i32* %73, align 8, !tbaa !25625, !pdg.inst.id !306
DSWP:     	  store i32 %204, i32* %205, align 4, !tbaa !25636, !pdg.inst.id !588
DSWP:     	  %204 = load i32, i32* %203, align 4, !tbaa !25636, !pdg.inst.id !586
DSWP:     	  %207 = load i32, i32* %206, align 4, !tbaa !25636, !pdg.inst.id !591
DSWP:     	  store i32 %207, i32* %208, align 4, !tbaa !25636, !pdg.inst.id !593
DSWP:     	  %205 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 2, !pdg.inst.id !566
DSWP:     	  %203 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 2, !pdg.inst.id !548
DSWP:     	  %212 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 1, !pdg.inst.id !570
DSWP:     	  store i32 %201, i32* %202, align 4, !tbaa !25636, !pdg.inst.id !583
DSWP:     	  %201 = load i32, i32* %200, align 4, !tbaa !25636, !pdg.inst.id !581
DSWP:     	  %202 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 1, !pdg.inst.id !568
DSWP:     	  %200 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 1, !pdg.inst.id !550
DSWP:     	  %196 = phi %struct.chiral_t* [ %92, %191 ], [ %215, %._crit_edge ], !pdg.inst.id !342
DSWP:     	  %197 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 0, !pdg.inst.id !554
DSWP:     	  %214 = add nuw nsw i64 %195, 1, !pdg.inst.id !562
DSWP:     	  %199 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 0, !pdg.inst.id !574
DSWP:     	  %215 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 1, !pdg.inst.id !572
DSWP:     	  %217 = sext i32 %216 to i64, !pdg.inst.id !609
DSWP:     	  %211 = load i64, i64* %210, align 8, !tbaa !25638, !pdg.inst.id !598
DSWP:     	  %218 = icmp slt i64 %214, %217, !pdg.inst.id !605
DSWP:     	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	  %213 = bitcast double* %212 to i64*, !pdg.inst.id !602
DSWP:     	  store i64 %211, i64* %213, align 8, !tbaa !25638, !pdg.inst.id !600
DSWP:     	  %210 = bitcast double* %209 to i64*, !pdg.inst.id !596
DSWP:     	  %209 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 1, !pdg.inst.id !552
DSWP:     	  %208 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 3, !pdg.inst.id !564
DSWP:     	  br label %194, !pdg.inst.id !25042
DSWP:     	  %198 = load i32, i32* %197, align 4, !tbaa !25636, !pdg.inst.id !576
DSWP:     	  store i32 %198, i32* %199, align 4, !tbaa !25636, !pdg.inst.id !578
DSWP:     	  %195 = phi i64 [ 0, %191 ], [ %214, %._crit_edge ], !pdg.inst.id !556
DSWP:     External nodes: 0
DSWP:     Edges: 126
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %195 = phi i64 [ 0, %191 ], [ %214, %._crit_edge ], !pdg.inst.id !556
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %196 = phi %struct.chiral_t* [ %92, %191 ], [ %215, %._crit_edge ], !pdg.inst.id !342
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %197 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 0, !pdg.inst.id !554
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %198 = load i32, i32* %197, align 4, !tbaa !25636, !pdg.inst.id !576
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %199 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 0, !pdg.inst.id !574
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  store i32 %198, i32* %199, align 4, !tbaa !25636, !pdg.inst.id !578
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %202 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 1, !pdg.inst.id !568
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %203 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 2, !pdg.inst.id !548
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  store i32 %204, i32* %205, align 4, !tbaa !25636, !pdg.inst.id !588
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  store i32 %201, i32* %202, align 4, !tbaa !25636, !pdg.inst.id !583
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %207 = load i32, i32* %206, align 4, !tbaa !25636, !pdg.inst.id !591
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %201 = load i32, i32* %200, align 4, !tbaa !25636, !pdg.inst.id !581
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %205 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %196, i64 0, i32 0, i64 2, !pdg.inst.id !566
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %210 = bitcast double* %209 to i64*, !pdg.inst.id !596
DSWP:     	CTRL
DSWP:     	From:	  br i1 %218, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612
DSWP:     	To:	  %206 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %193, i64 %195, i32 0, i64 3, !pdg.inst.id !546
DSWP:     	CTRL
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %33 = icmp sgt i32 %30, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %33, label %._crit_edge, label %34, !pdg.inst.id !93
DSWP:    Queue: 9
DSWP:     Producer:	  %20 = bitcast i8* %19 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     Consumer:	  %43 = select i1 %42, %struct.extbond_t* %20, %struct.extbond_t* %17, !pdg.inst.id !59
DSWP:    Queue: 10
DSWP:     Producer:	  %50 = icmp eq %struct.extbond_t* %49, null, !pdg.inst.id !130
DSWP:     Consumer:	  br i1 %50, label %.loopexit, label %15, !pdg.inst.id !132
DSWP:    Queue: 11
DSWP:     Producer:	  %21 = icmp eq i8* %19, null, !pdg.inst.id !77
DSWP:     Consumer:	  br i1 %21, label %22, label %28, !pdg.inst.id !86
DSWP:    Queue: 12
DSWP:     Producer:	  %44 = icmp eq %struct.extbond_t* %18, null, !pdg.inst.id !62
DSWP:     Consumer:	  br i1 %44, label %47, label %45, !pdg.inst.id !125
DSWP:    Queue: 13
DSWP:     Producer:	  %156 = phi i64 [ 0, %151 ], [ %171, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %164 = or i64 %156, 1, !pdg.inst.id !472
DSWP:    Queue: 14
DSWP:     Producer:	  %156 = phi i64 [ 0, %151 ], [ %171, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %156, i64 0, !pdg.inst.id !456
DSWP:     Consumer:	  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %156, i64 0, !pdg.inst.id !302
DSWP:     Consumer:	  %161 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %156, i64 1, !pdg.inst.id !454
DSWP:     Consumer:	  %163 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %156, i64 1, !pdg.inst.id !300
DSWP:    Queue: 15
DSWP:     Producer:	  %164 = or i64 %156, 1, !pdg.inst.id !472
DSWP:     Consumer:	  %165 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %164, i64 0, !pdg.inst.id !448
DSWP:     Consumer:	  %167 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %164, i64 0, !pdg.inst.id !294
DSWP:     Consumer:	  %168 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 %164, i64 1, !pdg.inst.id !446
DSWP:     Consumer:	  %170 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 %164, i64 1, !pdg.inst.id !292
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %73 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 13, !pdg.inst.id !63
DSWP:    Pre loop env 2, producer:	  %92 = phi %struct.chiral_t* [ %80, %76 ], [ null, %71 ], !pdg.inst.id !326
DSWP:    Pre loop env 3, producer:	  %193 = load %struct.chiral_t*, %struct.chiral_t** %192, align 8, !tbaa !25637, !pdg.inst.id !544
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @55(i8*, i8*) {
  %3 = bitcast i8* %0 to [24 x i64]*
  %4 = bitcast i8* %1 to [16 x i8*]*
  %5 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 0
  %6 = bitcast i64* %5 to i32**
  %7 = load i32*, i32** %6
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 8
  %9 = bitcast i64* %8 to %struct.chiral_t**
  %10 = load %struct.chiral_t*, %struct.chiral_t** %9
  %11 = getelementptr inbounds [24 x i64], [24 x i64]* %3, i64 0, i64 16
  %12 = bitcast i64* %11 to %struct.chiral_t**
  %13 = load %struct.chiral_t*, %struct.chiral_t** %12
  br label %16

14:                                               ; preds = %15
  ret void

15:                                               ; preds = %16
  br label %14

16:                                               ; preds = %2, %41
  %17 = phi i64 [ 0, %2 ], [ %36, %41 ], !pdg.inst.id !30
  %18 = phi %struct.chiral_t* [ %10, %2 ], [ %37, %41 ], !pdg.inst.id !31
  %19 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %13, i64 %17, i32 0, i64 0, !pdg.inst.id !32
  %20 = load i32, i32* %19, align 4, !tbaa !33, !pdg.inst.id !37
  %21 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %18, i64 0, i32 0, i64 0, !pdg.inst.id !38
  store i32 %20, i32* %21, align 4, !tbaa !33, !pdg.inst.id !39
  %22 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %13, i64 %17, i32 0, i64 1, !pdg.inst.id !40
  %23 = load i32, i32* %22, align 4, !tbaa !33, !pdg.inst.id !41
  %24 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %18, i64 0, i32 0, i64 1, !pdg.inst.id !42
  store i32 %23, i32* %24, align 4, !tbaa !33, !pdg.inst.id !43
  %25 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %13, i64 %17, i32 0, i64 2, !pdg.inst.id !44
  %26 = load i32, i32* %25, align 4, !tbaa !33, !pdg.inst.id !45
  %27 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %18, i64 0, i32 0, i64 2, !pdg.inst.id !46
  store i32 %26, i32* %27, align 4, !tbaa !33, !pdg.inst.id !47
  %28 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %13, i64 %17, i32 0, i64 3, !pdg.inst.id !48
  %29 = load i32, i32* %28, align 4, !tbaa !33, !pdg.inst.id !49
  %30 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %18, i64 0, i32 0, i64 3, !pdg.inst.id !50
  store i32 %29, i32* %30, align 4, !tbaa !33, !pdg.inst.id !51
  %31 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %13, i64 %17, i32 1, !pdg.inst.id !52
  %32 = bitcast double* %31 to i64*, !pdg.inst.id !53
  %33 = load i64, i64* %32, align 8, !tbaa !54, !pdg.inst.id !57
  %34 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %18, i64 0, i32 1, !pdg.inst.id !58
  %35 = bitcast double* %34 to i64*, !pdg.inst.id !59
  store i64 %33, i64* %35, align 8, !tbaa !54, !pdg.inst.id !60
  %36 = add nuw nsw i64 %17, 1, !pdg.inst.id !61
  %37 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %18, i64 1, !pdg.inst.id !62
  %38 = load i32, i32* %7, align 8, !tbaa !63, !pdg.inst.id !66
  %39 = sext i32 %38 to i64, !pdg.inst.id !67
  %40 = icmp slt i64 %36, %39, !pdg.inst.id !68
  br i1 %40, label %41, label %15, !pdg.inst.id !69

41:                                               ; preds = %16
  br label %16, !pdg.inst.id !70
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local %struct.residue_t* @copyresidue(%struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !33 {
  %2 = alloca [24 x i64]
  %3 = bitcast [24 x i64]* %2 to i8*
  %4 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 0
  %5 = bitcast i64* %4 to i32**
  %6 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 8
  %7 = bitcast i64* %6 to %struct.chiral_t**
  %8 = getelementptr inbounds [24 x i64], [24 x i64]* %2, i64 0, i64 16
  %9 = bitcast i64* %8 to %struct.chiral_t**
  %10 = alloca [32 x i64]
  %11 = bitcast [32 x i64]* %10 to i8*
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 0
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 8
  %14 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 16
  %15 = bitcast i64* %14 to [2 x i32]**
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 24
  %17 = bitcast i64* %16 to [2 x i32]**
  %18 = tail call noalias i8* @malloc(i64 128) #48, !pdg.inst.id !58
  %19 = bitcast i8* %18 to %struct.residue_t*, !pdg.inst.id !122
  %20 = icmp eq i8* %18, null, !pdg.inst.id !120
  br i1 %20, label %21, label %30, !prof !25616, !pdg.inst.id !126

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !46
  %23 = load i8*, i8** %22, align 8, !tbaa !25617, !pdg.inst.id !128
  %24 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !132
  %25 = getelementptr [15 x i8], [15 x i8]* @.str.25.394, i64 0, i64 0, !pdg.inst.id !134
  %26 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* %25, i8* %23) #48, !pdg.inst.id !130
  %27 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !136
  %28 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !139
  %29 = tail call i32 @rt_errormsg_s(i32 1, i8* %27, i8* %28) #48, !pdg.inst.id !137
  br label %537, !pdg.inst.id !24743

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 15, !pdg.inst.id !44
  %32 = load i32, i32* %31, align 8, !tbaa !25623, !pdg.inst.id !145
  %33 = sext i32 %32 to i64, !pdg.inst.id !147
  %34 = mul nsw i64 %33, 176, !pdg.inst.id !151
  %35 = tail call noalias i8* @malloc(i64 %34) #48, !pdg.inst.id !153
  %36 = bitcast i8* %35 to %struct.atom_t*, !pdg.inst.id !161
  %37 = icmp eq i8* %35, null, !pdg.inst.id !159
  br i1 %37, label %38, label %47, !prof !25616, !pdg.inst.id !215

38:                                               ; preds = %30
  %39 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !48
  %40 = load i8*, i8** %39, align 8, !tbaa !25617, !pdg.inst.id !217
  %41 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !221
  %42 = getelementptr [24 x i8], [24 x i8]* @.str.27.395, i64 0, i64 0, !pdg.inst.id !223
  %43 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %41, i8* %42, i8* %40) #48, !pdg.inst.id !219
  %44 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !225
  %45 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !228
  %46 = tail call i32 @rt_errormsg_s(i32 1, i8* %44, i8* %45) #48, !pdg.inst.id !226
  br label %537, !pdg.inst.id !24761

47:                                               ; preds = %30
  %48 = shl nsw i64 %33, 2, !pdg.inst.id !149
  %49 = tail call noalias i8* @malloc(i64 %48) #48, !pdg.inst.id !230
  %50 = icmp eq i8* %49, null, !pdg.inst.id !240
  br i1 %50, label %51, label %60, !prof !25616, !pdg.inst.id !242

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !54
  %53 = load i8*, i8** %52, align 8, !tbaa !25617, !pdg.inst.id !244
  %54 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !248
  %55 = getelementptr [29 x i8], [29 x i8]* @.str.28.396, i64 0, i64 0, !pdg.inst.id !250
  %56 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %54, i8* %55, i8* %53) #48, !pdg.inst.id !246
  %57 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !252
  %58 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !255
  %59 = tail call i32 @rt_errormsg_s(i32 1, i8* %57, i8* %58) #48, !pdg.inst.id !253
  br label %537, !pdg.inst.id !24776

60:                                               ; preds = %47
  %61 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 11, !pdg.inst.id !50
  %62 = load i32, i32* %61, align 8, !tbaa !25624, !pdg.inst.id !259
  %63 = icmp sgt i32 %62, 0, !pdg.inst.id !263
  br i1 %63, label %64, label %79, !prof !25616, !pdg.inst.id !265

64:                                               ; preds = %60
  %65 = sext i32 %62 to i64, !pdg.inst.id !261
  %66 = shl nsw i64 %65, 3, !pdg.inst.id !267
  %67 = tail call noalias i8* @malloc(i64 %66) #48, !pdg.inst.id !269
  %68 = bitcast i8* %67 to [2 x i32]*, !pdg.inst.id !273
  %69 = icmp eq i8* %67, null, !pdg.inst.id !271
  br i1 %69, label %70, label %79, !pdg.inst.id !277

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !56
  %72 = load i8*, i8** %71, align 8, !tbaa !25617, !pdg.inst.id !279
  %73 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !283
  %74 = getelementptr [24 x i8], [24 x i8]* @.str.29.397, i64 0, i64 0, !pdg.inst.id !285
  %75 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %73, i8* %74, i8* %72) #48, !pdg.inst.id !281
  %76 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !287
  %77 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !290
  %78 = tail call i32 @rt_errormsg_s(i32 1, i8* %76, i8* %77) #48, !pdg.inst.id !288
  br label %537, !pdg.inst.id !24797

79:                                               ; preds = %60, %64
  %80 = phi [2 x i32]* [ %68, %64 ], [ null, %60 ], !pdg.inst.id !275
  %81 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 13, !pdg.inst.id !63
  %82 = load i32, i32* %81, align 8, !tbaa !25625, !pdg.inst.id !310
  %83 = icmp sgt i32 %82, 0, !pdg.inst.id !314
  br i1 %83, label %84, label %99, !prof !25616, !pdg.inst.id !316

84:                                               ; preds = %79
  %85 = sext i32 %82 to i64, !pdg.inst.id !312
  %86 = mul nsw i64 %85, 24, !pdg.inst.id !318
  %87 = tail call noalias i8* @malloc(i64 %86) #48, !pdg.inst.id !320
  %88 = bitcast i8* %87 to %struct.chiral_t*, !pdg.inst.id !324
  %89 = icmp eq i8* %87, null, !pdg.inst.id !322
  br i1 %89, label %90, label %99, !pdg.inst.id !328

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !65
  %92 = load i8*, i8** %91, align 8, !tbaa !25617, !pdg.inst.id !330
  %93 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !334
  %94 = getelementptr [24 x i8], [24 x i8]* @.str.30.398, i64 0, i64 0, !pdg.inst.id !336
  %95 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %93, i8* %94, i8* %92) #48, !pdg.inst.id !332
  %96 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !338
  %97 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !340
  %98 = tail call i32 @rt_errormsg_s(i32 1, i8* %96, i8* %97) #48, !pdg.inst.id !117
  br label %537, !pdg.inst.id !24825

99:                                               ; preds = %79, %84
  %100 = phi %struct.chiral_t* [ %88, %84 ], [ null, %79 ], !pdg.inst.id !326
  %101 = bitcast i8* %18 to %struct.residue_t**, !pdg.inst.id !97
  store %struct.residue_t* null, %struct.residue_t** %101, align 8, !tbaa !25626, !pdg.inst.id !346
  %102 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !67
  %103 = load i8*, i8** %102, align 8, !tbaa !25617, !pdg.inst.id !348
  %104 = tail call i64 @strlen(i8* %103) #49, !pdg.inst.id !352
  %105 = add i64 %104, 1, !pdg.inst.id !354
  %106 = tail call noalias i8* @malloc(i64 %105) #48, !pdg.inst.id !356
  %107 = icmp eq i8* %106, null, !pdg.inst.id !361
  br i1 %107, label %108, label %112, !prof !25616, !pdg.inst.id !363

108:                                              ; preds = %99
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !365
  %110 = getelementptr [44 x i8], [44 x i8]* @.str.31.399, i64 0, i64 0, !pdg.inst.id !368
  %111 = tail call i64 @fwrite(i8* %110, i64 43, i64 1, %struct._IO_FILE* %109) #50, !pdg.inst.id !366
  tail call void @exit(i32 1) #51, !pdg.inst.id !1459
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24850

112:                                              ; preds = %99
  %113 = tail call i8* @strcpy(i8* nonnull %106, i8* %103) #48, !pdg.inst.id !350
  %114 = getelementptr inbounds i8, i8* %18, i64 24, !pdg.inst.id !99
  %115 = bitcast i8* %114 to i8**, !pdg.inst.id !370
  store i8* %106, i8** %115, align 8, !tbaa !25617, !pdg.inst.id !359
  %116 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 5, !pdg.inst.id !69
  %117 = load i8*, i8** %116, align 8, !tbaa !25628, !pdg.inst.id !373
  %118 = tail call i64 @strlen(i8* %117) #49, !pdg.inst.id !377
  %119 = add i64 %118, 1, !pdg.inst.id !379
  %120 = tail call noalias i8* @malloc(i64 %119) #48, !pdg.inst.id !381
  %121 = icmp eq i8* %120, null, !pdg.inst.id !386
  br i1 %121, label %122, label %126, !prof !25616, !pdg.inst.id !388

122:                                              ; preds = %112
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !118
  %124 = getelementptr [42 x i8], [42 x i8]* @.str.32.400, i64 0, i64 0, !pdg.inst.id !392
  %125 = tail call i64 @fwrite(i8* %124, i64 41, i64 1, %struct._IO_FILE* %123) #50, !pdg.inst.id !390
  tail call void @exit(i32 1) #51, !pdg.inst.id !1484
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24866

126:                                              ; preds = %112
  %127 = tail call i8* @strcpy(i8* nonnull %120, i8* %117) #48, !pdg.inst.id !375
  %128 = getelementptr inbounds i8, i8* %18, i64 32, !pdg.inst.id !91
  %129 = bitcast i8* %128 to i8**, !pdg.inst.id !394
  store i8* %120, i8** %129, align 8, !tbaa !25628, !pdg.inst.id !384
  %130 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 1, !pdg.inst.id !71
  %131 = load i32, i32* %130, align 8, !tbaa !25629, !pdg.inst.id !397
  %132 = getelementptr inbounds i8, i8* %18, i64 8, !pdg.inst.id !115
  %133 = bitcast i8* %132 to i32*, !pdg.inst.id !401
  store i32 %131, i32* %133, align 8, !tbaa !25629, !pdg.inst.id !399
  %134 = getelementptr inbounds i8, i8* %18, i64 12, !pdg.inst.id !113
  %135 = bitcast i8* %134 to i32*, !pdg.inst.id !404
  store i32 0, i32* %135, align 4, !tbaa !25630, !pdg.inst.id !406
  %136 = getelementptr inbounds i8, i8* %18, i64 16, !pdg.inst.id !111
  %137 = bitcast i8* %136 to i32*, !pdg.inst.id !408
  store i32 0, i32* %137, align 8, !tbaa !25631, !pdg.inst.id !410
  %138 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 6, !pdg.inst.id !73
  %139 = load i32, i32* %138, align 8, !tbaa !25632, !pdg.inst.id !412
  %140 = getelementptr inbounds i8, i8* %18, i64 40, !pdg.inst.id !109
  %141 = bitcast i8* %140 to i32*, !pdg.inst.id !416
  store i32 %139, i32* %141, align 8, !tbaa !25632, !pdg.inst.id !414
  %142 = getelementptr inbounds i8, i8* %18, i64 56, !pdg.inst.id !107
  %143 = bitcast i8* %142 to %struct.strand_t**, !pdg.inst.id !419
  store %struct.strand_t* null, %struct.strand_t** %143, align 8, !tbaa !25633, !pdg.inst.id !421
  %144 = tail call %struct.extbond_t* @copyextbonds(%struct.residue_t* nonnull %0) #48, !pdg.inst.id !35
  %145 = getelementptr inbounds i8, i8* %18, i64 64, !pdg.inst.id !105
  %146 = bitcast i8* %145 to %struct.extbond_t**, !pdg.inst.id !425
  store %struct.extbond_t* %144, %struct.extbond_t** %146, align 8, !tbaa !25634, !pdg.inst.id !423
  %147 = load i32, i32* %61, align 8, !tbaa !25624, !pdg.inst.id !257
  %148 = getelementptr inbounds i8, i8* %18, i64 72, !pdg.inst.id !103
  %149 = bitcast i8* %148 to i32*, !pdg.inst.id !436
  store i32 %147, i32* %149, align 8, !tbaa !25624, !pdg.inst.id !434
  %150 = getelementptr inbounds i8, i8* %18, i64 80, !pdg.inst.id !101
  %151 = bitcast i8* %150 to [2 x i32]**, !pdg.inst.id !439
  store [2 x i32]* %80, [2 x i32]** %151, align 8, !tbaa !25635, !pdg.inst.id !304
  %152 = icmp sgt i32 %147, 0, !pdg.inst.id !432
  br i1 %152, label %153, label %192, !prof !25616, !pdg.inst.id !442

153:                                              ; preds = %126
  %154 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 12, !pdg.inst.id !75
  %155 = load [2 x i32]*, [2 x i32]** %154, align 8, !tbaa !25635, !pdg.inst.id !444
  %156 = sext i32 %147 to i64, !pdg.inst.id !430
  %157 = and i64 %156, 1, !pdg.inst.id !462
  %158 = icmp eq i32 %147, 1, !pdg.inst.id !428
  br i1 %158, label %182, label %159, !pdg.inst.id !467

159:                                              ; preds = %153
  %160 = sub nsw i64 %156, %157, !pdg.inst.id !460
  %161 = load i32, i32* @22
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %539, label %163

163:                                              ; preds = %159, %._crit_edge2
  %164 = phi i64 [ 0, %159 ], [ %179, %._crit_edge2 ], !pdg.inst.id !471
  %165 = phi i64 [ %160, %159 ], [ %180, %._crit_edge2 ], !pdg.inst.id !469
  %166 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %164, i64 0, !pdg.inst.id !456
  %167 = load i32, i32* %166, align 4, !tbaa !25636, !pdg.inst.id !482
  %168 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %164, i64 0, !pdg.inst.id !302
  store i32 %167, i32* %168, align 4, !tbaa !25636, !pdg.inst.id !484
  %169 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %164, i64 1, !pdg.inst.id !454
  %170 = load i32, i32* %169, align 4, !tbaa !25636, !pdg.inst.id !487
  %171 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %164, i64 1, !pdg.inst.id !300
  store i32 %170, i32* %171, align 4, !tbaa !25636, !pdg.inst.id !489
  %172 = or i64 %164, 1, !pdg.inst.id !472
  %173 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %172, i64 0, !pdg.inst.id !448
  %174 = load i32, i32* %173, align 4, !tbaa !25636, !pdg.inst.id !496
  %175 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %172, i64 0, !pdg.inst.id !294
  store i32 %174, i32* %175, align 4, !tbaa !25636, !pdg.inst.id !498
  %176 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %172, i64 1, !pdg.inst.id !446
  %177 = load i32, i32* %176, align 4, !tbaa !25636, !pdg.inst.id !501
  %178 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %172, i64 1, !pdg.inst.id !292
  store i32 %177, i32* %178, align 4, !tbaa !25636, !pdg.inst.id !503
  %179 = add nuw nsw i64 %164, 2, !pdg.inst.id !474
  %180 = add i64 %165, -2, !pdg.inst.id !480
  %181 = icmp eq i64 %180, 0, !pdg.inst.id !509
  br i1 %181, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512

._crit_edge2:                                     ; preds = %163
  br label %163, !pdg.inst.id !24953

.loopexit6:                                       ; preds = %567, %163
  %.lcssa15 = phi i64 [ %179, %163 ], [ %566, %567 ], !pdg.inst.id !506
  br label %182, !pdg.inst.id !24956

182:                                              ; preds = %.loopexit6, %153
  %183 = phi i64 [ 0, %153 ], [ %.lcssa15, %.loopexit6 ], !pdg.inst.id !514
  %184 = icmp eq i64 %157, 0, !pdg.inst.id !465
  br i1 %184, label %192, label %185, !pdg.inst.id !520

185:                                              ; preds = %182
  %186 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %183, i64 0, !pdg.inst.id !452
  %187 = load i32, i32* %186, align 4, !tbaa !25636, !pdg.inst.id !522
  %188 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %183, i64 0, !pdg.inst.id !298
  store i32 %187, i32* %188, align 4, !tbaa !25636, !pdg.inst.id !524
  %189 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %183, i64 1, !pdg.inst.id !450
  %190 = load i32, i32* %189, align 4, !tbaa !25636, !pdg.inst.id !527
  %191 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %183, i64 1, !pdg.inst.id !296
  store i32 %190, i32* %191, align 4, !tbaa !25636, !pdg.inst.id !529
  br label %192, !pdg.inst.id !24969

192:                                              ; preds = %185, %182, %126
  %193 = load i32, i32* %81, align 8, !tbaa !25625, !pdg.inst.id !308
  %194 = getelementptr inbounds i8, i8* %18, i64 88, !pdg.inst.id !95
  %195 = bitcast i8* %194 to i32*, !pdg.inst.id !536
  store i32 %193, i32* %195, align 8, !tbaa !25625, !pdg.inst.id !534
  %196 = getelementptr inbounds i8, i8* %18, i64 96, !pdg.inst.id !93
  %197 = bitcast i8* %196 to %struct.chiral_t**, !pdg.inst.id !539
  store %struct.chiral_t* %100, %struct.chiral_t** %197, align 8, !tbaa !25637, !pdg.inst.id !344
  %198 = icmp sgt i32 %193, 0, !pdg.inst.id !532
  br i1 %198, label %199, label %229, !prof !25616, !pdg.inst.id !542

199:                                              ; preds = %192
  %200 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 14, !pdg.inst.id !77
  %201 = load %struct.chiral_t*, %struct.chiral_t** %200, align 8, !tbaa !25637, !pdg.inst.id !544
  %202 = load i32, i32* @23
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %568, label %204

204:                                              ; preds = %199, %._crit_edge
  %205 = phi i64 [ 0, %199 ], [ %224, %._crit_edge ], !pdg.inst.id !556
  %206 = phi %struct.chiral_t* [ %100, %199 ], [ %225, %._crit_edge ], !pdg.inst.id !342
  %207 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %201, i64 %205, i32 0, i64 0, !pdg.inst.id !554
  %208 = load i32, i32* %207, align 4, !tbaa !25636, !pdg.inst.id !576
  %209 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %206, i64 0, i32 0, i64 0, !pdg.inst.id !574
  store i32 %208, i32* %209, align 4, !tbaa !25636, !pdg.inst.id !578
  %210 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %201, i64 %205, i32 0, i64 1, !pdg.inst.id !550
  %211 = load i32, i32* %210, align 4, !tbaa !25636, !pdg.inst.id !581
  %212 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %206, i64 0, i32 0, i64 1, !pdg.inst.id !568
  store i32 %211, i32* %212, align 4, !tbaa !25636, !pdg.inst.id !583
  %213 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %201, i64 %205, i32 0, i64 2, !pdg.inst.id !548
  %214 = load i32, i32* %213, align 4, !tbaa !25636, !pdg.inst.id !586
  %215 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %206, i64 0, i32 0, i64 2, !pdg.inst.id !566
  store i32 %214, i32* %215, align 4, !tbaa !25636, !pdg.inst.id !588
  %216 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %201, i64 %205, i32 0, i64 3, !pdg.inst.id !546
  %217 = load i32, i32* %216, align 4, !tbaa !25636, !pdg.inst.id !591
  %218 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %206, i64 0, i32 0, i64 3, !pdg.inst.id !564
  store i32 %217, i32* %218, align 4, !tbaa !25636, !pdg.inst.id !593
  %219 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %201, i64 %205, i32 1, !pdg.inst.id !552
  %220 = bitcast double* %219 to i64*, !pdg.inst.id !596
  %221 = load i64, i64* %220, align 8, !tbaa !25638, !pdg.inst.id !598
  %222 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %206, i64 0, i32 1, !pdg.inst.id !570
  %223 = bitcast double* %222 to i64*, !pdg.inst.id !602
  store i64 %221, i64* %223, align 8, !tbaa !25638, !pdg.inst.id !600
  %224 = add nuw nsw i64 %205, 1, !pdg.inst.id !562
  %225 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %206, i64 1, !pdg.inst.id !572
  %226 = load i32, i32* %81, align 8, !tbaa !25625, !pdg.inst.id !306
  %227 = sext i32 %226 to i64, !pdg.inst.id !609
  %228 = icmp slt i64 %224, %227, !pdg.inst.id !605
  br i1 %228, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612

._crit_edge:                                      ; preds = %204
  br label %204, !pdg.inst.id !25042

.loopexit5:                                       ; preds = %591, %204
  br label %229, !pdg.inst.id !25044

229:                                              ; preds = %.loopexit5, %192
  %230 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 7, !pdg.inst.id !52
  %231 = load i32, i32* %230, align 4, !tbaa !25641, !pdg.inst.id !614
  %232 = getelementptr inbounds i8, i8* %18, i64 44, !pdg.inst.id !89
  %233 = bitcast i8* %232 to i32*, !pdg.inst.id !618
  store i32 %231, i32* %233, align 4, !tbaa !25641, !pdg.inst.id !616
  %234 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 8, !pdg.inst.id !61
  %235 = load i32, i32* %234, align 8, !tbaa !25642, !pdg.inst.id !621
  %236 = getelementptr inbounds i8, i8* %18, i64 48, !pdg.inst.id !87
  %237 = bitcast i8* %236 to i32*, !pdg.inst.id !625
  store i32 %235, i32* %237, align 8, !tbaa !25642, !pdg.inst.id !623
  %238 = load i32, i32* %31, align 8, !tbaa !25623, !pdg.inst.id !143
  %239 = getelementptr inbounds i8, i8* %18, i64 104, !pdg.inst.id !85
  %240 = bitcast i8* %239 to i32*, !pdg.inst.id !641
  store i32 %238, i32* %240, align 8, !tbaa !25623, !pdg.inst.id !638
  %241 = getelementptr inbounds i8, i8* %18, i64 112, !pdg.inst.id !83
  %242 = bitcast i8* %241 to i8**, !pdg.inst.id !644
  store i8* %49, i8** %242, align 8, !tbaa !25643, !pdg.inst.id !238
  %243 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 16, !pdg.inst.id !40
  %244 = load i32*, i32** %243, align 8, !tbaa !25643, !pdg.inst.id !647
  %245 = bitcast i32* %244 to i8*, !pdg.inst.id !657
  %246 = icmp eq i32* %244, null, !pdg.inst.id !662
  %247 = icmp sgt i32 %238, 0, !pdg.inst.id !636
  %248 = bitcast i8* %49 to i32*, !pdg.inst.id !236
  br i1 %246, label %345, label %249, !prof !25644, !pdg.inst.id !666

249:                                              ; preds = %229
  br i1 %247, label %250, label %423, !pdg.inst.id !670

250:                                              ; preds = %249
  %251 = sext i32 %238 to i64, !pdg.inst.id !634
  %252 = icmp ult i32 %238, 32, !pdg.inst.id !630
  br i1 %252, label %253, label %255, !pdg.inst.id !699

253:                                              ; preds = %343, %255, %250
  %254 = phi i64 [ 0, %255 ], [ 0, %250 ], [ %264, %343 ], !pdg.inst.id !701
  br label %410, !pdg.inst.id !25071

255:                                              ; preds = %250
  %256 = shl nsw i64 %251, 2, !pdg.inst.id !695
  %257 = getelementptr i8, i8* %49, i64 %256, !pdg.inst.id !234
  %258 = getelementptr i32, i32* %244, i64 %251, !pdg.inst.id !655
  %259 = bitcast i32* %258 to i8*, !pdg.inst.id !706
  %260 = icmp ult i8* %49, %259, !pdg.inst.id !232
  %261 = icmp ugt i8* %257, %245, !pdg.inst.id !664
  %262 = and i1 %260, %261, !pdg.inst.id !709
  br i1 %262, label %253, label %263, !pdg.inst.id !712

263:                                              ; preds = %255
  %264 = and i64 %251, -32, !pdg.inst.id !692
  %265 = add nsw i64 %264, -32, !pdg.inst.id !714
  %266 = lshr exact i64 %265, 5, !pdg.inst.id !720
  %267 = add nuw nsw i64 %266, 1, !pdg.inst.id !722
  %268 = and i64 %267, 1, !pdg.inst.id !726
  %269 = icmp eq i64 %265, 0, !pdg.inst.id !718
  br i1 %269, label %319, label %270, !pdg.inst.id !731

270:                                              ; preds = %263
  %271 = sub nuw nsw i64 %267, %268, !pdg.inst.id !724
  br label %272, !pdg.inst.id !25099

272:                                              ; preds = %._crit_edge5, %270
  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
  %274 = phi i64 [ %271, %270 ], [ %317, %._crit_edge5 ], !pdg.inst.id !733
  %275 = getelementptr inbounds i32, i32* %244, i64 %273, !pdg.inst.id !653
  %276 = bitcast i32* %275 to <8 x i32>*, !pdg.inst.id !744
  %277 = load <8 x i32>, <8 x i32>* %276, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
  %278 = getelementptr inbounds i32, i32* %275, i64 8, !pdg.inst.id !750
  %279 = bitcast i32* %278 to <8 x i32>*, !pdg.inst.id !756
  %280 = load <8 x i32>, <8 x i32>* %279, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
  %281 = getelementptr inbounds i32, i32* %275, i64 16, !pdg.inst.id !748
  %282 = bitcast i32* %281 to <8 x i32>*, !pdg.inst.id !762
  %283 = load <8 x i32>, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
  %284 = getelementptr inbounds i32, i32* %275, i64 24, !pdg.inst.id !746
  %285 = bitcast i32* %284 to <8 x i32>*, !pdg.inst.id !768
  %286 = load <8 x i32>, <8 x i32>* %285, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
  %287 = getelementptr inbounds i32, i32* %248, i64 %273, !pdg.inst.id !684
  %288 = bitcast i32* %287 to <8 x i32>*, !pdg.inst.id !774
  store <8 x i32> %277, <8 x i32>* %288, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
  %289 = getelementptr inbounds i32, i32* %287, i64 8, !pdg.inst.id !780
  %290 = bitcast i32* %289 to <8 x i32>*, !pdg.inst.id !783
  store <8 x i32> %280, <8 x i32>* %290, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
  %291 = getelementptr inbounds i32, i32* %287, i64 16, !pdg.inst.id !778
  %292 = bitcast i32* %291 to <8 x i32>*, !pdg.inst.id !786
  store <8 x i32> %283, <8 x i32>* %292, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
  %293 = getelementptr inbounds i32, i32* %287, i64 24, !pdg.inst.id !776
  %294 = bitcast i32* %293 to <8 x i32>*, !pdg.inst.id !789
  store <8 x i32> %286, <8 x i32>* %294, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
  %295 = or i64 %273, 32, !pdg.inst.id !736
  %296 = getelementptr inbounds i32, i32* %244, i64 %295, !pdg.inst.id !649
  %297 = bitcast i32* %296 to <8 x i32>*, !pdg.inst.id !800
  %298 = load <8 x i32>, <8 x i32>* %297, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
  %299 = getelementptr inbounds i32, i32* %296, i64 8, !pdg.inst.id !798
  %300 = bitcast i32* %299 to <8 x i32>*, !pdg.inst.id !806
  %301 = load <8 x i32>, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
  %302 = getelementptr inbounds i32, i32* %296, i64 16, !pdg.inst.id !796
  %303 = bitcast i32* %302 to <8 x i32>*, !pdg.inst.id !812
  %304 = load <8 x i32>, <8 x i32>* %303, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
  %305 = getelementptr inbounds i32, i32* %296, i64 24, !pdg.inst.id !794
  %306 = bitcast i32* %305 to <8 x i32>*, !pdg.inst.id !818
  %307 = load <8 x i32>, <8 x i32>* %306, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
  %308 = getelementptr inbounds i32, i32* %248, i64 %295, !pdg.inst.id !674
  %309 = bitcast i32* %308 to <8 x i32>*, !pdg.inst.id !830
  store <8 x i32> %298, <8 x i32>* %309, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
  %310 = getelementptr inbounds i32, i32* %308, i64 8, !pdg.inst.id !828
  %311 = bitcast i32* %310 to <8 x i32>*, !pdg.inst.id !833
  store <8 x i32> %301, <8 x i32>* %311, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
  %312 = getelementptr inbounds i32, i32* %308, i64 16, !pdg.inst.id !826
  %313 = bitcast i32* %312 to <8 x i32>*, !pdg.inst.id !836
  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
  %314 = getelementptr inbounds i32, i32* %308, i64 24, !pdg.inst.id !824
  %315 = bitcast i32* %314 to <8 x i32>*, !pdg.inst.id !839
  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
  %316 = add i64 %273, 64, !pdg.inst.id !738
  %317 = add i64 %274, -2, !pdg.inst.id !742
  %318 = icmp eq i64 %317, 0, !pdg.inst.id !845
  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848

._crit_edge5:                                     ; preds = %272
  br label %272, !pdg.inst.id !25211

.loopexit4:                                       ; preds = %272
  %.lcssa14 = phi i64 [ %316, %272 ], !pdg.inst.id !842
  br label %319, !pdg.inst.id !25214

319:                                              ; preds = %.loopexit4, %263
  %320 = phi i64 [ 0, %263 ], [ %.lcssa14, %.loopexit4 ], !pdg.inst.id !850
  %321 = icmp eq i64 %268, 0, !pdg.inst.id !729
  br i1 %321, label %343, label %322, !pdg.inst.id !854

322:                                              ; preds = %319
  %323 = getelementptr inbounds i32, i32* %244, i64 %320, !pdg.inst.id !651
  %324 = bitcast i32* %323 to <8 x i32>*, !pdg.inst.id !862
  %325 = load <8 x i32>, <8 x i32>* %324, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !864
  %326 = getelementptr inbounds i32, i32* %323, i64 8, !pdg.inst.id !860
  %327 = bitcast i32* %326 to <8 x i32>*, !pdg.inst.id !868
  %328 = load <8 x i32>, <8 x i32>* %327, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !870
  %329 = getelementptr inbounds i32, i32* %323, i64 16, !pdg.inst.id !858
  %330 = bitcast i32* %329 to <8 x i32>*, !pdg.inst.id !874
  %331 = load <8 x i32>, <8 x i32>* %330, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !876
  %332 = getelementptr inbounds i32, i32* %323, i64 24, !pdg.inst.id !856
  %333 = bitcast i32* %332 to <8 x i32>*, !pdg.inst.id !880
  %334 = load <8 x i32>, <8 x i32>* %333, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !882
  %335 = getelementptr inbounds i32, i32* %248, i64 %320, !pdg.inst.id !676
  %336 = bitcast i32* %335 to <8 x i32>*, !pdg.inst.id !892
  store <8 x i32> %325, <8 x i32>* %336, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !866
  %337 = getelementptr inbounds i32, i32* %335, i64 8, !pdg.inst.id !890
  %338 = bitcast i32* %337 to <8 x i32>*, !pdg.inst.id !895
  store <8 x i32> %328, <8 x i32>* %338, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !872
  %339 = getelementptr inbounds i32, i32* %335, i64 16, !pdg.inst.id !888
  %340 = bitcast i32* %339 to <8 x i32>*, !pdg.inst.id !898
  store <8 x i32> %331, <8 x i32>* %340, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !878
  %341 = getelementptr inbounds i32, i32* %335, i64 24, !pdg.inst.id !886
  %342 = bitcast i32* %341 to <8 x i32>*, !pdg.inst.id !901
  store <8 x i32> %334, <8 x i32>* %342, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !884
  br label %343, !pdg.inst.id !25243

343:                                              ; preds = %319, %322
  %344 = icmp eq i64 %264, %251, !pdg.inst.id !690
  br i1 %344, label %426, label %253, !pdg.inst.id !904

345:                                              ; preds = %229
  br i1 %247, label %346, label %423, !prof !25644, !pdg.inst.id !672

346:                                              ; preds = %345
  %347 = sext i32 %238 to i64, !pdg.inst.id !632
  %348 = icmp ult i32 %238, 32, !pdg.inst.id !628
  br i1 %348, label %349, label %351, !prof !25644, !pdg.inst.id !912

349:                                              ; preds = %408, %346
  %350 = phi i64 [ 0, %346 ], [ %352, %408 ], !pdg.inst.id !914
  br label %417, !pdg.inst.id !25252

351:                                              ; preds = %346
  %352 = and i64 %347, -32, !pdg.inst.id !908
  %353 = add nsw i64 %352, -32, !pdg.inst.id !917
  %354 = lshr exact i64 %353, 5, !pdg.inst.id !923
  %355 = add nuw nsw i64 %354, 1, !pdg.inst.id !925
  %356 = and i64 %355, 1, !pdg.inst.id !929
  %357 = icmp eq i64 %353, 0, !pdg.inst.id !921
  br i1 %357, label %392, label %358, !pdg.inst.id !934

358:                                              ; preds = %351
  %359 = sub nuw nsw i64 %355, %356, !pdg.inst.id !927
  br label %360, !pdg.inst.id !25267

360:                                              ; preds = %._crit_edge4, %358
  %361 = phi i64 [ 0, %358 ], [ %388, %._crit_edge4 ], !pdg.inst.id !938
  %362 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %358 ], [ %389, %._crit_edge4 ], !pdg.inst.id !944
  %363 = phi i64 [ %359, %358 ], [ %390, %._crit_edge4 ], !pdg.inst.id !936
  %364 = getelementptr inbounds i32, i32* %248, i64 %361, !pdg.inst.id !682
  %365 = add <8 x i32> %362, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !961
  %366 = add <8 x i32> %362, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !957
  %367 = add <8 x i32> %362, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !955
  %368 = bitcast i32* %364 to <8 x i32>*, !pdg.inst.id !965
  store <8 x i32> %362, <8 x i32>* %368, align 4, !tbaa !25636, !pdg.inst.id !959
  %369 = getelementptr inbounds i32, i32* %364, i64 8, !pdg.inst.id !971
  %370 = bitcast i32* %369 to <8 x i32>*, !pdg.inst.id !980
  store <8 x i32> %365, <8 x i32>* %370, align 4, !tbaa !25636, !pdg.inst.id !973
  %371 = getelementptr inbounds i32, i32* %364, i64 16, !pdg.inst.id !969
  %372 = bitcast i32* %371 to <8 x i32>*, !pdg.inst.id !983
  store <8 x i32> %366, <8 x i32>* %372, align 4, !tbaa !25636, !pdg.inst.id !975
  %373 = getelementptr inbounds i32, i32* %364, i64 24, !pdg.inst.id !967
  %374 = bitcast i32* %373 to <8 x i32>*, !pdg.inst.id !986
  store <8 x i32> %367, <8 x i32>* %374, align 4, !tbaa !25636, !pdg.inst.id !977
  %375 = or i64 %361, 32, !pdg.inst.id !939
  %376 = add <8 x i32> %362, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !pdg.inst.id !953
  %377 = getelementptr inbounds i32, i32* %248, i64 %375, !pdg.inst.id !678
  %378 = add <8 x i32> %362, <i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40>, !pdg.inst.id !951
  %379 = add <8 x i32> %362, <i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48>, !pdg.inst.id !949
  %380 = add <8 x i32> %362, <i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56>, !pdg.inst.id !947
  %381 = bitcast i32* %377 to <8 x i32>*, !pdg.inst.id !998
  store <8 x i32> %376, <8 x i32>* %381, align 4, !tbaa !25636, !pdg.inst.id !990
  %382 = getelementptr inbounds i32, i32* %377, i64 8, !pdg.inst.id !996
  %383 = bitcast i32* %382 to <8 x i32>*, !pdg.inst.id !1007
  store <8 x i32> %378, <8 x i32>* %383, align 4, !tbaa !25636, !pdg.inst.id !1000
  %384 = getelementptr inbounds i32, i32* %377, i64 16, !pdg.inst.id !994
  %385 = bitcast i32* %384 to <8 x i32>*, !pdg.inst.id !1010
  store <8 x i32> %379, <8 x i32>* %385, align 4, !tbaa !25636, !pdg.inst.id !1002
  %386 = getelementptr inbounds i32, i32* %377, i64 24, !pdg.inst.id !992
  %387 = bitcast i32* %386 to <8 x i32>*, !pdg.inst.id !1013
  store <8 x i32> %380, <8 x i32>* %387, align 4, !tbaa !25636, !pdg.inst.id !1004
  %388 = add i64 %361, 64, !pdg.inst.id !941
  %389 = add <8 x i32> %362, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>, !pdg.inst.id !945
  %390 = add i64 %363, -2, !pdg.inst.id !963
  %391 = icmp eq i64 %390, 0, !pdg.inst.id !1022
  br i1 %391, label %.loopexit2, label %._crit_edge4, !llvm.loop !25652, !pdg.inst.id !1025

._crit_edge4:                                     ; preds = %360
  br label %360, !pdg.inst.id !25349

.loopexit2:                                       ; preds = %360
  %.lcssa13 = phi i64 [ %388, %360 ], !pdg.inst.id !1016
  %.lcssa = phi <8 x i32> [ %389, %360 ], !pdg.inst.id !1019
  br label %392, !pdg.inst.id !25353

392:                                              ; preds = %.loopexit2, %351
  %393 = phi i64 [ 0, %351 ], [ %.lcssa13, %.loopexit2 ], !pdg.inst.id !1027
  %394 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %351 ], [ %.lcssa, %.loopexit2 ], !pdg.inst.id !1029
  %395 = icmp eq i64 %356, 0, !pdg.inst.id !932
  br i1 %395, label %408, label %396, !pdg.inst.id !1040

396:                                              ; preds = %392
  %397 = getelementptr inbounds i32, i32* %248, i64 %393, !pdg.inst.id !680
  %398 = add <8 x i32> %394, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !1032
  %399 = add <8 x i32> %394, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !1034
  %400 = add <8 x i32> %394, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !1036
  %401 = bitcast i32* %397 to <8 x i32>*, !pdg.inst.id !1048
  store <8 x i32> %394, <8 x i32>* %401, align 4, !tbaa !25636, !pdg.inst.id !1038
  %402 = getelementptr inbounds i32, i32* %397, i64 8, !pdg.inst.id !1046
  %403 = bitcast i32* %402 to <8 x i32>*, !pdg.inst.id !1057
  store <8 x i32> %398, <8 x i32>* %403, align 4, !tbaa !25636, !pdg.inst.id !1050
  %404 = getelementptr inbounds i32, i32* %397, i64 16, !pdg.inst.id !1044
  %405 = bitcast i32* %404 to <8 x i32>*, !pdg.inst.id !1060
  store <8 x i32> %399, <8 x i32>* %405, align 4, !tbaa !25636, !pdg.inst.id !1052
  %406 = getelementptr inbounds i32, i32* %397, i64 24, !pdg.inst.id !1042
  %407 = bitcast i32* %406 to <8 x i32>*, !pdg.inst.id !1063
  store <8 x i32> %400, <8 x i32>* %407, align 4, !tbaa !25636, !pdg.inst.id !1054
  br label %408, !pdg.inst.id !25364

408:                                              ; preds = %392, %396
  %409 = icmp eq i64 %352, %347, !pdg.inst.id !906
  br i1 %409, label %426, label %349, !pdg.inst.id !1066

410:                                              ; preds = %._crit_edge1, %253
  %411 = phi i64 [ %415, %._crit_edge1 ], [ %254, %253 ], !pdg.inst.id !702
  %412 = getelementptr inbounds i32, i32* %244, i64 %411, !pdg.inst.id !659
  %413 = load i32, i32* %412, align 4, !tbaa !25636, !pdg.inst.id !1072
  %414 = getelementptr inbounds i32, i32* %248, i64 %411, !pdg.inst.id !688
  store i32 %413, i32* %414, align 4, !tbaa !25636, !pdg.inst.id !1074
  %415 = add nuw nsw i64 %411, 1, !pdg.inst.id !1070
  %416 = icmp slt i64 %415, %251, !pdg.inst.id !697
  br i1 %416, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079

._crit_edge1:                                     ; preds = %410
  br label %410, !pdg.inst.id !25085

417:                                              ; preds = %._crit_edge3, %349
  %418 = phi i64 [ %421, %._crit_edge3 ], [ %350, %349 ], !pdg.inst.id !915
  %419 = getelementptr inbounds i32, i32* %248, i64 %418, !pdg.inst.id !686
  %420 = trunc i64 %418 to i32, !pdg.inst.id !1081
  store i32 %420, i32* %419, align 4, !tbaa !25636, !pdg.inst.id !1086
  %421 = add nuw nsw i64 %418, 1, !pdg.inst.id !1084
  %422 = icmp slt i64 %421, %347, !pdg.inst.id !910
  br i1 %422, label %._crit_edge3, label %.loopexit1, !prof !25654, !llvm.loop !25655, !pdg.inst.id !1091

._crit_edge3:                                     ; preds = %417
  br label %417, !pdg.inst.id !25424

423:                                              ; preds = %249, %345
  %424 = getelementptr inbounds i8, i8* %18, i64 120, !pdg.inst.id !59
  %425 = bitcast i8* %424 to i8**, !pdg.inst.id !1093
  store i8* %35, i8** %425, align 8, !tbaa !25657, !pdg.inst.id !155
  br label %537, !pdg.inst.id !25429

.loopexit1:                                       ; preds = %417
  br label %426, !pdg.inst.id !25435

.loopexit3:                                       ; preds = %410
  br label %426, !pdg.inst.id !25438

426:                                              ; preds = %.loopexit3, %.loopexit1, %343, %408
  %427 = getelementptr inbounds i8, i8* %18, i64 120, !pdg.inst.id !81
  %428 = bitcast i8* %427 to i8**, !pdg.inst.id !1096
  store i8* %35, i8** %428, align 8, !tbaa !25657, !pdg.inst.id !157
  br i1 %247, label %429, label %537, !prof !25644, !pdg.inst.id !668

429:                                              ; preds = %426
  %430 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 17, !pdg.inst.id !42
  br label %431, !pdg.inst.id !25451

431:                                              ; preds = %429, %444
  %432 = phi i64 [ 0, %429 ], [ %533, %444 ], !pdg.inst.id !1103
  %433 = load %struct.atom_t*, %struct.atom_t** %430, align 8, !tbaa !25657, !pdg.inst.id !1101
  %434 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %433, i64 %432, i32 0, !pdg.inst.id !1104
  %435 = load i8*, i8** %434, align 8, !tbaa !25658, !pdg.inst.id !1179
  %436 = tail call i64 @strlen(i8* %435) #49, !pdg.inst.id !1181
  %437 = add i64 %436, 1, !pdg.inst.id !1183
  %438 = tail call noalias i8* @malloc(i64 %437) #48, !pdg.inst.id !1185
  %439 = icmp eq i8* %438, null, !pdg.inst.id !1191
  br i1 %439, label %440, label %444, !prof !25660, !pdg.inst.id !1193

440:                                              ; preds = %431
  %441 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !1195
  %442 = getelementptr [34 x i8], [34 x i8]* @.str.33.401, i64 0, i64 0, !pdg.inst.id !1198
  %443 = tail call i64 @fwrite(i8* %442, i64 33, i64 1, %struct._IO_FILE* %441) #50, !pdg.inst.id !1196
  tail call void @exit(i32 1) #51, !pdg.inst.id !1647
  br label %UnifiedUnreachableBlock, !pdg.inst.id !25476

444:                                              ; preds = %431
  %445 = load i8*, i8** %434, align 8, !tbaa !25658, !pdg.inst.id !1177
  %446 = tail call i8* @strcpy(i8* nonnull %438, i8* %445) #48, !pdg.inst.id !1187
  %447 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 0, !pdg.inst.id !179
  store i8* %438, i8** %447, align 8, !tbaa !25658, !pdg.inst.id !1189
  %448 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 1, !pdg.inst.id !213
  store i8* null, i8** %448, align 8, !tbaa !25661, !pdg.inst.id !1202
  %449 = load %struct.atom_t*, %struct.atom_t** %430, align 8, !tbaa !25657, !pdg.inst.id !1099
  %450 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 2, !pdg.inst.id !1107
  %451 = load i32, i32* %450, align 8, !tbaa !25662, !pdg.inst.id !1225
  %452 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 2, !pdg.inst.id !211
  store i32 %451, i32* %452, align 8, !tbaa !25662, !pdg.inst.id !1227
  %453 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 3, !pdg.inst.id !1110
  %454 = load i32, i32* %453, align 4, !tbaa !25663, !pdg.inst.id !1230
  %455 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 3, !pdg.inst.id !209
  store i32 %454, i32* %455, align 4, !tbaa !25663, !pdg.inst.id !1232
  %456 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 0, !pdg.inst.id !1149
  %457 = load i32, i32* %456, align 4, !tbaa !25636, !pdg.inst.id !1235
  %458 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 0, !pdg.inst.id !181
  store i32 %457, i32* %458, align 4, !tbaa !25636, !pdg.inst.id !1237
  %459 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 1, !pdg.inst.id !1153
  %460 = load i32, i32* %459, align 4, !tbaa !25636, !pdg.inst.id !1240
  %461 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 1, !pdg.inst.id !177
  store i32 %460, i32* %461, align 4, !tbaa !25636, !pdg.inst.id !1242
  %462 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 2, !pdg.inst.id !1156
  %463 = load i32, i32* %462, align 4, !tbaa !25636, !pdg.inst.id !1245
  %464 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 2, !pdg.inst.id !173
  store i32 %463, i32* %464, align 4, !tbaa !25636, !pdg.inst.id !1247
  %465 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 3, !pdg.inst.id !1159
  %466 = load i32, i32* %465, align 4, !tbaa !25636, !pdg.inst.id !1250
  %467 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 3, !pdg.inst.id !171
  store i32 %466, i32* %467, align 4, !tbaa !25636, !pdg.inst.id !1252
  %468 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 4, !pdg.inst.id !1162
  %469 = load i32, i32* %468, align 4, !tbaa !25636, !pdg.inst.id !1255
  %470 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 4, !pdg.inst.id !169
  store i32 %469, i32* %470, align 4, !tbaa !25636, !pdg.inst.id !1257
  %471 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 5, !pdg.inst.id !1165
  %472 = load i32, i32* %471, align 4, !tbaa !25636, !pdg.inst.id !1260
  %473 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 5, !pdg.inst.id !167
  store i32 %472, i32* %473, align 4, !tbaa !25636, !pdg.inst.id !1262
  %474 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 6, !pdg.inst.id !1168
  %475 = load i32, i32* %474, align 4, !tbaa !25636, !pdg.inst.id !1265
  %476 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 6, !pdg.inst.id !165
  store i32 %475, i32* %476, align 4, !tbaa !25636, !pdg.inst.id !1267
  %477 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 4, i64 7, !pdg.inst.id !1171
  %478 = load i32, i32* %477, align 4, !tbaa !25636, !pdg.inst.id !1270
  %479 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 4, i64 7, !pdg.inst.id !163
  store i32 %478, i32* %479, align 4, !tbaa !25636, !pdg.inst.id !1272
  %480 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 5, !pdg.inst.id !207
  %481 = bitcast %struct.residue_t** %480 to i8**, !pdg.inst.id !1275
  store i8* %18, i8** %481, align 8, !tbaa !25664, !pdg.inst.id !79
  %482 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 6, !pdg.inst.id !1115
  %483 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 6, !pdg.inst.id !205
  %484 = bitcast double* %482 to <2 x i64>*, !pdg.inst.id !1278
  %485 = load <2 x i64>, <2 x i64>* %484, align 8, !tbaa !25665, !pdg.inst.id !1282
  %486 = bitcast double* %483 to <2 x i64>*, !pdg.inst.id !1280
  store <2 x i64> %485, <2 x i64>* %486, align 8, !tbaa !25665, !pdg.inst.id !1284
  %487 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 8, !pdg.inst.id !1121
  %488 = bitcast double* %487 to i64*, !pdg.inst.id !1287
  %489 = load i64, i64* %488, align 8, !tbaa !25666, !pdg.inst.id !1289
  %490 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 8, !pdg.inst.id !203
  %491 = bitcast double* %490 to i64*, !pdg.inst.id !1293
  store i64 %489, i64* %491, align 8, !tbaa !25666, !pdg.inst.id !1291
  %492 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 9, !pdg.inst.id !1124
  %493 = bitcast double* %492 to i64*, !pdg.inst.id !1296
  %494 = load i64, i64* %493, align 8, !tbaa !25667, !pdg.inst.id !1298
  %495 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 9, !pdg.inst.id !201
  %496 = bitcast double* %495 to i64*, !pdg.inst.id !1302
  store i64 %494, i64* %496, align 8, !tbaa !25667, !pdg.inst.id !1300
  %497 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 10, !pdg.inst.id !183
  store i8* null, i8** %497, align 8, !tbaa !25668, !pdg.inst.id !1305
  %498 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 11, !pdg.inst.id !1128
  %499 = load i32, i32* %498, align 8, !tbaa !25669, !pdg.inst.id !1307
  %500 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 11, !pdg.inst.id !185
  store i32 %499, i32* %500, align 8, !tbaa !25669, !pdg.inst.id !1309
  %501 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 12, !pdg.inst.id !1131
  %502 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 12, !pdg.inst.id !175
  %503 = bitcast double* %501 to <2 x i64>*, !pdg.inst.id !1312
  %504 = load <2 x i64>, <2 x i64>* %503, align 8, !tbaa !25665, !pdg.inst.id !1316
  %505 = bitcast double* %502 to <2 x i64>*, !pdg.inst.id !1314
  store <2 x i64> %504, <2 x i64>* %505, align 8, !tbaa !25665, !pdg.inst.id !1318
  %506 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 14, !pdg.inst.id !1119
  %507 = load i32, i32* %506, align 8, !tbaa !25670, !pdg.inst.id !1321
  %508 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 14, !pdg.inst.id !199
  store i32 %507, i32* %508, align 8, !tbaa !25670, !pdg.inst.id !1323
  %509 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 15, !pdg.inst.id !1133
  %510 = load i32, i32* %509, align 4, !tbaa !25671, !pdg.inst.id !1326
  %511 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 15, !pdg.inst.id !197
  store i32 %510, i32* %511, align 4, !tbaa !25671, !pdg.inst.id !1328
  %512 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 16, !pdg.inst.id !195
  store i8* null, i8** %512, align 8, !tbaa !25672, !pdg.inst.id !1331
  %513 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 17, i64 0, !pdg.inst.id !1137
  %514 = bitcast double* %513 to i64*, !pdg.inst.id !1333
  %515 = load i64, i64* %514, align 8, !tbaa !25665, !pdg.inst.id !1335
  %516 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 17, !pdg.inst.id !193
  %517 = bitcast [3 x double]* %516 to i64*, !pdg.inst.id !1339
  store i64 %515, i64* %517, align 8, !tbaa !25665, !pdg.inst.id !1337
  %518 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 17, i64 1, !pdg.inst.id !1140
  %519 = bitcast double* %518 to i64*, !pdg.inst.id !1342
  %520 = load i64, i64* %519, align 8, !tbaa !25665, !pdg.inst.id !1344
  %521 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 17, i64 1, !pdg.inst.id !191
  %522 = bitcast double* %521 to i64*, !pdg.inst.id !1348
  store i64 %520, i64* %522, align 8, !tbaa !25665, !pdg.inst.id !1346
  %523 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 17, i64 2, !pdg.inst.id !1143
  %524 = bitcast double* %523 to i64*, !pdg.inst.id !1351
  %525 = load i64, i64* %524, align 8, !tbaa !25665, !pdg.inst.id !1353
  %526 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 17, i64 2, !pdg.inst.id !189
  %527 = bitcast double* %526 to i64*, !pdg.inst.id !1357
  store i64 %525, i64* %527, align 8, !tbaa !25665, !pdg.inst.id !1355
  %528 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %449, i64 %432, i32 18, !pdg.inst.id !1146
  %529 = bitcast double* %528 to i64*, !pdg.inst.id !1360
  %530 = load i64, i64* %529, align 8, !tbaa !25673, !pdg.inst.id !1362
  %531 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i64 %432, i32 18, !pdg.inst.id !187
  %532 = bitcast double* %531 to i64*, !pdg.inst.id !1366
  store i64 %530, i64* %532, align 8, !tbaa !25673, !pdg.inst.id !1364
  %533 = add nuw nsw i64 %432, 1, !pdg.inst.id !1174
  %534 = load i32, i32* %31, align 8, !tbaa !25623, !pdg.inst.id !141
  %535 = sext i32 %534 to i64, !pdg.inst.id !1372
  %536 = icmp slt i64 %533, %535, !pdg.inst.id !1369
  br i1 %536, label %431, label %.loopexit, !prof !25654, !pdg.inst.id !1375

.loopexit:                                        ; preds = %444
  br label %537, !pdg.inst.id !25596

537:                                              ; preds = %.loopexit, %423, %426, %90, %70, %51, %38, %21
  %538 = phi %struct.residue_t* [ null, %21 ], [ null, %38 ], [ null, %51 ], [ null, %70 ], [ null, %90 ], [ %19, %426 ], [ %19, %423 ], [ %19, %.loopexit ], !pdg.inst.id !124
  ret %struct.residue_t* %538, !pdg.inst.id !1377

UnifiedUnreachableBlock:                          ; preds = %440, %122, %108
  unreachable, !pdg.inst.id !25613

539:                                              ; preds = %159
  store i32 1, i32* @22
  store i64 %160, i64* %13
  store [2 x i32]* %80, [2 x i32]** %15
  store [2 x i32]* %155, [2 x i32]** %17
  %540 = alloca [3 x i8*]
  %541 = getelementptr inbounds [3 x i8*], [3 x i8*]* %540, i64 0, i64 0
  %542 = bitcast i8** %541 to void (i8*, i8*)**
  store void (i8*, i8*)* @53, void (i8*, i8*)** %542
  %543 = getelementptr inbounds [3 x i8*], [3 x i8*]* %540, i64 0, i64 1
  %544 = bitcast i8** %543 to void (i8*, i8*)**
  store void (i8*, i8*)* @54, void (i8*, i8*)** %544
  %545 = getelementptr inbounds [3 x i8*], [3 x i8*]* %540, i64 0, i64 2
  %546 = bitcast i8** %545 to void (i8*, i8*)**
  store void (i8*, i8*)* @55, void (i8*, i8*)** %546
  %547 = bitcast [3 x i8*]* %540 to i8*
  %548 = alloca [16 x i64]
  %549 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 0
  store i64 64, i64* %549
  %550 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 1
  store i64 64, i64* %550
  %551 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 2
  store i64 64, i64* %551
  %552 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 3
  store i64 64, i64* %552
  %553 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 4
  store i64 64, i64* %553
  %554 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 5
  store i64 64, i64* %554
  %555 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 6
  store i64 64, i64* %555
  %556 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 7
  store i64 64, i64* %556
  %557 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 8
  store i64 1, i64* %557
  %558 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 9
  store i64 64, i64* %558
  %559 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 10
  store i64 1, i64* %559
  %560 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 11
  store i64 1, i64* %560
  %561 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 12
  store i64 1, i64* %561
  %562 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 13
  store i64 64, i64* %562
  %563 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 14
  store i64 64, i64* %563
  %564 = getelementptr inbounds [16 x i64], [16 x i64]* %548, i64 0, i64 15
  store i64 64, i64* %564
  %565 = bitcast [16 x i64]* %548 to i64*
  call void @stageDispatcher(i8* %11, i64* %565, i8* %547, i64 3, i64 16)
  %566 = load i64, i64* %12
  br label %567

567:                                              ; preds = %539
  store i32 0, i32* @22
  br label %.loopexit6

568:                                              ; preds = %199
  store i32 1, i32* @23
  store i32* %81, i32** %5
  store %struct.chiral_t* %100, %struct.chiral_t** %7
  store %struct.chiral_t* %201, %struct.chiral_t** %9
  %569 = alloca [1 x i8*]
  %570 = getelementptr inbounds [1 x i8*], [1 x i8*]* %569, i64 0, i64 0
  %571 = bitcast i8** %570 to void (i8*, i8*)**
  store void (i8*, i8*)* @56, void (i8*, i8*)** %571
  %572 = bitcast [1 x i8*]* %569 to i8*
  %573 = alloca [16 x i64]
  %574 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 0
  store i64 64, i64* %574
  %575 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 1
  store i64 64, i64* %575
  %576 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 2
  store i64 64, i64* %576
  %577 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 3
  store i64 64, i64* %577
  %578 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 4
  store i64 64, i64* %578
  %579 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 5
  store i64 64, i64* %579
  %580 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 6
  store i64 64, i64* %580
  %581 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 7
  store i64 64, i64* %581
  %582 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 8
  store i64 1, i64* %582
  %583 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 9
  store i64 64, i64* %583
  %584 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 10
  store i64 1, i64* %584
  %585 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 11
  store i64 1, i64* %585
  %586 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 12
  store i64 1, i64* %586
  %587 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 13
  store i64 64, i64* %587
  %588 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 14
  store i64 64, i64* %588
  %589 = getelementptr inbounds [16 x i64], [16 x i64]* %573, i64 0, i64 15
  store i64 64, i64* %589
  %590 = bitcast [16 x i64]* %573 to i64*
  call void @stageDispatcher(i8* %3, i64* %590, i8* %572, i64 1, i64 16)
  br label %591

591:                                              ; preds = %568
  store i32 0, i32* @23
  br label %.loopexit5
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "copyresidue"
Parallelizer:  Loop 33 = "  %275 = getelementptr inbounds i32, i32* %244, i64 %273, !pdg.inst.id !653"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 3
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:       %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:   SCC: 1 Internal nodes:
DSWP:       %289 = getelementptr inbounds i32, i32* %287, i64 8, !pdg.inst.id !780
DSWP:       %291 = getelementptr inbounds i32, i32* %287, i64 16, !pdg.inst.id !778
DSWP:       %292 = bitcast i32* %291 to <8 x i32>*, !pdg.inst.id !786
DSWP:       %293 = getelementptr inbounds i32, i32* %287, i64 24, !pdg.inst.id !776
DSWP:       %294 = bitcast i32* %293 to <8 x i32>*, !pdg.inst.id !789
DSWP:       %288 = bitcast i32* %287 to <8 x i32>*, !pdg.inst.id !774
DSWP:       %278 = getelementptr inbounds i32, i32* %275, i64 8, !pdg.inst.id !750
DSWP:       %304 = load <8 x i32>, <8 x i32>* %303, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
DSWP:       %290 = bitcast i32* %289 to <8 x i32>*, !pdg.inst.id !783
DSWP:       %298 = load <8 x i32>, <8 x i32>* %297, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
DSWP:       %309 = bitcast i32* %308 to <8 x i32>*, !pdg.inst.id !830
DSWP:       store <8 x i32> %277, <8 x i32>* %288, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
DSWP:       %286 = load <8 x i32>, <8 x i32>* %285, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
DSWP:       store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:       %283 = load <8 x i32>, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
DSWP:       store <8 x i32> %286, <8 x i32>* %294, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
DSWP:       %280 = load <8 x i32>, <8 x i32>* %279, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
DSWP:       %301 = load <8 x i32>, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
DSWP:       store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:       %307 = load <8 x i32>, <8 x i32>* %306, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
DSWP:       store <8 x i32> %283, <8 x i32>* %292, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
DSWP:       store <8 x i32> %301, <8 x i32>* %311, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
DSWP:       store <8 x i32> %298, <8 x i32>* %309, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
DSWP:       store <8 x i32> %280, <8 x i32>* %290, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
DSWP:       %299 = getelementptr inbounds i32, i32* %296, i64 8, !pdg.inst.id !798
DSWP:       %277 = load <8 x i32>, <8 x i32>* %276, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
DSWP:       %306 = bitcast i32* %305 to <8 x i32>*, !pdg.inst.id !818
DSWP:       %305 = getelementptr inbounds i32, i32* %296, i64 24, !pdg.inst.id !794
DSWP:       %315 = bitcast i32* %314 to <8 x i32>*, !pdg.inst.id !839
DSWP:       %303 = bitcast i32* %302 to <8 x i32>*, !pdg.inst.id !812
DSWP:       %302 = getelementptr inbounds i32, i32* %296, i64 16, !pdg.inst.id !796
DSWP:       %300 = bitcast i32* %299 to <8 x i32>*, !pdg.inst.id !806
DSWP:       %297 = bitcast i32* %296 to <8 x i32>*, !pdg.inst.id !800
DSWP:       %314 = getelementptr inbounds i32, i32* %308, i64 24, !pdg.inst.id !824
DSWP:       %276 = bitcast i32* %275 to <8 x i32>*, !pdg.inst.id !744
DSWP:       %313 = bitcast i32* %312 to <8 x i32>*, !pdg.inst.id !836
DSWP:       %312 = getelementptr inbounds i32, i32* %308, i64 16, !pdg.inst.id !826
DSWP:       %310 = getelementptr inbounds i32, i32* %308, i64 8, !pdg.inst.id !828
DSWP:       %281 = getelementptr inbounds i32, i32* %275, i64 16, !pdg.inst.id !748
DSWP:       %282 = bitcast i32* %281 to <8 x i32>*, !pdg.inst.id !762
DSWP:       %311 = bitcast i32* %310 to <8 x i32>*, !pdg.inst.id !833
DSWP:       %285 = bitcast i32* %284 to <8 x i32>*, !pdg.inst.id !768
DSWP:       %284 = getelementptr inbounds i32, i32* %275, i64 24, !pdg.inst.id !746
DSWP:       %279 = bitcast i32* %278 to <8 x i32>*, !pdg.inst.id !756
DSWP:   SCC: 2 Internal nodes:
DSWP:       %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:   Set:  0
DSWP:    Children: Set:  1; Set:  2; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; Set:  2; 
DSWP:   Set:  2
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
Heuristic:   PCA: Checking: Set:  0 Set:  1
 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  2 Is possible
Heuristic:   PCA: Checking: Set:  2 Set:  1 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 3
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:       %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:   SCC: 1 Internal nodes:
DSWP:       %289 = getelementptr inbounds i32, i32* %287, i64 8, !pdg.inst.id !780
DSWP:       %291 = getelementptr inbounds i32, i32* %287, i64 16, !pdg.inst.id !778
DSWP:       %292 = bitcast i32* %291 to <8 x i32>*, !pdg.inst.id !786
DSWP:       %293 = getelementptr inbounds i32, i32* %287, i64 24, !pdg.inst.id !776
DSWP:       %294 = bitcast i32* %293 to <8 x i32>*, !pdg.inst.id !789
DSWP:       %288 = bitcast i32* %287 to <8 x i32>*, !pdg.inst.id !774
DSWP:       %278 = getelementptr inbounds i32, i32* %275, i64 8, !pdg.inst.id !750
DSWP:       %304 = load <8 x i32>, <8 x i32>* %303, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
DSWP:       %290 = bitcast i32* %289 to <8 x i32>*, !pdg.inst.id !783
DSWP:       %298 = load <8 x i32>, <8 x i32>* %297, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
DSWP:       %309 = bitcast i32* %308 to <8 x i32>*, !pdg.inst.id !830
DSWP:       store <8 x i32> %277, <8 x i32>* %288, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
DSWP:       %286 = load <8 x i32>, <8 x i32>* %285, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
DSWP:       store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:       %283 = load <8 x i32>, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
DSWP:       store <8 x i32> %286, <8 x i32>* %294, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
DSWP:       %280 = load <8 x i32>, <8 x i32>* %279, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
DSWP:       %301 = load <8 x i32>, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
DSWP:       store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:       %307 = load <8 x i32>, <8 x i32>* %306, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
DSWP:       store <8 x i32> %283, <8 x i32>* %292, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
DSWP:       store <8 x i32> %301, <8 x i32>* %311, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
DSWP:       store <8 x i32> %298, <8 x i32>* %309, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
DSWP:       store <8 x i32> %280, <8 x i32>* %290, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
DSWP:       %299 = getelementptr inbounds i32, i32* %296, i64 8, !pdg.inst.id !798
DSWP:       %277 = load <8 x i32>, <8 x i32>* %276, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
DSWP:       %306 = bitcast i32* %305 to <8 x i32>*, !pdg.inst.id !818
DSWP:       %305 = getelementptr inbounds i32, i32* %296, i64 24, !pdg.inst.id !794
DSWP:       %315 = bitcast i32* %314 to <8 x i32>*, !pdg.inst.id !839
DSWP:       %303 = bitcast i32* %302 to <8 x i32>*, !pdg.inst.id !812
DSWP:       %302 = getelementptr inbounds i32, i32* %296, i64 16, !pdg.inst.id !796
DSWP:       %300 = bitcast i32* %299 to <8 x i32>*, !pdg.inst.id !806
DSWP:       %297 = bitcast i32* %296 to <8 x i32>*, !pdg.inst.id !800
DSWP:       %314 = getelementptr inbounds i32, i32* %308, i64 24, !pdg.inst.id !824
DSWP:       %276 = bitcast i32* %275 to <8 x i32>*, !pdg.inst.id !744
DSWP:       %313 = bitcast i32* %312 to <8 x i32>*, !pdg.inst.id !836
DSWP:       %312 = getelementptr inbounds i32, i32* %308, i64 16, !pdg.inst.id !826
DSWP:       %310 = getelementptr inbounds i32, i32* %308, i64 8, !pdg.inst.id !828
DSWP:       %281 = getelementptr inbounds i32, i32* %275, i64 16, !pdg.inst.id !748
DSWP:       %282 = bitcast i32* %281 to <8 x i32>*, !pdg.inst.id !762
DSWP:       %311 = bitcast i32* %310 to <8 x i32>*, !pdg.inst.id !833
DSWP:       %285 = bitcast i32* %284 to <8 x i32>*, !pdg.inst.id !768
DSWP:       %284 = getelementptr inbounds i32, i32* %275, i64 24, !pdg.inst.id !746
DSWP:       %279 = bitcast i32* %278 to <8 x i32>*, !pdg.inst.id !756
DSWP:   SCC: 2 Internal nodes:
DSWP:       %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:   Set:  0
DSWP:    Children: Set:  1; Set:  2; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: 
DSWP:    Parents: Set:  0; Set:  2; 
DSWP:   Set:  2
DSWP:    Children: Set:  1; 
DSWP:    Parents: Set:  0; 
DSWP:  There are 3 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 2
DSWP:     	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	  %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:     External nodes: 4
DSWP:     	  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848
DSWP:     	  %287 = getelementptr inbounds i32, i32* %248, i64 %273, !pdg.inst.id !684
DSWP:     	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     	  %275 = getelementptr inbounds i32, i32* %244, i64 %273, !pdg.inst.id !653
DSWP:     Edges: 7
DSWP:     	From:	  %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:     	To:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	RAW (must)
DSWP:     	From:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	To:	  %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848
DSWP:     	To:	  %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:     	CTRL
DSWP:     	From:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	To:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     	RAW (must)
DSWP:     	From:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	To:	  %275 = getelementptr inbounds i32, i32* %244, i64 %273, !pdg.inst.id !653
DSWP:     	RAW (must)
DSWP:     	From:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	To:	  %287 = getelementptr inbounds i32, i32* %248, i64 %273, !pdg.inst.id !684
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848
DSWP:     	To:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 1
DSWP:     Internal nodes: 1
DSWP:     	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     External nodes: 4
DSWP:     	  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848
DSWP:     	  %296 = getelementptr inbounds i32, i32* %244, i64 %295, !pdg.inst.id !649
DSWP:     	  %308 = getelementptr inbounds i32, i32* %248, i64 %295, !pdg.inst.id !674
DSWP:     	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     Edges: 4
DSWP:     	From:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     	To:	  %296 = getelementptr inbounds i32, i32* %244, i64 %295, !pdg.inst.id !649
DSWP:     	RAW (must)
DSWP:     	From:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     	To:	  %308 = getelementptr inbounds i32, i32* %248, i64 %295, !pdg.inst.id !674
DSWP:     	RAW (must)
DSWP:     	From:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     	To:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848
DSWP:     	To:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     	CTRL
DSWP:    
DSWP:    Stage: 2
DSWP:     Internal nodes: 44
DSWP:     	  %289 = getelementptr inbounds i32, i32* %287, i64 8, !pdg.inst.id !780
DSWP:     	  %291 = getelementptr inbounds i32, i32* %287, i64 16, !pdg.inst.id !778
DSWP:     	  %292 = bitcast i32* %291 to <8 x i32>*, !pdg.inst.id !786
DSWP:     	  %293 = getelementptr inbounds i32, i32* %287, i64 24, !pdg.inst.id !776
DSWP:     	  %294 = bitcast i32* %293 to <8 x i32>*, !pdg.inst.id !789
DSWP:     	  %288 = bitcast i32* %287 to <8 x i32>*, !pdg.inst.id !774
DSWP:     	  %278 = getelementptr inbounds i32, i32* %275, i64 8, !pdg.inst.id !750
DSWP:     	  %304 = load <8 x i32>, <8 x i32>* %303, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
DSWP:     	  %290 = bitcast i32* %289 to <8 x i32>*, !pdg.inst.id !783
DSWP:     	  %298 = load <8 x i32>, <8 x i32>* %297, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
DSWP:     	  %309 = bitcast i32* %308 to <8 x i32>*, !pdg.inst.id !830
DSWP:     	  store <8 x i32> %277, <8 x i32>* %288, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
DSWP:     	  %286 = load <8 x i32>, <8 x i32>* %285, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
DSWP:     	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	  %283 = load <8 x i32>, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
DSWP:     	  store <8 x i32> %286, <8 x i32>* %294, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
DSWP:     	  %280 = load <8 x i32>, <8 x i32>* %279, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
DSWP:     	  %301 = load <8 x i32>, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
DSWP:     	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	  %307 = load <8 x i32>, <8 x i32>* %306, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
DSWP:     	  store <8 x i32> %283, <8 x i32>* %292, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
DSWP:     	  store <8 x i32> %301, <8 x i32>* %311, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
DSWP:     	  store <8 x i32> %298, <8 x i32>* %309, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
DSWP:     	  store <8 x i32> %280, <8 x i32>* %290, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
DSWP:     	  %299 = getelementptr inbounds i32, i32* %296, i64 8, !pdg.inst.id !798
DSWP:     	  %277 = load <8 x i32>, <8 x i32>* %276, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
DSWP:     	  %306 = bitcast i32* %305 to <8 x i32>*, !pdg.inst.id !818
DSWP:     	  %305 = getelementptr inbounds i32, i32* %296, i64 24, !pdg.inst.id !794
DSWP:     	  %315 = bitcast i32* %314 to <8 x i32>*, !pdg.inst.id !839
DSWP:     	  %303 = bitcast i32* %302 to <8 x i32>*, !pdg.inst.id !812
DSWP:     	  %302 = getelementptr inbounds i32, i32* %296, i64 16, !pdg.inst.id !796
DSWP:     	  %300 = bitcast i32* %299 to <8 x i32>*, !pdg.inst.id !806
DSWP:     	  %297 = bitcast i32* %296 to <8 x i32>*, !pdg.inst.id !800
DSWP:     	  %314 = getelementptr inbounds i32, i32* %308, i64 24, !pdg.inst.id !824
DSWP:     	  %276 = bitcast i32* %275 to <8 x i32>*, !pdg.inst.id !744
DSWP:     	  %313 = bitcast i32* %312 to <8 x i32>*, !pdg.inst.id !836
DSWP:     	  %312 = getelementptr inbounds i32, i32* %308, i64 16, !pdg.inst.id !826
DSWP:     	  %310 = getelementptr inbounds i32, i32* %308, i64 8, !pdg.inst.id !828
DSWP:     	  %281 = getelementptr inbounds i32, i32* %275, i64 16, !pdg.inst.id !748
DSWP:     	  %282 = bitcast i32* %281 to <8 x i32>*, !pdg.inst.id !762
DSWP:     	  %311 = bitcast i32* %310 to <8 x i32>*, !pdg.inst.id !833
DSWP:     	  %285 = bitcast i32* %284 to <8 x i32>*, !pdg.inst.id !768
DSWP:     	  %284 = getelementptr inbounds i32, i32* %275, i64 24, !pdg.inst.id !746
DSWP:     	  %279 = bitcast i32* %278 to <8 x i32>*, !pdg.inst.id !756
DSWP:     External nodes: 5
DSWP:     	  %287 = getelementptr inbounds i32, i32* %248, i64 %273, !pdg.inst.id !684
DSWP:     	  %308 = getelementptr inbounds i32, i32* %248, i64 %295, !pdg.inst.id !674
DSWP:     	  br i1 %318, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848
DSWP:     	  %275 = getelementptr inbounds i32, i32* %244, i64 %273, !pdg.inst.id !653
DSWP:     	  %296 = getelementptr inbounds i32, i32* %244, i64 %295, !pdg.inst.id !649
DSWP:     Edges: 224
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %280 = load <8 x i32>, <8 x i32>* %279, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %304 = load <8 x i32>, <8 x i32>* %303, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %277 = load <8 x i32>, <8 x i32>* %276, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %283 = load <8 x i32>, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %286 = load <8 x i32>, <8 x i32>* %285, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %298 = load <8 x i32>, <8 x i32>* %297, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %301 = load <8 x i32>, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %307, <8 x i32>* %315, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
DSWP:     	To:	  %307 = load <8 x i32>, <8 x i32>* %306, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %298 = load <8 x i32>, <8 x i32>* %297, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %307 = load <8 x i32>, <8 x i32>* %306, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %286 = load <8 x i32>, <8 x i32>* %285, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %277 = load <8 x i32>, <8 x i32>* %276, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %280 = load <8 x i32>, <8 x i32>* %279, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %283 = load <8 x i32>, <8 x i32>* %282, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  store <8 x i32> %304, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
DSWP:     	To:	  %301 = load <8 x i32>, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
DSWP:     	RAW (may) from memory 
DSWP:     	....
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 16 18 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 17 
DSWP:      Pop value queues: 16 
DSWP:    Stage: 2
DSWP:      Push value queues: 
DSWP:      Pop value queues: 17 18 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %33 = icmp sgt i32 %30, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %33, label %._crit_edge, label %34, !pdg.inst.id !93
DSWP:    Queue: 9
DSWP:     Producer:	  %20 = bitcast i8* %19 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     Consumer:	  %43 = select i1 %42, %struct.extbond_t* %20, %struct.extbond_t* %17, !pdg.inst.id !59
DSWP:    Queue: 10
DSWP:     Producer:	  %50 = icmp eq %struct.extbond_t* %49, null, !pdg.inst.id !130
DSWP:     Consumer:	  br i1 %50, label %.loopexit, label %15, !pdg.inst.id !132
DSWP:    Queue: 11
DSWP:     Producer:	  %21 = icmp eq i8* %19, null, !pdg.inst.id !77
DSWP:     Consumer:	  br i1 %21, label %22, label %28, !pdg.inst.id !86
DSWP:    Queue: 12
DSWP:     Producer:	  %44 = icmp eq %struct.extbond_t* %18, null, !pdg.inst.id !62
DSWP:     Consumer:	  br i1 %44, label %47, label %45, !pdg.inst.id !125
DSWP:    Queue: 13
DSWP:     Producer:	  %164 = phi i64 [ 0, %159 ], [ %179, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %172 = or i64 %164, 1, !pdg.inst.id !472
DSWP:    Queue: 14
DSWP:     Producer:	  %164 = phi i64 [ 0, %159 ], [ %179, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %166 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %164, i64 0, !pdg.inst.id !456
DSWP:     Consumer:	  %168 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %164, i64 0, !pdg.inst.id !302
DSWP:     Consumer:	  %169 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %164, i64 1, !pdg.inst.id !454
DSWP:     Consumer:	  %171 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %164, i64 1, !pdg.inst.id !300
DSWP:    Queue: 15
DSWP:     Producer:	  %172 = or i64 %164, 1, !pdg.inst.id !472
DSWP:     Consumer:	  %173 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %172, i64 0, !pdg.inst.id !448
DSWP:     Consumer:	  %175 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %172, i64 0, !pdg.inst.id !294
DSWP:     Consumer:	  %176 = getelementptr inbounds [2 x i32], [2 x i32]* %155, i64 %172, i64 1, !pdg.inst.id !446
DSWP:     Consumer:	  %178 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i64 %172, i64 1, !pdg.inst.id !292
DSWP:    Queue: 16
DSWP:     Producer:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     Consumer:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:    Queue: 17
DSWP:     Producer:	  %295 = or i64 %273, 32, !pdg.inst.id !736
DSWP:     Consumer:	  %296 = getelementptr inbounds i32, i32* %244, i64 %295, !pdg.inst.id !649
DSWP:     Consumer:	  %308 = getelementptr inbounds i32, i32* %248, i64 %295, !pdg.inst.id !674
DSWP:    Queue: 18
DSWP:     Producer:	  %273 = phi i64 [ 0, %270 ], [ %316, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     Consumer:	  %275 = getelementptr inbounds i32, i32* %244, i64 %273, !pdg.inst.id !653
DSWP:     Consumer:	  %287 = getelementptr inbounds i32, i32* %248, i64 %273, !pdg.inst.id !684
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %248 = bitcast i8* %49 to i32*, !pdg.inst.id !236
DSWP:    Pre loop env 2, producer:	  %271 = sub nuw nsw i64 %267, %268, !pdg.inst.id !724
DSWP:    Pre loop env 3, producer:	  %244 = load i32*, i32** %243, align 8, !tbaa !25643, !pdg.inst.id !647
DSWP:    Post loop env 4, producer:	  %316 = add i64 %273, 64, !pdg.inst.id !738
DSWP:  Create 3 pipeline stages
Pipeline stage 0:

define void @57(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [19 x i8*]*
  %5 = getelementptr inbounds [19 x i8*], [19 x i8*]* %4, i64 0, i64 16
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [19 x i8*], [19 x i8*]* %4, i64 0, i64 18
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = bitcast i64* %13 to i32**
  %15 = load i32*, i32** %14
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %17 = load i64, i64* %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %19 = bitcast i64* %18 to i32**
  %20 = load i32*, i32** %19
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  br label %24

22:                                               ; preds = %23
  ret void

23:                                               ; preds = %24
  store i64 %37, i64* %21
  br label %22

24:                                               ; preds = %2, %40
  %25 = phi i64 [ 0, %2 ], [ %37, %40 ], !pdg.inst.id !30
  %26 = phi i64 [ %17, %2 ], [ %38, %40 ], !pdg.inst.id !31
  store i64 %25, i64* %12
  %27 = load i64, i64* %12, align 8, !tbaa !32, !pdg.inst.id !36
  %28 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %29 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %28, align 8, !tbaa !38, !pdg.inst.id !40
  %30 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %29, i64 3, !pdg.inst.id !41
  %31 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %30, align 8, !pdg.inst.id !42
  call void %31(%"class.MARC::ThreadSafeQueue.54"* %11, i64 %27), !pdg.inst.id !43
  store i64 %25, i64* %8
  %32 = load i64, i64* %8, align 8, !tbaa !32, !pdg.inst.id !36
  %33 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !37
  %34 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %33, align 8, !tbaa !38, !pdg.inst.id !40
  %35 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %34, i64 3, !pdg.inst.id !41
  %36 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %35, align 8, !pdg.inst.id !42
  call void %36(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %32), !pdg.inst.id !43
  %37 = add i64 %25, 64, !pdg.inst.id !44
  %38 = add i64 %26, -2, !pdg.inst.id !45
  %39 = icmp eq i64 %38, 0, !pdg.inst.id !46
  br i1 %39, label %23, label %40, !llvm.loop !47, !pdg.inst.id !49

40:                                               ; preds = %24
  br label %24, !pdg.inst.id !50
}

Pipeline stage 1:

define void @58(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [19 x i8*]*
  %5 = getelementptr inbounds [19 x i8*], [19 x i8*]* %4, i64 0, i64 17
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [19 x i8*], [19 x i8*]* %4, i64 0, i64 16
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = bitcast i64* %13 to i32**
  %15 = load i32*, i32** %14
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %17 = load i64, i64* %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %19 = bitcast i64* %18 to i32**
  %20 = load i32*, i32** %19
  br label %23

21:                                               ; preds = %22
  ret void

22:                                               ; preds = %23
  br label %21

23:                                               ; preds = %2, %39
  %24 = phi i64 [ %17, %2 ], [ %37, %39 ], !pdg.inst.id !30
  %25 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %26 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %25, align 8, !tbaa !32, !pdg.inst.id !35
  %27 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %26, i64 1, !pdg.inst.id !36
  %28 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %27, align 8, !pdg.inst.id !37
  %29 = call zeroext i1 %28(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %30 = load i64, i64* %12
  %31 = or i64 %30, 32, !pdg.inst.id !39
  store i64 %31, i64* %8
  %32 = load i64, i64* %8, align 8, !tbaa !40, !pdg.inst.id !43
  %33 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to void (%"class.MARC::ThreadSafeQueue.54"*, i64)***, !pdg.inst.id !44
  %34 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)**, void (%"class.MARC::ThreadSafeQueue.54"*, i64)*** %33, align 8, !tbaa !32, !pdg.inst.id !45
  %35 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %34, i64 3, !pdg.inst.id !46
  %36 = load void (%"class.MARC::ThreadSafeQueue.54"*, i64)*, void (%"class.MARC::ThreadSafeQueue.54"*, i64)** %35, align 8, !pdg.inst.id !47
  call void %36(%"class.MARC::ThreadSafeQueue.54"* %7, i64 %32), !pdg.inst.id !48
  %37 = add i64 %24, -2, !pdg.inst.id !49
  %38 = icmp eq i64 %37, 0, !pdg.inst.id !50
  br i1 %38, label %22, label %39, !llvm.loop !51, !pdg.inst.id !53

39:                                               ; preds = %23
  br label %23, !pdg.inst.id !54
}

Pipeline stage 2:

define void @59(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [19 x i8*]*
  %5 = getelementptr inbounds [19 x i8*], [19 x i8*]* %4, i64 0, i64 17
  %6 = bitcast i8** %5 to %"class.MARC::ThreadSafeQueue.54"**
  %7 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %6
  %8 = alloca i64
  %9 = getelementptr inbounds [19 x i8*], [19 x i8*]* %4, i64 0, i64 18
  %10 = bitcast i8** %9 to %"class.MARC::ThreadSafeQueue.54"**
  %11 = load %"class.MARC::ThreadSafeQueue.54"*, %"class.MARC::ThreadSafeQueue.54"** %10
  %12 = alloca i64
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %14 = bitcast i64* %13 to i32**
  %15 = load i32*, i32** %14
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %17 = load i64, i64* %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %19 = bitcast i64* %18 to i32**
  %20 = load i32*, i32** %19
  br label %23

21:                                               ; preds = %22
  ret void

22:                                               ; preds = %23
  br label %21

23:                                               ; preds = %2, %79
  %24 = phi i64 [ %17, %2 ], [ %77, %79 ], !pdg.inst.id !30
  %25 = bitcast %"class.MARC::ThreadSafeQueue.54"* %11 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %26 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %25, align 8, !tbaa !32, !pdg.inst.id !35
  %27 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %26, i64 1, !pdg.inst.id !36
  %28 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %27, align 8, !pdg.inst.id !37
  %29 = call zeroext i1 %28(%"class.MARC::ThreadSafeQueue.54"* %11, i64* dereferenceable(8) %12), !pdg.inst.id !38
  %30 = load i64, i64* %12
  %31 = getelementptr inbounds i32, i32* %20, i64 %30, !pdg.inst.id !39
  %32 = bitcast i32* %31 to <8 x i32>*, !pdg.inst.id !40
  %33 = load <8 x i32>, <8 x i32>* %32, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !48
  %34 = getelementptr inbounds i32, i32* %31, i64 8, !pdg.inst.id !49
  %35 = bitcast i32* %34 to <8 x i32>*, !pdg.inst.id !50
  %36 = load <8 x i32>, <8 x i32>* %35, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !51
  %37 = getelementptr inbounds i32, i32* %31, i64 16, !pdg.inst.id !52
  %38 = bitcast i32* %37 to <8 x i32>*, !pdg.inst.id !53
  %39 = load <8 x i32>, <8 x i32>* %38, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !54
  %40 = getelementptr inbounds i32, i32* %31, i64 24, !pdg.inst.id !55
  %41 = bitcast i32* %40 to <8 x i32>*, !pdg.inst.id !56
  %42 = load <8 x i32>, <8 x i32>* %41, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !57
  %43 = getelementptr inbounds i32, i32* %15, i64 %30, !pdg.inst.id !58
  %44 = bitcast i32* %43 to <8 x i32>*, !pdg.inst.id !59
  store <8 x i32> %33, <8 x i32>* %44, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !62
  %45 = getelementptr inbounds i32, i32* %43, i64 8, !pdg.inst.id !63
  %46 = bitcast i32* %45 to <8 x i32>*, !pdg.inst.id !64
  store <8 x i32> %36, <8 x i32>* %46, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !65
  %47 = getelementptr inbounds i32, i32* %43, i64 16, !pdg.inst.id !66
  %48 = bitcast i32* %47 to <8 x i32>*, !pdg.inst.id !67
  store <8 x i32> %39, <8 x i32>* %48, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !68
  %49 = getelementptr inbounds i32, i32* %43, i64 24, !pdg.inst.id !69
  %50 = bitcast i32* %49 to <8 x i32>*, !pdg.inst.id !70
  store <8 x i32> %42, <8 x i32>* %50, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !71
  %51 = bitcast %"class.MARC::ThreadSafeQueue.54"* %7 to i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)***, !pdg.inst.id !31
  %52 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*** %51, align 8, !tbaa !32, !pdg.inst.id !35
  %53 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %52, i64 1, !pdg.inst.id !36
  %54 = load i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.54"*, i64*)** %53, align 8, !pdg.inst.id !37
  %55 = call zeroext i1 %54(%"class.MARC::ThreadSafeQueue.54"* %7, i64* dereferenceable(8) %8), !pdg.inst.id !38
  %56 = load i64, i64* %8
  %57 = getelementptr inbounds i32, i32* %20, i64 %56, !pdg.inst.id !72
  %58 = bitcast i32* %57 to <8 x i32>*, !pdg.inst.id !73
  %59 = load <8 x i32>, <8 x i32>* %58, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !74
  %60 = getelementptr inbounds i32, i32* %57, i64 8, !pdg.inst.id !75
  %61 = bitcast i32* %60 to <8 x i32>*, !pdg.inst.id !76
  %62 = load <8 x i32>, <8 x i32>* %61, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !77
  %63 = getelementptr inbounds i32, i32* %57, i64 16, !pdg.inst.id !78
  %64 = bitcast i32* %63 to <8 x i32>*, !pdg.inst.id !79
  %65 = load <8 x i32>, <8 x i32>* %64, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !80
  %66 = getelementptr inbounds i32, i32* %57, i64 24, !pdg.inst.id !81
  %67 = bitcast i32* %66 to <8 x i32>*, !pdg.inst.id !82
  %68 = load <8 x i32>, <8 x i32>* %67, align 4, !tbaa !41, !alias.scope !45, !pdg.inst.id !83
  %69 = getelementptr inbounds i32, i32* %15, i64 %56, !pdg.inst.id !84
  %70 = bitcast i32* %69 to <8 x i32>*, !pdg.inst.id !85
  store <8 x i32> %59, <8 x i32>* %70, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !86
  %71 = getelementptr inbounds i32, i32* %69, i64 8, !pdg.inst.id !87
  %72 = bitcast i32* %71 to <8 x i32>*, !pdg.inst.id !88
  store <8 x i32> %62, <8 x i32>* %72, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !89
  %73 = getelementptr inbounds i32, i32* %69, i64 16, !pdg.inst.id !90
  %74 = bitcast i32* %73 to <8 x i32>*, !pdg.inst.id !91
  store <8 x i32> %65, <8 x i32>* %74, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !92
  %75 = getelementptr inbounds i32, i32* %69, i64 24, !pdg.inst.id !93
  %76 = bitcast i32* %75 to <8 x i32>*, !pdg.inst.id !94
  store <8 x i32> %68, <8 x i32>* %76, align 4, !tbaa !41, !alias.scope !60, !noalias !45, !pdg.inst.id !95
  %77 = add i64 %24, -2, !pdg.inst.id !96
  %78 = icmp eq i64 %77, 0, !pdg.inst.id !97
  br i1 %78, label %22, label %79, !llvm.loop !98, !pdg.inst.id !100

79:                                               ; preds = %23
  br label %23, !pdg.inst.id !101
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local %struct.residue_t* @copyresidue(%struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !33 {
  %2 = alloca [32 x i64]
  %3 = bitcast [32 x i64]* %2 to i8*
  %4 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 0
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 8
  %6 = bitcast i64* %5 to i32**
  %7 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 16
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 24
  %9 = bitcast i64* %8 to i32**
  %10 = alloca [24 x i64]
  %11 = bitcast [24 x i64]* %10 to i8*
  %12 = getelementptr inbounds [24 x i64], [24 x i64]* %10, i64 0, i64 0
  %13 = bitcast i64* %12 to i32**
  %14 = getelementptr inbounds [24 x i64], [24 x i64]* %10, i64 0, i64 8
  %15 = bitcast i64* %14 to %struct.chiral_t**
  %16 = getelementptr inbounds [24 x i64], [24 x i64]* %10, i64 0, i64 16
  %17 = bitcast i64* %16 to %struct.chiral_t**
  %18 = alloca [32 x i64]
  %19 = bitcast [32 x i64]* %18 to i8*
  %20 = getelementptr inbounds [32 x i64], [32 x i64]* %18, i64 0, i64 0
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %18, i64 0, i64 8
  %22 = getelementptr inbounds [32 x i64], [32 x i64]* %18, i64 0, i64 16
  %23 = bitcast i64* %22 to [2 x i32]**
  %24 = getelementptr inbounds [32 x i64], [32 x i64]* %18, i64 0, i64 24
  %25 = bitcast i64* %24 to [2 x i32]**
  %26 = tail call noalias i8* @malloc(i64 128) #48, !pdg.inst.id !58
  %27 = bitcast i8* %26 to %struct.residue_t*, !pdg.inst.id !122
  %28 = icmp eq i8* %26, null, !pdg.inst.id !120
  br i1 %28, label %29, label %38, !prof !25616, !pdg.inst.id !126

29:                                               ; preds = %1
  %30 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !46
  %31 = load i8*, i8** %30, align 8, !tbaa !25617, !pdg.inst.id !128
  %32 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !132
  %33 = getelementptr [15 x i8], [15 x i8]* @.str.25.394, i64 0, i64 0, !pdg.inst.id !134
  %34 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %32, i8* %33, i8* %31) #48, !pdg.inst.id !130
  %35 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !136
  %36 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !139
  %37 = tail call i32 @rt_errormsg_s(i32 1, i8* %35, i8* %36) #48, !pdg.inst.id !137
  br label %547, !pdg.inst.id !24743

38:                                               ; preds = %1
  %39 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 15, !pdg.inst.id !44
  %40 = load i32, i32* %39, align 8, !tbaa !25623, !pdg.inst.id !145
  %41 = sext i32 %40 to i64, !pdg.inst.id !147
  %42 = mul nsw i64 %41, 176, !pdg.inst.id !151
  %43 = tail call noalias i8* @malloc(i64 %42) #48, !pdg.inst.id !153
  %44 = bitcast i8* %43 to %struct.atom_t*, !pdg.inst.id !161
  %45 = icmp eq i8* %43, null, !pdg.inst.id !159
  br i1 %45, label %46, label %55, !prof !25616, !pdg.inst.id !215

46:                                               ; preds = %38
  %47 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !48
  %48 = load i8*, i8** %47, align 8, !tbaa !25617, !pdg.inst.id !217
  %49 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !221
  %50 = getelementptr [24 x i8], [24 x i8]* @.str.27.395, i64 0, i64 0, !pdg.inst.id !223
  %51 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %49, i8* %50, i8* %48) #48, !pdg.inst.id !219
  %52 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !225
  %53 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !228
  %54 = tail call i32 @rt_errormsg_s(i32 1, i8* %52, i8* %53) #48, !pdg.inst.id !226
  br label %547, !pdg.inst.id !24761

55:                                               ; preds = %38
  %56 = shl nsw i64 %41, 2, !pdg.inst.id !149
  %57 = tail call noalias i8* @malloc(i64 %56) #48, !pdg.inst.id !230
  %58 = icmp eq i8* %57, null, !pdg.inst.id !240
  br i1 %58, label %59, label %68, !prof !25616, !pdg.inst.id !242

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !54
  %61 = load i8*, i8** %60, align 8, !tbaa !25617, !pdg.inst.id !244
  %62 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !248
  %63 = getelementptr [29 x i8], [29 x i8]* @.str.28.396, i64 0, i64 0, !pdg.inst.id !250
  %64 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %62, i8* %63, i8* %61) #48, !pdg.inst.id !246
  %65 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !252
  %66 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !255
  %67 = tail call i32 @rt_errormsg_s(i32 1, i8* %65, i8* %66) #48, !pdg.inst.id !253
  br label %547, !pdg.inst.id !24776

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 11, !pdg.inst.id !50
  %70 = load i32, i32* %69, align 8, !tbaa !25624, !pdg.inst.id !259
  %71 = icmp sgt i32 %70, 0, !pdg.inst.id !263
  br i1 %71, label %72, label %87, !prof !25616, !pdg.inst.id !265

72:                                               ; preds = %68
  %73 = sext i32 %70 to i64, !pdg.inst.id !261
  %74 = shl nsw i64 %73, 3, !pdg.inst.id !267
  %75 = tail call noalias i8* @malloc(i64 %74) #48, !pdg.inst.id !269
  %76 = bitcast i8* %75 to [2 x i32]*, !pdg.inst.id !273
  %77 = icmp eq i8* %75, null, !pdg.inst.id !271
  br i1 %77, label %78, label %87, !pdg.inst.id !277

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !56
  %80 = load i8*, i8** %79, align 8, !tbaa !25617, !pdg.inst.id !279
  %81 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !283
  %82 = getelementptr [24 x i8], [24 x i8]* @.str.29.397, i64 0, i64 0, !pdg.inst.id !285
  %83 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %81, i8* %82, i8* %80) #48, !pdg.inst.id !281
  %84 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !287
  %85 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !290
  %86 = tail call i32 @rt_errormsg_s(i32 1, i8* %84, i8* %85) #48, !pdg.inst.id !288
  br label %547, !pdg.inst.id !24797

87:                                               ; preds = %68, %72
  %88 = phi [2 x i32]* [ %76, %72 ], [ null, %68 ], !pdg.inst.id !275
  %89 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 13, !pdg.inst.id !63
  %90 = load i32, i32* %89, align 8, !tbaa !25625, !pdg.inst.id !310
  %91 = icmp sgt i32 %90, 0, !pdg.inst.id !314
  br i1 %91, label %92, label %107, !prof !25616, !pdg.inst.id !316

92:                                               ; preds = %87
  %93 = sext i32 %90 to i64, !pdg.inst.id !312
  %94 = mul nsw i64 %93, 24, !pdg.inst.id !318
  %95 = tail call noalias i8* @malloc(i64 %94) #48, !pdg.inst.id !320
  %96 = bitcast i8* %95 to %struct.chiral_t*, !pdg.inst.id !324
  %97 = icmp eq i8* %95, null, !pdg.inst.id !322
  br i1 %97, label %98, label %107, !pdg.inst.id !328

98:                                               ; preds = %92
  %99 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !65
  %100 = load i8*, i8** %99, align 8, !tbaa !25617, !pdg.inst.id !330
  %101 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !334
  %102 = getelementptr [24 x i8], [24 x i8]* @.str.30.398, i64 0, i64 0, !pdg.inst.id !336
  %103 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %101, i8* %102, i8* %100) #48, !pdg.inst.id !332
  %104 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !338
  %105 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !340
  %106 = tail call i32 @rt_errormsg_s(i32 1, i8* %104, i8* %105) #48, !pdg.inst.id !117
  br label %547, !pdg.inst.id !24825

107:                                              ; preds = %87, %92
  %108 = phi %struct.chiral_t* [ %96, %92 ], [ null, %87 ], !pdg.inst.id !326
  %109 = bitcast i8* %26 to %struct.residue_t**, !pdg.inst.id !97
  store %struct.residue_t* null, %struct.residue_t** %109, align 8, !tbaa !25626, !pdg.inst.id !346
  %110 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !67
  %111 = load i8*, i8** %110, align 8, !tbaa !25617, !pdg.inst.id !348
  %112 = tail call i64 @strlen(i8* %111) #49, !pdg.inst.id !352
  %113 = add i64 %112, 1, !pdg.inst.id !354
  %114 = tail call noalias i8* @malloc(i64 %113) #48, !pdg.inst.id !356
  %115 = icmp eq i8* %114, null, !pdg.inst.id !361
  br i1 %115, label %116, label %120, !prof !25616, !pdg.inst.id !363

116:                                              ; preds = %107
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !365
  %118 = getelementptr [44 x i8], [44 x i8]* @.str.31.399, i64 0, i64 0, !pdg.inst.id !368
  %119 = tail call i64 @fwrite(i8* %118, i64 43, i64 1, %struct._IO_FILE* %117) #50, !pdg.inst.id !366
  tail call void @exit(i32 1) #51, !pdg.inst.id !1459
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24850

120:                                              ; preds = %107
  %121 = tail call i8* @strcpy(i8* nonnull %114, i8* %111) #48, !pdg.inst.id !350
  %122 = getelementptr inbounds i8, i8* %26, i64 24, !pdg.inst.id !99
  %123 = bitcast i8* %122 to i8**, !pdg.inst.id !370
  store i8* %114, i8** %123, align 8, !tbaa !25617, !pdg.inst.id !359
  %124 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 5, !pdg.inst.id !69
  %125 = load i8*, i8** %124, align 8, !tbaa !25628, !pdg.inst.id !373
  %126 = tail call i64 @strlen(i8* %125) #49, !pdg.inst.id !377
  %127 = add i64 %126, 1, !pdg.inst.id !379
  %128 = tail call noalias i8* @malloc(i64 %127) #48, !pdg.inst.id !381
  %129 = icmp eq i8* %128, null, !pdg.inst.id !386
  br i1 %129, label %130, label %134, !prof !25616, !pdg.inst.id !388

130:                                              ; preds = %120
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !118
  %132 = getelementptr [42 x i8], [42 x i8]* @.str.32.400, i64 0, i64 0, !pdg.inst.id !392
  %133 = tail call i64 @fwrite(i8* %132, i64 41, i64 1, %struct._IO_FILE* %131) #50, !pdg.inst.id !390
  tail call void @exit(i32 1) #51, !pdg.inst.id !1484
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24866

134:                                              ; preds = %120
  %135 = tail call i8* @strcpy(i8* nonnull %128, i8* %125) #48, !pdg.inst.id !375
  %136 = getelementptr inbounds i8, i8* %26, i64 32, !pdg.inst.id !91
  %137 = bitcast i8* %136 to i8**, !pdg.inst.id !394
  store i8* %128, i8** %137, align 8, !tbaa !25628, !pdg.inst.id !384
  %138 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 1, !pdg.inst.id !71
  %139 = load i32, i32* %138, align 8, !tbaa !25629, !pdg.inst.id !397
  %140 = getelementptr inbounds i8, i8* %26, i64 8, !pdg.inst.id !115
  %141 = bitcast i8* %140 to i32*, !pdg.inst.id !401
  store i32 %139, i32* %141, align 8, !tbaa !25629, !pdg.inst.id !399
  %142 = getelementptr inbounds i8, i8* %26, i64 12, !pdg.inst.id !113
  %143 = bitcast i8* %142 to i32*, !pdg.inst.id !404
  store i32 0, i32* %143, align 4, !tbaa !25630, !pdg.inst.id !406
  %144 = getelementptr inbounds i8, i8* %26, i64 16, !pdg.inst.id !111
  %145 = bitcast i8* %144 to i32*, !pdg.inst.id !408
  store i32 0, i32* %145, align 8, !tbaa !25631, !pdg.inst.id !410
  %146 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 6, !pdg.inst.id !73
  %147 = load i32, i32* %146, align 8, !tbaa !25632, !pdg.inst.id !412
  %148 = getelementptr inbounds i8, i8* %26, i64 40, !pdg.inst.id !109
  %149 = bitcast i8* %148 to i32*, !pdg.inst.id !416
  store i32 %147, i32* %149, align 8, !tbaa !25632, !pdg.inst.id !414
  %150 = getelementptr inbounds i8, i8* %26, i64 56, !pdg.inst.id !107
  %151 = bitcast i8* %150 to %struct.strand_t**, !pdg.inst.id !419
  store %struct.strand_t* null, %struct.strand_t** %151, align 8, !tbaa !25633, !pdg.inst.id !421
  %152 = tail call %struct.extbond_t* @copyextbonds(%struct.residue_t* nonnull %0) #48, !pdg.inst.id !35
  %153 = getelementptr inbounds i8, i8* %26, i64 64, !pdg.inst.id !105
  %154 = bitcast i8* %153 to %struct.extbond_t**, !pdg.inst.id !425
  store %struct.extbond_t* %152, %struct.extbond_t** %154, align 8, !tbaa !25634, !pdg.inst.id !423
  %155 = load i32, i32* %69, align 8, !tbaa !25624, !pdg.inst.id !257
  %156 = getelementptr inbounds i8, i8* %26, i64 72, !pdg.inst.id !103
  %157 = bitcast i8* %156 to i32*, !pdg.inst.id !436
  store i32 %155, i32* %157, align 8, !tbaa !25624, !pdg.inst.id !434
  %158 = getelementptr inbounds i8, i8* %26, i64 80, !pdg.inst.id !101
  %159 = bitcast i8* %158 to [2 x i32]**, !pdg.inst.id !439
  store [2 x i32]* %88, [2 x i32]** %159, align 8, !tbaa !25635, !pdg.inst.id !304
  %160 = icmp sgt i32 %155, 0, !pdg.inst.id !432
  br i1 %160, label %161, label %200, !prof !25616, !pdg.inst.id !442

161:                                              ; preds = %134
  %162 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 12, !pdg.inst.id !75
  %163 = load [2 x i32]*, [2 x i32]** %162, align 8, !tbaa !25635, !pdg.inst.id !444
  %164 = sext i32 %155 to i64, !pdg.inst.id !430
  %165 = and i64 %164, 1, !pdg.inst.id !462
  %166 = icmp eq i32 %155, 1, !pdg.inst.id !428
  br i1 %166, label %190, label %167, !pdg.inst.id !467

167:                                              ; preds = %161
  %168 = sub nsw i64 %164, %165, !pdg.inst.id !460
  %169 = load i32, i32* @22
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %549, label %171

171:                                              ; preds = %167, %._crit_edge2
  %172 = phi i64 [ 0, %167 ], [ %187, %._crit_edge2 ], !pdg.inst.id !471
  %173 = phi i64 [ %168, %167 ], [ %188, %._crit_edge2 ], !pdg.inst.id !469
  %174 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %172, i64 0, !pdg.inst.id !456
  %175 = load i32, i32* %174, align 4, !tbaa !25636, !pdg.inst.id !482
  %176 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %172, i64 0, !pdg.inst.id !302
  store i32 %175, i32* %176, align 4, !tbaa !25636, !pdg.inst.id !484
  %177 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %172, i64 1, !pdg.inst.id !454
  %178 = load i32, i32* %177, align 4, !tbaa !25636, !pdg.inst.id !487
  %179 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %172, i64 1, !pdg.inst.id !300
  store i32 %178, i32* %179, align 4, !tbaa !25636, !pdg.inst.id !489
  %180 = or i64 %172, 1, !pdg.inst.id !472
  %181 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %180, i64 0, !pdg.inst.id !448
  %182 = load i32, i32* %181, align 4, !tbaa !25636, !pdg.inst.id !496
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %180, i64 0, !pdg.inst.id !294
  store i32 %182, i32* %183, align 4, !tbaa !25636, !pdg.inst.id !498
  %184 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %180, i64 1, !pdg.inst.id !446
  %185 = load i32, i32* %184, align 4, !tbaa !25636, !pdg.inst.id !501
  %186 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %180, i64 1, !pdg.inst.id !292
  store i32 %185, i32* %186, align 4, !tbaa !25636, !pdg.inst.id !503
  %187 = add nuw nsw i64 %172, 2, !pdg.inst.id !474
  %188 = add i64 %173, -2, !pdg.inst.id !480
  %189 = icmp eq i64 %188, 0, !pdg.inst.id !509
  br i1 %189, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512

._crit_edge2:                                     ; preds = %171
  br label %171, !pdg.inst.id !24953

.loopexit6:                                       ; preds = %577, %171
  %.lcssa15 = phi i64 [ %187, %171 ], [ %576, %577 ], !pdg.inst.id !506
  br label %190, !pdg.inst.id !24956

190:                                              ; preds = %.loopexit6, %161
  %191 = phi i64 [ 0, %161 ], [ %.lcssa15, %.loopexit6 ], !pdg.inst.id !514
  %192 = icmp eq i64 %165, 0, !pdg.inst.id !465
  br i1 %192, label %200, label %193, !pdg.inst.id !520

193:                                              ; preds = %190
  %194 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %191, i64 0, !pdg.inst.id !452
  %195 = load i32, i32* %194, align 4, !tbaa !25636, !pdg.inst.id !522
  %196 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %191, i64 0, !pdg.inst.id !298
  store i32 %195, i32* %196, align 4, !tbaa !25636, !pdg.inst.id !524
  %197 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %191, i64 1, !pdg.inst.id !450
  %198 = load i32, i32* %197, align 4, !tbaa !25636, !pdg.inst.id !527
  %199 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %191, i64 1, !pdg.inst.id !296
  store i32 %198, i32* %199, align 4, !tbaa !25636, !pdg.inst.id !529
  br label %200, !pdg.inst.id !24969

200:                                              ; preds = %193, %190, %134
  %201 = load i32, i32* %89, align 8, !tbaa !25625, !pdg.inst.id !308
  %202 = getelementptr inbounds i8, i8* %26, i64 88, !pdg.inst.id !95
  %203 = bitcast i8* %202 to i32*, !pdg.inst.id !536
  store i32 %201, i32* %203, align 8, !tbaa !25625, !pdg.inst.id !534
  %204 = getelementptr inbounds i8, i8* %26, i64 96, !pdg.inst.id !93
  %205 = bitcast i8* %204 to %struct.chiral_t**, !pdg.inst.id !539
  store %struct.chiral_t* %108, %struct.chiral_t** %205, align 8, !tbaa !25637, !pdg.inst.id !344
  %206 = icmp sgt i32 %201, 0, !pdg.inst.id !532
  br i1 %206, label %207, label %237, !prof !25616, !pdg.inst.id !542

207:                                              ; preds = %200
  %208 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 14, !pdg.inst.id !77
  %209 = load %struct.chiral_t*, %struct.chiral_t** %208, align 8, !tbaa !25637, !pdg.inst.id !544
  %210 = load i32, i32* @23
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %578, label %212

212:                                              ; preds = %207, %._crit_edge
  %213 = phi i64 [ 0, %207 ], [ %232, %._crit_edge ], !pdg.inst.id !556
  %214 = phi %struct.chiral_t* [ %108, %207 ], [ %233, %._crit_edge ], !pdg.inst.id !342
  %215 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %209, i64 %213, i32 0, i64 0, !pdg.inst.id !554
  %216 = load i32, i32* %215, align 4, !tbaa !25636, !pdg.inst.id !576
  %217 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %214, i64 0, i32 0, i64 0, !pdg.inst.id !574
  store i32 %216, i32* %217, align 4, !tbaa !25636, !pdg.inst.id !578
  %218 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %209, i64 %213, i32 0, i64 1, !pdg.inst.id !550
  %219 = load i32, i32* %218, align 4, !tbaa !25636, !pdg.inst.id !581
  %220 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %214, i64 0, i32 0, i64 1, !pdg.inst.id !568
  store i32 %219, i32* %220, align 4, !tbaa !25636, !pdg.inst.id !583
  %221 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %209, i64 %213, i32 0, i64 2, !pdg.inst.id !548
  %222 = load i32, i32* %221, align 4, !tbaa !25636, !pdg.inst.id !586
  %223 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %214, i64 0, i32 0, i64 2, !pdg.inst.id !566
  store i32 %222, i32* %223, align 4, !tbaa !25636, !pdg.inst.id !588
  %224 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %209, i64 %213, i32 0, i64 3, !pdg.inst.id !546
  %225 = load i32, i32* %224, align 4, !tbaa !25636, !pdg.inst.id !591
  %226 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %214, i64 0, i32 0, i64 3, !pdg.inst.id !564
  store i32 %225, i32* %226, align 4, !tbaa !25636, !pdg.inst.id !593
  %227 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %209, i64 %213, i32 1, !pdg.inst.id !552
  %228 = bitcast double* %227 to i64*, !pdg.inst.id !596
  %229 = load i64, i64* %228, align 8, !tbaa !25638, !pdg.inst.id !598
  %230 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %214, i64 0, i32 1, !pdg.inst.id !570
  %231 = bitcast double* %230 to i64*, !pdg.inst.id !602
  store i64 %229, i64* %231, align 8, !tbaa !25638, !pdg.inst.id !600
  %232 = add nuw nsw i64 %213, 1, !pdg.inst.id !562
  %233 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %214, i64 1, !pdg.inst.id !572
  %234 = load i32, i32* %89, align 8, !tbaa !25625, !pdg.inst.id !306
  %235 = sext i32 %234 to i64, !pdg.inst.id !609
  %236 = icmp slt i64 %232, %235, !pdg.inst.id !605
  br i1 %236, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612

._crit_edge:                                      ; preds = %212
  br label %212, !pdg.inst.id !25042

.loopexit5:                                       ; preds = %601, %212
  br label %237, !pdg.inst.id !25044

237:                                              ; preds = %.loopexit5, %200
  %238 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 7, !pdg.inst.id !52
  %239 = load i32, i32* %238, align 4, !tbaa !25641, !pdg.inst.id !614
  %240 = getelementptr inbounds i8, i8* %26, i64 44, !pdg.inst.id !89
  %241 = bitcast i8* %240 to i32*, !pdg.inst.id !618
  store i32 %239, i32* %241, align 4, !tbaa !25641, !pdg.inst.id !616
  %242 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 8, !pdg.inst.id !61
  %243 = load i32, i32* %242, align 8, !tbaa !25642, !pdg.inst.id !621
  %244 = getelementptr inbounds i8, i8* %26, i64 48, !pdg.inst.id !87
  %245 = bitcast i8* %244 to i32*, !pdg.inst.id !625
  store i32 %243, i32* %245, align 8, !tbaa !25642, !pdg.inst.id !623
  %246 = load i32, i32* %39, align 8, !tbaa !25623, !pdg.inst.id !143
  %247 = getelementptr inbounds i8, i8* %26, i64 104, !pdg.inst.id !85
  %248 = bitcast i8* %247 to i32*, !pdg.inst.id !641
  store i32 %246, i32* %248, align 8, !tbaa !25623, !pdg.inst.id !638
  %249 = getelementptr inbounds i8, i8* %26, i64 112, !pdg.inst.id !83
  %250 = bitcast i8* %249 to i8**, !pdg.inst.id !644
  store i8* %57, i8** %250, align 8, !tbaa !25643, !pdg.inst.id !238
  %251 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 16, !pdg.inst.id !40
  %252 = load i32*, i32** %251, align 8, !tbaa !25643, !pdg.inst.id !647
  %253 = bitcast i32* %252 to i8*, !pdg.inst.id !657
  %254 = icmp eq i32* %252, null, !pdg.inst.id !662
  %255 = icmp sgt i32 %246, 0, !pdg.inst.id !636
  %256 = bitcast i8* %57 to i32*, !pdg.inst.id !236
  br i1 %254, label %355, label %257, !prof !25644, !pdg.inst.id !666

257:                                              ; preds = %237
  br i1 %255, label %258, label %433, !pdg.inst.id !670

258:                                              ; preds = %257
  %259 = sext i32 %246 to i64, !pdg.inst.id !634
  %260 = icmp ult i32 %246, 32, !pdg.inst.id !630
  br i1 %260, label %261, label %263, !pdg.inst.id !699

261:                                              ; preds = %353, %263, %258
  %262 = phi i64 [ 0, %263 ], [ 0, %258 ], [ %272, %353 ], !pdg.inst.id !701
  br label %420, !pdg.inst.id !25071

263:                                              ; preds = %258
  %264 = shl nsw i64 %259, 2, !pdg.inst.id !695
  %265 = getelementptr i8, i8* %57, i64 %264, !pdg.inst.id !234
  %266 = getelementptr i32, i32* %252, i64 %259, !pdg.inst.id !655
  %267 = bitcast i32* %266 to i8*, !pdg.inst.id !706
  %268 = icmp ult i8* %57, %267, !pdg.inst.id !232
  %269 = icmp ugt i8* %265, %253, !pdg.inst.id !664
  %270 = and i1 %268, %269, !pdg.inst.id !709
  br i1 %270, label %261, label %271, !pdg.inst.id !712

271:                                              ; preds = %263
  %272 = and i64 %259, -32, !pdg.inst.id !692
  %273 = add nsw i64 %272, -32, !pdg.inst.id !714
  %274 = lshr exact i64 %273, 5, !pdg.inst.id !720
  %275 = add nuw nsw i64 %274, 1, !pdg.inst.id !722
  %276 = and i64 %275, 1, !pdg.inst.id !726
  %277 = icmp eq i64 %273, 0, !pdg.inst.id !718
  br i1 %277, label %329, label %278, !pdg.inst.id !731

278:                                              ; preds = %271
  %279 = sub nuw nsw i64 %275, %276, !pdg.inst.id !724
  %280 = load i32, i32* @24
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %602, label %282

282:                                              ; preds = %278, %._crit_edge5
  %283 = phi i64 [ 0, %278 ], [ %326, %._crit_edge5 ], !pdg.inst.id !735
  %284 = phi i64 [ %279, %278 ], [ %327, %._crit_edge5 ], !pdg.inst.id !733
  %285 = getelementptr inbounds i32, i32* %252, i64 %283, !pdg.inst.id !653
  %286 = bitcast i32* %285 to <8 x i32>*, !pdg.inst.id !744
  %287 = load <8 x i32>, <8 x i32>* %286, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
  %288 = getelementptr inbounds i32, i32* %285, i64 8, !pdg.inst.id !750
  %289 = bitcast i32* %288 to <8 x i32>*, !pdg.inst.id !756
  %290 = load <8 x i32>, <8 x i32>* %289, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
  %291 = getelementptr inbounds i32, i32* %285, i64 16, !pdg.inst.id !748
  %292 = bitcast i32* %291 to <8 x i32>*, !pdg.inst.id !762
  %293 = load <8 x i32>, <8 x i32>* %292, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
  %294 = getelementptr inbounds i32, i32* %285, i64 24, !pdg.inst.id !746
  %295 = bitcast i32* %294 to <8 x i32>*, !pdg.inst.id !768
  %296 = load <8 x i32>, <8 x i32>* %295, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
  %297 = getelementptr inbounds i32, i32* %256, i64 %283, !pdg.inst.id !684
  %298 = bitcast i32* %297 to <8 x i32>*, !pdg.inst.id !774
  store <8 x i32> %287, <8 x i32>* %298, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
  %299 = getelementptr inbounds i32, i32* %297, i64 8, !pdg.inst.id !780
  %300 = bitcast i32* %299 to <8 x i32>*, !pdg.inst.id !783
  store <8 x i32> %290, <8 x i32>* %300, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
  %301 = getelementptr inbounds i32, i32* %297, i64 16, !pdg.inst.id !778
  %302 = bitcast i32* %301 to <8 x i32>*, !pdg.inst.id !786
  store <8 x i32> %293, <8 x i32>* %302, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
  %303 = getelementptr inbounds i32, i32* %297, i64 24, !pdg.inst.id !776
  %304 = bitcast i32* %303 to <8 x i32>*, !pdg.inst.id !789
  store <8 x i32> %296, <8 x i32>* %304, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
  %305 = or i64 %283, 32, !pdg.inst.id !736
  %306 = getelementptr inbounds i32, i32* %252, i64 %305, !pdg.inst.id !649
  %307 = bitcast i32* %306 to <8 x i32>*, !pdg.inst.id !800
  %308 = load <8 x i32>, <8 x i32>* %307, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
  %309 = getelementptr inbounds i32, i32* %306, i64 8, !pdg.inst.id !798
  %310 = bitcast i32* %309 to <8 x i32>*, !pdg.inst.id !806
  %311 = load <8 x i32>, <8 x i32>* %310, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
  %312 = getelementptr inbounds i32, i32* %306, i64 16, !pdg.inst.id !796
  %313 = bitcast i32* %312 to <8 x i32>*, !pdg.inst.id !812
  %314 = load <8 x i32>, <8 x i32>* %313, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
  %315 = getelementptr inbounds i32, i32* %306, i64 24, !pdg.inst.id !794
  %316 = bitcast i32* %315 to <8 x i32>*, !pdg.inst.id !818
  %317 = load <8 x i32>, <8 x i32>* %316, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
  %318 = getelementptr inbounds i32, i32* %256, i64 %305, !pdg.inst.id !674
  %319 = bitcast i32* %318 to <8 x i32>*, !pdg.inst.id !830
  store <8 x i32> %308, <8 x i32>* %319, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
  %320 = getelementptr inbounds i32, i32* %318, i64 8, !pdg.inst.id !828
  %321 = bitcast i32* %320 to <8 x i32>*, !pdg.inst.id !833
  store <8 x i32> %311, <8 x i32>* %321, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
  %322 = getelementptr inbounds i32, i32* %318, i64 16, !pdg.inst.id !826
  %323 = bitcast i32* %322 to <8 x i32>*, !pdg.inst.id !836
  store <8 x i32> %314, <8 x i32>* %323, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
  %324 = getelementptr inbounds i32, i32* %318, i64 24, !pdg.inst.id !824
  %325 = bitcast i32* %324 to <8 x i32>*, !pdg.inst.id !839
  store <8 x i32> %317, <8 x i32>* %325, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
  %326 = add i64 %283, 64, !pdg.inst.id !738
  %327 = add i64 %284, -2, !pdg.inst.id !742
  %328 = icmp eq i64 %327, 0, !pdg.inst.id !845
  br i1 %328, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848

._crit_edge5:                                     ; preds = %282
  br label %282, !pdg.inst.id !25211

.loopexit4:                                       ; preds = %633, %282
  %.lcssa14 = phi i64 [ %326, %282 ], [ %632, %633 ], !pdg.inst.id !842
  br label %329, !pdg.inst.id !25214

329:                                              ; preds = %.loopexit4, %271
  %330 = phi i64 [ 0, %271 ], [ %.lcssa14, %.loopexit4 ], !pdg.inst.id !850
  %331 = icmp eq i64 %276, 0, !pdg.inst.id !729
  br i1 %331, label %353, label %332, !pdg.inst.id !854

332:                                              ; preds = %329
  %333 = getelementptr inbounds i32, i32* %252, i64 %330, !pdg.inst.id !651
  %334 = bitcast i32* %333 to <8 x i32>*, !pdg.inst.id !862
  %335 = load <8 x i32>, <8 x i32>* %334, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !864
  %336 = getelementptr inbounds i32, i32* %333, i64 8, !pdg.inst.id !860
  %337 = bitcast i32* %336 to <8 x i32>*, !pdg.inst.id !868
  %338 = load <8 x i32>, <8 x i32>* %337, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !870
  %339 = getelementptr inbounds i32, i32* %333, i64 16, !pdg.inst.id !858
  %340 = bitcast i32* %339 to <8 x i32>*, !pdg.inst.id !874
  %341 = load <8 x i32>, <8 x i32>* %340, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !876
  %342 = getelementptr inbounds i32, i32* %333, i64 24, !pdg.inst.id !856
  %343 = bitcast i32* %342 to <8 x i32>*, !pdg.inst.id !880
  %344 = load <8 x i32>, <8 x i32>* %343, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !882
  %345 = getelementptr inbounds i32, i32* %256, i64 %330, !pdg.inst.id !676
  %346 = bitcast i32* %345 to <8 x i32>*, !pdg.inst.id !892
  store <8 x i32> %335, <8 x i32>* %346, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !866
  %347 = getelementptr inbounds i32, i32* %345, i64 8, !pdg.inst.id !890
  %348 = bitcast i32* %347 to <8 x i32>*, !pdg.inst.id !895
  store <8 x i32> %338, <8 x i32>* %348, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !872
  %349 = getelementptr inbounds i32, i32* %345, i64 16, !pdg.inst.id !888
  %350 = bitcast i32* %349 to <8 x i32>*, !pdg.inst.id !898
  store <8 x i32> %341, <8 x i32>* %350, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !878
  %351 = getelementptr inbounds i32, i32* %345, i64 24, !pdg.inst.id !886
  %352 = bitcast i32* %351 to <8 x i32>*, !pdg.inst.id !901
  store <8 x i32> %344, <8 x i32>* %352, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !884
  br label %353, !pdg.inst.id !25243

353:                                              ; preds = %329, %332
  %354 = icmp eq i64 %272, %259, !pdg.inst.id !690
  br i1 %354, label %436, label %261, !pdg.inst.id !904

355:                                              ; preds = %237
  br i1 %255, label %356, label %433, !prof !25644, !pdg.inst.id !672

356:                                              ; preds = %355
  %357 = sext i32 %246 to i64, !pdg.inst.id !632
  %358 = icmp ult i32 %246, 32, !pdg.inst.id !628
  br i1 %358, label %359, label %361, !prof !25644, !pdg.inst.id !912

359:                                              ; preds = %418, %356
  %360 = phi i64 [ 0, %356 ], [ %362, %418 ], !pdg.inst.id !914
  br label %427, !pdg.inst.id !25252

361:                                              ; preds = %356
  %362 = and i64 %357, -32, !pdg.inst.id !908
  %363 = add nsw i64 %362, -32, !pdg.inst.id !917
  %364 = lshr exact i64 %363, 5, !pdg.inst.id !923
  %365 = add nuw nsw i64 %364, 1, !pdg.inst.id !925
  %366 = and i64 %365, 1, !pdg.inst.id !929
  %367 = icmp eq i64 %363, 0, !pdg.inst.id !921
  br i1 %367, label %402, label %368, !pdg.inst.id !934

368:                                              ; preds = %361
  %369 = sub nuw nsw i64 %365, %366, !pdg.inst.id !927
  br label %370, !pdg.inst.id !25267

370:                                              ; preds = %._crit_edge4, %368
  %371 = phi i64 [ 0, %368 ], [ %398, %._crit_edge4 ], !pdg.inst.id !938
  %372 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %368 ], [ %399, %._crit_edge4 ], !pdg.inst.id !944
  %373 = phi i64 [ %369, %368 ], [ %400, %._crit_edge4 ], !pdg.inst.id !936
  %374 = getelementptr inbounds i32, i32* %256, i64 %371, !pdg.inst.id !682
  %375 = add <8 x i32> %372, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !961
  %376 = add <8 x i32> %372, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !957
  %377 = add <8 x i32> %372, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !955
  %378 = bitcast i32* %374 to <8 x i32>*, !pdg.inst.id !965
  store <8 x i32> %372, <8 x i32>* %378, align 4, !tbaa !25636, !pdg.inst.id !959
  %379 = getelementptr inbounds i32, i32* %374, i64 8, !pdg.inst.id !971
  %380 = bitcast i32* %379 to <8 x i32>*, !pdg.inst.id !980
  store <8 x i32> %375, <8 x i32>* %380, align 4, !tbaa !25636, !pdg.inst.id !973
  %381 = getelementptr inbounds i32, i32* %374, i64 16, !pdg.inst.id !969
  %382 = bitcast i32* %381 to <8 x i32>*, !pdg.inst.id !983
  store <8 x i32> %376, <8 x i32>* %382, align 4, !tbaa !25636, !pdg.inst.id !975
  %383 = getelementptr inbounds i32, i32* %374, i64 24, !pdg.inst.id !967
  %384 = bitcast i32* %383 to <8 x i32>*, !pdg.inst.id !986
  store <8 x i32> %377, <8 x i32>* %384, align 4, !tbaa !25636, !pdg.inst.id !977
  %385 = or i64 %371, 32, !pdg.inst.id !939
  %386 = add <8 x i32> %372, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !pdg.inst.id !953
  %387 = getelementptr inbounds i32, i32* %256, i64 %385, !pdg.inst.id !678
  %388 = add <8 x i32> %372, <i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40>, !pdg.inst.id !951
  %389 = add <8 x i32> %372, <i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48>, !pdg.inst.id !949
  %390 = add <8 x i32> %372, <i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56>, !pdg.inst.id !947
  %391 = bitcast i32* %387 to <8 x i32>*, !pdg.inst.id !998
  store <8 x i32> %386, <8 x i32>* %391, align 4, !tbaa !25636, !pdg.inst.id !990
  %392 = getelementptr inbounds i32, i32* %387, i64 8, !pdg.inst.id !996
  %393 = bitcast i32* %392 to <8 x i32>*, !pdg.inst.id !1007
  store <8 x i32> %388, <8 x i32>* %393, align 4, !tbaa !25636, !pdg.inst.id !1000
  %394 = getelementptr inbounds i32, i32* %387, i64 16, !pdg.inst.id !994
  %395 = bitcast i32* %394 to <8 x i32>*, !pdg.inst.id !1010
  store <8 x i32> %389, <8 x i32>* %395, align 4, !tbaa !25636, !pdg.inst.id !1002
  %396 = getelementptr inbounds i32, i32* %387, i64 24, !pdg.inst.id !992
  %397 = bitcast i32* %396 to <8 x i32>*, !pdg.inst.id !1013
  store <8 x i32> %390, <8 x i32>* %397, align 4, !tbaa !25636, !pdg.inst.id !1004
  %398 = add i64 %371, 64, !pdg.inst.id !941
  %399 = add <8 x i32> %372, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>, !pdg.inst.id !945
  %400 = add i64 %373, -2, !pdg.inst.id !963
  %401 = icmp eq i64 %400, 0, !pdg.inst.id !1022
  br i1 %401, label %.loopexit2, label %._crit_edge4, !llvm.loop !25652, !pdg.inst.id !1025

._crit_edge4:                                     ; preds = %370
  br label %370, !pdg.inst.id !25349

.loopexit2:                                       ; preds = %370
  %.lcssa13 = phi i64 [ %398, %370 ], !pdg.inst.id !1016
  %.lcssa = phi <8 x i32> [ %399, %370 ], !pdg.inst.id !1019
  br label %402, !pdg.inst.id !25353

402:                                              ; preds = %.loopexit2, %361
  %403 = phi i64 [ 0, %361 ], [ %.lcssa13, %.loopexit2 ], !pdg.inst.id !1027
  %404 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %361 ], [ %.lcssa, %.loopexit2 ], !pdg.inst.id !1029
  %405 = icmp eq i64 %366, 0, !pdg.inst.id !932
  br i1 %405, label %418, label %406, !pdg.inst.id !1040

406:                                              ; preds = %402
  %407 = getelementptr inbounds i32, i32* %256, i64 %403, !pdg.inst.id !680
  %408 = add <8 x i32> %404, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !1032
  %409 = add <8 x i32> %404, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !1034
  %410 = add <8 x i32> %404, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !1036
  %411 = bitcast i32* %407 to <8 x i32>*, !pdg.inst.id !1048
  store <8 x i32> %404, <8 x i32>* %411, align 4, !tbaa !25636, !pdg.inst.id !1038
  %412 = getelementptr inbounds i32, i32* %407, i64 8, !pdg.inst.id !1046
  %413 = bitcast i32* %412 to <8 x i32>*, !pdg.inst.id !1057
  store <8 x i32> %408, <8 x i32>* %413, align 4, !tbaa !25636, !pdg.inst.id !1050
  %414 = getelementptr inbounds i32, i32* %407, i64 16, !pdg.inst.id !1044
  %415 = bitcast i32* %414 to <8 x i32>*, !pdg.inst.id !1060
  store <8 x i32> %409, <8 x i32>* %415, align 4, !tbaa !25636, !pdg.inst.id !1052
  %416 = getelementptr inbounds i32, i32* %407, i64 24, !pdg.inst.id !1042
  %417 = bitcast i32* %416 to <8 x i32>*, !pdg.inst.id !1063
  store <8 x i32> %410, <8 x i32>* %417, align 4, !tbaa !25636, !pdg.inst.id !1054
  br label %418, !pdg.inst.id !25364

418:                                              ; preds = %402, %406
  %419 = icmp eq i64 %362, %357, !pdg.inst.id !906
  br i1 %419, label %436, label %359, !pdg.inst.id !1066

420:                                              ; preds = %._crit_edge1, %261
  %421 = phi i64 [ %425, %._crit_edge1 ], [ %262, %261 ], !pdg.inst.id !702
  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
  %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
  %425 = add nuw nsw i64 %421, 1, !pdg.inst.id !1070
  %426 = icmp slt i64 %425, %259, !pdg.inst.id !697
  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079

._crit_edge1:                                     ; preds = %420
  br label %420, !pdg.inst.id !25085

427:                                              ; preds = %._crit_edge3, %359
  %428 = phi i64 [ %431, %._crit_edge3 ], [ %360, %359 ], !pdg.inst.id !915
  %429 = getelementptr inbounds i32, i32* %256, i64 %428, !pdg.inst.id !686
  %430 = trunc i64 %428 to i32, !pdg.inst.id !1081
  store i32 %430, i32* %429, align 4, !tbaa !25636, !pdg.inst.id !1086
  %431 = add nuw nsw i64 %428, 1, !pdg.inst.id !1084
  %432 = icmp slt i64 %431, %357, !pdg.inst.id !910
  br i1 %432, label %._crit_edge3, label %.loopexit1, !prof !25654, !llvm.loop !25655, !pdg.inst.id !1091

._crit_edge3:                                     ; preds = %427
  br label %427, !pdg.inst.id !25424

433:                                              ; preds = %257, %355
  %434 = getelementptr inbounds i8, i8* %26, i64 120, !pdg.inst.id !59
  %435 = bitcast i8* %434 to i8**, !pdg.inst.id !1093
  store i8* %43, i8** %435, align 8, !tbaa !25657, !pdg.inst.id !155
  br label %547, !pdg.inst.id !25429

.loopexit1:                                       ; preds = %427
  br label %436, !pdg.inst.id !25435

.loopexit3:                                       ; preds = %420
  br label %436, !pdg.inst.id !25438

436:                                              ; preds = %.loopexit3, %.loopexit1, %353, %418
  %437 = getelementptr inbounds i8, i8* %26, i64 120, !pdg.inst.id !81
  %438 = bitcast i8* %437 to i8**, !pdg.inst.id !1096
  store i8* %43, i8** %438, align 8, !tbaa !25657, !pdg.inst.id !157
  br i1 %255, label %439, label %547, !prof !25644, !pdg.inst.id !668

439:                                              ; preds = %436
  %440 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 17, !pdg.inst.id !42
  br label %441, !pdg.inst.id !25451

441:                                              ; preds = %439, %454
  %442 = phi i64 [ 0, %439 ], [ %543, %454 ], !pdg.inst.id !1103
  %443 = load %struct.atom_t*, %struct.atom_t** %440, align 8, !tbaa !25657, !pdg.inst.id !1101
  %444 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %443, i64 %442, i32 0, !pdg.inst.id !1104
  %445 = load i8*, i8** %444, align 8, !tbaa !25658, !pdg.inst.id !1179
  %446 = tail call i64 @strlen(i8* %445) #49, !pdg.inst.id !1181
  %447 = add i64 %446, 1, !pdg.inst.id !1183
  %448 = tail call noalias i8* @malloc(i64 %447) #48, !pdg.inst.id !1185
  %449 = icmp eq i8* %448, null, !pdg.inst.id !1191
  br i1 %449, label %450, label %454, !prof !25660, !pdg.inst.id !1193

450:                                              ; preds = %441
  %451 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !1195
  %452 = getelementptr [34 x i8], [34 x i8]* @.str.33.401, i64 0, i64 0, !pdg.inst.id !1198
  %453 = tail call i64 @fwrite(i8* %452, i64 33, i64 1, %struct._IO_FILE* %451) #50, !pdg.inst.id !1196
  tail call void @exit(i32 1) #51, !pdg.inst.id !1647
  br label %UnifiedUnreachableBlock, !pdg.inst.id !25476

454:                                              ; preds = %441
  %455 = load i8*, i8** %444, align 8, !tbaa !25658, !pdg.inst.id !1177
  %456 = tail call i8* @strcpy(i8* nonnull %448, i8* %455) #48, !pdg.inst.id !1187
  %457 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 0, !pdg.inst.id !179
  store i8* %448, i8** %457, align 8, !tbaa !25658, !pdg.inst.id !1189
  %458 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 1, !pdg.inst.id !213
  store i8* null, i8** %458, align 8, !tbaa !25661, !pdg.inst.id !1202
  %459 = load %struct.atom_t*, %struct.atom_t** %440, align 8, !tbaa !25657, !pdg.inst.id !1099
  %460 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 2, !pdg.inst.id !1107
  %461 = load i32, i32* %460, align 8, !tbaa !25662, !pdg.inst.id !1225
  %462 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 2, !pdg.inst.id !211
  store i32 %461, i32* %462, align 8, !tbaa !25662, !pdg.inst.id !1227
  %463 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 3, !pdg.inst.id !1110
  %464 = load i32, i32* %463, align 4, !tbaa !25663, !pdg.inst.id !1230
  %465 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 3, !pdg.inst.id !209
  store i32 %464, i32* %465, align 4, !tbaa !25663, !pdg.inst.id !1232
  %466 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 0, !pdg.inst.id !1149
  %467 = load i32, i32* %466, align 4, !tbaa !25636, !pdg.inst.id !1235
  %468 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 0, !pdg.inst.id !181
  store i32 %467, i32* %468, align 4, !tbaa !25636, !pdg.inst.id !1237
  %469 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 1, !pdg.inst.id !1153
  %470 = load i32, i32* %469, align 4, !tbaa !25636, !pdg.inst.id !1240
  %471 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 1, !pdg.inst.id !177
  store i32 %470, i32* %471, align 4, !tbaa !25636, !pdg.inst.id !1242
  %472 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 2, !pdg.inst.id !1156
  %473 = load i32, i32* %472, align 4, !tbaa !25636, !pdg.inst.id !1245
  %474 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 2, !pdg.inst.id !173
  store i32 %473, i32* %474, align 4, !tbaa !25636, !pdg.inst.id !1247
  %475 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 3, !pdg.inst.id !1159
  %476 = load i32, i32* %475, align 4, !tbaa !25636, !pdg.inst.id !1250
  %477 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 3, !pdg.inst.id !171
  store i32 %476, i32* %477, align 4, !tbaa !25636, !pdg.inst.id !1252
  %478 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 4, !pdg.inst.id !1162
  %479 = load i32, i32* %478, align 4, !tbaa !25636, !pdg.inst.id !1255
  %480 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 4, !pdg.inst.id !169
  store i32 %479, i32* %480, align 4, !tbaa !25636, !pdg.inst.id !1257
  %481 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 5, !pdg.inst.id !1165
  %482 = load i32, i32* %481, align 4, !tbaa !25636, !pdg.inst.id !1260
  %483 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 5, !pdg.inst.id !167
  store i32 %482, i32* %483, align 4, !tbaa !25636, !pdg.inst.id !1262
  %484 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 6, !pdg.inst.id !1168
  %485 = load i32, i32* %484, align 4, !tbaa !25636, !pdg.inst.id !1265
  %486 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 6, !pdg.inst.id !165
  store i32 %485, i32* %486, align 4, !tbaa !25636, !pdg.inst.id !1267
  %487 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 4, i64 7, !pdg.inst.id !1171
  %488 = load i32, i32* %487, align 4, !tbaa !25636, !pdg.inst.id !1270
  %489 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 4, i64 7, !pdg.inst.id !163
  store i32 %488, i32* %489, align 4, !tbaa !25636, !pdg.inst.id !1272
  %490 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 5, !pdg.inst.id !207
  %491 = bitcast %struct.residue_t** %490 to i8**, !pdg.inst.id !1275
  store i8* %26, i8** %491, align 8, !tbaa !25664, !pdg.inst.id !79
  %492 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 6, !pdg.inst.id !1115
  %493 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 6, !pdg.inst.id !205
  %494 = bitcast double* %492 to <2 x i64>*, !pdg.inst.id !1278
  %495 = load <2 x i64>, <2 x i64>* %494, align 8, !tbaa !25665, !pdg.inst.id !1282
  %496 = bitcast double* %493 to <2 x i64>*, !pdg.inst.id !1280
  store <2 x i64> %495, <2 x i64>* %496, align 8, !tbaa !25665, !pdg.inst.id !1284
  %497 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 8, !pdg.inst.id !1121
  %498 = bitcast double* %497 to i64*, !pdg.inst.id !1287
  %499 = load i64, i64* %498, align 8, !tbaa !25666, !pdg.inst.id !1289
  %500 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 8, !pdg.inst.id !203
  %501 = bitcast double* %500 to i64*, !pdg.inst.id !1293
  store i64 %499, i64* %501, align 8, !tbaa !25666, !pdg.inst.id !1291
  %502 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 9, !pdg.inst.id !1124
  %503 = bitcast double* %502 to i64*, !pdg.inst.id !1296
  %504 = load i64, i64* %503, align 8, !tbaa !25667, !pdg.inst.id !1298
  %505 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 9, !pdg.inst.id !201
  %506 = bitcast double* %505 to i64*, !pdg.inst.id !1302
  store i64 %504, i64* %506, align 8, !tbaa !25667, !pdg.inst.id !1300
  %507 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 10, !pdg.inst.id !183
  store i8* null, i8** %507, align 8, !tbaa !25668, !pdg.inst.id !1305
  %508 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 11, !pdg.inst.id !1128
  %509 = load i32, i32* %508, align 8, !tbaa !25669, !pdg.inst.id !1307
  %510 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 11, !pdg.inst.id !185
  store i32 %509, i32* %510, align 8, !tbaa !25669, !pdg.inst.id !1309
  %511 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 12, !pdg.inst.id !1131
  %512 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 12, !pdg.inst.id !175
  %513 = bitcast double* %511 to <2 x i64>*, !pdg.inst.id !1312
  %514 = load <2 x i64>, <2 x i64>* %513, align 8, !tbaa !25665, !pdg.inst.id !1316
  %515 = bitcast double* %512 to <2 x i64>*, !pdg.inst.id !1314
  store <2 x i64> %514, <2 x i64>* %515, align 8, !tbaa !25665, !pdg.inst.id !1318
  %516 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 14, !pdg.inst.id !1119
  %517 = load i32, i32* %516, align 8, !tbaa !25670, !pdg.inst.id !1321
  %518 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 14, !pdg.inst.id !199
  store i32 %517, i32* %518, align 8, !tbaa !25670, !pdg.inst.id !1323
  %519 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 15, !pdg.inst.id !1133
  %520 = load i32, i32* %519, align 4, !tbaa !25671, !pdg.inst.id !1326
  %521 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 15, !pdg.inst.id !197
  store i32 %520, i32* %521, align 4, !tbaa !25671, !pdg.inst.id !1328
  %522 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 16, !pdg.inst.id !195
  store i8* null, i8** %522, align 8, !tbaa !25672, !pdg.inst.id !1331
  %523 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 17, i64 0, !pdg.inst.id !1137
  %524 = bitcast double* %523 to i64*, !pdg.inst.id !1333
  %525 = load i64, i64* %524, align 8, !tbaa !25665, !pdg.inst.id !1335
  %526 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 17, !pdg.inst.id !193
  %527 = bitcast [3 x double]* %526 to i64*, !pdg.inst.id !1339
  store i64 %525, i64* %527, align 8, !tbaa !25665, !pdg.inst.id !1337
  %528 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 17, i64 1, !pdg.inst.id !1140
  %529 = bitcast double* %528 to i64*, !pdg.inst.id !1342
  %530 = load i64, i64* %529, align 8, !tbaa !25665, !pdg.inst.id !1344
  %531 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 17, i64 1, !pdg.inst.id !191
  %532 = bitcast double* %531 to i64*, !pdg.inst.id !1348
  store i64 %530, i64* %532, align 8, !tbaa !25665, !pdg.inst.id !1346
  %533 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 17, i64 2, !pdg.inst.id !1143
  %534 = bitcast double* %533 to i64*, !pdg.inst.id !1351
  %535 = load i64, i64* %534, align 8, !tbaa !25665, !pdg.inst.id !1353
  %536 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 17, i64 2, !pdg.inst.id !189
  %537 = bitcast double* %536 to i64*, !pdg.inst.id !1357
  store i64 %535, i64* %537, align 8, !tbaa !25665, !pdg.inst.id !1355
  %538 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %459, i64 %442, i32 18, !pdg.inst.id !1146
  %539 = bitcast double* %538 to i64*, !pdg.inst.id !1360
  %540 = load i64, i64* %539, align 8, !tbaa !25673, !pdg.inst.id !1362
  %541 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %442, i32 18, !pdg.inst.id !187
  %542 = bitcast double* %541 to i64*, !pdg.inst.id !1366
  store i64 %540, i64* %542, align 8, !tbaa !25673, !pdg.inst.id !1364
  %543 = add nuw nsw i64 %442, 1, !pdg.inst.id !1174
  %544 = load i32, i32* %39, align 8, !tbaa !25623, !pdg.inst.id !141
  %545 = sext i32 %544 to i64, !pdg.inst.id !1372
  %546 = icmp slt i64 %543, %545, !pdg.inst.id !1369
  br i1 %546, label %441, label %.loopexit, !prof !25654, !pdg.inst.id !1375

.loopexit:                                        ; preds = %454
  br label %547, !pdg.inst.id !25596

547:                                              ; preds = %.loopexit, %433, %436, %98, %78, %59, %46, %29
  %548 = phi %struct.residue_t* [ null, %29 ], [ null, %46 ], [ null, %59 ], [ null, %78 ], [ null, %98 ], [ %27, %436 ], [ %27, %433 ], [ %27, %.loopexit ], !pdg.inst.id !124
  ret %struct.residue_t* %548, !pdg.inst.id !1377

UnifiedUnreachableBlock:                          ; preds = %450, %130, %116
  unreachable, !pdg.inst.id !25613

549:                                              ; preds = %167
  store i32 1, i32* @22
  store i64 %168, i64* %21
  store [2 x i32]* %88, [2 x i32]** %23
  store [2 x i32]* %163, [2 x i32]** %25
  %550 = alloca [3 x i8*]
  %551 = getelementptr inbounds [3 x i8*], [3 x i8*]* %550, i64 0, i64 0
  %552 = bitcast i8** %551 to void (i8*, i8*)**
  store void (i8*, i8*)* @54, void (i8*, i8*)** %552
  %553 = getelementptr inbounds [3 x i8*], [3 x i8*]* %550, i64 0, i64 1
  %554 = bitcast i8** %553 to void (i8*, i8*)**
  store void (i8*, i8*)* @55, void (i8*, i8*)** %554
  %555 = getelementptr inbounds [3 x i8*], [3 x i8*]* %550, i64 0, i64 2
  %556 = bitcast i8** %555 to void (i8*, i8*)**
  store void (i8*, i8*)* @56, void (i8*, i8*)** %556
  %557 = bitcast [3 x i8*]* %550 to i8*
  %558 = alloca [16 x i64]
  %559 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 0
  store i64 64, i64* %559
  %560 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 1
  store i64 64, i64* %560
  %561 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 2
  store i64 64, i64* %561
  %562 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 3
  store i64 64, i64* %562
  %563 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 4
  store i64 64, i64* %563
  %564 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 5
  store i64 64, i64* %564
  %565 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 6
  store i64 64, i64* %565
  %566 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 7
  store i64 64, i64* %566
  %567 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 8
  store i64 1, i64* %567
  %568 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 9
  store i64 64, i64* %568
  %569 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 10
  store i64 1, i64* %569
  %570 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 11
  store i64 1, i64* %570
  %571 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 12
  store i64 1, i64* %571
  %572 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 13
  store i64 64, i64* %572
  %573 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 14
  store i64 64, i64* %573
  %574 = getelementptr inbounds [16 x i64], [16 x i64]* %558, i64 0, i64 15
  store i64 64, i64* %574
  %575 = bitcast [16 x i64]* %558 to i64*
  call void @stageDispatcher(i8* %19, i64* %575, i8* %557, i64 3, i64 16)
  %576 = load i64, i64* %20
  br label %577

577:                                              ; preds = %549
  store i32 0, i32* @22
  br label %.loopexit6

578:                                              ; preds = %207
  store i32 1, i32* @23
  store i32* %89, i32** %13
  store %struct.chiral_t* %108, %struct.chiral_t** %15
  store %struct.chiral_t* %209, %struct.chiral_t** %17
  %579 = alloca [1 x i8*]
  %580 = getelementptr inbounds [1 x i8*], [1 x i8*]* %579, i64 0, i64 0
  %581 = bitcast i8** %580 to void (i8*, i8*)**
  store void (i8*, i8*)* @57, void (i8*, i8*)** %581
  %582 = bitcast [1 x i8*]* %579 to i8*
  %583 = alloca [16 x i64]
  %584 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 0
  store i64 64, i64* %584
  %585 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 1
  store i64 64, i64* %585
  %586 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 2
  store i64 64, i64* %586
  %587 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 3
  store i64 64, i64* %587
  %588 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 4
  store i64 64, i64* %588
  %589 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 5
  store i64 64, i64* %589
  %590 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 6
  store i64 64, i64* %590
  %591 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 7
  store i64 64, i64* %591
  %592 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 8
  store i64 1, i64* %592
  %593 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 9
  store i64 64, i64* %593
  %594 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 10
  store i64 1, i64* %594
  %595 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 11
  store i64 1, i64* %595
  %596 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 12
  store i64 1, i64* %596
  %597 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 13
  store i64 64, i64* %597
  %598 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 14
  store i64 64, i64* %598
  %599 = getelementptr inbounds [16 x i64], [16 x i64]* %583, i64 0, i64 15
  store i64 64, i64* %599
  %600 = bitcast [16 x i64]* %583 to i64*
  call void @stageDispatcher(i8* %11, i64* %600, i8* %582, i64 1, i64 16)
  br label %601

601:                                              ; preds = %578
  store i32 0, i32* @23
  br label %.loopexit5

602:                                              ; preds = %278
  store i32 1, i32* @24
  store i32* %256, i32** %6
  store i64 %279, i64* %7
  store i32* %252, i32** %9
  %603 = alloca [3 x i8*]
  %604 = getelementptr inbounds [3 x i8*], [3 x i8*]* %603, i64 0, i64 0
  %605 = bitcast i8** %604 to void (i8*, i8*)**
  store void (i8*, i8*)* @58, void (i8*, i8*)** %605
  %606 = getelementptr inbounds [3 x i8*], [3 x i8*]* %603, i64 0, i64 1
  %607 = bitcast i8** %606 to void (i8*, i8*)**
  store void (i8*, i8*)* @59, void (i8*, i8*)** %607
  %608 = getelementptr inbounds [3 x i8*], [3 x i8*]* %603, i64 0, i64 2
  %609 = bitcast i8** %608 to void (i8*, i8*)**
  store void (i8*, i8*)* @60, void (i8*, i8*)** %609
  %610 = bitcast [3 x i8*]* %603 to i8*
  %611 = alloca [19 x i64]
  %612 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 0
  store i64 64, i64* %612
  %613 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 1
  store i64 64, i64* %613
  %614 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 2
  store i64 64, i64* %614
  %615 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 3
  store i64 64, i64* %615
  %616 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 4
  store i64 64, i64* %616
  %617 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 5
  store i64 64, i64* %617
  %618 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 6
  store i64 64, i64* %618
  %619 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 7
  store i64 64, i64* %619
  %620 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 8
  store i64 1, i64* %620
  %621 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 9
  store i64 64, i64* %621
  %622 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 10
  store i64 1, i64* %622
  %623 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 11
  store i64 1, i64* %623
  %624 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 12
  store i64 1, i64* %624
  %625 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 13
  store i64 64, i64* %625
  %626 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 14
  store i64 64, i64* %626
  %627 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 15
  store i64 64, i64* %627
  %628 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 16
  store i64 64, i64* %628
  %629 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 17
  store i64 64, i64* %629
  %630 = getelementptr inbounds [19 x i64], [19 x i64]* %611, i64 0, i64 18
  store i64 64, i64* %630
  %631 = bitcast [19 x i64]* %611 to i64*
  call void @stageDispatcher(i8* %3, i64* %631, i8* %610, i64 3, i64 19)
  %632 = load i64, i64* %4
  br label %633

633:                                              ; preds = %602
  store i32 0, i32* @24
  br label %.loopexit4
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "copyresidue"
Parallelizer:  Loop 34 = "  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   We found an SCC of type 0 of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 4
DOALL:     	  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DOALL:     	  %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DOALL:     	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DOALL:     	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DOALL:     External nodes: 2
DOALL:     	  %421 = phi i64 [ %425, %._crit_edge1 ], [ %262, %261 ], !pdg.inst.id !702
DOALL:     	  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079
DOALL:     Edges: 11
DOALL:     Loop-carried data dependences
DOALL:         br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079 --->   %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659 via variable
DOALL:         br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079 --->   %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688 via variable
DOALL:         store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074 --->   %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072 via memory
DOALL:         br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079 --->   %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072 via variable
DOALL:         br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079 --->   store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074 via variable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 1
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DSWP:       %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DSWP:       %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:       store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 1
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DSWP:       %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DSWP:       %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:       store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:   Set:  0
DSWP:    Children: 
DSWP:    Parents: 
DSWP:  There are 1 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:     Internal nodes: 4
DSWP:     	  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DSWP:     	  %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DSWP:     	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:     	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:     External nodes: 2
DSWP:     	  %421 = phi i64 [ %425, %._crit_edge1 ], [ %262, %261 ], !pdg.inst.id !702
DSWP:     	  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079
DSWP:     Edges: 11
DSWP:     	From:	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:     	To:	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:     	RAW (must)
DSWP:     	From:	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:     	To:	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:     	WAR (may) from memory 
DSWP:     	From:	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:     	To:	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:     	RAW (may) from memory 
DSWP:     	From:	  %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DSWP:     	To:	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:     	RAW (must)
DSWP:     	From:	  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DSWP:     	To:	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079
DSWP:     	To:	  %423 = load i32, i32* %422, align 4, !tbaa !25636, !pdg.inst.id !1072
DSWP:     	CTRL
DSWP:     	From:	  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079
DSWP:     	To:	  store i32 %423, i32* %424, align 4, !tbaa !25636, !pdg.inst.id !1074
DSWP:     	CTRL
DSWP:     	From:	  %421 = phi i64 [ %425, %._crit_edge1 ], [ %262, %261 ], !pdg.inst.id !702
DSWP:     	To:	  %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079
DSWP:     	To:	  %424 = getelementptr inbounds i32, i32* %256, i64 %421, !pdg.inst.id !688
DSWP:     	CTRL
DSWP:     	From:	  %421 = phi i64 [ %425, %._crit_edge1 ], [ %262, %261 ], !pdg.inst.id !702
DSWP:     	To:	  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DSWP:     	RAW (must)
DSWP:     	From:	  br i1 %426, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079
DSWP:     	To:	  %422 = getelementptr inbounds i32, i32* %252, i64 %421, !pdg.inst.id !659
DSWP:     	CTRL
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 
DSWP:      Pop value queues: 
DSWP:    Queue: 0
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:    Queue: 1
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:    Queue: 2
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:    Queue: 3
DSWP:     Producer:	  %84 = phi i64 [ 0, %71 ], [ %113, %._crit_edge1 ], !pdg.inst.id !188
DSWP:     Consumer:	  %87 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %86, i64 %84, !pdg.inst.id !198
DSWP:     Consumer:	  %90 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %84, !pdg.inst.id !140
DSWP:    Queue: 4
DSWP:     Producer:	  %92 = or i64 %84, 1, !pdg.inst.id !193
DSWP:     Consumer:	  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %93, i64 %92, !pdg.inst.id !212
DSWP:     Consumer:	  %97 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %92, !pdg.inst.id !136
DSWP:    Queue: 5
DSWP:     Producer:	  %99 = or i64 %84, 2, !pdg.inst.id !191
DSWP:     Consumer:	  %101 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %100, i64 %99, !pdg.inst.id !225
DSWP:     Consumer:	  %104 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %99, !pdg.inst.id !134
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = or i64 %84, 3, !pdg.inst.id !189
DSWP:     Consumer:	  %108 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %107, i64 %106, !pdg.inst.id !238
DSWP:     Consumer:	  %111 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %106, !pdg.inst.id !132
DSWP:    Queue: 7
DSWP:     Producer:	  %122 = phi i64 [ %130, %._crit_edge ], [ %117, %.preheader ], !pdg.inst.id !261
DSWP:     Consumer:	  %125 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %122, !pdg.inst.id !268
DSWP:     Consumer:	  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %60, i64 %122, !pdg.inst.id !138
DSWP:    Queue: 8
DSWP:     Producer:	  %33 = icmp sgt i32 %30, 9, !pdg.inst.id !85
DSWP:     Consumer:	  br i1 %33, label %._crit_edge, label %34, !pdg.inst.id !93
DSWP:    Queue: 9
DSWP:     Producer:	  %20 = bitcast i8* %19 to %struct.extbond_t*, !pdg.inst.id !79
DSWP:     Consumer:	  %43 = select i1 %42, %struct.extbond_t* %20, %struct.extbond_t* %17, !pdg.inst.id !59
DSWP:    Queue: 10
DSWP:     Producer:	  %50 = icmp eq %struct.extbond_t* %49, null, !pdg.inst.id !130
DSWP:     Consumer:	  br i1 %50, label %.loopexit, label %15, !pdg.inst.id !132
DSWP:    Queue: 11
DSWP:     Producer:	  %21 = icmp eq i8* %19, null, !pdg.inst.id !77
DSWP:     Consumer:	  br i1 %21, label %22, label %28, !pdg.inst.id !86
DSWP:    Queue: 12
DSWP:     Producer:	  %44 = icmp eq %struct.extbond_t* %18, null, !pdg.inst.id !62
DSWP:     Consumer:	  br i1 %44, label %47, label %45, !pdg.inst.id !125
DSWP:    Queue: 13
DSWP:     Producer:	  %172 = phi i64 [ 0, %167 ], [ %187, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %180 = or i64 %172, 1, !pdg.inst.id !472
DSWP:    Queue: 14
DSWP:     Producer:	  %172 = phi i64 [ 0, %167 ], [ %187, %._crit_edge2 ], !pdg.inst.id !471
DSWP:     Consumer:	  %174 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %172, i64 0, !pdg.inst.id !456
DSWP:     Consumer:	  %176 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %172, i64 0, !pdg.inst.id !302
DSWP:     Consumer:	  %177 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %172, i64 1, !pdg.inst.id !454
DSWP:     Consumer:	  %179 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %172, i64 1, !pdg.inst.id !300
DSWP:    Queue: 15
DSWP:     Producer:	  %180 = or i64 %172, 1, !pdg.inst.id !472
DSWP:     Consumer:	  %181 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %180, i64 0, !pdg.inst.id !448
DSWP:     Consumer:	  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %180, i64 0, !pdg.inst.id !294
DSWP:     Consumer:	  %184 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 %180, i64 1, !pdg.inst.id !446
DSWP:     Consumer:	  %186 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 %180, i64 1, !pdg.inst.id !292
DSWP:    Queue: 16
DSWP:     Producer:	  %283 = phi i64 [ 0, %278 ], [ %326, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     Consumer:	  %305 = or i64 %283, 32, !pdg.inst.id !736
DSWP:    Queue: 17
DSWP:     Producer:	  %305 = or i64 %283, 32, !pdg.inst.id !736
DSWP:     Consumer:	  %306 = getelementptr inbounds i32, i32* %252, i64 %305, !pdg.inst.id !649
DSWP:     Consumer:	  %318 = getelementptr inbounds i32, i32* %256, i64 %305, !pdg.inst.id !674
DSWP:    Queue: 18
DSWP:     Producer:	  %283 = phi i64 [ 0, %278 ], [ %326, %._crit_edge5 ], !pdg.inst.id !735
DSWP:     Consumer:	  %285 = getelementptr inbounds i32, i32* %252, i64 %283, !pdg.inst.id !653
DSWP:     Consumer:	  %297 = getelementptr inbounds i32, i32* %256, i64 %283, !pdg.inst.id !684
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %259 = sext i32 %246 to i64, !pdg.inst.id !634
DSWP:    Pre loop env 2, producer:	  %252 = load i32*, i32** %251, align 8, !tbaa !25643, !pdg.inst.id !647
DSWP:    Pre loop env 3, producer:	  %262 = phi i64 [ 0, %263 ], [ 0, %258 ], [ %272, %353 ], !pdg.inst.id !701
DSWP:    Pre loop env 4, producer:	  %256 = bitcast i8* %57 to i32*, !pdg.inst.id !236
DSWP:  Create 1 pipeline stages
Pipeline stage 0:

define void @61(i8*, i8*) {
  %3 = bitcast i8* %0 to [32 x i64]*
  %4 = bitcast i8* %1 to [19 x i8*]*
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 0
  %6 = load i64, i64* %5
  %7 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 8
  %8 = bitcast i64* %7 to i32**
  %9 = load i32*, i32** %8
  %10 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 16
  %11 = load i64, i64* %10
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %3, i64 0, i64 24
  %13 = bitcast i64* %12 to i32**
  %14 = load i32*, i32** %13
  br label %17

15:                                               ; preds = %16
  ret void

16:                                               ; preds = %17
  br label %15

17:                                               ; preds = %2, %24
  %18 = phi i64 [ %22, %24 ], [ %11, %2 ], !pdg.inst.id !30
  %19 = getelementptr inbounds i32, i32* %9, i64 %18, !pdg.inst.id !31
  %20 = load i32, i32* %19, align 4, !tbaa !32, !pdg.inst.id !36
  %21 = getelementptr inbounds i32, i32* %14, i64 %18, !pdg.inst.id !37
  store i32 %20, i32* %21, align 4, !tbaa !32, !pdg.inst.id !38
  %22 = add nuw nsw i64 %18, 1, !pdg.inst.id !39
  %23 = icmp slt i64 %22, %6, !pdg.inst.id !40
  br i1 %23, label %24, label %16, !llvm.loop !41, !pdg.inst.id !43

24:                                               ; preds = %17
  br label %17, !pdg.inst.id !44
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer:  Link the parallelize loop
Final printout:

; Function Attrs: cold nounwind uwtable
define dso_local %struct.residue_t* @copyresidue(%struct.residue_t*) local_unnamed_addr #2 !prof !30 !pdg.args.id !31 !pdg.edges !33 {
  %2 = alloca [32 x i64]
  %3 = bitcast [32 x i64]* %2 to i8*
  %4 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 0
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 8
  %6 = bitcast i64* %5 to i32**
  %7 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 16
  %8 = getelementptr inbounds [32 x i64], [32 x i64]* %2, i64 0, i64 24
  %9 = bitcast i64* %8 to i32**
  %10 = alloca [32 x i64]
  %11 = bitcast [32 x i64]* %10 to i8*
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 0
  %13 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 8
  %14 = bitcast i64* %13 to i32**
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 16
  %16 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 24
  %17 = bitcast i64* %16 to i32**
  %18 = alloca [24 x i64]
  %19 = bitcast [24 x i64]* %18 to i8*
  %20 = getelementptr inbounds [24 x i64], [24 x i64]* %18, i64 0, i64 0
  %21 = bitcast i64* %20 to i32**
  %22 = getelementptr inbounds [24 x i64], [24 x i64]* %18, i64 0, i64 8
  %23 = bitcast i64* %22 to %struct.chiral_t**
  %24 = getelementptr inbounds [24 x i64], [24 x i64]* %18, i64 0, i64 16
  %25 = bitcast i64* %24 to %struct.chiral_t**
  %26 = alloca [32 x i64]
  %27 = bitcast [32 x i64]* %26 to i8*
  %28 = getelementptr inbounds [32 x i64], [32 x i64]* %26, i64 0, i64 0
  %29 = getelementptr inbounds [32 x i64], [32 x i64]* %26, i64 0, i64 8
  %30 = getelementptr inbounds [32 x i64], [32 x i64]* %26, i64 0, i64 16
  %31 = bitcast i64* %30 to [2 x i32]**
  %32 = getelementptr inbounds [32 x i64], [32 x i64]* %26, i64 0, i64 24
  %33 = bitcast i64* %32 to [2 x i32]**
  %34 = tail call noalias i8* @malloc(i64 128) #48, !pdg.inst.id !58
  %35 = bitcast i8* %34 to %struct.residue_t*, !pdg.inst.id !122
  %36 = icmp eq i8* %34, null, !pdg.inst.id !120
  br i1 %36, label %37, label %46, !prof !25616, !pdg.inst.id !126

37:                                               ; preds = %1
  %38 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !46
  %39 = load i8*, i8** %38, align 8, !tbaa !25617, !pdg.inst.id !128
  %40 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !132
  %41 = getelementptr [15 x i8], [15 x i8]* @.str.25.394, i64 0, i64 0, !pdg.inst.id !134
  %42 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %40, i8* %41, i8* %39) #48, !pdg.inst.id !130
  %43 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !136
  %44 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !139
  %45 = tail call i32 @rt_errormsg_s(i32 1, i8* %43, i8* %44) #48, !pdg.inst.id !137
  br label %557, !pdg.inst.id !24743

46:                                               ; preds = %1
  %47 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 15, !pdg.inst.id !44
  %48 = load i32, i32* %47, align 8, !tbaa !25623, !pdg.inst.id !145
  %49 = sext i32 %48 to i64, !pdg.inst.id !147
  %50 = mul nsw i64 %49, 176, !pdg.inst.id !151
  %51 = tail call noalias i8* @malloc(i64 %50) #48, !pdg.inst.id !153
  %52 = bitcast i8* %51 to %struct.atom_t*, !pdg.inst.id !161
  %53 = icmp eq i8* %51, null, !pdg.inst.id !159
  br i1 %53, label %54, label %63, !prof !25616, !pdg.inst.id !215

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !48
  %56 = load i8*, i8** %55, align 8, !tbaa !25617, !pdg.inst.id !217
  %57 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !221
  %58 = getelementptr [24 x i8], [24 x i8]* @.str.27.395, i64 0, i64 0, !pdg.inst.id !223
  %59 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %57, i8* %58, i8* %56) #48, !pdg.inst.id !219
  %60 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !225
  %61 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !228
  %62 = tail call i32 @rt_errormsg_s(i32 1, i8* %60, i8* %61) #48, !pdg.inst.id !226
  br label %557, !pdg.inst.id !24761

63:                                               ; preds = %46
  %64 = shl nsw i64 %49, 2, !pdg.inst.id !149
  %65 = tail call noalias i8* @malloc(i64 %64) #48, !pdg.inst.id !230
  %66 = icmp eq i8* %65, null, !pdg.inst.id !240
  br i1 %66, label %67, label %76, !prof !25616, !pdg.inst.id !242

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !54
  %69 = load i8*, i8** %68, align 8, !tbaa !25617, !pdg.inst.id !244
  %70 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !248
  %71 = getelementptr [29 x i8], [29 x i8]* @.str.28.396, i64 0, i64 0, !pdg.inst.id !250
  %72 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %70, i8* %71, i8* %69) #48, !pdg.inst.id !246
  %73 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !252
  %74 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !255
  %75 = tail call i32 @rt_errormsg_s(i32 1, i8* %73, i8* %74) #48, !pdg.inst.id !253
  br label %557, !pdg.inst.id !24776

76:                                               ; preds = %63
  %77 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 11, !pdg.inst.id !50
  %78 = load i32, i32* %77, align 8, !tbaa !25624, !pdg.inst.id !259
  %79 = icmp sgt i32 %78, 0, !pdg.inst.id !263
  br i1 %79, label %80, label %95, !prof !25616, !pdg.inst.id !265

80:                                               ; preds = %76
  %81 = sext i32 %78 to i64, !pdg.inst.id !261
  %82 = shl nsw i64 %81, 3, !pdg.inst.id !267
  %83 = tail call noalias i8* @malloc(i64 %82) #48, !pdg.inst.id !269
  %84 = bitcast i8* %83 to [2 x i32]*, !pdg.inst.id !273
  %85 = icmp eq i8* %83, null, !pdg.inst.id !271
  br i1 %85, label %86, label %95, !pdg.inst.id !277

86:                                               ; preds = %80
  %87 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !56
  %88 = load i8*, i8** %87, align 8, !tbaa !25617, !pdg.inst.id !279
  %89 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !283
  %90 = getelementptr [24 x i8], [24 x i8]* @.str.29.397, i64 0, i64 0, !pdg.inst.id !285
  %91 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %89, i8* %90, i8* %88) #48, !pdg.inst.id !281
  %92 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !287
  %93 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !290
  %94 = tail call i32 @rt_errormsg_s(i32 1, i8* %92, i8* %93) #48, !pdg.inst.id !288
  br label %557, !pdg.inst.id !24797

95:                                               ; preds = %76, %80
  %96 = phi [2 x i32]* [ %84, %80 ], [ null, %76 ], !pdg.inst.id !275
  %97 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 13, !pdg.inst.id !63
  %98 = load i32, i32* %97, align 8, !tbaa !25625, !pdg.inst.id !310
  %99 = icmp sgt i32 %98, 0, !pdg.inst.id !314
  br i1 %99, label %100, label %115, !prof !25616, !pdg.inst.id !316

100:                                              ; preds = %95
  %101 = sext i32 %98 to i64, !pdg.inst.id !312
  %102 = mul nsw i64 %101, 24, !pdg.inst.id !318
  %103 = tail call noalias i8* @malloc(i64 %102) #48, !pdg.inst.id !320
  %104 = bitcast i8* %103 to %struct.chiral_t*, !pdg.inst.id !324
  %105 = icmp eq i8* %103, null, !pdg.inst.id !322
  br i1 %105, label %106, label %115, !pdg.inst.id !328

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !65
  %108 = load i8*, i8** %107, align 8, !tbaa !25617, !pdg.inst.id !330
  %109 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !334
  %110 = getelementptr [24 x i8], [24 x i8]* @.str.30.398, i64 0, i64 0, !pdg.inst.id !336
  %111 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %109, i8* %110, i8* %108) #48, !pdg.inst.id !332
  %112 = getelementptr [34 x i8], [34 x i8]* @.str.26.329, i64 0, i64 0, !pdg.inst.id !338
  %113 = getelementptr [256 x i8], [256 x i8]* @e_msg.327, i64 0, i64 0, !pdg.inst.id !340
  %114 = tail call i32 @rt_errormsg_s(i32 1, i8* %112, i8* %113) #48, !pdg.inst.id !117
  br label %557, !pdg.inst.id !24825

115:                                              ; preds = %95, %100
  %116 = phi %struct.chiral_t* [ %104, %100 ], [ null, %95 ], !pdg.inst.id !326
  %117 = bitcast i8* %34 to %struct.residue_t**, !pdg.inst.id !97
  store %struct.residue_t* null, %struct.residue_t** %117, align 8, !tbaa !25626, !pdg.inst.id !346
  %118 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 4, !pdg.inst.id !67
  %119 = load i8*, i8** %118, align 8, !tbaa !25617, !pdg.inst.id !348
  %120 = tail call i64 @strlen(i8* %119) #49, !pdg.inst.id !352
  %121 = add i64 %120, 1, !pdg.inst.id !354
  %122 = tail call noalias i8* @malloc(i64 %121) #48, !pdg.inst.id !356
  %123 = icmp eq i8* %122, null, !pdg.inst.id !361
  br i1 %123, label %124, label %128, !prof !25616, !pdg.inst.id !363

124:                                              ; preds = %115
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !365
  %126 = getelementptr [44 x i8], [44 x i8]* @.str.31.399, i64 0, i64 0, !pdg.inst.id !368
  %127 = tail call i64 @fwrite(i8* %126, i64 43, i64 1, %struct._IO_FILE* %125) #50, !pdg.inst.id !366
  tail call void @exit(i32 1) #51, !pdg.inst.id !1459
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24850

128:                                              ; preds = %115
  %129 = tail call i8* @strcpy(i8* nonnull %122, i8* %119) #48, !pdg.inst.id !350
  %130 = getelementptr inbounds i8, i8* %34, i64 24, !pdg.inst.id !99
  %131 = bitcast i8* %130 to i8**, !pdg.inst.id !370
  store i8* %122, i8** %131, align 8, !tbaa !25617, !pdg.inst.id !359
  %132 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 5, !pdg.inst.id !69
  %133 = load i8*, i8** %132, align 8, !tbaa !25628, !pdg.inst.id !373
  %134 = tail call i64 @strlen(i8* %133) #49, !pdg.inst.id !377
  %135 = add i64 %134, 1, !pdg.inst.id !379
  %136 = tail call noalias i8* @malloc(i64 %135) #48, !pdg.inst.id !381
  %137 = icmp eq i8* %136, null, !pdg.inst.id !386
  br i1 %137, label %138, label %142, !prof !25616, !pdg.inst.id !388

138:                                              ; preds = %128
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !118
  %140 = getelementptr [42 x i8], [42 x i8]* @.str.32.400, i64 0, i64 0, !pdg.inst.id !392
  %141 = tail call i64 @fwrite(i8* %140, i64 41, i64 1, %struct._IO_FILE* %139) #50, !pdg.inst.id !390
  tail call void @exit(i32 1) #51, !pdg.inst.id !1484
  br label %UnifiedUnreachableBlock, !pdg.inst.id !24866

142:                                              ; preds = %128
  %143 = tail call i8* @strcpy(i8* nonnull %136, i8* %133) #48, !pdg.inst.id !375
  %144 = getelementptr inbounds i8, i8* %34, i64 32, !pdg.inst.id !91
  %145 = bitcast i8* %144 to i8**, !pdg.inst.id !394
  store i8* %136, i8** %145, align 8, !tbaa !25628, !pdg.inst.id !384
  %146 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 1, !pdg.inst.id !71
  %147 = load i32, i32* %146, align 8, !tbaa !25629, !pdg.inst.id !397
  %148 = getelementptr inbounds i8, i8* %34, i64 8, !pdg.inst.id !115
  %149 = bitcast i8* %148 to i32*, !pdg.inst.id !401
  store i32 %147, i32* %149, align 8, !tbaa !25629, !pdg.inst.id !399
  %150 = getelementptr inbounds i8, i8* %34, i64 12, !pdg.inst.id !113
  %151 = bitcast i8* %150 to i32*, !pdg.inst.id !404
  store i32 0, i32* %151, align 4, !tbaa !25630, !pdg.inst.id !406
  %152 = getelementptr inbounds i8, i8* %34, i64 16, !pdg.inst.id !111
  %153 = bitcast i8* %152 to i32*, !pdg.inst.id !408
  store i32 0, i32* %153, align 8, !tbaa !25631, !pdg.inst.id !410
  %154 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 6, !pdg.inst.id !73
  %155 = load i32, i32* %154, align 8, !tbaa !25632, !pdg.inst.id !412
  %156 = getelementptr inbounds i8, i8* %34, i64 40, !pdg.inst.id !109
  %157 = bitcast i8* %156 to i32*, !pdg.inst.id !416
  store i32 %155, i32* %157, align 8, !tbaa !25632, !pdg.inst.id !414
  %158 = getelementptr inbounds i8, i8* %34, i64 56, !pdg.inst.id !107
  %159 = bitcast i8* %158 to %struct.strand_t**, !pdg.inst.id !419
  store %struct.strand_t* null, %struct.strand_t** %159, align 8, !tbaa !25633, !pdg.inst.id !421
  %160 = tail call %struct.extbond_t* @copyextbonds(%struct.residue_t* nonnull %0) #48, !pdg.inst.id !35
  %161 = getelementptr inbounds i8, i8* %34, i64 64, !pdg.inst.id !105
  %162 = bitcast i8* %161 to %struct.extbond_t**, !pdg.inst.id !425
  store %struct.extbond_t* %160, %struct.extbond_t** %162, align 8, !tbaa !25634, !pdg.inst.id !423
  %163 = load i32, i32* %77, align 8, !tbaa !25624, !pdg.inst.id !257
  %164 = getelementptr inbounds i8, i8* %34, i64 72, !pdg.inst.id !103
  %165 = bitcast i8* %164 to i32*, !pdg.inst.id !436
  store i32 %163, i32* %165, align 8, !tbaa !25624, !pdg.inst.id !434
  %166 = getelementptr inbounds i8, i8* %34, i64 80, !pdg.inst.id !101
  %167 = bitcast i8* %166 to [2 x i32]**, !pdg.inst.id !439
  store [2 x i32]* %96, [2 x i32]** %167, align 8, !tbaa !25635, !pdg.inst.id !304
  %168 = icmp sgt i32 %163, 0, !pdg.inst.id !432
  br i1 %168, label %169, label %208, !prof !25616, !pdg.inst.id !442

169:                                              ; preds = %142
  %170 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 12, !pdg.inst.id !75
  %171 = load [2 x i32]*, [2 x i32]** %170, align 8, !tbaa !25635, !pdg.inst.id !444
  %172 = sext i32 %163 to i64, !pdg.inst.id !430
  %173 = and i64 %172, 1, !pdg.inst.id !462
  %174 = icmp eq i32 %163, 1, !pdg.inst.id !428
  br i1 %174, label %198, label %175, !pdg.inst.id !467

175:                                              ; preds = %169
  %176 = sub nsw i64 %172, %173, !pdg.inst.id !460
  %177 = load i32, i32* @22
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %559, label %179

179:                                              ; preds = %175, %._crit_edge2
  %180 = phi i64 [ 0, %175 ], [ %195, %._crit_edge2 ], !pdg.inst.id !471
  %181 = phi i64 [ %176, %175 ], [ %196, %._crit_edge2 ], !pdg.inst.id !469
  %182 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 %180, i64 0, !pdg.inst.id !456
  %183 = load i32, i32* %182, align 4, !tbaa !25636, !pdg.inst.id !482
  %184 = getelementptr inbounds [2 x i32], [2 x i32]* %96, i64 %180, i64 0, !pdg.inst.id !302
  store i32 %183, i32* %184, align 4, !tbaa !25636, !pdg.inst.id !484
  %185 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 %180, i64 1, !pdg.inst.id !454
  %186 = load i32, i32* %185, align 4, !tbaa !25636, !pdg.inst.id !487
  %187 = getelementptr inbounds [2 x i32], [2 x i32]* %96, i64 %180, i64 1, !pdg.inst.id !300
  store i32 %186, i32* %187, align 4, !tbaa !25636, !pdg.inst.id !489
  %188 = or i64 %180, 1, !pdg.inst.id !472
  %189 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 %188, i64 0, !pdg.inst.id !448
  %190 = load i32, i32* %189, align 4, !tbaa !25636, !pdg.inst.id !496
  %191 = getelementptr inbounds [2 x i32], [2 x i32]* %96, i64 %188, i64 0, !pdg.inst.id !294
  store i32 %190, i32* %191, align 4, !tbaa !25636, !pdg.inst.id !498
  %192 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 %188, i64 1, !pdg.inst.id !446
  %193 = load i32, i32* %192, align 4, !tbaa !25636, !pdg.inst.id !501
  %194 = getelementptr inbounds [2 x i32], [2 x i32]* %96, i64 %188, i64 1, !pdg.inst.id !292
  store i32 %193, i32* %194, align 4, !tbaa !25636, !pdg.inst.id !503
  %195 = add nuw nsw i64 %180, 2, !pdg.inst.id !474
  %196 = add i64 %181, -2, !pdg.inst.id !480
  %197 = icmp eq i64 %196, 0, !pdg.inst.id !509
  br i1 %197, label %.loopexit6, label %._crit_edge2, !pdg.inst.id !512

._crit_edge2:                                     ; preds = %179
  br label %179, !pdg.inst.id !24953

.loopexit6:                                       ; preds = %587, %179
  %.lcssa15 = phi i64 [ %195, %179 ], [ %586, %587 ], !pdg.inst.id !506
  br label %198, !pdg.inst.id !24956

198:                                              ; preds = %.loopexit6, %169
  %199 = phi i64 [ 0, %169 ], [ %.lcssa15, %.loopexit6 ], !pdg.inst.id !514
  %200 = icmp eq i64 %173, 0, !pdg.inst.id !465
  br i1 %200, label %208, label %201, !pdg.inst.id !520

201:                                              ; preds = %198
  %202 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 %199, i64 0, !pdg.inst.id !452
  %203 = load i32, i32* %202, align 4, !tbaa !25636, !pdg.inst.id !522
  %204 = getelementptr inbounds [2 x i32], [2 x i32]* %96, i64 %199, i64 0, !pdg.inst.id !298
  store i32 %203, i32* %204, align 4, !tbaa !25636, !pdg.inst.id !524
  %205 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 %199, i64 1, !pdg.inst.id !450
  %206 = load i32, i32* %205, align 4, !tbaa !25636, !pdg.inst.id !527
  %207 = getelementptr inbounds [2 x i32], [2 x i32]* %96, i64 %199, i64 1, !pdg.inst.id !296
  store i32 %206, i32* %207, align 4, !tbaa !25636, !pdg.inst.id !529
  br label %208, !pdg.inst.id !24969

208:                                              ; preds = %201, %198, %142
  %209 = load i32, i32* %97, align 8, !tbaa !25625, !pdg.inst.id !308
  %210 = getelementptr inbounds i8, i8* %34, i64 88, !pdg.inst.id !95
  %211 = bitcast i8* %210 to i32*, !pdg.inst.id !536
  store i32 %209, i32* %211, align 8, !tbaa !25625, !pdg.inst.id !534
  %212 = getelementptr inbounds i8, i8* %34, i64 96, !pdg.inst.id !93
  %213 = bitcast i8* %212 to %struct.chiral_t**, !pdg.inst.id !539
  store %struct.chiral_t* %116, %struct.chiral_t** %213, align 8, !tbaa !25637, !pdg.inst.id !344
  %214 = icmp sgt i32 %209, 0, !pdg.inst.id !532
  br i1 %214, label %215, label %245, !prof !25616, !pdg.inst.id !542

215:                                              ; preds = %208
  %216 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 14, !pdg.inst.id !77
  %217 = load %struct.chiral_t*, %struct.chiral_t** %216, align 8, !tbaa !25637, !pdg.inst.id !544
  %218 = load i32, i32* @23
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %588, label %220

220:                                              ; preds = %215, %._crit_edge
  %221 = phi i64 [ 0, %215 ], [ %240, %._crit_edge ], !pdg.inst.id !556
  %222 = phi %struct.chiral_t* [ %116, %215 ], [ %241, %._crit_edge ], !pdg.inst.id !342
  %223 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %217, i64 %221, i32 0, i64 0, !pdg.inst.id !554
  %224 = load i32, i32* %223, align 4, !tbaa !25636, !pdg.inst.id !576
  %225 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %222, i64 0, i32 0, i64 0, !pdg.inst.id !574
  store i32 %224, i32* %225, align 4, !tbaa !25636, !pdg.inst.id !578
  %226 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %217, i64 %221, i32 0, i64 1, !pdg.inst.id !550
  %227 = load i32, i32* %226, align 4, !tbaa !25636, !pdg.inst.id !581
  %228 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %222, i64 0, i32 0, i64 1, !pdg.inst.id !568
  store i32 %227, i32* %228, align 4, !tbaa !25636, !pdg.inst.id !583
  %229 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %217, i64 %221, i32 0, i64 2, !pdg.inst.id !548
  %230 = load i32, i32* %229, align 4, !tbaa !25636, !pdg.inst.id !586
  %231 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %222, i64 0, i32 0, i64 2, !pdg.inst.id !566
  store i32 %230, i32* %231, align 4, !tbaa !25636, !pdg.inst.id !588
  %232 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %217, i64 %221, i32 0, i64 3, !pdg.inst.id !546
  %233 = load i32, i32* %232, align 4, !tbaa !25636, !pdg.inst.id !591
  %234 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %222, i64 0, i32 0, i64 3, !pdg.inst.id !564
  store i32 %233, i32* %234, align 4, !tbaa !25636, !pdg.inst.id !593
  %235 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %217, i64 %221, i32 1, !pdg.inst.id !552
  %236 = bitcast double* %235 to i64*, !pdg.inst.id !596
  %237 = load i64, i64* %236, align 8, !tbaa !25638, !pdg.inst.id !598
  %238 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %222, i64 0, i32 1, !pdg.inst.id !570
  %239 = bitcast double* %238 to i64*, !pdg.inst.id !602
  store i64 %237, i64* %239, align 8, !tbaa !25638, !pdg.inst.id !600
  %240 = add nuw nsw i64 %221, 1, !pdg.inst.id !562
  %241 = getelementptr inbounds %struct.chiral_t, %struct.chiral_t* %222, i64 1, !pdg.inst.id !572
  %242 = load i32, i32* %97, align 8, !tbaa !25625, !pdg.inst.id !306
  %243 = sext i32 %242 to i64, !pdg.inst.id !609
  %244 = icmp slt i64 %240, %243, !pdg.inst.id !605
  br i1 %244, label %._crit_edge, label %.loopexit5, !pdg.inst.id !612

._crit_edge:                                      ; preds = %220
  br label %220, !pdg.inst.id !25042

.loopexit5:                                       ; preds = %611, %220
  br label %245, !pdg.inst.id !25044

245:                                              ; preds = %.loopexit5, %208
  %246 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 7, !pdg.inst.id !52
  %247 = load i32, i32* %246, align 4, !tbaa !25641, !pdg.inst.id !614
  %248 = getelementptr inbounds i8, i8* %34, i64 44, !pdg.inst.id !89
  %249 = bitcast i8* %248 to i32*, !pdg.inst.id !618
  store i32 %247, i32* %249, align 4, !tbaa !25641, !pdg.inst.id !616
  %250 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 8, !pdg.inst.id !61
  %251 = load i32, i32* %250, align 8, !tbaa !25642, !pdg.inst.id !621
  %252 = getelementptr inbounds i8, i8* %34, i64 48, !pdg.inst.id !87
  %253 = bitcast i8* %252 to i32*, !pdg.inst.id !625
  store i32 %251, i32* %253, align 8, !tbaa !25642, !pdg.inst.id !623
  %254 = load i32, i32* %47, align 8, !tbaa !25623, !pdg.inst.id !143
  %255 = getelementptr inbounds i8, i8* %34, i64 104, !pdg.inst.id !85
  %256 = bitcast i8* %255 to i32*, !pdg.inst.id !641
  store i32 %254, i32* %256, align 8, !tbaa !25623, !pdg.inst.id !638
  %257 = getelementptr inbounds i8, i8* %34, i64 112, !pdg.inst.id !83
  %258 = bitcast i8* %257 to i8**, !pdg.inst.id !644
  store i8* %65, i8** %258, align 8, !tbaa !25643, !pdg.inst.id !238
  %259 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 16, !pdg.inst.id !40
  %260 = load i32*, i32** %259, align 8, !tbaa !25643, !pdg.inst.id !647
  %261 = bitcast i32* %260 to i8*, !pdg.inst.id !657
  %262 = icmp eq i32* %260, null, !pdg.inst.id !662
  %263 = icmp sgt i32 %254, 0, !pdg.inst.id !636
  %264 = bitcast i8* %65 to i32*, !pdg.inst.id !236
  br i1 %262, label %365, label %265, !prof !25644, !pdg.inst.id !666

265:                                              ; preds = %245
  br i1 %263, label %266, label %443, !pdg.inst.id !670

266:                                              ; preds = %265
  %267 = sext i32 %254 to i64, !pdg.inst.id !634
  %268 = icmp ult i32 %254, 32, !pdg.inst.id !630
  br i1 %268, label %269, label %273, !pdg.inst.id !699

269:                                              ; preds = %363, %273, %266
  %270 = phi i64 [ 0, %273 ], [ 0, %266 ], [ %282, %363 ], !pdg.inst.id !701
  %271 = load i32, i32* @25
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %644, label %430

273:                                              ; preds = %266
  %274 = shl nsw i64 %267, 2, !pdg.inst.id !695
  %275 = getelementptr i8, i8* %65, i64 %274, !pdg.inst.id !234
  %276 = getelementptr i32, i32* %260, i64 %267, !pdg.inst.id !655
  %277 = bitcast i32* %276 to i8*, !pdg.inst.id !706
  %278 = icmp ult i8* %65, %277, !pdg.inst.id !232
  %279 = icmp ugt i8* %275, %261, !pdg.inst.id !664
  %280 = and i1 %278, %279, !pdg.inst.id !709
  br i1 %280, label %269, label %281, !pdg.inst.id !712

281:                                              ; preds = %273
  %282 = and i64 %267, -32, !pdg.inst.id !692
  %283 = add nsw i64 %282, -32, !pdg.inst.id !714
  %284 = lshr exact i64 %283, 5, !pdg.inst.id !720
  %285 = add nuw nsw i64 %284, 1, !pdg.inst.id !722
  %286 = and i64 %285, 1, !pdg.inst.id !726
  %287 = icmp eq i64 %283, 0, !pdg.inst.id !718
  br i1 %287, label %339, label %288, !pdg.inst.id !731

288:                                              ; preds = %281
  %289 = sub nuw nsw i64 %285, %286, !pdg.inst.id !724
  %290 = load i32, i32* @24
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %612, label %292

292:                                              ; preds = %288, %._crit_edge5
  %293 = phi i64 [ 0, %288 ], [ %336, %._crit_edge5 ], !pdg.inst.id !735
  %294 = phi i64 [ %289, %288 ], [ %337, %._crit_edge5 ], !pdg.inst.id !733
  %295 = getelementptr inbounds i32, i32* %260, i64 %293, !pdg.inst.id !653
  %296 = bitcast i32* %295 to <8 x i32>*, !pdg.inst.id !744
  %297 = load <8 x i32>, <8 x i32>* %296, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !752
  %298 = getelementptr inbounds i32, i32* %295, i64 8, !pdg.inst.id !750
  %299 = bitcast i32* %298 to <8 x i32>*, !pdg.inst.id !756
  %300 = load <8 x i32>, <8 x i32>* %299, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !758
  %301 = getelementptr inbounds i32, i32* %295, i64 16, !pdg.inst.id !748
  %302 = bitcast i32* %301 to <8 x i32>*, !pdg.inst.id !762
  %303 = load <8 x i32>, <8 x i32>* %302, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !764
  %304 = getelementptr inbounds i32, i32* %295, i64 24, !pdg.inst.id !746
  %305 = bitcast i32* %304 to <8 x i32>*, !pdg.inst.id !768
  %306 = load <8 x i32>, <8 x i32>* %305, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !770
  %307 = getelementptr inbounds i32, i32* %264, i64 %293, !pdg.inst.id !684
  %308 = bitcast i32* %307 to <8 x i32>*, !pdg.inst.id !774
  store <8 x i32> %297, <8 x i32>* %308, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !754
  %309 = getelementptr inbounds i32, i32* %307, i64 8, !pdg.inst.id !780
  %310 = bitcast i32* %309 to <8 x i32>*, !pdg.inst.id !783
  store <8 x i32> %300, <8 x i32>* %310, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !760
  %311 = getelementptr inbounds i32, i32* %307, i64 16, !pdg.inst.id !778
  %312 = bitcast i32* %311 to <8 x i32>*, !pdg.inst.id !786
  store <8 x i32> %303, <8 x i32>* %312, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !766
  %313 = getelementptr inbounds i32, i32* %307, i64 24, !pdg.inst.id !776
  %314 = bitcast i32* %313 to <8 x i32>*, !pdg.inst.id !789
  store <8 x i32> %306, <8 x i32>* %314, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !772
  %315 = or i64 %293, 32, !pdg.inst.id !736
  %316 = getelementptr inbounds i32, i32* %260, i64 %315, !pdg.inst.id !649
  %317 = bitcast i32* %316 to <8 x i32>*, !pdg.inst.id !800
  %318 = load <8 x i32>, <8 x i32>* %317, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !802
  %319 = getelementptr inbounds i32, i32* %316, i64 8, !pdg.inst.id !798
  %320 = bitcast i32* %319 to <8 x i32>*, !pdg.inst.id !806
  %321 = load <8 x i32>, <8 x i32>* %320, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !808
  %322 = getelementptr inbounds i32, i32* %316, i64 16, !pdg.inst.id !796
  %323 = bitcast i32* %322 to <8 x i32>*, !pdg.inst.id !812
  %324 = load <8 x i32>, <8 x i32>* %323, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !814
  %325 = getelementptr inbounds i32, i32* %316, i64 24, !pdg.inst.id !794
  %326 = bitcast i32* %325 to <8 x i32>*, !pdg.inst.id !818
  %327 = load <8 x i32>, <8 x i32>* %326, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !820
  %328 = getelementptr inbounds i32, i32* %264, i64 %315, !pdg.inst.id !674
  %329 = bitcast i32* %328 to <8 x i32>*, !pdg.inst.id !830
  store <8 x i32> %318, <8 x i32>* %329, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !804
  %330 = getelementptr inbounds i32, i32* %328, i64 8, !pdg.inst.id !828
  %331 = bitcast i32* %330 to <8 x i32>*, !pdg.inst.id !833
  store <8 x i32> %321, <8 x i32>* %331, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !810
  %332 = getelementptr inbounds i32, i32* %328, i64 16, !pdg.inst.id !826
  %333 = bitcast i32* %332 to <8 x i32>*, !pdg.inst.id !836
  store <8 x i32> %324, <8 x i32>* %333, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !816
  %334 = getelementptr inbounds i32, i32* %328, i64 24, !pdg.inst.id !824
  %335 = bitcast i32* %334 to <8 x i32>*, !pdg.inst.id !839
  store <8 x i32> %327, <8 x i32>* %335, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !822
  %336 = add i64 %293, 64, !pdg.inst.id !738
  %337 = add i64 %294, -2, !pdg.inst.id !742
  %338 = icmp eq i64 %337, 0, !pdg.inst.id !845
  br i1 %338, label %.loopexit4, label %._crit_edge5, !llvm.loop !25650, !pdg.inst.id !848

._crit_edge5:                                     ; preds = %292
  br label %292, !pdg.inst.id !25211

.loopexit4:                                       ; preds = %643, %292
  %.lcssa14 = phi i64 [ %336, %292 ], [ %642, %643 ], !pdg.inst.id !842
  br label %339, !pdg.inst.id !25214

339:                                              ; preds = %.loopexit4, %281
  %340 = phi i64 [ 0, %281 ], [ %.lcssa14, %.loopexit4 ], !pdg.inst.id !850
  %341 = icmp eq i64 %286, 0, !pdg.inst.id !729
  br i1 %341, label %363, label %342, !pdg.inst.id !854

342:                                              ; preds = %339
  %343 = getelementptr inbounds i32, i32* %260, i64 %340, !pdg.inst.id !651
  %344 = bitcast i32* %343 to <8 x i32>*, !pdg.inst.id !862
  %345 = load <8 x i32>, <8 x i32>* %344, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !864
  %346 = getelementptr inbounds i32, i32* %343, i64 8, !pdg.inst.id !860
  %347 = bitcast i32* %346 to <8 x i32>*, !pdg.inst.id !868
  %348 = load <8 x i32>, <8 x i32>* %347, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !870
  %349 = getelementptr inbounds i32, i32* %343, i64 16, !pdg.inst.id !858
  %350 = bitcast i32* %349 to <8 x i32>*, !pdg.inst.id !874
  %351 = load <8 x i32>, <8 x i32>* %350, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !876
  %352 = getelementptr inbounds i32, i32* %343, i64 24, !pdg.inst.id !856
  %353 = bitcast i32* %352 to <8 x i32>*, !pdg.inst.id !880
  %354 = load <8 x i32>, <8 x i32>* %353, align 4, !tbaa !25636, !alias.scope !25645, !pdg.inst.id !882
  %355 = getelementptr inbounds i32, i32* %264, i64 %340, !pdg.inst.id !676
  %356 = bitcast i32* %355 to <8 x i32>*, !pdg.inst.id !892
  store <8 x i32> %345, <8 x i32>* %356, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !866
  %357 = getelementptr inbounds i32, i32* %355, i64 8, !pdg.inst.id !890
  %358 = bitcast i32* %357 to <8 x i32>*, !pdg.inst.id !895
  store <8 x i32> %348, <8 x i32>* %358, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !872
  %359 = getelementptr inbounds i32, i32* %355, i64 16, !pdg.inst.id !888
  %360 = bitcast i32* %359 to <8 x i32>*, !pdg.inst.id !898
  store <8 x i32> %351, <8 x i32>* %360, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !878
  %361 = getelementptr inbounds i32, i32* %355, i64 24, !pdg.inst.id !886
  %362 = bitcast i32* %361 to <8 x i32>*, !pdg.inst.id !901
  store <8 x i32> %354, <8 x i32>* %362, align 4, !tbaa !25636, !alias.scope !25648, !noalias !25645, !pdg.inst.id !884
  br label %363, !pdg.inst.id !25243

363:                                              ; preds = %339, %342
  %364 = icmp eq i64 %282, %267, !pdg.inst.id !690
  br i1 %364, label %446, label %269, !pdg.inst.id !904

365:                                              ; preds = %245
  br i1 %263, label %366, label %443, !prof !25644, !pdg.inst.id !672

366:                                              ; preds = %365
  %367 = sext i32 %254 to i64, !pdg.inst.id !632
  %368 = icmp ult i32 %254, 32, !pdg.inst.id !628
  br i1 %368, label %369, label %371, !prof !25644, !pdg.inst.id !912

369:                                              ; preds = %428, %366
  %370 = phi i64 [ 0, %366 ], [ %372, %428 ], !pdg.inst.id !914
  br label %437, !pdg.inst.id !25252

371:                                              ; preds = %366
  %372 = and i64 %367, -32, !pdg.inst.id !908
  %373 = add nsw i64 %372, -32, !pdg.inst.id !917
  %374 = lshr exact i64 %373, 5, !pdg.inst.id !923
  %375 = add nuw nsw i64 %374, 1, !pdg.inst.id !925
  %376 = and i64 %375, 1, !pdg.inst.id !929
  %377 = icmp eq i64 %373, 0, !pdg.inst.id !921
  br i1 %377, label %412, label %378, !pdg.inst.id !934

378:                                              ; preds = %371
  %379 = sub nuw nsw i64 %375, %376, !pdg.inst.id !927
  br label %380, !pdg.inst.id !25267

380:                                              ; preds = %._crit_edge4, %378
  %381 = phi i64 [ 0, %378 ], [ %408, %._crit_edge4 ], !pdg.inst.id !938
  %382 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %378 ], [ %409, %._crit_edge4 ], !pdg.inst.id !944
  %383 = phi i64 [ %379, %378 ], [ %410, %._crit_edge4 ], !pdg.inst.id !936
  %384 = getelementptr inbounds i32, i32* %264, i64 %381, !pdg.inst.id !682
  %385 = add <8 x i32> %382, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !961
  %386 = add <8 x i32> %382, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !957
  %387 = add <8 x i32> %382, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !955
  %388 = bitcast i32* %384 to <8 x i32>*, !pdg.inst.id !965
  store <8 x i32> %382, <8 x i32>* %388, align 4, !tbaa !25636, !pdg.inst.id !959
  %389 = getelementptr inbounds i32, i32* %384, i64 8, !pdg.inst.id !971
  %390 = bitcast i32* %389 to <8 x i32>*, !pdg.inst.id !980
  store <8 x i32> %385, <8 x i32>* %390, align 4, !tbaa !25636, !pdg.inst.id !973
  %391 = getelementptr inbounds i32, i32* %384, i64 16, !pdg.inst.id !969
  %392 = bitcast i32* %391 to <8 x i32>*, !pdg.inst.id !983
  store <8 x i32> %386, <8 x i32>* %392, align 4, !tbaa !25636, !pdg.inst.id !975
  %393 = getelementptr inbounds i32, i32* %384, i64 24, !pdg.inst.id !967
  %394 = bitcast i32* %393 to <8 x i32>*, !pdg.inst.id !986
  store <8 x i32> %387, <8 x i32>* %394, align 4, !tbaa !25636, !pdg.inst.id !977
  %395 = or i64 %381, 32, !pdg.inst.id !939
  %396 = add <8 x i32> %382, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !pdg.inst.id !953
  %397 = getelementptr inbounds i32, i32* %264, i64 %395, !pdg.inst.id !678
  %398 = add <8 x i32> %382, <i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40>, !pdg.inst.id !951
  %399 = add <8 x i32> %382, <i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48>, !pdg.inst.id !949
  %400 = add <8 x i32> %382, <i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56>, !pdg.inst.id !947
  %401 = bitcast i32* %397 to <8 x i32>*, !pdg.inst.id !998
  store <8 x i32> %396, <8 x i32>* %401, align 4, !tbaa !25636, !pdg.inst.id !990
  %402 = getelementptr inbounds i32, i32* %397, i64 8, !pdg.inst.id !996
  %403 = bitcast i32* %402 to <8 x i32>*, !pdg.inst.id !1007
  store <8 x i32> %398, <8 x i32>* %403, align 4, !tbaa !25636, !pdg.inst.id !1000
  %404 = getelementptr inbounds i32, i32* %397, i64 16, !pdg.inst.id !994
  %405 = bitcast i32* %404 to <8 x i32>*, !pdg.inst.id !1010
  store <8 x i32> %399, <8 x i32>* %405, align 4, !tbaa !25636, !pdg.inst.id !1002
  %406 = getelementptr inbounds i32, i32* %397, i64 24, !pdg.inst.id !992
  %407 = bitcast i32* %406 to <8 x i32>*, !pdg.inst.id !1013
  store <8 x i32> %400, <8 x i32>* %407, align 4, !tbaa !25636, !pdg.inst.id !1004
  %408 = add i64 %381, 64, !pdg.inst.id !941
  %409 = add <8 x i32> %382, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>, !pdg.inst.id !945
  %410 = add i64 %383, -2, !pdg.inst.id !963
  %411 = icmp eq i64 %410, 0, !pdg.inst.id !1022
  br i1 %411, label %.loopexit2, label %._crit_edge4, !llvm.loop !25652, !pdg.inst.id !1025

._crit_edge4:                                     ; preds = %380
  br label %380, !pdg.inst.id !25349

.loopexit2:                                       ; preds = %380
  %.lcssa13 = phi i64 [ %408, %380 ], !pdg.inst.id !1016
  %.lcssa = phi <8 x i32> [ %409, %380 ], !pdg.inst.id !1019
  br label %412, !pdg.inst.id !25353

412:                                              ; preds = %.loopexit2, %371
  %413 = phi i64 [ 0, %371 ], [ %.lcssa13, %.loopexit2 ], !pdg.inst.id !1027
  %414 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %371 ], [ %.lcssa, %.loopexit2 ], !pdg.inst.id !1029
  %415 = icmp eq i64 %376, 0, !pdg.inst.id !932
  br i1 %415, label %428, label %416, !pdg.inst.id !1040

416:                                              ; preds = %412
  %417 = getelementptr inbounds i32, i32* %264, i64 %413, !pdg.inst.id !680
  %418 = add <8 x i32> %414, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !1032
  %419 = add <8 x i32> %414, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !1034
  %420 = add <8 x i32> %414, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !1036
  %421 = bitcast i32* %417 to <8 x i32>*, !pdg.inst.id !1048
  store <8 x i32> %414, <8 x i32>* %421, align 4, !tbaa !25636, !pdg.inst.id !1038
  %422 = getelementptr inbounds i32, i32* %417, i64 8, !pdg.inst.id !1046
  %423 = bitcast i32* %422 to <8 x i32>*, !pdg.inst.id !1057
  store <8 x i32> %418, <8 x i32>* %423, align 4, !tbaa !25636, !pdg.inst.id !1050
  %424 = getelementptr inbounds i32, i32* %417, i64 16, !pdg.inst.id !1044
  %425 = bitcast i32* %424 to <8 x i32>*, !pdg.inst.id !1060
  store <8 x i32> %419, <8 x i32>* %425, align 4, !tbaa !25636, !pdg.inst.id !1052
  %426 = getelementptr inbounds i32, i32* %417, i64 24, !pdg.inst.id !1042
  %427 = bitcast i32* %426 to <8 x i32>*, !pdg.inst.id !1063
  store <8 x i32> %420, <8 x i32>* %427, align 4, !tbaa !25636, !pdg.inst.id !1054
  br label %428, !pdg.inst.id !25364

428:                                              ; preds = %412, %416
  %429 = icmp eq i64 %372, %367, !pdg.inst.id !906
  br i1 %429, label %446, label %369, !pdg.inst.id !1066

430:                                              ; preds = %269, %._crit_edge1
  %431 = phi i64 [ %435, %._crit_edge1 ], [ %270, %269 ], !pdg.inst.id !702
  %432 = getelementptr inbounds i32, i32* %260, i64 %431, !pdg.inst.id !659
  %433 = load i32, i32* %432, align 4, !tbaa !25636, !pdg.inst.id !1072
  %434 = getelementptr inbounds i32, i32* %264, i64 %431, !pdg.inst.id !688
  store i32 %433, i32* %434, align 4, !tbaa !25636, !pdg.inst.id !1074
  %435 = add nuw nsw i64 %431, 1, !pdg.inst.id !1070
  %436 = icmp slt i64 %435, %267, !pdg.inst.id !697
  br i1 %436, label %._crit_edge1, label %.loopexit3, !llvm.loop !25653, !pdg.inst.id !1079

._crit_edge1:                                     ; preds = %430
  br label %430, !pdg.inst.id !25085

437:                                              ; preds = %._crit_edge3, %369
  %438 = phi i64 [ %441, %._crit_edge3 ], [ %370, %369 ], !pdg.inst.id !915
  %439 = getelementptr inbounds i32, i32* %264, i64 %438, !pdg.inst.id !686
  %440 = trunc i64 %438 to i32, !pdg.inst.id !1081
  store i32 %440, i32* %439, align 4, !tbaa !25636, !pdg.inst.id !1086
  %441 = add nuw nsw i64 %438, 1, !pdg.inst.id !1084
  %442 = icmp slt i64 %441, %367, !pdg.inst.id !910
  br i1 %442, label %._crit_edge3, label %.loopexit1, !prof !25654, !llvm.loop !25655, !pdg.inst.id !1091

._crit_edge3:                                     ; preds = %437
  br label %437, !pdg.inst.id !25424

443:                                              ; preds = %265, %365
  %444 = getelementptr inbounds i8, i8* %34, i64 120, !pdg.inst.id !59
  %445 = bitcast i8* %444 to i8**, !pdg.inst.id !1093
  store i8* %51, i8** %445, align 8, !tbaa !25657, !pdg.inst.id !155
  br label %557, !pdg.inst.id !25429

.loopexit1:                                       ; preds = %437
  br label %446, !pdg.inst.id !25435

.loopexit3:                                       ; preds = %670, %430
  br label %446, !pdg.inst.id !25438

446:                                              ; preds = %.loopexit3, %.loopexit1, %363, %428
  %447 = getelementptr inbounds i8, i8* %34, i64 120, !pdg.inst.id !81
  %448 = bitcast i8* %447 to i8**, !pdg.inst.id !1096
  store i8* %51, i8** %448, align 8, !tbaa !25657, !pdg.inst.id !157
  br i1 %263, label %449, label %557, !prof !25644, !pdg.inst.id !668

449:                                              ; preds = %446
  %450 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %0, i64 0, i32 17, !pdg.inst.id !42
  br label %451, !pdg.inst.id !25451

451:                                              ; preds = %449, %464
  %452 = phi i64 [ 0, %449 ], [ %553, %464 ], !pdg.inst.id !1103
  %453 = load %struct.atom_t*, %struct.atom_t** %450, align 8, !tbaa !25657, !pdg.inst.id !1101
  %454 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %453, i64 %452, i32 0, !pdg.inst.id !1104
  %455 = load i8*, i8** %454, align 8, !tbaa !25658, !pdg.inst.id !1179
  %456 = tail call i64 @strlen(i8* %455) #49, !pdg.inst.id !1181
  %457 = add i64 %456, 1, !pdg.inst.id !1183
  %458 = tail call noalias i8* @malloc(i64 %457) #48, !pdg.inst.id !1185
  %459 = icmp eq i8* %458, null, !pdg.inst.id !1191
  br i1 %459, label %460, label %464, !prof !25660, !pdg.inst.id !1193

460:                                              ; preds = %451
  %461 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25627, !pdg.inst.id !1195
  %462 = getelementptr [34 x i8], [34 x i8]* @.str.33.401, i64 0, i64 0, !pdg.inst.id !1198
  %463 = tail call i64 @fwrite(i8* %462, i64 33, i64 1, %struct._IO_FILE* %461) #50, !pdg.inst.id !1196
  tail call void @exit(i32 1) #51, !pdg.inst.id !1647
  br label %UnifiedUnreachableBlock, !pdg.inst.id !25476

464:                                              ; preds = %451
  %465 = load i8*, i8** %454, align 8, !tbaa !25658, !pdg.inst.id !1177
  %466 = tail call i8* @strcpy(i8* nonnull %458, i8* %465) #48, !pdg.inst.id !1187
  %467 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 0, !pdg.inst.id !179
  store i8* %458, i8** %467, align 8, !tbaa !25658, !pdg.inst.id !1189
  %468 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 1, !pdg.inst.id !213
  store i8* null, i8** %468, align 8, !tbaa !25661, !pdg.inst.id !1202
  %469 = load %struct.atom_t*, %struct.atom_t** %450, align 8, !tbaa !25657, !pdg.inst.id !1099
  %470 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 2, !pdg.inst.id !1107
  %471 = load i32, i32* %470, align 8, !tbaa !25662, !pdg.inst.id !1225
  %472 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 2, !pdg.inst.id !211
  store i32 %471, i32* %472, align 8, !tbaa !25662, !pdg.inst.id !1227
  %473 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 3, !pdg.inst.id !1110
  %474 = load i32, i32* %473, align 4, !tbaa !25663, !pdg.inst.id !1230
  %475 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 3, !pdg.inst.id !209
  store i32 %474, i32* %475, align 4, !tbaa !25663, !pdg.inst.id !1232
  %476 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 0, !pdg.inst.id !1149
  %477 = load i32, i32* %476, align 4, !tbaa !25636, !pdg.inst.id !1235
  %478 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 0, !pdg.inst.id !181
  store i32 %477, i32* %478, align 4, !tbaa !25636, !pdg.inst.id !1237
  %479 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 1, !pdg.inst.id !1153
  %480 = load i32, i32* %479, align 4, !tbaa !25636, !pdg.inst.id !1240
  %481 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 1, !pdg.inst.id !177
  store i32 %480, i32* %481, align 4, !tbaa !25636, !pdg.inst.id !1242
  %482 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 2, !pdg.inst.id !1156
  %483 = load i32, i32* %482, align 4, !tbaa !25636, !pdg.inst.id !1245
  %484 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 2, !pdg.inst.id !173
  store i32 %483, i32* %484, align 4, !tbaa !25636, !pdg.inst.id !1247
  %485 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 3, !pdg.inst.id !1159
  %486 = load i32, i32* %485, align 4, !tbaa !25636, !pdg.inst.id !1250
  %487 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 3, !pdg.inst.id !171
  store i32 %486, i32* %487, align 4, !tbaa !25636, !pdg.inst.id !1252
  %488 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 4, !pdg.inst.id !1162
  %489 = load i32, i32* %488, align 4, !tbaa !25636, !pdg.inst.id !1255
  %490 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 4, !pdg.inst.id !169
  store i32 %489, i32* %490, align 4, !tbaa !25636, !pdg.inst.id !1257
  %491 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 5, !pdg.inst.id !1165
  %492 = load i32, i32* %491, align 4, !tbaa !25636, !pdg.inst.id !1260
  %493 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 5, !pdg.inst.id !167
  store i32 %492, i32* %493, align 4, !tbaa !25636, !pdg.inst.id !1262
  %494 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 6, !pdg.inst.id !1168
  %495 = load i32, i32* %494, align 4, !tbaa !25636, !pdg.inst.id !1265
  %496 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 6, !pdg.inst.id !165
  store i32 %495, i32* %496, align 4, !tbaa !25636, !pdg.inst.id !1267
  %497 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 4, i64 7, !pdg.inst.id !1171
  %498 = load i32, i32* %497, align 4, !tbaa !25636, !pdg.inst.id !1270
  %499 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 4, i64 7, !pdg.inst.id !163
  store i32 %498, i32* %499, align 4, !tbaa !25636, !pdg.inst.id !1272
  %500 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 5, !pdg.inst.id !207
  %501 = bitcast %struct.residue_t** %500 to i8**, !pdg.inst.id !1275
  store i8* %34, i8** %501, align 8, !tbaa !25664, !pdg.inst.id !79
  %502 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 6, !pdg.inst.id !1115
  %503 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 6, !pdg.inst.id !205
  %504 = bitcast double* %502 to <2 x i64>*, !pdg.inst.id !1278
  %505 = load <2 x i64>, <2 x i64>* %504, align 8, !tbaa !25665, !pdg.inst.id !1282
  %506 = bitcast double* %503 to <2 x i64>*, !pdg.inst.id !1280
  store <2 x i64> %505, <2 x i64>* %506, align 8, !tbaa !25665, !pdg.inst.id !1284
  %507 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 8, !pdg.inst.id !1121
  %508 = bitcast double* %507 to i64*, !pdg.inst.id !1287
  %509 = load i64, i64* %508, align 8, !tbaa !25666, !pdg.inst.id !1289
  %510 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 8, !pdg.inst.id !203
  %511 = bitcast double* %510 to i64*, !pdg.inst.id !1293
  store i64 %509, i64* %511, align 8, !tbaa !25666, !pdg.inst.id !1291
  %512 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 9, !pdg.inst.id !1124
  %513 = bitcast double* %512 to i64*, !pdg.inst.id !1296
  %514 = load i64, i64* %513, align 8, !tbaa !25667, !pdg.inst.id !1298
  %515 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 9, !pdg.inst.id !201
  %516 = bitcast double* %515 to i64*, !pdg.inst.id !1302
  store i64 %514, i64* %516, align 8, !tbaa !25667, !pdg.inst.id !1300
  %517 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 10, !pdg.inst.id !183
  store i8* null, i8** %517, align 8, !tbaa !25668, !pdg.inst.id !1305
  %518 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 11, !pdg.inst.id !1128
  %519 = load i32, i32* %518, align 8, !tbaa !25669, !pdg.inst.id !1307
  %520 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 11, !pdg.inst.id !185
  store i32 %519, i32* %520, align 8, !tbaa !25669, !pdg.inst.id !1309
  %521 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 12, !pdg.inst.id !1131
  %522 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 12, !pdg.inst.id !175
  %523 = bitcast double* %521 to <2 x i64>*, !pdg.inst.id !1312
  %524 = load <2 x i64>, <2 x i64>* %523, align 8, !tbaa !25665, !pdg.inst.id !1316
  %525 = bitcast double* %522 to <2 x i64>*, !pdg.inst.id !1314
  store <2 x i64> %524, <2 x i64>* %525, align 8, !tbaa !25665, !pdg.inst.id !1318
  %526 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 14, !pdg.inst.id !1119
  %527 = load i32, i32* %526, align 8, !tbaa !25670, !pdg.inst.id !1321
  %528 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 14, !pdg.inst.id !199
  store i32 %527, i32* %528, align 8, !tbaa !25670, !pdg.inst.id !1323
  %529 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 15, !pdg.inst.id !1133
  %530 = load i32, i32* %529, align 4, !tbaa !25671, !pdg.inst.id !1326
  %531 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 15, !pdg.inst.id !197
  store i32 %530, i32* %531, align 4, !tbaa !25671, !pdg.inst.id !1328
  %532 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 16, !pdg.inst.id !195
  store i8* null, i8** %532, align 8, !tbaa !25672, !pdg.inst.id !1331
  %533 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 17, i64 0, !pdg.inst.id !1137
  %534 = bitcast double* %533 to i64*, !pdg.inst.id !1333
  %535 = load i64, i64* %534, align 8, !tbaa !25665, !pdg.inst.id !1335
  %536 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 17, !pdg.inst.id !193
  %537 = bitcast [3 x double]* %536 to i64*, !pdg.inst.id !1339
  store i64 %535, i64* %537, align 8, !tbaa !25665, !pdg.inst.id !1337
  %538 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 17, i64 1, !pdg.inst.id !1140
  %539 = bitcast double* %538 to i64*, !pdg.inst.id !1342
  %540 = load i64, i64* %539, align 8, !tbaa !25665, !pdg.inst.id !1344
  %541 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 17, i64 1, !pdg.inst.id !191
  %542 = bitcast double* %541 to i64*, !pdg.inst.id !1348
  store i64 %540, i64* %542, align 8, !tbaa !25665, !pdg.inst.id !1346
  %543 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 17, i64 2, !pdg.inst.id !1143
  %544 = bitcast double* %543 to i64*, !pdg.inst.id !1351
  %545 = load i64, i64* %544, align 8, !tbaa !25665, !pdg.inst.id !1353
  %546 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 17, i64 2, !pdg.inst.id !189
  %547 = bitcast double* %546 to i64*, !pdg.inst.id !1357
  store i64 %545, i64* %547, align 8, !tbaa !25665, !pdg.inst.id !1355
  %548 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %469, i64 %452, i32 18, !pdg.inst.id !1146
  %549 = bitcast double* %548 to i64*, !pdg.inst.id !1360
  %550 = load i64, i64* %549, align 8, !tbaa !25673, !pdg.inst.id !1362
  %551 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %452, i32 18, !pdg.inst.id !187
  %552 = bitcast double* %551 to i64*, !pdg.inst.id !1366
  store i64 %550, i64* %552, align 8, !tbaa !25673, !pdg.inst.id !1364
  %553 = add nuw nsw i64 %452, 1, !pdg.inst.id !1174
  %554 = load i32, i32* %47, align 8, !tbaa !25623, !pdg.inst.id !141
  %555 = sext i32 %554 to i64, !pdg.inst.id !1372
  %556 = icmp slt i64 %553, %555, !pdg.inst.id !1369
  br i1 %556, label %451, label %.loopexit, !prof !25654, !pdg.inst.id !1375

.loopexit:                                        ; preds = %464
  br label %557, !pdg.inst.id !25596

557:                                              ; preds = %.loopexit, %443, %446, %106, %86, %67, %54, %37
  %558 = phi %struct.residue_t* [ null, %37 ], [ null, %54 ], [ null, %67 ], [ null, %86 ], [ null, %106 ], [ %35, %446 ], [ %35, %443 ], [ %35, %.loopexit ], !pdg.inst.id !124
  ret %struct.residue_t* %558, !pdg.inst.id !1377

UnifiedUnreachableBlock:                          ; preds = %460, %138, %124
  unreachable, !pdg.inst.id !25613

559:                                              ; preds = %175
  store i32 1, i32* @22
  store i64 %176, i64* %29
  store [2 x i32]* %96, [2 x i32]** %31
  store [2 x i32]* %171, [2 x i32]** %33
  %560 = alloca [3 x i8*]
  %561 = getelementptr inbounds [3 x i8*], [3 x i8*]* %560, i64 0, i64 0
  %562 = bitcast i8** %561 to void (i8*, i8*)**
  store void (i8*, i8*)* @55, void (i8*, i8*)** %562
  %563 = getelementptr inbounds [3 x i8*], [3 x i8*]* %560, i64 0, i64 1
  %564 = bitcast i8** %563 to void (i8*, i8*)**
  store void (i8*, i8*)* @56, void (i8*, i8*)** %564
  %565 = getelementptr inbounds [3 x i8*], [3 x i8*]* %560, i64 0, i64 2
  %566 = bitcast i8** %565 to void (i8*, i8*)**
  store void (i8*, i8*)* @57, void (i8*, i8*)** %566
  %567 = bitcast [3 x i8*]* %560 to i8*
  %568 = alloca [16 x i64]
  %569 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 0
  store i64 64, i64* %569
  %570 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 1
  store i64 64, i64* %570
  %571 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 2
  store i64 64, i64* %571
  %572 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 3
  store i64 64, i64* %572
  %573 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 4
  store i64 64, i64* %573
  %574 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 5
  store i64 64, i64* %574
  %575 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 6
  store i64 64, i64* %575
  %576 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 7
  store i64 64, i64* %576
  %577 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 8
  store i64 1, i64* %577
  %578 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 9
  store i64 64, i64* %578
  %579 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 10
  store i64 1, i64* %579
  %580 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 11
  store i64 1, i64* %580
  %581 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 12
  store i64 1, i64* %581
  %582 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 13
  store i64 64, i64* %582
  %583 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 14
  store i64 64, i64* %583
  %584 = getelementptr inbounds [16 x i64], [16 x i64]* %568, i64 0, i64 15
  store i64 64, i64* %584
  %585 = bitcast [16 x i64]* %568 to i64*
  call void @stageDispatcher(i8* %27, i64* %585, i8* %567, i64 3, i64 16)
  %586 = load i64, i64* %28
  br label %587

587:                                              ; preds = %559
  store i32 0, i32* @22
  br label %.loopexit6

588:                                              ; preds = %215
  store i32 1, i32* @23
  store i32* %97, i32** %21
  store %struct.chiral_t* %116, %struct.chiral_t** %23
  store %struct.chiral_t* %217, %struct.chiral_t** %25
  %589 = alloca [1 x i8*]
  %590 = getelementptr inbounds [1 x i8*], [1 x i8*]* %589, i64 0, i64 0
  %591 = bitcast i8** %590 to void (i8*, i8*)**
  store void (i8*, i8*)* @58, void (i8*, i8*)** %591
  %592 = bitcast [1 x i8*]* %589 to i8*
  %593 = alloca [16 x i64]
  %594 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 0
  store i64 64, i64* %594
  %595 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 1
  store i64 64, i64* %595
  %596 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 2
  store i64 64, i64* %596
  %597 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 3
  store i64 64, i64* %597
  %598 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 4
  store i64 64, i64* %598
  %599 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 5
  store i64 64, i64* %599
  %600 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 6
  store i64 64, i64* %600
  %601 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 7
  store i64 64, i64* %601
  %602 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 8
  store i64 1, i64* %602
  %603 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 9
  store i64 64, i64* %603
  %604 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 10
  store i64 1, i64* %604
  %605 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 11
  store i64 1, i64* %605
  %606 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 12
  store i64 1, i64* %606
  %607 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 13
  store i64 64, i64* %607
  %608 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 14
  store i64 64, i64* %608
  %609 = getelementptr inbounds [16 x i64], [16 x i64]* %593, i64 0, i64 15
  store i64 64, i64* %609
  %610 = bitcast [16 x i64]* %593 to i64*
  call void @stageDispatcher(i8* %19, i64* %610, i8* %592, i64 1, i64 16)
  br label %611

611:                                              ; preds = %588
  store i32 0, i32* @23
  br label %.loopexit5

612:                                              ; preds = %288
  store i32 1, i32* @24
  store i32* %264, i32** %14
  store i64 %289, i64* %15
  store i32* %260, i32** %17
  %613 = alloca [3 x i8*]
  %614 = getelementptr inbounds [3 x i8*], [3 x i8*]* %613, i64 0, i64 0
  %615 = bitcast i8** %614 to void (i8*, i8*)**
  store void (i8*, i8*)* @59, void (i8*, i8*)** %615
  %616 = getelementptr inbounds [3 x i8*], [3 x i8*]* %613, i64 0, i64 1
  %617 = bitcast i8** %616 to void (i8*, i8*)**
  store void (i8*, i8*)* @60, void (i8*, i8*)** %617
  %618 = getelementptr inbounds [3 x i8*], [3 x i8*]* %613, i64 0, i64 2
  %619 = bitcast i8** %618 to void (i8*, i8*)**
  store void (i8*, i8*)* @61, void (i8*, i8*)** %619
  %620 = bitcast [3 x i8*]* %613 to i8*
  %621 = alloca [19 x i64]
  %622 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 0
  store i64 64, i64* %622
  %623 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 1
  store i64 64, i64* %623
  %624 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 2
  store i64 64, i64* %624
  %625 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 3
  store i64 64, i64* %625
  %626 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 4
  store i64 64, i64* %626
  %627 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 5
  store i64 64, i64* %627
  %628 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 6
  store i64 64, i64* %628
  %629 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 7
  store i64 64, i64* %629
  %630 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 8
  store i64 1, i64* %630
  %631 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 9
  store i64 64, i64* %631
  %632 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 10
  store i64 1, i64* %632
  %633 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 11
  store i64 1, i64* %633
  %634 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 12
  store i64 1, i64* %634
  %635 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 13
  store i64 64, i64* %635
  %636 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 14
  store i64 64, i64* %636
  %637 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 15
  store i64 64, i64* %637
  %638 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 16
  store i64 64, i64* %638
  %639 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 17
  store i64 64, i64* %639
  %640 = getelementptr inbounds [19 x i64], [19 x i64]* %621, i64 0, i64 18
  store i64 64, i64* %640
  %641 = bitcast [19 x i64]* %621 to i64*
  call void @stageDispatcher(i8* %11, i64* %641, i8* %620, i64 3, i64 19)
  %642 = load i64, i64* %12
  br label %643

643:                                              ; preds = %612
  store i32 0, i32* @24
  br label %.loopexit4

644:                                              ; preds = %269
  store i32 1, i32* @25
  store i64 %267, i64* %4
  store i32* %260, i32** %6
  store i64 %270, i64* %7
  store i32* %264, i32** %9
  %645 = alloca [1 x i8*]
  %646 = getelementptr inbounds [1 x i8*], [1 x i8*]* %645, i64 0, i64 0
  %647 = bitcast i8** %646 to void (i8*, i8*)**
  store void (i8*, i8*)* @62, void (i8*, i8*)** %647
  %648 = bitcast [1 x i8*]* %645 to i8*
  %649 = alloca [19 x i64]
  %650 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 0
  store i64 64, i64* %650
  %651 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 1
  store i64 64, i64* %651
  %652 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 2
  store i64 64, i64* %652
  %653 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 3
  store i64 64, i64* %653
  %654 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 4
  store i64 64, i64* %654
  %655 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 5
  store i64 64, i64* %655
  %656 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 6
  store i64 64, i64* %656
  %657 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 7
  store i64 64, i64* %657
  %658 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 8
  store i64 1, i64* %658
  %659 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 9
  store i64 64, i64* %659
  %660 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 10
  store i64 1, i64* %660
  %661 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 11
  store i64 1, i64* %661
  %662 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 12
  store i64 1, i64* %662
  %663 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 13
  store i64 64, i64* %663
  %664 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 14
  store i64 64, i64* %664
  %665 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 15
  store i64 64, i64* %665
  %666 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 16
  store i64 64, i64* %666
  %667 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 17
  store i64 64, i64* %667
  %668 = getelementptr inbounds [19 x i64], [19 x i64]* %649, i64 0, i64 18
  store i64 64, i64* %668
  %669 = bitcast [19 x i64]* %649 to i64*
  call void @stageDispatcher(i8* %3, i64* %669, i8* %648, i64 1, i64 19)
  br label %670

670:                                              ; preds = %644
  store i32 0, i32* @25
  br label %.loopexit3
}

Parallelizer: Exit
Parallelizer: Start
Parallelizer:  Function = "copyresidue"
Parallelizer:  Loop 35 = "  %384 = getelementptr inbounds i32, i32* %264, i64 %381, !pdg.inst.id !682"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Some post environment value is not reducable
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 18
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %408 = add i64 %381, 64, !pdg.inst.id !941
DSWP:       %381 = phi i64 [ 0, %378 ], [ %408, %._crit_edge4 ], !pdg.inst.id !938
DSWP:   SCC: 1 Internal nodes:
DSWP:       %382 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %378 ], [ %409, %._crit_edge4 ], !pdg.inst.id !944
DSWP:       %409 = add <8 x i32> %382, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>, !pdg.inst.id !945
DSWP:   SCC: 2 Internal nodes:
DSWP:       %385 = add <8 x i32> %382, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !961
DSWP:   SCC: 3 Internal nodes:
DSWP:       %386 = add <8 x i32> %382, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !957
DSWP:   SCC: 4 Internal nodes:
DSWP:       %387 = add <8 x i32> %382, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !955
DSWP:   SCC: 5 Internal nodes:
DSWP:       %388 = bitcast i32* %384 to <8 x i32>*, !pdg.inst.id !965
DSWP:       store <8 x i32> %382, <8 x i32>* %388, align 4, !tbaa !25636, !pdg.inst.id !959
DSWP:   SCC: 6 Internal nodes:
DSWP:       %389 = getelementptr inbounds i32, i32* %384, i64 8, !pdg.inst.id !971
DSWP:       store <8 x i32> %385, <8 x i32>* %390, align 4, !tbaa !25636, !pdg.inst.id !973
DSWP:       %390 = bitcast i32* %389 to <8 x i32>*, !pdg.inst.id !980
DSWP:   SCC: 7 Internal nodes:
DSWP:       %391 = getelementptr inbounds i32, i32* %384, i64 16, !pdg.inst.id !969
DSWP:       store <8 x i32> %386, <8 x i32>* %392, align 4, !tbaa !25636, !pdg.inst.id !975
DSWP:       %392 = bitcast i32* %391 to <8 x i32>*, !pdg.inst.id !983
DSWP:   SCC: 8 Internal nodes:
DSWP:       %393 = getelementptr inbounds i32, i32* %384, i64 24, !pdg.inst.id !967
DSWP:       store <8 x i32> %387, <8 x i32>* %394, align 4, !tbaa !25636, !pdg.inst.id !977
DSWP:       %394 = bitcast i32* %393 to <8 x i32>*, !pdg.inst.id !986
DSWP:   SCC: 9 Internal nodes:
DSWP:       %395 = or i64 %381, 32, !pdg.inst.id !939
DSWP:   SCC: 10 Internal nodes:
DSWP:       %396 = add <8 x i32> %382, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !pdg.inst.id !953
DSWP:   SCC: 11 Internal nodes:
DSWP:       %398 = add <8 x i32> %382, <i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40>, !pdg.inst.id !951
DSWP:   SCC: 12 Internal nodes:
DSWP:       %399 = add <8 x i32> %382, <i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48>, !pdg.inst.id !949
DSWP:   SCC: 13 Internal nodes:
DSWP:       %400 = add <8 x i32> %382, <i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56>, !pdg.inst.id !947
DSWP:   SCC: 14 Internal nodes:
DSWP:       %401 = bitcast i32* %397 to <8 x i32>*, !pdg.inst.id !998
DSWP:       store <8 x i32> %396, <8 x i32>* %401, align 4, !tbaa !25636, !pdg.inst.id !990
DSWP:   SCC: 15 Internal nodes:
DSWP:       %402 = getelementptr inbounds i32, i32* %397, i64 8, !pdg.inst.id !996
DSWP:       store <8 x i32> %398, <8 x i32>* %403, align 4, !tbaa !25636, !pdg.inst.id !1000
DSWP:       %403 = bitcast i32* %402 to <8 x i32>*, !pdg.inst.id !1007
DSWP:   SCC: 16 Internal nodes:
DSWP:       %404 = getelementptr inbounds i32, i32* %397, i64 16, !pdg.inst.id !994
DSWP:       store <8 x i32> %399, <8 x i32>* %405, align 4, !tbaa !25636, !pdg.inst.id !1002
DSWP:       %405 = bitcast i32* %404 to <8 x i32>*, !pdg.inst.id !1010
DSWP:   SCC: 17 Internal nodes:
DSWP:       %406 = getelementptr inbounds i32, i32* %397, i64 24, !pdg.inst.id !992
DSWP:       store <8 x i32> %400, <8 x i32>* %407, align 4, !tbaa !25636, !pdg.inst.id !1004
DSWP:       %407 = bitcast i32* %406 to <8 x i32>*, !pdg.inst.id !1013
DSWP:   Set:  0
DSWP:    Children: Set:  5; Set:  9; Set:  6; Set:  8; Set:  7; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: Set:  5; Set:  10; Set:  3; Set:  2; Set:  13; Set:  12; Set:  11; Set:  4; 
DSWP:    Parents: 
DSWP:   Set:  2
DSWP:    Children: Set:  6; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  3
DSWP:    Children: Set:  7; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  4
DSWP:    Children: Set:  8; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  5
DSWP:    Children: 
DSWP:    Parents: Set:  1; Set:  0; 
DSWP:   Set:  6
DSWP:    Children: 
DSWP:    Parents: Set:  2; Set:  0; 
DSWP:   Set:  7
DSWP:    Children: 
DSWP:    Parents: Set:  3; Set:  0; 
DSWP:   Set:  8
DSWP:    Children: 
DSWP:    Parents: Set:  0; Set:  4; 
DSWP:   Set:  9
DSWP:    Children: Set:  14; Set:  15; Set:  16; Set:  17; 
DSWP:    Parents: Set:  0; 
DSWP:   Set:  10
DSWP:    Children: Set:  14; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  11
DSWP:    Children: Set:  15; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  12
DSWP:    Children: Set:  16; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  13
DSWP:    Children: Set:  17; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  14
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  10; 
DSWP:   Set:  15
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  11; 
DSWP:   Set:  16
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  12; 
DSWP:   Set:  17
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  13; 
Heuristic:   PCA: Checking: Set:  1 Set:  5 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  10 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  3 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  2 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  13 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  12 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  11 Is possible
Heuristic:   PCA: Checking: Set:  1 Set:  4 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  5 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  9 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  6 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  8 Is possible
Heuristic:   PCA: Checking: Set:  0 Set:  7 Is possible
Heuristic:   PCA: Checking: Set:  10 Set:  14 Is possible
Heuristic:   PCA: Checking: Set:  3 Set:  7 Is possible
Heuristic:   PCA: Checking: Set:  2 Set:  6 Is possible
Heuristic:   PCA: Checking: Set:  13 Set:  17 Is possible
Heuristic:   PCA: Checking: Set:  12 Set:  16 Is possible
Heuristic:   PCA: Checking: Set:  11 Set:  15 Is possible
Heuristic:   PCA: Checking: Set:  4 Set:  8 Is possible
Heuristic:   PCA: Checking: Set:  9 Set:  14 Is possible
Heuristic:   PCA: Checking: Set:  9 Set:  15 Is possible
Heuristic:   PCA: Checking: Set:  9 Set:  16 Is possible
Heuristic:   PCA: Checking: Set:  9 Set:  17 Is possible
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 18
DSWP:  After partitioning the SCCDAG
DSWP:   SCC: 0 Internal nodes:
DSWP:       %408 = add i64 %381, 64, !pdg.inst.id !941
DSWP:       %381 = phi i64 [ 0, %378 ], [ %408, %._crit_edge4 ], !pdg.inst.id !938
DSWP:   SCC: 1 Internal nodes:
DSWP:       %382 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %378 ], [ %409, %._crit_edge4 ], !pdg.inst.id !944
DSWP:       %409 = add <8 x i32> %382, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>, !pdg.inst.id !945
DSWP:   SCC: 2 Internal nodes:
DSWP:       %385 = add <8 x i32> %382, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>, !pdg.inst.id !961
DSWP:   SCC: 3 Internal nodes:
DSWP:       %386 = add <8 x i32> %382, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !pdg.inst.id !957
DSWP:   SCC: 4 Internal nodes:
DSWP:       %387 = add <8 x i32> %382, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>, !pdg.inst.id !955
DSWP:   SCC: 5 Internal nodes:
DSWP:       %388 = bitcast i32* %384 to <8 x i32>*, !pdg.inst.id !965
DSWP:       store <8 x i32> %382, <8 x i32>* %388, align 4, !tbaa !25636, !pdg.inst.id !959
DSWP:   SCC: 6 Internal nodes:
DSWP:       %389 = getelementptr inbounds i32, i32* %384, i64 8, !pdg.inst.id !971
DSWP:       store <8 x i32> %385, <8 x i32>* %390, align 4, !tbaa !25636, !pdg.inst.id !973
DSWP:       %390 = bitcast i32* %389 to <8 x i32>*, !pdg.inst.id !980
DSWP:   SCC: 7 Internal nodes:
DSWP:       %391 = getelementptr inbounds i32, i32* %384, i64 16, !pdg.inst.id !969
DSWP:       store <8 x i32> %386, <8 x i32>* %392, align 4, !tbaa !25636, !pdg.inst.id !975
DSWP:       %392 = bitcast i32* %391 to <8 x i32>*, !pdg.inst.id !983
DSWP:   SCC: 8 Internal nodes:
DSWP:       %393 = getelementptr inbounds i32, i32* %384, i64 24, !pdg.inst.id !967
DSWP:       store <8 x i32> %387, <8 x i32>* %394, align 4, !tbaa !25636, !pdg.inst.id !977
DSWP:       %394 = bitcast i32* %393 to <8 x i32>*, !pdg.inst.id !986
DSWP:   SCC: 9 Internal nodes:
DSWP:       %395 = or i64 %381, 32, !pdg.inst.id !939
DSWP:   SCC: 10 Internal nodes:
DSWP:       %396 = add <8 x i32> %382, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !pdg.inst.id !953
DSWP:   SCC: 11 Internal nodes:
DSWP:       %398 = add <8 x i32> %382, <i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40>, !pdg.inst.id !951
DSWP:   SCC: 12 Internal nodes:
DSWP:       %399 = add <8 x i32> %382, <i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48, i32 48>, !pdg.inst.id !949
DSWP:   SCC: 13 Internal nodes:
DSWP:       %400 = add <8 x i32> %382, <i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56, i32 56>, !pdg.inst.id !947
DSWP:   SCC: 14 Internal nodes:
DSWP:       %401 = bitcast i32* %397 to <8 x i32>*, !pdg.inst.id !998
DSWP:       store <8 x i32> %396, <8 x i32>* %401, align 4, !tbaa !25636, !pdg.inst.id !990
DSWP:   SCC: 15 Internal nodes:
DSWP:       %402 = getelementptr inbounds i32, i32* %397, i64 8, !pdg.inst.id !996
DSWP:       store <8 x i32> %398, <8 x i32>* %403, align 4, !tbaa !25636, !pdg.inst.id !1000
DSWP:       %403 = bitcast i32* %402 to <8 x i32>*, !pdg.inst.id !1007
DSWP:   SCC: 16 Internal nodes:
DSWP:       %404 = getelementptr inbounds i32, i32* %397, i64 16, !pdg.inst.id !994
DSWP:       store <8 x i32> %399, <8 x i32>* %405, align 4, !tbaa !25636, !pdg.inst.id !1002
DSWP:       %405 = bitcast i32* %404 to <8 x i32>*, !pdg.inst.id !1010
DSWP:   SCC: 17 Internal nodes:
DSWP:       %406 = getelementptr inbounds i32, i32* %397, i64 24, !pdg.inst.id !992
DSWP:       store <8 x i32> %400, <8 x i32>* %407, align 4, !tbaa !25636, !pdg.inst.id !1004
DSWP:       %407 = bitcast i32* %406 to <8 x i32>*, !pdg.inst.id !1013
DSWP:   Set:  0
DSWP:    Children: Set:  5; Set:  9; Set:  6; Set:  8; Set:  7; 
DSWP:    Parents: 
DSWP:   Set:  1
DSWP:    Children: Set:  5; Set:  10; Set:  3; Set:  2; Set:  13; Set:  12; Set:  11; Set:  4; 
DSWP:    Parents: 
DSWP:   Set:  2
DSWP:    Children: Set:  6; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  3
DSWP:    Children: Set:  7; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  4
DSWP:    Children: Set:  8; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  5
DSWP:    Children: 
DSWP:    Parents: Set:  1; Set:  0; 
DSWP:   Set:  6
DSWP:    Children: 
DSWP:    Parents: Set:  2; Set:  0; 
DSWP:   Set:  7
DSWP:    Children: 
DSWP:    Parents: Set:  3; Set:  0; 
DSWP:   Set:  8
DSWP:    Children: 
DSWP:    Parents: Set:  0; Set:  4; 
DSWP:   Set:  9
DSWP:    Children: Set:  14; Set:  15; Set:  16; Set:  17; 
DSWP:    Parents: Set:  0; 
DSWP:   Set:  10
DSWP:    Children: Set:  14; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  11
DSWP:    Children: Set:  15; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  12
DSWP:    Children: Set:  16; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  13
DSWP:    Children: Set:  17; 
DSWP:    Parents: Set:  1; 
DSWP:   Set:  14
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  10; 
DSWP:   Set:  15
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  11; 
DSWP:   Set:  16
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  12; 
DSWP:   Set:  17
DSWP:    Children: 
DSWP:    Parents: Set:  9; Set:  13; 
DSWP:  There are 18 partitions in the SCCDAG
NOT SUPPORTED BYTE SIZE (256): <8 x i32>
Producer:   %382 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %378 ], [ %409, %._crit_edge4 ], !pdg.inst.id !944
Stack dump:
0.	Program arguments: opt -load /home/yso0488/projects/noelle/install/lib/libSvf.so -load /home/yso0488/projects/noelle/install/lib/libCudd.so -veto -nander -hander -sander -sfrander -wander -ander -lander -hlander -stat=false -load /home/yso0488/projects/noelle/install/lib/AllocAA.so -load /home/yso0488/projects/noelle/install/lib/TalkDown.so -load /home/yso0488/projects/noelle/install/lib/PDGAnalysis.so -load /home/yso0488/projects/noelle/install/lib/Architecture.so -load /home/yso0488/projects/noelle/install/lib/DataFlow.so -load /home/yso0488/projects/noelle/install/lib/HotProfiler.so -load /home/yso0488/projects/noelle/install/lib/Loops.so -load /home/yso0488/projects/noelle/install/lib/Parallelization.so -load /home/yso0488/projects/noelle/install/lib/Heuristics.so -load /home/yso0488/projects/noelle/install/lib/ParallelizationTechnique.so -load /home/yso0488/projects/noelle/install/lib/LoopDistribution.so -load /home/yso0488/projects/noelle/install/lib/DSWP.so -load /home/yso0488/projects/noelle/install/lib/DOALL.so -load /home/yso0488/projects/noelle/install/lib/HELIX.so -load /home/yso0488/projects/noelle/install/lib/Parallelizer.so -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa -scalar-evolution -loops -loop-simplify -lcssa -domtree -postdomtree -parallelization -heuristics -parallelizer -noelle-verbose=3 -dswp-force -noelle-disable-helix baseline_with_metadata.bc -o baseline_parallelized.bc 
1.	Running pass 'Automatic parallelization of sequential code' on module 'baseline_with_metadata.bc'.
#0 0x000000000219868a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/project/extra/llvm/9.0.0/release/bin/opt+0x219868a)
#1 0x0000000002196614 llvm::sys::RunSignalHandlers() (/project/extra/llvm/9.0.0/release/bin/opt+0x2196614)
#2 0x0000000002196775 SignalHandler(int) (/project/extra/llvm/9.0.0/release/bin/opt+0x2196775)
#3 0x00007ffad09b2dd0 __restore_rt (/lib64/libpthread.so.0+0x12dd0)
#4 0x00007ffacf49570f raise (/lib64/libc.so.6+0x3770f)
#5 0x00007ffacf47fb25 abort (/lib64/libc.so.6+0x21b25)
#6 0x00007ffacd3e4c17 llvm::DSWP::registerQueue(llvm::Parallelization&, llvm::LoopDependenceInfo*, llvm::DSWPTask*, llvm::DSWPTask*, llvm::Instruction*, llvm::Instruction*) /home/yso0488/projects/noelle/src/dswp/src/Queue.cpp:50:3
/home/yso0488/projects/noelle/install/bin/noelle-load: line 25: 1982516 Aborted                 (core dumped) opt -load /home/yso0488/projects/noelle/install/lib/libSvf.so -load /home/yso0488/projects/noelle/install/lib/libCudd.so -veto -nander -hander -sander -sfrander -wander -ander -lander -hlander -stat=false -load /home/yso0488/projects/noelle/install/lib/AllocAA.so -load /home/yso0488/projects/noelle/install/lib/TalkDown.so -load /home/yso0488/projects/noelle/install/lib/PDGAnalysis.so -load /home/yso0488/projects/noelle/install/lib/Architecture.so -load /home/yso0488/projects/noelle/install/lib/DataFlow.so -load /home/yso0488/projects/noelle/install/lib/HotProfiler.so -load /home/yso0488/projects/noelle/install/lib/Loops.so -load /home/yso0488/projects/noelle/install/lib/Parallelization.so -load /home/yso0488/projects/noelle/install/lib/Heuristics.so -load /home/yso0488/projects/noelle/install/lib/ParallelizationTechnique.so -load /home/yso0488/projects/noelle/install/lib/LoopDistribution.so -load /home/yso0488/projects/noelle/install/lib/DSWP.so -load /home/yso0488/projects/noelle/install/lib/DOALL.so -load /home/yso0488/projects/noelle/install/lib/HELIX.so -load /home/yso0488/projects/noelle/install/lib/Parallelizer.so -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa -scalar-evolution -loops -loop-simplify -lcssa -domtree -postdomtree -parallelization -heuristics -parallelizer -noelle-verbose=3 -dswp-force -noelle-disable-helix baseline_with_metadata.bc -o baseline_parallelized.bc
make[1]: *** [Makefile:27: baseline_parallelized.bc] Error 134
make[1]: Leaving directory '/home/yso0488/projects/BenchmarksBitcodes/build/SPEC2017/benchmarks/nab_s'
